//>>built
require({
    cache: {
        "ttx/Application": function() {
            define("dojo/_base/declare dojo/dom-construct dojo/dom-class dojo/fx dojo/topic dojo/aspect dojo/on dojo/dom-style dijit/focus ttx/dijit/LoginDialog dijit/layout/BorderContainer dijit/layout/ContentPane ttx/WorkspaceManager ttx/dijit/Navigator ttx/data/DataManager ttx/data/WsoDefinitionsManager ttx/dijit/TopNav ttx/dijit/StatusBar ttx/dijit/MessageTab ttx/util/_NotifyMixin ttx/util/_SessionMixin ttx/util/_AudioMixin ttx/util/_I18nMixin ttx/AppConfig ttx/extend/allExtend ttx/subject/tx dojo/domReady!".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A, B) {
                return q([z, w, v, A], {
                    config: B,
                    server: B.server,
                    loginDialog: null,
                    dataManager: null,
                    wsoDefinitionsManager: null,
                    workspaceManager: null,
                    navigator: null,
                    topNav: null,
                    statusBar: null,
                    appContainer: null,
                    clientInfo: {
                        device: "browser"
                    },
                    init: function(b) {
                        window.cbtConfig || (window.cbtConfig = {});
                        this.sessionSyncFromCookie();
                        this.initByArgs(b);
                        this.initDataManager();
                        this.workspaceManager = new a({
                            app: this
                        });
                        this.session = this.getSession();
                        this.wsoDefinitionsManager = new t({
                            app: this
                        });
                        this.initLoginDialog(b);
                        this.initAppMessages();
                        this.loginDialog.checkLoginStatus();
                        return window.onbeforeunload = function() {
                            return this.logout()
                        }
                    },
                    getCustomLoginPage: function(a) {
                        var b;
                        b = null;
                        a.customLoginPage && (b = "/" === a.customLoginPage.slice(0, 1) ? a.customLoginPage : B.loginPageServer + "/api/themes/" + a.customLoginPage);
                        return b
                    },
                    initLoginDialog: function(a) {
                        a = this.getCustomLoginPage(a);
                        return this.loginDialog = new d({
                            app: this,
                            id: "loginDialog",
                            title: tt("\u7cfb\u7edf\u767b\u5f55"),
                            draggable: !1,
                            closable: !1,
                            "class": "loginDialog",
                            customLoginPage: a
                        })
                    },
                    initDataManager: function() {
                        return this.dataManager = new r({
                            app: this
                        })
                    },
                    initAppMessages: function() {
                        var a;
                        a = this;
                        return this.dataManager.get("/api/cbt/i18n/messages").then(function(b) {
                            "0" === b.code && b.data && a.updateMessages(b.data)
                        })
                    },
                    startup: function(a) {
                        this.init(a);
                        this.appContainer = new b({
                            style: "width:100%; height:100%",
                            id: "appContainer"
                        });
                        this.initNavigator();
                        this.topNav = new u({
                            region: "top",
                            id: "topNav",
                            username: "",
                            app: this
                        });
                        this.statusBar = new x({
                            region: "bottom"
                        });
                        this.statusBar.demo();
                        this.dataManager.buildModelsCache();
                        this.preBuildForm();
                        this.buildForm();
                        return l.publish("app.startup")
                    },
                    preBuildForm: function() {},
                    initNavigator: function() {
                        return this.navigator = new h({
                            region: "left",
                            id: "navigator",
                            app: this
                        })
                    },
                    buildForm: function() {
                        var a, b, h;
                        a = this.appContainer;
                        p.destroy("bafLoading");
                        p.place(a.domNode, dojo.body(), "first");
                        a.addChild(this.topNav);
                        h = this.workspaceManager.getWsoContainer();
                        a.addChild(h);
                        k.after(h, "resize", function() {
                            return setTimeout(function() {
                                return h.tablist.tablistWrapper
                            }, 5E3)
                        });
                        a.addChild(this.navigator);
                        this.addMessageTab();
                        b = p.toDom("\x3cimg style\x3d'position: absolute;bottom: 13px;left: 13px;' src\x3d'/css/icon/SVG/cbt-nav-expand-menu.svg'/\x3e");
                        a.domNode.appendChild(b);
                        g(b, "click", function(a) {
                            return function() {
                                return a.navigator.showNav()
                            }
                        }(this));
                        p.create("img", {
                            src: "images/customer-logo.png",
                            "class": "customerLogo"
                        }, this.workspaceManager.getWsoContainer().domNode);
                        this.workspaceManager.getWsoContainer().resize();
                        a.startup();
                        this.appSubscribe();
                        return window.onresize = function() {
                            return a.startup()
                        }
                    },
                    addMessageTab: function() {
                        this.messageTab = new y;
                        return this.appContainer.addChild(this.messageTab)
                    },
                    appSubscribe: function() {
                        return l.subscribe("appLoginSuccess", function(a) {
                            return function() {
                                l.publish("clickNavNode", {
                                    tid: "ttx.wso.system.Welcome",
                                    closable: !1,
                                    oid: "_",
                                    name: tt("\u6b22\u8fce"),
                                    nid: "dashboard_default"
                                });
                                !0 === cbtConfig.showDashboard && l.publish("clickNavNode", {
                                    tid: "ttx.wso.general.DashBoard",
                                    oid: "_",
                                    name: "Dashboard",
                                    nid: "dashboard_default"
                                });
                                app.session.params || (app.session.params = {});
                                return app.dataManager.post("/cbt/org/byUser", {
                                    userCode: app.session.user
                                }).then(function(a) {
                                    app.session.orgCode = a.code;
                                    app.session.orgName = a.name;
                                    app.session.params.orgCode = a.code;
                                    return app.session.params.user = app.session.user
                                })
                            }
                        }(this))
                    },
                    initLayer: function() {
                        if (layer)
                            return layer.config({
                                skin: "layui-layer-molv"
                            })
                    },
                    getCurrentWso: function() {
                        var a;
                        return null != (a = this.workspaceManager.current) ? a.form : void 0
                    },
                    logout: function() {
                        return this.loginDialog.logout()
                    },
                    messageBox: function(a) {
                        return layer.alert(a, {
                            skin: "layui-layer-molv",
                            closeBtn: 0
                        })
                    }
                })
            })
        },
        "dijit/focus": function() {
            define("dojo/aspect dojo/_base/declare dojo/dom dojo/dom-attr dojo/dom-class dojo/dom-construct dojo/Evented dojo/_base/lang dojo/on dojo/domReady dojo/sniff dojo/Stateful dojo/_base/window dojo/window ./a11y ./registry ./main".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u) {
                var x, y, z = new (p([b, g], {
                    curNode: null,
                    activeStack: [],
                    constructor: function() {
                        var a = f.hitch(this, function(a) {
                            n.isDescendant(this.curNode, a) && this.set("curNode", null);
                            n.isDescendant(this.prevNode, a) && this.set("prevNode", null)
                        });
                        q.before(k, "empty", a);
                        q.before(k, "destroy", a)
                    },
                    registerIframe: function(a) {
                        return this.registerWin(a.contentWindow, a)
                    },
                    registerWin: function(a, b) {
                        var h = this
                          , d = a.document && a.document.body;
                        if (d) {
                            var t = c("pointer-events") ? "pointerdown" : c("MSPointer") ? "MSPointerDown" : c("touch-events") ? "mousedown, touchstart" : "mousedown"
                              , u = e(a.document, t, function(a) {
                                a && a.target && null == a.target.parentNode || h._onTouchNode(b || a.target, "mouse")
                            })
                              , f = e(d, "focusin", function(a) {
                                if (a.target.tagName) {
                                    var c = a.target.tagName.toLowerCase();
                                    "#document" != c && "body" != c && (r.isFocusable(a.target) ? h._onFocusNode(b || a.target) : h._onTouchNode(b || a.target))
                                }
                            })
                              , g = e(d, "focusout", function(a) {
                                h._onBlurNode(b || a.target)
                            });
                            return {
                                remove: function() {
                                    u.remove();
                                    f.remove();
                                    g.remove();
                                    d = u = f = g = null
                                }
                            }
                        }
                    },
                    _onBlurNode: function(a) {
                        a = (new Date).getTime();
                        a < x + 100 || (this._clearFocusTimer && clearTimeout(this._clearFocusTimer),
                        this._clearFocusTimer = setTimeout(f.hitch(this, function() {
                            this.set("prevNode", this.curNode);
                            this.set("curNode", null)
                        }), 0),
                        this._clearActiveWidgetsTimer && clearTimeout(this._clearActiveWidgetsTimer),
                        a < y + 100 || (this._clearActiveWidgetsTimer = setTimeout(f.hitch(this, function() {
                            delete this._clearActiveWidgetsTimer;
                            this._setStack([])
                        }), 0)))
                    },
                    _onTouchNode: function(b, c) {
                        y = (new Date).getTime();
                        this._clearActiveWidgetsTimer && (clearTimeout(this._clearActiveWidgetsTimer),
                        delete this._clearActiveWidgetsTimer);
                        l.contains(b, "dijitPopup") && (b = b.firstChild);
                        var r = [];
                        try {
                            for (; b; ) {
                                var d = m.get(b, "dijitPopupParent");
                                if (d)
                                    b = t.byId(d).domNode;
                                else if (b.tagName && "body" == b.tagName.toLowerCase()) {
                                    if (b === a.body())
                                        break;
                                    b = h.get(b.ownerDocument).frameElement
                                } else {
                                    var e = b.getAttribute && b.getAttribute("widgetId")
                                      , u = e && t.byId(e);
                                    !u || "mouse" == c && u.get("disabled") || r.unshift(e);
                                    b = b.parentNode
                                }
                            }
                        } catch (H) {}
                        this._setStack(r, c)
                    },
                    _onFocusNode: function(a) {
                        a && 9 != a.nodeType && (x = (new Date).getTime(),
                        this._clearFocusTimer && (clearTimeout(this._clearFocusTimer),
                        delete this._clearFocusTimer),
                        this._onTouchNode(a),
                        a != this.curNode && (this.set("prevNode", this.curNode),
                        this.set("curNode", a)))
                    },
                    _setStack: function(a, b) {
                        var h = this.activeStack
                          , c = h.length - 1
                          , r = a.length - 1;
                        if (a[r] != h[c]) {
                            this.set("activeStack", a);
                            var d;
                            for (d = c; 0 <= d && h[d] != a[d]; d--)
                                if (c = t.byId(h[d]))
                                    c._hasBeenBlurred = !0,
                                    c.set("focused", !1),
                                    c._focusManager == this && c._onBlur(b),
                                    this.emit("widget-blur", c, b);
                            for (d++; d <= r; d++)
                                if (c = t.byId(a[d]))
                                    c.set("focused", !0),
                                    c._focusManager == this && c._onFocus(b),
                                    this.emit("widget-focus", c, b)
                        }
                    },
                    focus: function(a) {
                        if (a)
                            try {
                                a.focus()
                            } catch (A) {}
                    }
                }));
                d(function() {
                    var a = z.registerWin(h.get(document));
                    c("ie") && e(window, "unload", function() {
                        a && (a.remove(),
                        a = null)
                    })
                });
                u.focus = function(a) {
                    z.focus(a)
                }
                ;
                for (var w in z)
                    /^_/.test(w) || (u.focus[w] = "function" == typeof z[w] ? f.hitch(z, w) : z[w]);
                z.watch(function(a, b, h) {
                    u.focus[a] = h
                });
                return z
            })
        },
        "dijit/a11y": function() {
            define("dojo/_base/array dojo/dom dojo/dom-attr dojo/dom-style dojo/_base/lang dojo/sniff ./main".split(" "), function(q, p, n, m, l, k, g) {
                var f = {
                    _isElementShown: function(e) {
                        var d = m.get(e);
                        return "hidden" != d.visibility && "collapsed" != d.visibility && "none" != d.display && "hidden" != n.get(e, "type")
                    },
                    hasDefaultTabStop: function(e) {
                        switch (e.nodeName.toLowerCase()) {
                        case "a":
                            return n.has(e, "href");
                        case "area":
                        case "button":
                        case "input":
                        case "object":
                        case "select":
                        case "textarea":
                            return !0;
                        case "iframe":
                            var d;
                            try {
                                var c = e.contentDocument;
                                if ("designMode"in c && "on" == c.designMode)
                                    return !0;
                                d = c.body
                            } catch (b) {
                                try {
                                    d = e.contentWindow.document.body
                                } catch (a) {
                                    return !1
                                }
                            }
                            return d && ("true" == d.contentEditable || d.firstChild && "true" == d.firstChild.contentEditable);
                        default:
                            return "true" == e.contentEditable
                        }
                    },
                    effectiveTabIndex: function(e) {
                        if (!n.get(e, "disabled"))
                            return n.has(e, "tabIndex") ? +n.get(e, "tabIndex") : f.hasDefaultTabStop(e) ? 0 : void 0
                    },
                    isTabNavigable: function(e) {
                        return 0 <= f.effectiveTabIndex(e)
                    },
                    isFocusable: function(e) {
                        return -1 <= f.effectiveTabIndex(e)
                    },
                    _getTabNavigable: function(e) {
                        function d(a) {
                            return a && "input" == a.tagName.toLowerCase() && a.type && "radio" == a.type.toLowerCase() && a.name && a.name.toLowerCase()
                        }
                        function c(a) {
                            return g[d(a)] || a
                        }
                        var b, a, h, r, t, u, g = {}, l = f._isElementShown, z = f.effectiveTabIndex, m = function(c) {
                            for (c = c.firstChild; c; c = c.nextSibling)
                                if (!(1 != c.nodeType || 9 >= k("ie") && "HTML" !== c.scopeName) && l(c)) {
                                    var e = z(c);
                                    if (0 <= e) {
                                        if (0 == e)
                                            b || (b = c),
                                            a = c;
                                        else if (0 < e) {
                                            if (!h || e < r)
                                                r = e,
                                                h = c;
                                            if (!t || e >= u)
                                                u = e,
                                                t = c
                                        }
                                        e = d(c);
                                        n.get(c, "checked") && e && (g[e] = c)
                                    }
                                    "SELECT" != c.nodeName.toUpperCase() && m(c)
                                }
                        };
                        l(e) && m(e);
                        return {
                            first: c(b),
                            last: c(a),
                            lowest: c(h),
                            highest: c(t)
                        }
                    },
                    getFirstInTabbingOrder: function(e, d) {
                        var c = f._getTabNavigable(p.byId(e, d));
                        return c.lowest ? c.lowest : c.first
                    },
                    getLastInTabbingOrder: function(e, d) {
                        var c = f._getTabNavigable(p.byId(e, d));
                        return c.last ? c.last : c.highest
                    }
                };
                l.mixin(g, f);
                return f
            })
        },
        "dijit/main": function() {
            define(["dojo/_base/kernel"], function(q) {
                return q.dijit
            })
        },
        "dijit/BackgroundIframe": function() {
            define("require ./main dojo/_base/config dojo/dom-construct dojo/dom-style dojo/_base/lang dojo/on dojo/sniff".split(" "), function(q, p, n, m, l, k, g, f) {
                f.add("config-bgIframe", (f("ie") || f("trident")) && !/IEMobile\/10\.0/.test(navigator.userAgent));
                var e = new function() {
                    var d = [];
                    this.pop = function() {
                        var c;
                        d.length ? (c = d.pop(),
                        c.style.display = "") : (9 > f("ie") ? (c = n.dojoBlankHtmlUrl || q.toUrl("dojo/resources/blank.html") || 'javascript:""',
                        c = document.createElement("\x3ciframe src\x3d'" + c + "' role\x3d'presentation' style\x3d'position: absolute; left: 0px; top: 0px;z-index: -1; filter:Alpha(Opacity\x3d\"0\");'\x3e")) : (c = m.create("iframe"),
                        c.src = 'javascript:""',
                        c.className = "dijitBackgroundIframe",
                        c.setAttribute("role", "presentation"),
                        l.set(c, "opacity", .1)),
                        c.tabIndex = -1);
                        return c
                    }
                    ;
                    this.push = function(c) {
                        c.style.display = "none";
                        d.push(c)
                    }
                }
                ;
                p.BackgroundIframe = function(d) {
                    if (!d.id)
                        throw Error("no id");
                    if (f("config-bgIframe")) {
                        var c = this.iframe = e.pop();
                        d.appendChild(c);
                        7 > f("ie") || f("quirks") ? (this.resize(d),
                        this._conn = g(d, "resize", k.hitch(this, "resize", d))) : l.set(c, {
                            width: "100%",
                            height: "100%"
                        })
                    }
                }
                ;
                k.extend(p.BackgroundIframe, {
                    resize: function(d) {
                        this.iframe && l.set(this.iframe, {
                            width: d.offsetWidth + "px",
                            height: d.offsetHeight + "px"
                        })
                    },
                    destroy: function() {
                        this._conn && (this._conn.remove(),
                        this._conn = null);
                        this.iframe && (this.iframe.parentNode.removeChild(this.iframe),
                        e.push(this.iframe),
                        delete this.iframe)
                    }
                });
                return p.BackgroundIframe
            })
        },
        "dijit/Calendar": function() {
            define("dojo/_base/array dojo/date dojo/date/locale dojo/_base/declare dojo/dom-attr dojo/dom-class dojo/dom-construct dojo/_base/kernel dojo/keys dojo/_base/lang dojo/on dojo/sniff ./CalendarLite ./_Widget ./_CssStateMixin ./_TemplatedMixin ./form/DropDownButton".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u) {
                var x = m("dijit.Calendar", [a, h, r], {
                    baseClass: "dijitCalendar",
                    cssStateNodes: {
                        decrementMonth: "dijitCalendarArrow",
                        incrementMonth: "dijitCalendarArrow",
                        previousYearLabelNode: "dijitCalendarPreviousYear",
                        nextYearLabelNode: "dijitCalendarNextYear"
                    },
                    setValue: function(a) {
                        f.deprecated("dijit.Calendar:setValue() is deprecated.  Use set('value', ...) instead.", "", "2.0");
                        this.set("value", a)
                    },
                    _createMonthWidget: function() {
                        return new x._MonthDropDownButton({
                            id: this.id + "_mddb",
                            tabIndex: -1,
                            onMonthSelect: d.hitch(this, "_onMonthSelect"),
                            lang: this.lang,
                            dateLocaleModule: this.dateLocaleModule
                        },this.monthNode)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this.own(c(this.domNode, "keydown", d.hitch(this, "_onKeyDown")), c(this.dateRowsNode, "mouseover", d.hitch(this, "_onDayMouseOver")), c(this.dateRowsNode, "mouseout", d.hitch(this, "_onDayMouseOut")), c(this.dateRowsNode, "mousedown", d.hitch(this, "_onDayMouseDown")), c(this.dateRowsNode, "mouseup", d.hitch(this, "_onDayMouseUp")))
                    },
                    _onMonthSelect: function(a) {
                        var b = new this.dateClassObj(this.currentFocus);
                        b.setDate(1);
                        b.setMonth(a);
                        a = this.dateModule.getDaysInMonth(b);
                        var h = this.currentFocus.getDate();
                        b.setDate(Math.min(h, a));
                        this._setCurrentFocusAttr(b)
                    },
                    _onDayMouseOver: function(a) {
                        (a = k.contains(a.target, "dijitCalendarDateLabel") ? a.target.parentNode : a.target) && (a.dijitDateValue && !k.contains(a, "dijitCalendarDisabledDate") || a == this.previousYearLabelNode || a == this.nextYearLabelNode) && (k.add(a, "dijitCalendarHoveredDate"),
                        this._currentNode = a)
                    },
                    _onDayMouseOut: function(a) {
                        !this._currentNode || a.relatedTarget && a.relatedTarget.parentNode == this._currentNode || (a = "dijitCalendarHoveredDate",
                        k.contains(this._currentNode, "dijitCalendarActiveDate") && (a += " dijitCalendarActiveDate"),
                        k.remove(this._currentNode, a),
                        this._currentNode = null)
                    },
                    _onDayMouseDown: function(a) {
                        (a = a.target.parentNode) && a.dijitDateValue && !k.contains(a, "dijitCalendarDisabledDate") && (k.add(a, "dijitCalendarActiveDate"),
                        this._currentNode = a)
                    },
                    _onDayMouseUp: function(a) {
                        (a = a.target.parentNode) && a.dijitDateValue && k.remove(a, "dijitCalendarActiveDate")
                    },
                    handleKey: function(a) {
                        var b = -1, h, c = this.currentFocus;
                        switch (a.keyCode) {
                        case e.RIGHT_ARROW:
                            b = 1;
                        case e.LEFT_ARROW:
                            h = "day";
                            this.isLeftToRight() || (b *= -1);
                            break;
                        case e.DOWN_ARROW:
                            b = 1;
                        case e.UP_ARROW:
                            h = "week";
                            break;
                        case e.PAGE_DOWN:
                            b = 1;
                        case e.PAGE_UP:
                            h = a.ctrlKey || a.altKey ? "year" : "month";
                            break;
                        case e.END:
                            c = this.dateModule.add(c, "month", 1),
                            h = "day";
                        case e.HOME:
                            c = new this.dateClassObj(c);
                            c.setDate(1);
                            break;
                        default:
                            return !0
                        }
                        h && (c = this.dateModule.add(c, h, b));
                        this._setCurrentFocusAttr(c);
                        return !1
                    },
                    _onKeyDown: function(a) {
                        this.handleKey(a) || (a.stopPropagation(),
                        a.preventDefault())
                    },
                    onValueSelected: function() {},
                    onChange: function(a) {
                        this.onValueSelected(a)
                    },
                    getClassForDate: function() {}
                });
                x._MonthDropDownButton = m("dijit.Calendar._MonthDropDownButton", u, {
                    onMonthSelect: function() {},
                    postCreate: function() {
                        this.inherited(arguments);
                        this.dropDown = new x._MonthDropDown({
                            id: this.id + "_mdd",
                            onChange: this.onMonthSelect
                        })
                    },
                    _setMonthAttr: function(a) {
                        var h = this.dateLocaleModule.getNames("months", "wide", "standAlone", this.lang, a);
                        this.dropDown.set("months", h);
                        this.containerNode.innerHTML = (6 == b("ie") ? "" : "\x3cdiv class\x3d'dijitSpacer'\x3e" + this.dropDown.domNode.innerHTML + "\x3c/div\x3e") + "\x3cdiv class\x3d'dijitCalendarMonthLabel dijitCalendarCurrentMonthLabel'\x3e" + h[a.getMonth()] + "\x3c/div\x3e"
                    }
                });
                x._MonthDropDown = m("dijit.Calendar._MonthDropDown", [h, t, r], {
                    months: [],
                    baseClass: "dijitCalendarMonthMenu dijitMenu",
                    templateString: "\x3cdiv data-dojo-attach-event\x3d'ondijitclick:_onClick'\x3e\x3c/div\x3e",
                    _setMonthsAttr: function(a) {
                        this.domNode.innerHTML = "";
                        q.forEach(a, function(a, b) {
                            g.create("div", {
                                className: "dijitCalendarMonthLabel",
                                month: b,
                                innerHTML: a
                            }, this.domNode)._cssState = "dijitCalendarMonthLabel"
                        }, this)
                    },
                    _onClick: function(a) {
                        this.onChange(l.get(a.target, "month"))
                    },
                    onChange: function() {}
                });
                return x
            })
        },
        "dijit/CalendarLite": function() {
            define("dojo/_base/array dojo/_base/declare dojo/cldr/supplemental dojo/date dojo/date/locale dojo/date/stamp dojo/dom dojo/dom-class dojo/dom-attr dojo/_base/lang dojo/on dojo/sniff dojo/string ./_WidgetBase ./_TemplatedMixin dojo/text!./templates/Calendar.html ./a11yclick ./hccss".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t) {
                var u = p("dijit.CalendarLite", [h, r], {
                    templateString: t,
                    dowTemplateString: '\x3cth class\x3d"dijitReset dijitCalendarDayLabelTemplate" role\x3d"columnheader" scope\x3d"col"\x3e\x3cspan class\x3d"dijitCalendarDayLabel"\x3e${d}\x3c/span\x3e\x3c/th\x3e',
                    dateTemplateString: '\x3ctd class\x3d"dijitReset" role\x3d"gridcell" data-dojo-attach-point\x3d"dateCells"\x3e\x3cspan class\x3d"dijitCalendarDateLabel" data-dojo-attach-point\x3d"dateLabels"\x3e\x3c/span\x3e\x3c/td\x3e',
                    weekTemplateString: '\x3ctr class\x3d"dijitReset dijitCalendarWeekTemplate" role\x3d"row"\x3e${d}${d}${d}${d}${d}${d}${d}\x3c/tr\x3e',
                    value: new Date(""),
                    datePackage: "",
                    dayWidth: "narrow",
                    tabIndex: "0",
                    dayOffset: -1,
                    currentFocus: new Date,
                    _setSummaryAttr: "gridNode",
                    baseClass: "dijitCalendar dijitCalendarLite",
                    _isValidDate: function(a) {
                        return a && !isNaN(a) && "object" == typeof a && a.toString() != this.constructor.prototype.value.toString()
                    },
                    _getValueAttr: function() {
                        var a = this._get("value");
                        if (a && !isNaN(a)) {
                            var b = new this.dateClassObj(a);
                            b.setHours(0, 0, 0, 0);
                            b.getDate() < a.getDate() && (b = this.dateModule.add(b, "hour", 1));
                            return b
                        }
                        return null
                    },
                    _setValueAttr: function(a, b) {
                        "string" == typeof a && (a = k.fromISOString(a));
                        a = this._patchDate(a);
                        if (this._isValidDate(a) && !this.isDisabledDate(a, this.lang)) {
                            if (this._set("value", a),
                            this.set("currentFocus", a),
                            this._markSelectedDates([a]),
                            this._created && (b || "undefined" == typeof b))
                                this.onChange(this.get("value"))
                        } else
                            this._set("value", null),
                            this._markSelectedDates([])
                    },
                    _patchDate: function(a) {
                        if (a || 0 === a)
                            a = new this.dateClassObj(a),
                            a.setHours(1, 0, 0, 0);
                        return a
                    },
                    _setText: function(a, b) {
                        for (; a.firstChild; )
                            a.removeChild(a.firstChild);
                        a.appendChild(a.ownerDocument.createTextNode(b))
                    },
                    _populateGrid: function() {
                        var a = new this.dateClassObj(this.currentFocus);
                        a.setDate(1);
                        var a = this._patchDate(a)
                          , b = a.getDay()
                          , h = this.dateModule.getDaysInMonth(a)
                          , c = this.dateModule.getDaysInMonth(this.dateModule.add(a, "month", -1))
                          , r = new this.dateClassObj
                          , d = 0 <= this.dayOffset ? this.dayOffset : n.getFirstDayOfWeek(this.lang);
                        d > b && (d -= 7);
                        if (!this.summary) {
                            var t = this.dateLocaleModule.getNames("months", "wide", "standAlone", this.lang, a);
                            this.gridNode.setAttribute("summary", t[a.getMonth()])
                        }
                        this._date2cell = {};
                        q.forEach(this.dateCells, function(t, u) {
                            var f = u + d
                              , g = new this.dateClassObj(a)
                              , x = "dijitCalendar"
                              , k = 0;
                            f < b ? (f = c - b + f + 1,
                            k = -1,
                            x += "Previous") : f >= b + h ? (f = f - b - h + 1,
                            k = 1,
                            x += "Next") : (f = f - b + 1,
                            x += "Current");
                            k && (g = this.dateModule.add(g, "month", k));
                            g.setDate(f);
                            this.dateModule.compare(g, r, "date") || (x = "dijitCalendarCurrentDate " + x);
                            this.isDisabledDate(g, this.lang) ? (x = "dijitCalendarDisabledDate " + x,
                            t.setAttribute("aria-disabled", "true")) : (x = "dijitCalendarEnabledDate " + x,
                            t.removeAttribute("aria-disabled"),
                            t.setAttribute("aria-selected", "false"));
                            (k = this.getClassForDate(g, this.lang)) && (x = k + " " + x);
                            t.className = x + "Month dijitCalendarDateTemplate";
                            x = g.valueOf();
                            this._date2cell[x] = t;
                            t.dijitDateValue = x;
                            x = g.getDateLocalized ? g.getDateLocalized(this.lang) : g.getDate();
                            this._setText(this.dateLabels[u], x);
                            e.set(t, "aria-label", l.format(g, {
                                selector: "date",
                                formatLength: "long"
                            }))
                        }, this)
                    },
                    _populateControls: function() {
                        var a = new this.dateClassObj(this.currentFocus);
                        a.setDate(1);
                        this.monthWidget.set("month", a);
                        var b = a.getFullYear() - 1
                          , h = new this.dateClassObj;
                        q.forEach(["previous", "current", "next"], function(a) {
                            h.setFullYear(b++);
                            this._setText(this[a + "YearLabelNode"], this.dateLocaleModule.format(h, {
                                selector: "year",
                                locale: this.lang
                            }))
                        }, this)
                    },
                    goToToday: function() {
                        this.set("value", new this.dateClassObj)
                    },
                    constructor: function(a) {
                        this.dateModule = a.datePackage ? d.getObject(a.datePackage, !1) : m;
                        this.dateClassObj = this.dateModule.Date || Date;
                        this.dateLocaleModule = a.datePackage ? d.getObject(a.datePackage + ".locale", !1) : l
                    },
                    _createMonthWidget: function() {
                        return u._MonthWidget({
                            id: this.id + "_mddb",
                            lang: this.lang,
                            dateLocaleModule: this.dateLocaleModule
                        }, this.monthNode)
                    },
                    buildRendering: function() {
                        var b = this.dowTemplateString
                          , h = this.dateLocaleModule.getNames("days", this.dayWidth, "standAlone", this.lang)
                          , c = 0 <= this.dayOffset ? this.dayOffset : n.getFirstDayOfWeek(this.lang);
                        this.dayCellsHtml = a.substitute([b, b, b, b, b, b, b].join(""), {
                            d: ""
                        }, function() {
                            return h[c++ % 7]
                        });
                        b = a.substitute(this.weekTemplateString, {
                            d: this.dateTemplateString
                        });
                        this.dateRowsHtml = [b, b, b, b, b, b].join("");
                        this.dateCells = [];
                        this.dateLabels = [];
                        this.inherited(arguments);
                        g.setSelectable(this.domNode, !1);
                        b = new this.dateClassObj(this.currentFocus);
                        this.monthWidget = this._createMonthWidget();
                        this.set("currentFocus", b, !1)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this._connectControls()
                    },
                    _connectControls: function() {
                        var a = d.hitch(this, function(a, b, h) {
                            this[a].dojoClick = !0;
                            return c(this[a], "click", d.hitch(this, function() {
                                this._setCurrentFocusAttr(this.dateModule.add(this.currentFocus, b, h))
                            }))
                        });
                        this.own(a("incrementMonth", "month", 1), a("decrementMonth", "month", -1), a("nextYearLabelNode", "year", 1), a("previousYearLabelNode", "year", -1))
                    },
                    _setCurrentFocusAttr: function(a, h) {
                        var c = this.currentFocus
                          , r = this._getNodeByDate(c);
                        a = this._patchDate(a);
                        this._set("currentFocus", a);
                        this._date2cell && 0 == this.dateModule.difference(c, a, "month") || (this._populateGrid(),
                        this._populateControls(),
                        this._markSelectedDates([this.value]));
                        c = this._getNodeByDate(a);
                        c.setAttribute("tabIndex", this.tabIndex);
                        (this.focused || h) && c.focus();
                        r && r != c && (b("webkit") ? r.setAttribute("tabIndex", "-1") : r.removeAttribute("tabIndex"))
                    },
                    focus: function() {
                        this._setCurrentFocusAttr(this.currentFocus, !0)
                    },
                    _onDayClick: function(a) {
                        a.stopPropagation();
                        a.preventDefault();
                        for (a = a.target; a && !a.dijitDateValue && 0 !== a.dijitDateValue; a = a.parentNode)
                            ;
                        a && !f.contains(a, "dijitCalendarDisabledDate") && this.set("value", a.dijitDateValue)
                    },
                    _getNodeByDate: function(a) {
                        return (a = this._patchDate(a)) && this._date2cell ? this._date2cell[a.valueOf()] : null
                    },
                    _markSelectedDates: function(a) {
                        function b(a, b) {
                            f.toggle(b, "dijitCalendarSelectedDate", a);
                            b.setAttribute("aria-selected", a ? "true" : "false")
                        }
                        q.forEach(this._selectedCells || [], d.partial(b, !1));
                        this._selectedCells = q.filter(q.map(a, this._getNodeByDate, this), function(a) {
                            return a
                        });
                        q.forEach(this._selectedCells, d.partial(b, !0))
                    },
                    onChange: function() {},
                    isDisabledDate: function() {},
                    getClassForDate: function() {}
                });
                u._MonthWidget = p("dijit.CalendarLite._MonthWidget", h, {
                    _setMonthAttr: function(a) {
                        var h = this.dateLocaleModule.getNames("months", "wide", "standAlone", this.lang, a)
                          , c = 6 == b("ie") ? "" : "\x3cdiv class\x3d'dijitSpacer'\x3e" + q.map(h, function(a) {
                            return "\x3cdiv\x3e" + a + "\x3c/div\x3e"
                        }).join("") + "\x3c/div\x3e";
                        this.domNode.innerHTML = c + "\x3cdiv class\x3d'dijitCalendarMonthLabel dijitCalendarCurrentMonthLabel'\x3e" + h[a.getMonth()] + "\x3c/div\x3e"
                    }
                });
                return u
            })
        },
        "dijit/_WidgetBase": function() {
            define("require dojo/_base/array dojo/aspect dojo/_base/config dojo/_base/connect dojo/_base/declare dojo/dom dojo/dom-attr dojo/dom-class dojo/dom-construct dojo/dom-geometry dojo/dom-style dojo/has dojo/_base/kernel dojo/_base/lang dojo/on dojo/ready dojo/Stateful dojo/topic dojo/_base/window ./Destroyable dojo/has!dojo-bidi?./_BidiMixin ./registry".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A) {
                function B(a) {
                    return function(b) {
                        f[b ? "set" : "remove"](this.domNode, a, b);
                        this._set(a, b)
                    }
                }
                a.add("dijit-legacy-requires", !h.isAsync);
                a.add("dojo-bidi", !1);
                a("dijit-legacy-requires") && u(0, function() {
                    q(["dijit/_base/manager"])
                });
                var C = {};
                m = k("dijit._WidgetBase", [x, w], {
                    id: "",
                    _setIdAttr: "domNode",
                    lang: "",
                    _setLangAttr: B("lang"),
                    dir: "",
                    _setDirAttr: B("dir"),
                    "class": "",
                    _setClassAttr: {
                        node: "domNode",
                        type: "class"
                    },
                    _setTypeAttr: null,
                    style: "",
                    title: "",
                    tooltip: "",
                    baseClass: "",
                    srcNodeRef: null,
                    domNode: null,
                    containerNode: null,
                    ownerDocument: null,
                    _setOwnerDocumentAttr: function(a) {
                        this._set("ownerDocument", a)
                    },
                    attributeMap: {},
                    _blankGif: m.blankGif || q.toUrl("dojo/resources/blank.gif"),
                    textDir: "",
                    _introspect: function() {
                        var a = this.constructor;
                        if (!a._setterAttrs) {
                            var b = a.prototype, h = a._setterAttrs = [], a = a._onMap = {}, c;
                            for (c in b.attributeMap)
                                h.push(c);
                            for (c in b)
                                /^on/.test(c) && (a[c.substring(2).toLowerCase()] = c),
                                /^_set[A-Z](.*)Attr$/.test(c) && (c = c.charAt(4).toLowerCase() + c.substr(5, c.length - 9),
                                b.attributeMap && c in b.attributeMap || h.push(c))
                        }
                    },
                    postscript: function(a, b) {
                        this.create(a, b)
                    },
                    create: function(a, b) {
                        this._introspect();
                        this.srcNodeRef = g.byId(b);
                        this._connects = [];
                        this._supportingWidgets = [];
                        this.srcNodeRef && this.srcNodeRef.id && "string" == typeof this.srcNodeRef.id && (this.id = this.srcNodeRef.id);
                        a && (this.params = a,
                        r.mixin(this, a));
                        this.postMixInProperties();
                        this.id || (this.id = A.getUniqueId(this.declaredClass.replace(/\./g, "_")),
                        this.params && delete this.params.id);
                        this.ownerDocument = this.ownerDocument || (this.srcNodeRef ? this.srcNodeRef.ownerDocument : document);
                        this.ownerDocumentBody = z.body(this.ownerDocument);
                        A.add(this);
                        this.buildRendering();
                        var h;
                        if (this.domNode) {
                            this._applyAttributes();
                            var c = this.srcNodeRef;
                            c && c.parentNode && this.domNode !== c && (c.parentNode.replaceChild(this.domNode, c),
                            h = !0);
                            this.domNode.setAttribute("widgetId", this.id)
                        }
                        this.postCreate();
                        h && delete this.srcNodeRef;
                        this._created = !0
                    },
                    _applyAttributes: function() {
                        var a = {}, b;
                        for (b in this.params || {})
                            a[b] = this._get(b);
                        p.forEach(this.constructor._setterAttrs, function(b) {
                            if (!(b in a)) {
                                var h = this._get(b);
                                h && this.set(b, h)
                            }
                        }, this);
                        for (b in a)
                            this.set(b, a[b])
                    },
                    postMixInProperties: function() {},
                    buildRendering: function() {
                        this.domNode || (this.domNode = this.srcNodeRef || this.ownerDocument.createElement("div"));
                        if (this.baseClass) {
                            var a = this.baseClass.split(" ");
                            this.isLeftToRight() || (a = a.concat(p.map(a, function(a) {
                                return a + "Rtl"
                            })));
                            e.add(this.domNode, a)
                        }
                    },
                    postCreate: function() {},
                    startup: function() {
                        this._started || (this._started = !0,
                        p.forEach(this.getChildren(), function(a) {
                            a._started || a._destroyed || !r.isFunction(a.startup) || (a.startup(),
                            a._started = !0)
                        }))
                    },
                    destroyRecursive: function(a) {
                        this._beingDestroyed = !0;
                        this.destroyDescendants(a);
                        this.destroy(a)
                    },
                    destroy: function(a) {
                        function b(b) {
                            b.destroyRecursive ? b.destroyRecursive(a) : b.destroy && b.destroy(a)
                        }
                        this._beingDestroyed = !0;
                        this.uninitialize();
                        p.forEach(this._connects, r.hitch(this, "disconnect"));
                        p.forEach(this._supportingWidgets, b);
                        this.domNode && p.forEach(A.findWidgets(this.domNode, this.containerNode), b);
                        this.destroyRendering(a);
                        A.remove(this.id);
                        this._destroyed = !0
                    },
                    destroyRendering: function(a) {
                        this.bgIframe && (this.bgIframe.destroy(a),
                        delete this.bgIframe);
                        this.domNode && (a ? f.remove(this.domNode, "widgetId") : d.destroy(this.domNode),
                        delete this.domNode);
                        this.srcNodeRef && (a || d.destroy(this.srcNodeRef),
                        delete this.srcNodeRef)
                    },
                    destroyDescendants: function(a) {
                        p.forEach(this.getChildren(), function(b) {
                            b.destroyRecursive && b.destroyRecursive(a)
                        })
                    },
                    uninitialize: function() {
                        return !1
                    },
                    _setStyleAttr: function(a) {
                        var h = this.domNode;
                        r.isObject(a) ? b.set(h, a) : h.style.cssText = h.style.cssText ? h.style.cssText + ("; " + a) : a;
                        this._set("style", a)
                    },
                    _attrToDom: function(a, b, h) {
                        h = 3 <= arguments.length ? h : this.attributeMap[a];
                        p.forEach(r.isArray(h) ? h : [h], function(h) {
                            var c = this[h.node || h || "domNode"];
                            switch (h.type || "attribute") {
                            case "attribute":
                                r.isFunction(b) && (b = r.hitch(this, b));
                                h = h.attribute ? h.attribute : /^on[A-Z][a-zA-Z]*$/.test(a) ? a.toLowerCase() : a;
                                c.tagName ? f.set(c, h, b) : c.set(h, b);
                                break;
                            case "innerText":
                                c.innerHTML = "";
                                c.appendChild(this.ownerDocument.createTextNode(b));
                                break;
                            case "innerHTML":
                                c.innerHTML = b;
                                break;
                            case "class":
                                e.replace(c, b, this[a]);
                                break;
                            case "toggleClass":
                                e.toggle(c, h.className || a, b)
                            }
                        }, this)
                    },
                    get: function(a) {
                        var b = this._getAttrNames(a);
                        return this[b.g] ? this[b.g]() : this._get(a)
                    },
                    set: function(a, b) {
                        if ("object" === typeof a) {
                            for (var h in a)
                                this.set(h, a[h]);
                            return this
                        }
                        h = this._getAttrNames(a);
                        var c = this[h.s];
                        if (r.isFunction(c))
                            var d = c.apply(this, Array.prototype.slice.call(arguments, 1));
                        else {
                            var c = this.focusNode && !r.isFunction(this.focusNode) ? "focusNode" : "domNode", t = this[c] && this[c].tagName, e;
                            if ((e = t) && !(e = C[t])) {
                                e = this[c];
                                var u = {}, f;
                                for (f in e)
                                    u[f.toLowerCase()] = !0;
                                e = C[t] = u
                            }
                            f = e;
                            h = a in this.attributeMap ? this.attributeMap[a] : h.s in this ? this[h.s] : f && h.l in f && "function" != typeof b || /^aria-|^data-|^role$/.test(a) ? c : null;
                            null != h && this._attrToDom(a, b, h);
                            this._set(a, b)
                        }
                        return d || this
                    },
                    _attrPairNames: {},
                    _getAttrNames: function(a) {
                        var b = this._attrPairNames;
                        if (b[a])
                            return b[a];
                        var h = a.replace(/^[a-z]|-[a-zA-Z]/g, function(a) {
                            return a.charAt(a.length - 1).toUpperCase()
                        });
                        return b[a] = {
                            n: a + "Node",
                            s: "_set" + h + "Attr",
                            g: "_get" + h + "Attr",
                            l: h.toLowerCase()
                        }
                    },
                    _set: function(a, b) {
                        var h = this[a];
                        this[a] = b;
                        !this._created || h === b || h !== h && b !== b || (this._watchCallbacks && this._watchCallbacks(a, h, b),
                        this.emit("attrmodified-" + a, {
                            detail: {
                                prevValue: h,
                                newValue: b
                            }
                        }))
                    },
                    _get: function(a) {
                        return this[a]
                    },
                    emit: function(a, b, h) {
                        b = b || {};
                        void 0 === b.bubbles && (b.bubbles = !0);
                        void 0 === b.cancelable && (b.cancelable = !0);
                        b.detail || (b.detail = {});
                        b.detail.widget = this;
                        var c, r = this["on" + a];
                        r && (c = r.apply(this, h ? h : [b]));
                        this._started && !this._beingDestroyed && t.emit(this.domNode, a.toLowerCase(), b);
                        return c
                    },
                    on: function(a, b) {
                        var h = this._onMap(a);
                        return h ? n.after(this, h, b, !0) : this.own(t(this.domNode, a, b))[0]
                    },
                    _onMap: function(a) {
                        var b = this.constructor
                          , h = b._onMap;
                        if (!h) {
                            var h = b._onMap = {}, c;
                            for (c in b.prototype)
                                /^on/.test(c) && (h[c.replace(/^on/, "").toLowerCase()] = c)
                        }
                        return h["string" == typeof a && a.toLowerCase()]
                    },
                    toString: function() {
                        return "[Widget " + this.declaredClass + ", " + (this.id || "NO ID") + "]"
                    },
                    getChildren: function() {
                        return this.containerNode ? A.findWidgets(this.containerNode) : []
                    },
                    getParent: function() {
                        return A.getEnclosingWidget(this.domNode.parentNode)
                    },
                    connect: function(a, b, h) {
                        return this.own(l.connect(a, b, this, h))[0]
                    },
                    disconnect: function(a) {
                        a.remove()
                    },
                    subscribe: function(a, b) {
                        return this.own(y.subscribe(a, r.hitch(this, b)))[0]
                    },
                    unsubscribe: function(a) {
                        a.remove()
                    },
                    isLeftToRight: function() {
                        return this.dir ? "ltr" == this.dir.toLowerCase() : c.isBodyLtr(this.ownerDocument)
                    },
                    isFocusable: function() {
                        return this.focus && "none" != b.get(this.domNode, "display")
                    },
                    placeAt: function(a, b) {
                        var h = !a.tagName && A.byId(a);
                        !h || !h.addChild || b && "number" !== typeof b ? (h = h && "domNode"in h ? h.containerNode && !/after|before|replace/.test(b || "") ? h.containerNode : h.domNode : g.byId(a, this.ownerDocument),
                        d.place(this.domNode, h, b),
                        !this._started && (this.getParent() || {})._started && this.startup()) : h.addChild(this, b);
                        return this
                    },
                    defer: function(a, b) {
                        var h = setTimeout(r.hitch(this, function() {
                            h && (h = null,
                            this._destroyed || r.hitch(this, a)())
                        }), b || 0);
                        return {
                            remove: function() {
                                h && (clearTimeout(h),
                                h = null);
                                return null
                            }
                        }
                    }
                });
                a("dojo-bidi") && m.extend(v);
                return m
            })
        },
        "dijit/Destroyable": function() {
            define(["dojo/_base/array", "dojo/aspect", "dojo/_base/declare"], function(q, p, n) {
                return n("dijit.Destroyable", null, {
                    destroy: function(m) {
                        this._destroyed = !0
                    },
                    own: function() {
                        var m = ["destroyRecursive", "destroy", "remove"];
                        q.forEach(arguments, function(l) {
                            function k() {
                                f.remove();
                                q.forEach(e, function(d) {
                                    d.remove()
                                })
                            }
                            var g, f = p.before(this, "destroy", function(d) {
                                l[g](d)
                            }), e = [];
                            l.then ? (g = "cancel",
                            l.then(k, k)) : q.forEach(m, function(d) {
                                "function" === typeof l[d] && (g || (g = d),
                                e.push(p.after(l, d, k, !0)))
                            })
                        }, this);
                        return arguments
                    }
                })
            })
        },
        "dijit/registry": function() {
            define(["dojo/_base/array", "dojo/_base/window", "./main"], function(q, p, n) {
                var m = {}
                  , l = {}
                  , k = {
                    length: 0,
                    add: function(g) {
                        if (l[g.id])
                            throw Error("Tried to register widget with id\x3d\x3d" + g.id + " but that id is already registered");
                        l[g.id] = g;
                        this.length++
                    },
                    remove: function(g) {
                        l[g] && (delete l[g],
                        this.length--)
                    },
                    byId: function(g) {
                        return "string" == typeof g ? l[g] : g
                    },
                    byNode: function(g) {
                        return l[g.getAttribute("widgetId")]
                    },
                    toArray: function() {
                        var g = [], f;
                        for (f in l)
                            g.push(l[f]);
                        return g
                    },
                    getUniqueId: function(g) {
                        var f;
                        do
                            f = g + "_" + (g in m ? ++m[g] : m[g] = 0);
                        while (l[f]);return "dijit" == n._scopeName ? f : n._scopeName + "_" + f
                    },
                    findWidgets: function(g, f) {
                        function e(c) {
                            for (c = c.firstChild; c; c = c.nextSibling)
                                if (1 == c.nodeType) {
                                    var b = c.getAttribute("widgetId");
                                    b ? (b = l[b]) && d.push(b) : c !== f && e(c)
                                }
                        }
                        var d = [];
                        e(g);
                        return d
                    },
                    _destroyAll: function() {
                        n._curFocus = null;
                        n._prevFocus = null;
                        n._activeStack = [];
                        q.forEach(k.findWidgets(p.body()), function(g) {
                            g._destroyed || (g.destroyRecursive ? g.destroyRecursive() : g.destroy && g.destroy())
                        })
                    },
                    getEnclosingWidget: function(g) {
                        for (; g; ) {
                            var f = 1 == g.nodeType && g.getAttribute("widgetId");
                            if (f)
                                return l[f];
                            g = g.parentNode
                        }
                        return null
                    },
                    _hash: l
                };
                return n.registry = k
            })
        },
        "dijit/_TemplatedMixin": function() {
            define("dojo/cache dojo/_base/declare dojo/dom-construct dojo/_base/lang dojo/on dojo/sniff dojo/string ./_AttachMixin".split(" "), function(q, p, n, m, l, k, g, f) {
                var e = p("dijit._TemplatedMixin", f, {
                    templateString: null,
                    templatePath: null,
                    _skipNodeCache: !1,
                    searchContainerNode: !0,
                    _stringRepl: function(d) {
                        var c = this.declaredClass
                          , b = this;
                        return g.substitute(d, this, function(a, h) {
                            "!" == h.charAt(0) && (a = m.getObject(h.substr(1), !1, b));
                            if ("undefined" == typeof a)
                                throw Error(c + " template:" + h);
                            return null == a ? "" : "!" == h.charAt(0) ? a : this._escapeValue("" + a)
                        }, this)
                    },
                    _escapeValue: function(d) {
                        return d.replace(/["'<>&]/g, function(c) {
                            return {
                                "\x26": "\x26amp;",
                                "\x3c": "\x26lt;",
                                "\x3e": "\x26gt;",
                                '"': "\x26quot;",
                                "'": "\x26#x27;"
                            }[c]
                        })
                    },
                    buildRendering: function() {
                        if (!this._rendered) {
                            this.templateString || (this.templateString = q(this.templatePath, {
                                sanitize: !0
                            }));
                            var d = e.getCachedTemplate(this.templateString, this._skipNodeCache, this.ownerDocument), c;
                            if (m.isString(d)) {
                                if (c = n.toDom(this._stringRepl(d), this.ownerDocument),
                                1 != c.nodeType)
                                    throw Error("Invalid template: " + d);
                            } else
                                c = d.cloneNode(!0);
                            this.domNode = c
                        }
                        this.inherited(arguments);
                        this._rendered || this._fillContent(this.srcNodeRef);
                        this._rendered = !0
                    },
                    _fillContent: function(d) {
                        var c = this.containerNode;
                        if (d && c)
                            for (; d.hasChildNodes(); )
                                c.appendChild(d.firstChild)
                    }
                });
                e._templateCache = {};
                e.getCachedTemplate = function(d, c, b) {
                    var a = e._templateCache
                      , h = d
                      , r = a[h];
                    if (r) {
                        try {
                            if (!r.ownerDocument || r.ownerDocument == (b || document))
                                return r
                        } catch (t) {}
                        n.destroy(r)
                    }
                    d = g.trim(d);
                    if (c || d.match(/\$\{([^\}]+)\}/g))
                        return a[h] = d;
                    c = n.toDom(d, b);
                    if (1 != c.nodeType)
                        throw Error("Invalid template: " + d);
                    return a[h] = c
                }
                ;
                k("ie") && l(window, "unload", function() {
                    var d = e._templateCache, c;
                    for (c in d) {
                        var b = d[c];
                        "object" == typeof b && n.destroy(b);
                        delete d[c]
                    }
                });
                return e
            })
        },
        "dijit/_AttachMixin": function() {
            define("require dojo/_base/array dojo/_base/connect dojo/_base/declare dojo/_base/lang dojo/mouse dojo/on dojo/touch ./_WidgetBase".split(" "), function(q, p, n, m, l, k, g, f, e) {
                var d = l.delegate(f, {
                    mouseenter: k.enter,
                    mouseleave: k.leave,
                    keypress: n._keypress
                }), c;
                n = m("dijit._AttachMixin", null, {
                    constructor: function() {
                        this._attachPoints = [];
                        this._attachEvents = []
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        this._attachTemplateNodes(this.domNode);
                        this._beforeFillContent()
                    },
                    _beforeFillContent: function() {},
                    _attachTemplateNodes: function(b) {
                        for (var a = b; ; )
                            if (1 == a.nodeType && (this._processTemplateNode(a, function(a, b) {
                                return a.getAttribute(b)
                            }, this._attach) || this.searchContainerNode) && a.firstChild)
                                a = a.firstChild;
                            else {
                                if (a == b)
                                    break;
                                for (; !a.nextSibling; )
                                    if (a = a.parentNode,
                                    a == b)
                                        return;
                                a = a.nextSibling
                            }
                    },
                    _processTemplateNode: function(b, a, h) {
                        var c = !0
                          , d = this.attachScope || this
                          , e = a(b, "dojoAttachPoint") || a(b, "data-dojo-attach-point");
                        if (e)
                            for (var f = e.split(/\s*,\s*/); e = f.shift(); )
                                l.isArray(d[e]) ? d[e].push(b) : d[e] = b,
                                c = "containerNode" != e,
                                this._attachPoints.push(e);
                        if (a = a(b, "dojoAttachEvent") || a(b, "data-dojo-attach-event"))
                            for (e = a.split(/\s*,\s*/),
                            f = l.trim; a = e.shift(); )
                                if (a) {
                                    var g = null;
                                    -1 != a.indexOf(":") ? (g = a.split(":"),
                                    a = f(g[0]),
                                    g = f(g[1])) : a = f(a);
                                    g || (g = a);
                                    this._attachEvents.push(h(b, a, l.hitch(d, g)))
                                }
                        return c
                    },
                    _attach: function(b, a, h) {
                        a = a.replace(/^on/, "").toLowerCase();
                        a = "dijitclick" == a ? c || (c = q("./a11yclick")) : d[a] || a;
                        return g(b, a, h)
                    },
                    _detachTemplateNodes: function() {
                        var b = this.attachScope || this;
                        p.forEach(this._attachPoints, function(a) {
                            delete b[a]
                        });
                        this._attachPoints = [];
                        p.forEach(this._attachEvents, function(a) {
                            a.remove()
                        });
                        this._attachEvents = []
                    },
                    destroyRendering: function() {
                        this._detachTemplateNodes();
                        this.inherited(arguments)
                    }
                });
                l.extend(e, {
                    dojoAttachEvent: "",
                    dojoAttachPoint: ""
                });
                return n
            })
        },
        "dijit/a11yclick": function() {
            define(["dojo/keys", "dojo/mouse", "dojo/on", "dojo/touch"], function(q, p, n, m) {
                function l(f) {
                    if ((f.keyCode === q.ENTER || f.keyCode === q.SPACE) && !/input|button|textarea/i.test(f.target.nodeName))
                        for (f = f.target; f; f = f.parentNode)
                            if (f.dojoClick)
                                return !0
                }
                var k;
                n(document, "keydown", function(f) {
                    l(f) ? (k = f.target,
                    f.preventDefault()) : k = null
                });
                n(document, "keyup", function(f) {
                    l(f) && f.target == k && (k = null,
                    n.emit(f.target, "click", {
                        cancelable: !0,
                        bubbles: !0,
                        ctrlKey: f.ctrlKey,
                        shiftKey: f.shiftKey,
                        metaKey: f.metaKey,
                        altKey: f.altKey,
                        _origType: f.type
                    }))
                });
                var g = function(f, e) {
                    f.dojoClick = !0;
                    return n(f, "click", e)
                };
                g.click = g;
                g.press = function(f, e) {
                    var d = n(f, m.press, function(b) {
                        ("mousedown" != b.type || p.isLeft(b)) && e(b)
                    })
                      , c = n(f, "keydown", function(b) {
                        b.keyCode !== q.ENTER && b.keyCode !== q.SPACE || e(b)
                    });
                    return {
                        remove: function() {
                            d.remove();
                            c.remove()
                        }
                    }
                }
                ;
                g.release = function(f, e) {
                    var d = n(f, m.release, function(b) {
                        ("mouseup" != b.type || p.isLeft(b)) && e(b)
                    })
                      , c = n(f, "keyup", function(b) {
                        b.keyCode !== q.ENTER && b.keyCode !== q.SPACE || e(b)
                    });
                    return {
                        remove: function() {
                            d.remove();
                            c.remove()
                        }
                    }
                }
                ;
                g.move = m.move;
                return g
            })
        },
        "dijit/hccss": function() {
            define(["dojo/dom-class", "dojo/hccss", "dojo/domReady", "dojo/_base/window"], function(q, p, n, m) {
                n(function() {
                    p("highcontrast") && q.add(m.body(), "dijit_a11y")
                });
                return p
            })
        },
        "dijit/_Widget": function() {
            define("dojo/aspect dojo/_base/config dojo/_base/connect dojo/_base/declare dojo/has dojo/_base/kernel dojo/_base/lang dojo/query dojo/ready ./registry ./_WidgetBase ./_OnDijitClickMixin ./_FocusMixin dojo/uacss ./hccss".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a) {
                function h() {}
                function r(a) {
                    return function(b, c, r, d) {
                        return b && "string" == typeof c && b[c] == h ? b.on(c.substring(2).toLowerCase(), g.hitch(r, d)) : a.apply(n, arguments)
                    }
                }
                q.around(n, "connect", r);
                k.connect && q.around(k, "connect", r);
                q = m("dijit._Widget", [c, b, a], {
                    onClick: h,
                    onDblClick: h,
                    onKeyDown: h,
                    onKeyPress: h,
                    onKeyUp: h,
                    onMouseDown: h,
                    onMouseMove: h,
                    onMouseOut: h,
                    onMouseOver: h,
                    onMouseLeave: h,
                    onMouseEnter: h,
                    onMouseUp: h,
                    constructor: function(a) {
                        this._toConnect = {};
                        for (var b in a)
                            this[b] === h && (this._toConnect[b.replace(/^on/, "").toLowerCase()] = a[b],
                            delete a[b])
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        for (var a in this._toConnect)
                            this.on(a, this._toConnect[a]);
                        delete this._toConnect
                    },
                    on: function(a, b) {
                        return this[this._onMap(a)] === h ? n.connect(this.domNode, a.toLowerCase(), this, b) : this.inherited(arguments)
                    },
                    _setFocusedAttr: function(a) {
                        this._focused = a;
                        this._set("focused", a)
                    },
                    setAttribute: function(a, b) {
                        k.deprecated(this.declaredClass + "::setAttribute(attr, value) is deprecated. Use set() instead.", "", "2.0");
                        this.set(a, b)
                    },
                    attr: function(a, b) {
                        return 2 <= arguments.length || "object" === typeof a ? this.set.apply(this, arguments) : this.get(a)
                    },
                    getDescendants: function() {
                        k.deprecated(this.declaredClass + "::getDescendants() is deprecated. Use getChildren() instead.", "", "2.0");
                        return this.containerNode ? f("[widgetId]", this.containerNode).map(d.byNode) : []
                    },
                    _onShow: function() {
                        this.onShow()
                    },
                    onShow: function() {},
                    onHide: function() {},
                    onClose: function() {
                        return !0
                    }
                });
                l("dijit-legacy-requires") && e(0, function() {
                    require(["dijit/_base"])
                });
                return q
            })
        },
        "dijit/_OnDijitClickMixin": function() {
            define("dojo/on dojo/_base/array dojo/keys dojo/_base/declare dojo/has ./a11yclick".split(" "), function(q, p, n, m, l, k) {
                q = m("dijit._OnDijitClickMixin", null, {
                    connect: function(g, f, e) {
                        return this.inherited(arguments, [g, "ondijitclick" == f ? k : f, e])
                    }
                });
                q.a11yclick = k;
                return q
            })
        },
        "dijit/_FocusMixin": function() {
            define(["./focus", "./_WidgetBase", "dojo/_base/declare", "dojo/_base/lang"], function(q, p, n, m) {
                m.extend(p, {
                    focused: !1,
                    onFocus: function() {},
                    onBlur: function() {},
                    _onFocus: function() {
                        this.onFocus()
                    },
                    _onBlur: function() {
                        this.onBlur()
                    }
                });
                return n("dijit._FocusMixin", null, {
                    _focusManager: q
                })
            })
        },
        "dijit/_CssStateMixin": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom dojo/dom-class dojo/has dojo/_base/lang dojo/on dojo/domReady dojo/touch dojo/_base/window ./a11yclick ./registry".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                p = p("dijit._CssStateMixin", [], {
                    hovering: !1,
                    active: !1,
                    _applyAttributes: function() {
                        this.inherited(arguments);
                        q.forEach("disabled readOnly checked selected focused state hovering active _opened".split(" "), function(a) {
                            this.watch(a, k.hitch(this, "_setStateClass"))
                        }, this);
                        for (var a in this.cssStateNodes || {})
                            this._trackMouseState(this[a], this.cssStateNodes[a]);
                        this._trackMouseState(this.domNode, this.baseClass);
                        this._setStateClass()
                    },
                    _cssMouseEvent: function(a) {
                        if (!this.disabled)
                            switch (a.type) {
                            case "mouseover":
                            case "MSPointerOver":
                            case "pointerover":
                                this._set("hovering", !0);
                                this._set("active", this._mouseDown);
                                break;
                            case "mouseout":
                            case "MSPointerOut":
                            case "pointerout":
                                this._set("hovering", !1);
                                this._set("active", !1);
                                break;
                            case "mousedown":
                            case "touchstart":
                            case "MSPointerDown":
                            case "pointerdown":
                            case "keydown":
                                this._set("active", !0);
                                break;
                            case "mouseup":
                            case "dojotouchend":
                            case "MSPointerUp":
                            case "pointerup":
                            case "keyup":
                                this._set("active", !1)
                            }
                    },
                    _setStateClass: function() {
                        function a(a) {
                            b = b.concat(q.map(b, function(b) {
                                return b + a
                            }), "dijit" + a)
                        }
                        var b = this.baseClass.split(" ");
                        this.isLeftToRight() || a("Rtl");
                        var c = "mixed" == this.checked ? "Mixed" : this.checked ? "Checked" : "";
                        this.checked && a(c);
                        this.state && a(this.state);
                        this.selected && a("Selected");
                        this._opened && a("Opened");
                        this.disabled ? a("Disabled") : this.readOnly ? a("ReadOnly") : this.active ? a("Active") : this.hovering && a("Hover");
                        this.focused && a("Focused");
                        var c = this.stateNode || this.domNode
                          , d = {};
                        q.forEach(c.className.split(" "), function(a) {
                            d[a] = !0
                        });
                        "_stateClasses"in this && q.forEach(this._stateClasses, function(a) {
                            delete d[a]
                        });
                        q.forEach(b, function(a) {
                            d[a] = !0
                        });
                        var e = [], f;
                        for (f in d)
                            e.push(f);
                        c.className = e.join(" ");
                        this._stateClasses = b
                    },
                    _subnodeCssMouseEvent: function(a, b, c) {
                        function h(h) {
                            m.toggle(a, b + "Active", h)
                        }
                        if (!this.disabled && !this.readOnly)
                            switch (c.type) {
                            case "mouseover":
                            case "MSPointerOver":
                            case "pointerover":
                                m.toggle(a, b + "Hover", !0);
                                break;
                            case "mouseout":
                            case "MSPointerOut":
                            case "pointerout":
                                m.toggle(a, b + "Hover", !1);
                                h(!1);
                                break;
                            case "mousedown":
                            case "touchstart":
                            case "MSPointerDown":
                            case "pointerdown":
                            case "keydown":
                                h(!0);
                                break;
                            case "mouseup":
                            case "MSPointerUp":
                            case "pointerup":
                            case "dojotouchend":
                            case "keyup":
                                h(!1);
                                break;
                            case "focus":
                            case "focusin":
                                m.toggle(a, b + "Focused", !0);
                                break;
                            case "blur":
                            case "focusout":
                                m.toggle(a, b + "Focused", !1)
                            }
                    },
                    _trackMouseState: function(a, b) {
                        a._cssState = b
                    }
                });
                f(function() {
                    function a(a, h, c) {
                        if (!c || !n.isDescendant(c, h))
                            for (; h && h != c; h = h.parentNode)
                                if (h._cssState) {
                                    var r = b.getEnclosingWidget(h);
                                    r && (h == r.domNode ? r._cssMouseEvent(a) : r._subnodeCssMouseEvent(h, h._cssState, a))
                                }
                    }
                    var h = d.body(), r;
                    g(h, e.over, function(b) {
                        a(b, b.target, b.relatedTarget)
                    });
                    g(h, e.out, function(b) {
                        a(b, b.target, b.relatedTarget)
                    });
                    g(h, c.press, function(b) {
                        r = b.target;
                        a(b, r)
                    });
                    g(h, c.release, function(b) {
                        a(b, r);
                        r = null
                    });
                    g(h, "focusin, focusout", function(a) {
                        var h = a.target;
                        if (h._cssState && !h.getAttribute("widgetId")) {
                            var c = b.getEnclosingWidget(h);
                            c && c._subnodeCssMouseEvent(h, h._cssState, a)
                        }
                    })
                });
                return p
            })
        },
        "dijit/form/DropDownButton": function() {
            define("dojo/_base/declare dojo/_base/kernel dojo/_base/lang dojo/query ../registry ../popup ./Button ../_Container ../_HasDropDown dojo/text!./templates/DropDownButton.html ../a11yclick".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                return q("dijit.form.DropDownButton", [g, f, e], {
                    baseClass: "dijitDropDownButton",
                    templateString: d,
                    _fillContent: function() {
                        var c = this.srcNodeRef
                          , b = this.containerNode;
                        if (c && b)
                            for (; c.hasChildNodes(); ) {
                                var a = c.firstChild;
                                a.hasAttribute && (a.hasAttribute("data-dojo-type") || a.hasAttribute("dojoType") || a.hasAttribute("data-" + p._scopeName + "-type") || a.hasAttribute(p._scopeName + "Type")) ? (this.dropDownContainer = this.ownerDocument.createElement("div"),
                                this.dropDownContainer.appendChild(a)) : b.appendChild(a)
                            }
                    },
                    startup: function() {
                        this._started || (!this.dropDown && this.dropDownContainer && (this.dropDown = l.byNode(this.dropDownContainer.firstChild),
                        delete this.dropDownContainer),
                        this.dropDown && k.hide(this.dropDown),
                        this.inherited(arguments))
                    },
                    isLoaded: function() {
                        var c = this.dropDown;
                        return !!c && (!c.href || c.isLoaded)
                    },
                    loadDropDown: function(c) {
                        var b = this.dropDown
                          , a = b.on("load", n.hitch(this, function() {
                            a.remove();
                            c()
                        }));
                        b.refresh()
                    },
                    isFocusable: function() {
                        return this.inherited(arguments) && !this._mouseDown
                    }
                })
            })
        },
        "dijit/popup": function() {
            define("dojo/_base/array dojo/aspect dojo/_base/declare dojo/dom dojo/dom-attr dojo/dom-construct dojo/dom-geometry dojo/dom-style dojo/has dojo/keys dojo/_base/lang dojo/on ./place ./BackgroundIframe ./Viewport ./main dojo/touch".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t) {
                function u() {
                    this._popupWrapper && (k.destroy(this._popupWrapper),
                    delete this._popupWrapper)
                }
                n = n(null, {
                    _stack: [],
                    _beginZIndex: 1E3,
                    _idGen: 1,
                    _repositionAll: function() {
                        if (this._firstAroundNode) {
                            var a = this._firstAroundPosition
                              , b = g.position(this._firstAroundNode, !0)
                              , h = b.x - a.x
                              , a = b.y - a.y;
                            if (h || a)
                                for (this._firstAroundPosition = b,
                                b = 0; b < this._stack.length; b++) {
                                    var r = this._stack[b].wrapper.style;
                                    r.top = parseFloat(r.top) + a + "px";
                                    "auto" == r.right ? r.left = parseFloat(r.left) + h + "px" : r.right = parseFloat(r.right) - h + "px"
                                }
                            this._aroundMoveListener = setTimeout(c.hitch(this, "_repositionAll"), h || a ? 10 : 50)
                        }
                    },
                    _createWrapper: function(a) {
                        var h = a._popupWrapper
                          , c = a.domNode;
                        h || (h = k.create("div", {
                            "class": "dijitPopup",
                            style: {
                                display: "none"
                            },
                            role: "region",
                            "aria-label": a["aria-label"] || a.label || a.name || a.id
                        }, a.ownerDocumentBody),
                        h.appendChild(c),
                        c = c.style,
                        c.display = "",
                        c.visibility = "",
                        c.position = "",
                        c.top = "0px",
                        a._popupWrapper = h,
                        p.after(a, "destroy", u, !0),
                        "ontouchend"in document && b(h, "touchend", function(a) {
                            /^(input|button|textarea)$/i.test(a.target.tagName) || a.preventDefault()
                        }),
                        h.dojoClick = !0);
                        return h
                    },
                    moveOffScreen: function(a) {
                        var b = this._createWrapper(a);
                        a = g.isBodyLtr(a.ownerDocument);
                        var h = {
                            visibility: "hidden",
                            top: "-9999px",
                            display: ""
                        };
                        h[a ? "left" : "right"] = "-9999px";
                        h[a ? "right" : "left"] = "auto";
                        f.set(b, h);
                        return b
                    },
                    hide: function(a) {
                        var b = this._createWrapper(a);
                        f.set(b, {
                            display: "none",
                            height: "auto",
                            overflowY: "visible",
                            border: ""
                        });
                        a = a.domNode;
                        "_originalStyle"in a && (a.style.cssText = a._originalStyle)
                    },
                    getTopPopup: function() {
                        for (var a = this._stack, b = a.length - 1; 0 < b && a[b].parent === a[b - 1].widget; b--)
                            ;
                        return a[b]
                    },
                    open: function(t) {
                        for (var u = this._stack, k = t.popup, x = k.domNode, v = t.orient || ["below", "below-alt", "above", "above-alt"], A = t.parent ? t.parent.isLeftToRight() : g.isBodyLtr(k.ownerDocument), n = t.around, p = t.around && t.around.id ? t.around.id + "_dropdown" : "popup_" + this._idGen++; u.length && (!t.parent || !m.isDescendant(t.parent.domNode, u[u.length - 1].widget.domNode)); )
                            this.close(u[u.length - 1].widget);
                        var q = this.moveOffScreen(k);
                        k.startup && !k._started && k.startup();
                        var I, H = g.position(x);
                        if ("maxHeight"in t && -1 != t.maxHeight)
                            I = t.maxHeight || Infinity;
                        else {
                            I = r.getEffectiveBox(this.ownerDocument);
                            var F = n ? g.position(n, !1) : {
                                y: t.y - (t.padding || 0),
                                h: 2 * (t.padding || 0)
                            };
                            I = Math.floor(Math.max(F.y, I.h - (F.y + F.h)))
                        }
                        H.h > I && (H = f.getComputedStyle(x),
                        f.set(q, {
                            overflowY: "scroll",
                            height: I + "px",
                            border: H.borderLeftWidth + " " + H.borderLeftStyle + " " + H.borderLeftColor
                        }),
                        x._originalStyle = x.style.cssText,
                        x.style.border = "none");
                        l.set(q, {
                            id: p,
                            style: {
                                zIndex: this._beginZIndex + u.length
                            },
                            "class": "dijitPopup " + (k.baseClass || k["class"] || "").split(" ")[0] + "Popup",
                            dijitPopupParent: t.parent ? t.parent.id : ""
                        });
                        0 == u.length && n && (this._firstAroundNode = n,
                        this._firstAroundPosition = g.position(n, !0),
                        this._aroundMoveListener = setTimeout(c.hitch(this, "_repositionAll"), 50));
                        e("config-bgIframe") && !k.bgIframe && (k.bgIframe = new h(q));
                        p = k.orient ? c.hitch(k, "orient") : null;
                        v = n ? a.around(q, n, v, A, p) : a.at(q, t, "R" == v ? ["TR", "BR", "TL", "BL"] : ["TL", "BL", "TR", "BR"], t.padding, p);
                        q.style.visibility = "visible";
                        x.style.visibility = "visible";
                        x = [];
                        x.push(b(q, "keydown", c.hitch(this, function(a) {
                            if (a.keyCode == d.ESCAPE && t.onCancel)
                                a.stopPropagation(),
                                a.preventDefault(),
                                t.onCancel();
                            else if (a.keyCode == d.TAB && (a.stopPropagation(),
                            a.preventDefault(),
                            (a = this.getTopPopup()) && a.onCancel))
                                a.onCancel()
                        })));
                        k.onCancel && t.onCancel && x.push(k.on("cancel", t.onCancel));
                        x.push(k.on(k.onExecute ? "execute" : "change", c.hitch(this, function() {
                            var a = this.getTopPopup();
                            if (a && a.onExecute)
                                a.onExecute()
                        })));
                        u.push({
                            widget: k,
                            wrapper: q,
                            parent: t.parent,
                            onExecute: t.onExecute,
                            onCancel: t.onCancel,
                            onClose: t.onClose,
                            handlers: x
                        });
                        if (k.onOpen)
                            k.onOpen(v);
                        return v
                    },
                    close: function(a) {
                        for (var b = this._stack; a && q.some(b, function(b) {
                            return b.widget == a
                        }) || !a && b.length; ) {
                            var h = b.pop()
                              , c = h.widget
                              , r = h.onClose;
                            c.bgIframe && (c.bgIframe.destroy(),
                            delete c.bgIframe);
                            if (c.onClose)
                                c.onClose();
                            for (var d; d = h.handlers.pop(); )
                                d.remove();
                            c && c.domNode && this.hide(c);
                            r && r()
                        }
                        0 == b.length && this._aroundMoveListener && (clearTimeout(this._aroundMoveListener),
                        this._firstAroundNode = this._firstAroundPosition = this._aroundMoveListener = null)
                    }
                });
                return t.popup = new n
            })
        },
        "dijit/place": function() {
            define("dojo/_base/array dojo/dom-geometry dojo/dom-style dojo/_base/kernel dojo/_base/window ./Viewport ./main".split(" "), function(q, p, n, m, l, k, g) {
                function f(d, c, b, a) {
                    var h = k.getEffectiveBox(d.ownerDocument);
                    d.parentNode && "body" == String(d.parentNode.tagName).toLowerCase() || l.body(d.ownerDocument).appendChild(d);
                    var r = null;
                    q.some(c, function(c) {
                        var t = c.corner
                          , e = c.pos
                          , u = 0
                          , f = {
                            w: {
                                L: h.l + h.w - e.x,
                                R: e.x - h.l,
                                M: h.w
                            }[t.charAt(1)],
                            h: {
                                T: h.t + h.h - e.y,
                                B: e.y - h.t,
                                M: h.h
                            }[t.charAt(0)]
                        }
                          , g = d.style;
                        g.left = g.right = "auto";
                        b && (u = b(d, c.aroundCorner, t, f, a),
                        u = "undefined" == typeof u ? 0 : u);
                        var k = d.style
                          , x = k.display
                          , l = k.visibility;
                        "none" == k.display && (k.visibility = "hidden",
                        k.display = "");
                        g = p.position(d);
                        k.display = x;
                        k.visibility = l;
                        x = {
                            L: e.x,
                            R: e.x - g.w,
                            M: Math.max(h.l, Math.min(h.l + h.w, e.x + (g.w >> 1)) - g.w)
                        }[t.charAt(1)];
                        l = {
                            T: e.y,
                            B: e.y - g.h,
                            M: Math.max(h.t, Math.min(h.t + h.h, e.y + (g.h >> 1)) - g.h)
                        }[t.charAt(0)];
                        e = Math.max(h.l, x);
                        k = Math.max(h.t, l);
                        x = Math.min(h.l + h.w, x + g.w) - e;
                        l = Math.min(h.t + h.h, l + g.h) - k;
                        u += g.w - x + (g.h - l);
                        if (null == r || u < r.overflow)
                            r = {
                                corner: t,
                                aroundCorner: c.aroundCorner,
                                x: e,
                                y: k,
                                w: x,
                                h: l,
                                overflow: u,
                                spaceAvailable: f
                            };
                        return !u
                    });
                    r.overflow && b && b(d, r.aroundCorner, r.corner, r.spaceAvailable, a);
                    c = r.y;
                    var t = r.x
                      , e = l.body(d.ownerDocument);
                    /relative|absolute/.test(n.get(e, "position")) && (c -= n.get(e, "marginTop"),
                    t -= n.get(e, "marginLeft"));
                    e = d.style;
                    e.top = c + "px";
                    e.left = t + "px";
                    e.right = "auto";
                    return r
                }
                var e = {
                    TL: "BR",
                    TR: "BL",
                    BL: "TR",
                    BR: "TL"
                };
                return g.place = {
                    at: function(d, c, b, a, h) {
                        b = q.map(b, function(b) {
                            var h = {
                                corner: b,
                                aroundCorner: e[b],
                                pos: {
                                    x: c.x,
                                    y: c.y
                                }
                            };
                            a && (h.pos.x += "L" == b.charAt(1) ? a.x : -a.x,
                            h.pos.y += "T" == b.charAt(0) ? a.y : -a.y);
                            return h
                        });
                        return f(d, b, h)
                    },
                    around: function(d, c, b, a, h) {
                        function r(a, b) {
                            E.push({
                                aroundCorner: a,
                                corner: b,
                                pos: {
                                    x: {
                                        L: v,
                                        R: v + B,
                                        M: v + (B >> 1)
                                    }[a.charAt(1)],
                                    y: {
                                        T: A,
                                        B: A + C,
                                        M: A + (C >> 1)
                                    }[a.charAt(0)]
                                }
                            })
                        }
                        var t;
                        if ("string" == typeof c || "offsetWidth"in c || "ownerSVGElement"in c) {
                            if (t = p.position(c, !0),
                            /^(above|below)/.test(b[0])) {
                                var e = p.getBorderExtents(c)
                                  , g = c.firstChild ? p.getBorderExtents(c.firstChild) : {
                                    t: 0,
                                    l: 0,
                                    b: 0,
                                    r: 0
                                }
                                  , k = p.getBorderExtents(d)
                                  , l = d.firstChild ? p.getBorderExtents(d.firstChild) : {
                                    t: 0,
                                    l: 0,
                                    b: 0,
                                    r: 0
                                };
                                t.y += Math.min(e.t + g.t, k.t + l.t);
                                t.h -= Math.min(e.t + g.t, k.t + l.t) + Math.min(e.b + g.b, k.b + l.b)
                            }
                        } else
                            t = c;
                        if (c.parentNode)
                            for (e = "absolute" == n.getComputedStyle(c).position,
                            c = c.parentNode; c && 1 == c.nodeType && "BODY" != c.nodeName; ) {
                                g = p.position(c, !0);
                                k = n.getComputedStyle(c);
                                /relative|absolute/.test(k.position) && (e = !1);
                                if (!e && /hidden|auto|scroll/.test(k.overflow)) {
                                    var l = Math.min(t.y + t.h, g.y + g.h)
                                      , w = Math.min(t.x + t.w, g.x + g.w);
                                    t.x = Math.max(t.x, g.x);
                                    t.y = Math.max(t.y, g.y);
                                    t.h = l - t.y;
                                    t.w = w - t.x
                                }
                                "absolute" == k.position && (e = !0);
                                c = c.parentNode
                            }
                        var v = t.x
                          , A = t.y
                          , B = "w"in t ? t.w : t.w = t.width
                          , C = "h"in t ? t.h : (m.deprecated("place.around: dijit/place.__Rectangle: { x:" + v + ", y:" + A + ", height:" + t.height + ", width:" + B + " } has been deprecated.  Please use { x:" + v + ", y:" + A + ", h:" + t.height + ", w:" + B + " }", "", "2.0"),
                        t.h = t.height)
                          , E = [];
                        q.forEach(b, function(b) {
                            var h = a;
                            switch (b) {
                            case "above-centered":
                                r("TM", "BM");
                                break;
                            case "below-centered":
                                r("BM", "TM");
                                break;
                            case "after-centered":
                                h = !h;
                            case "before-centered":
                                r(h ? "ML" : "MR", h ? "MR" : "ML");
                                break;
                            case "after":
                                h = !h;
                            case "before":
                                r(h ? "TL" : "TR", h ? "TR" : "TL");
                                r(h ? "BL" : "BR", h ? "BR" : "BL");
                                break;
                            case "below-alt":
                                h = !h;
                            case "below":
                                r(h ? "BL" : "BR", h ? "TL" : "TR");
                                r(h ? "BR" : "BL", h ? "TR" : "TL");
                                break;
                            case "above-alt":
                                h = !h;
                            case "above":
                                r(h ? "TL" : "TR", h ? "BL" : "BR");
                                r(h ? "TR" : "TL", h ? "BR" : "BL");
                                break;
                            default:
                                r(b.aroundCorner, b.corner)
                            }
                        });
                        d = f(d, E, h, {
                            w: B,
                            h: C
                        });
                        d.aroundNodePos = t;
                        return d
                    }
                }
            })
        },
        "dijit/Viewport": function() {
            define(["dojo/Evented", "dojo/on", "dojo/domReady", "dojo/sniff", "dojo/window"], function(q, p, n, m, l) {
                var k = new q, g;
                n(function() {
                    var f = l.getBox();
                    k._rlh = p(window, "resize", function() {
                        var d = l.getBox();
                        if (f.h != d.h || f.w != d.w)
                            f = d,
                            k.emit("resize")
                    });
                    if (8 == m("ie")) {
                        var e = screen.deviceXDPI;
                        setInterval(function() {
                            screen.deviceXDPI != e && (e = screen.deviceXDPI,
                            k.emit("resize"))
                        }, 500)
                    }
                    m("ios") && (p(document, "focusin", function(d) {
                        g = d.target
                    }),
                    p(document, "focusout", function(d) {
                        g = null
                    }))
                });
                k.getEffectiveBox = function(f) {
                    f = l.getBox(f);
                    var e = g && g.tagName && g.tagName.toLowerCase();
                    m("ios") && g && !g.readOnly && ("textarea" == e || "input" == e && /^(color|email|number|password|search|tel|text|url)$/.test(g.type)) && (f.h *= 0 == orientation || 180 == orientation ? .66 : .4,
                    e = g.getBoundingClientRect(),
                    f.h = Math.max(f.h, e.top + e.height));
                    return f
                }
                ;
                return k
            })
        },
        "dijit/form/Button": function() {
            define("require dojo/_base/declare dojo/dom-class dojo/has dojo/_base/kernel dojo/_base/lang dojo/ready ./_FormWidget ./_ButtonMixin dojo/text!./templates/Button.html ../a11yclick".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                m("dijit-legacy-requires") && g(0, function() {
                    q(["dijit/form/DropDownButton", "dijit/form/ComboButton", "dijit/form/ToggleButton"])
                });
                g = p("dijit.form.Button" + (m("dojo-bidi") ? "_NoBidi" : ""), [f, e], {
                    showLabel: !0,
                    iconClass: "dijitNoIcon",
                    _setIconClassAttr: {
                        node: "iconNode",
                        type: "class"
                    },
                    baseClass: "dijitButton",
                    templateString: d,
                    _setValueAttr: "valueNode",
                    _setNameAttr: function(c) {
                        this.valueNode && this.valueNode.setAttribute("name", c)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this._setLabelFromContainer()
                    },
                    _setLabelFromContainer: function() {
                        this.containerNode && !this.label && (this.label = k.trim(this.containerNode.innerHTML),
                        this.onLabelSet())
                    },
                    _setShowLabelAttr: function(c) {
                        this.containerNode && n.toggle(this.containerNode, "dijitDisplayNone", !c);
                        this._set("showLabel", c)
                    },
                    setLabel: function(c) {
                        l.deprecated("dijit.form.Button.setLabel() is deprecated.  Use set('label', ...) instead.", "", "2.0");
                        this.set("label", c)
                    },
                    onLabelSet: function() {
                        this.inherited(arguments);
                        this.showLabel || "title"in this.params || (this.titleNode.title = k.trim(this.containerNode.innerText || this.containerNode.textContent || ""))
                    }
                });
                m("dojo-bidi") && (g = p("dijit.form.Button", g, {
                    onLabelSet: function() {
                        this.inherited(arguments);
                        this.titleNode.title && this.applyTextDir(this.titleNode, this.titleNode.title)
                    },
                    _setTextDirAttr: function(c) {
                        this._created && this.textDir != c && (this._set("textDir", c),
                        this._setLabelAttr(this.label))
                    }
                }));
                return g
            })
        },
        "dijit/form/_FormWidget": function() {
            define("dojo/_base/declare dojo/sniff dojo/_base/kernel dojo/ready ../_Widget ../_CssStateMixin ../_TemplatedMixin ./_FormWidgetMixin".split(" "), function(q, p, n, m, l, k, g, f) {
                p("dijit-legacy-requires") && m(0, function() {
                    require(["dijit/form/_FormValueWidget"])
                });
                return q("dijit.form._FormWidget", [l, g, k, f], {
                    setDisabled: function(e) {
                        n.deprecated("setDisabled(" + e + ") is deprecated. Use set('disabled'," + e + ") instead.", "", "2.0");
                        this.set("disabled", e)
                    },
                    setValue: function(e) {
                        n.deprecated("dijit.form._FormWidget:setValue(" + e + ") is deprecated.  Use set('value'," + e + ") instead.", "", "2.0");
                        this.set("value", e)
                    },
                    getValue: function() {
                        n.deprecated(this.declaredClass + "::getValue() is deprecated. Use get('value') instead.", "", "2.0");
                        return this.get("value")
                    },
                    postMixInProperties: function() {
                        this.nameAttrSetting = this.name && !p("msapp") ? 'name\x3d"' + this.name.replace(/"/g, "\x26quot;") + '"' : "";
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/form/_FormWidgetMixin": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom-attr dojo/dom-style dojo/_base/lang dojo/mouse dojo/on dojo/sniff dojo/window ../a11y".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                return p("dijit.form._FormWidgetMixin", null, {
                    name: "",
                    alt: "",
                    value: "",
                    type: "text",
                    "aria-label": "focusNode",
                    tabIndex: "0",
                    _setTabIndexAttr: "focusNode",
                    disabled: !1,
                    intermediateChanges: !1,
                    scrollOnFocus: !0,
                    _setIdAttr: "focusNode",
                    _setDisabledAttr: function(c) {
                        this._set("disabled", c);
                        /^(button|input|select|textarea|optgroup|option|fieldset)$/i.test(this.focusNode.tagName) ? n.set(this.focusNode, "disabled", c) : this.focusNode.setAttribute("aria-disabled", c ? "true" : "false");
                        this.valueNode && n.set(this.valueNode, "disabled", c);
                        c ? (this._set("hovering", !1),
                        this._set("active", !1),
                        c = "tabIndex"in this.attributeMap ? this.attributeMap.tabIndex : "_setTabIndexAttr"in this ? this._setTabIndexAttr : "focusNode",
                        q.forEach(l.isArray(c) ? c : [c], function(b) {
                            b = this[b];
                            f("webkit") || d.hasDefaultTabStop(b) ? b.setAttribute("tabIndex", "-1") : b.removeAttribute("tabIndex")
                        }, this)) : "" != this.tabIndex && this.set("tabIndex", this.tabIndex)
                    },
                    _onFocus: function(c) {
                        if ("mouse" == c && this.isFocusable())
                            var b = this.own(g(this.focusNode, "focus", function() {
                                h.remove();
                                b.remove()
                            }))[0]
                              , a = f("pointer-events") ? "pointerup" : f("MSPointer") ? "MSPointerUp" : f("touch-events") ? "touchend, mouseup" : "mouseup"
                              , h = this.own(g(this.ownerDocumentBody, a, l.hitch(this, function(a) {
                                h.remove();
                                b.remove();
                                this.focused && ("touchend" == a.type ? this.defer("focus") : this.focus())
                            })))[0];
                        this.scrollOnFocus && this.defer(function() {
                            e.scrollIntoView(this.domNode)
                        });
                        this.inherited(arguments)
                    },
                    isFocusable: function() {
                        return !this.disabled && this.focusNode && "none" != m.get(this.domNode, "display")
                    },
                    focus: function() {
                        if (!this.disabled && this.focusNode.focus)
                            try {
                                this.focusNode.focus()
                            } catch (c) {}
                    },
                    compare: function(c, b) {
                        return "number" == typeof c && "number" == typeof b ? isNaN(c) && isNaN(b) ? 0 : c - b : c > b ? 1 : c < b ? -1 : 0
                    },
                    onChange: function() {},
                    _onChangeActive: !1,
                    _handleOnChange: function(c, b) {
                        void 0 != this._lastValueReported || null !== b && this._onChangeActive || (this._resetValue = this._lastValueReported = c);
                        this._pendingOnChange = this._pendingOnChange || typeof c != typeof this._lastValueReported || 0 != this.compare(c, this._lastValueReported);
                        (this.intermediateChanges || b || void 0 === b) && this._pendingOnChange && (this._lastValueReported = c,
                        this._pendingOnChange = !1,
                        this._onChangeActive && (this._onChangeHandle && this._onChangeHandle.remove(),
                        this._onChangeHandle = this.defer(function() {
                            this._onChangeHandle = null;
                            this.onChange(c)
                        })))
                    },
                    create: function() {
                        this.inherited(arguments);
                        this._onChangeActive = !0
                    },
                    destroy: function() {
                        this._onChangeHandle && (this._onChangeHandle.remove(),
                        this.onChange(this._lastValueReported));
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/form/_ButtonMixin": function() {
            define(["dojo/_base/declare", "dojo/dom", "dojo/has", "../registry"], function(q, p, n, m) {
                var l = q("dijit.form._ButtonMixin" + (n("dojo-bidi") ? "_NoBidi" : ""), null, {
                    label: "",
                    type: "button",
                    __onClick: function(k) {
                        k.stopPropagation();
                        k.preventDefault();
                        this.disabled || this.valueNode.click(k);
                        return !1
                    },
                    _onClick: function(k) {
                        if (this.disabled)
                            return k.stopPropagation(),
                            k.preventDefault(),
                            !1;
                        !1 === this.onClick(k) && k.preventDefault();
                        var g = k.defaultPrevented;
                        if (!g && "submit" == this.type && !(this.valueNode || this.focusNode).form)
                            for (var f = this.domNode; f.parentNode; f = f.parentNode) {
                                var e = m.byNode(f);
                                if (e && "function" == typeof e._onSubmit) {
                                    e._onSubmit(k);
                                    k.preventDefault();
                                    g = !0;
                                    break
                                }
                            }
                        return !g
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        p.setSelectable(this.focusNode, !1)
                    },
                    onClick: function() {
                        return !0
                    },
                    _setLabelAttr: function(k) {
                        this._set("label", k);
                        (this.containerNode || this.focusNode).innerHTML = k;
                        this.onLabelSet()
                    },
                    onLabelSet: function() {}
                });
                n("dojo-bidi") && (l = q("dijit.form._ButtonMixin", l, {
                    onLabelSet: function() {
                        this.inherited(arguments);
                        this.applyTextDir(this.containerNode || this.focusNode)
                    }
                }));
                return l
            })
        },
        "dijit/_Container": function() {
            define(["dojo/_base/array", "dojo/_base/declare", "dojo/dom-construct", "dojo/_base/kernel"], function(q, p, n, m) {
                return p("dijit._Container", null, {
                    buildRendering: function() {
                        this.inherited(arguments);
                        this.containerNode || (this.containerNode = this.domNode)
                    },
                    addChild: function(l, k) {
                        var g = this.containerNode;
                        if (0 < k) {
                            for (g = g.firstChild; 0 < k; )
                                1 == g.nodeType && k--,
                                g = g.nextSibling;
                            g ? k = "before" : (g = this.containerNode,
                            k = "last")
                        }
                        n.place(l.domNode, g, k);
                        this._started && !l._started && l.startup()
                    },
                    removeChild: function(l) {
                        "number" == typeof l && (l = this.getChildren()[l]);
                        l && (l = l.domNode) && l.parentNode && l.parentNode.removeChild(l)
                    },
                    hasChildren: function() {
                        return 0 < this.getChildren().length
                    },
                    _getSiblingOfChild: function(l, k) {
                        var g = this.getChildren()
                          , f = q.indexOf(g, l);
                        return g[f + k]
                    },
                    getIndexOfChild: function(l) {
                        return q.indexOf(this.getChildren(), l)
                    }
                })
            })
        },
        "dijit/_HasDropDown": function() {
            define("dojo/_base/declare dojo/_base/Deferred dojo/dom dojo/dom-attr dojo/dom-class dojo/dom-geometry dojo/dom-style dojo/has dojo/keys dojo/_base/lang dojo/on dojo/touch ./registry ./focus ./popup ./_FocusMixin".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t) {
                return q("dijit._HasDropDown", t, {
                    _buttonNode: null,
                    _arrowWrapperNode: null,
                    _popupStateNode: null,
                    _aroundNode: null,
                    dropDown: null,
                    autoWidth: !0,
                    forceWidth: !1,
                    maxHeight: -1,
                    dropDownPosition: ["below", "above"],
                    _stopClickEvents: !0,
                    _onDropDownMouseDown: function(a) {
                        this.disabled || this.readOnly || ("MSPointerDown" != a.type && a.preventDefault(),
                        this.own(c.once(this.ownerDocument, b.release, d.hitch(this, "_onDropDownMouseUp"))),
                        this.toggleDropDown())
                    },
                    _onDropDownMouseUp: function(b) {
                        var h = this.dropDown
                          , c = !1;
                        if (b && this._opened) {
                            var r = k.position(this._buttonNode, !0);
                            if (!(b.pageX >= r.x && b.pageX <= r.x + r.w && b.pageY >= r.y && b.pageY <= r.y + r.h)) {
                                for (r = b.target; r && !c; )
                                    l.contains(r, "dijitPopup") ? c = !0 : r = r.parentNode;
                                if (c) {
                                    r = b.target;
                                    if (h.onItemClick) {
                                        for (var d; r && !(d = a.byNode(r)); )
                                            r = r.parentNode;
                                        if (d && d.onClick && d.getParent)
                                            d.getParent().onItemClick(d, b)
                                    }
                                    return
                                }
                            }
                        }
                        this._opened ? h.focus && (!1 !== h.autoFocus || "mouseup" == b.type && !this.hovering) && (this._focusDropDownTimer = this.defer(function() {
                            h.focus();
                            delete this._focusDropDownTimer
                        })) : this.focus && this.defer("focus")
                    },
                    _onDropDownClick: function(a) {
                        this._stopClickEvents && (a.stopPropagation(),
                        a.preventDefault())
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        this._buttonNode = this._buttonNode || this.focusNode || this.domNode;
                        this._popupStateNode = this._popupStateNode || this.focusNode || this._buttonNode;
                        var a = {
                            after: this.isLeftToRight() ? "Right" : "Left",
                            before: this.isLeftToRight() ? "Left" : "Right",
                            above: "Up",
                            below: "Down",
                            left: "Left",
                            right: "Right"
                        }[this.dropDownPosition[0]] || this.dropDownPosition[0] || "Down";
                        l.add(this._arrowWrapperNode || this._buttonNode, "dijit" + a + "ArrowButton")
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        var a = this.focusNode || this.domNode;
                        this.own(c(this._buttonNode, b.press, d.hitch(this, "_onDropDownMouseDown")), c(this._buttonNode, "click", d.hitch(this, "_onDropDownClick")), c(a, "keydown", d.hitch(this, "_onKey")), c(a, "keyup", d.hitch(this, "_onKeyUp")))
                    },
                    destroy: function() {
                        this._opened && this.closeDropDown(!0);
                        this.dropDown && (this.dropDown._destroyed || this.dropDown.destroyRecursive(),
                        delete this.dropDown);
                        this.inherited(arguments)
                    },
                    _onKey: function(a) {
                        if (!this.disabled && !this.readOnly) {
                            var b = this.dropDown
                              , h = a.target;
                            b && this._opened && b.handleKey && !1 === b.handleKey(a) ? (a.stopPropagation(),
                            a.preventDefault()) : b && this._opened && a.keyCode == e.ESCAPE ? (this.closeDropDown(),
                            a.stopPropagation(),
                            a.preventDefault()) : !this._opened && (a.keyCode == e.DOWN_ARROW || (a.keyCode == e.ENTER || a.keyCode == e.SPACE && (!this._searchTimer || a.ctrlKey || a.altKey || a.metaKey)) && ("input" !== (h.tagName || "").toLowerCase() || h.type && "text" !== h.type.toLowerCase())) && (this._toggleOnKeyUp = !0,
                            a.stopPropagation(),
                            a.preventDefault())
                        }
                    },
                    _onKeyUp: function() {
                        if (this._toggleOnKeyUp) {
                            delete this._toggleOnKeyUp;
                            this.toggleDropDown();
                            var a = this.dropDown;
                            a && a.focus && this.defer(d.hitch(a, "focus"), 1)
                        }
                    },
                    _onBlur: function() {
                        this.closeDropDown(!1);
                        this.inherited(arguments)
                    },
                    isLoaded: function() {
                        return !0
                    },
                    loadDropDown: function(a) {
                        a()
                    },
                    loadAndOpenDropDown: function() {
                        var a = new p
                          , b = d.hitch(this, function() {
                            this.openDropDown();
                            a.resolve(this.dropDown)
                        });
                        this.isLoaded() ? b() : this.loadDropDown(b);
                        return a
                    },
                    toggleDropDown: function() {
                        this.disabled || this.readOnly || (this._opened ? this.closeDropDown(!0) : this.loadAndOpenDropDown())
                    },
                    openDropDown: function() {
                        var a = this.dropDown
                          , b = a.domNode
                          , h = this._aroundNode || this.domNode
                          , c = this
                          , t = r.open({
                            parent: this,
                            popup: a,
                            around: h,
                            orient: this.dropDownPosition,
                            maxHeight: this.maxHeight,
                            onExecute: function() {
                                c.closeDropDown(!0)
                            },
                            onCancel: function() {
                                c.closeDropDown(!0)
                            },
                            onClose: function() {
                                m.set(c._popupStateNode, "popupActive", !1);
                                l.remove(c._popupStateNode, "dijitHasDropDownOpen");
                                c._set("_opened", !1)
                            }
                        });
                        if (this.forceWidth || this.autoWidth && h.offsetWidth > a._popupWrapper.offsetWidth) {
                            var h = h.offsetWidth - a._popupWrapper.offsetWidth
                              , e = {
                                w: a.domNode.offsetWidth + h
                            };
                            this._origStyle = b.style.cssText;
                            d.isFunction(a.resize) ? a.resize(e) : k.setMarginBox(b, e);
                            "R" == t.corner[1] && (a._popupWrapper.style.left = a._popupWrapper.style.left.replace("px", "") - h + "px")
                        }
                        m.set(this._popupStateNode, "popupActive", "true");
                        l.add(this._popupStateNode, "dijitHasDropDownOpen");
                        this._set("_opened", !0);
                        this._popupStateNode.setAttribute("aria-expanded", "true");
                        this._popupStateNode.setAttribute("aria-owns", a.id);
                        "presentation" === b.getAttribute("role") || b.getAttribute("aria-labelledby") || b.setAttribute("aria-labelledby", this.id);
                        return t
                    },
                    closeDropDown: function(a) {
                        this._focusDropDownTimer && (this._focusDropDownTimer.remove(),
                        delete this._focusDropDownTimer);
                        this._opened && (this._popupStateNode.setAttribute("aria-expanded", "false"),
                        a && this.focus && this.focus(),
                        r.close(this.dropDown),
                        this._opened = !1);
                        this._origStyle && (this.dropDown.domNode.style.cssText = this._origStyle,
                        delete this._origStyle)
                    }
                })
            })
        },
        "dijit/ConfirmDialog": function() {
            define(["dojo/_base/declare", "./Dialog", "./_ConfirmDialogMixin"], function(q, p, n) {
                return q("dijit.ConfirmDialog", [p, n], {})
            })
        },
        "dijit/Dialog": function() {
            define("require dojo/_base/array dojo/aspect dojo/_base/declare dojo/Deferred dojo/dom dojo/dom-class dojo/dom-geometry dojo/dom-style dojo/_base/fx dojo/i18n dojo/keys dojo/_base/lang dojo/on dojo/ready dojo/sniff dojo/touch dojo/window dojo/dnd/Moveable dojo/dnd/TimedMoveable ./focus ./_base/manager ./_Widget ./_TemplatedMixin ./_CssStateMixin ./form/_FormMixin ./_DialogMixin ./DialogUnderlay ./layout/ContentPane ./layout/utils dojo/text!./templates/Dialog.html ./a11yclick dojo/i18n!./nls/common".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A, B, C, E, I, H, F, G, J) {
                function O() {}
                var D = new l;
                D.resolve(!0);
                v = m("dijit._DialogBase" + (t("dojo-bidi") ? "_NoBidi" : ""), [B, E, I, C], {
                    templateString: J,
                    baseClass: "dijitDialog",
                    cssStateNodes: {
                        closeButtonNode: "dijitDialogCloseIcon"
                    },
                    _setTitleAttr: {
                        node: "titleNode",
                        type: "innerHTML"
                    },
                    open: !1,
                    duration: v.defaultDuration,
                    refocus: !0,
                    autofocus: !0,
                    _firstFocusItem: null,
                    _lastFocusItem: null,
                    draggable: !0,
                    _setDraggableAttr: function(a) {
                        this._set("draggable", a)
                    },
                    maxRatio: .9,
                    closable: !0,
                    _setClosableAttr: function(a) {
                        this.closeButtonNode.style.display = a ? "" : "none";
                        this._set("closable", a)
                    },
                    postMixInProperties: function() {
                        var b = c.getLocalization("dijit", "common");
                        a.mixin(this, b);
                        this.inherited(arguments)
                    },
                    postCreate: function() {
                        e.set(this.domNode, {
                            display: "none",
                            position: "absolute"
                        });
                        this.ownerDocumentBody.appendChild(this.domNode);
                        this.inherited(arguments);
                        n.after(this, "onExecute", a.hitch(this, "hide"), !0);
                        n.after(this, "onCancel", a.hitch(this, "hide"), !0);
                        h(this.closeButtonNode, u.press, function(a) {
                            a.stopPropagation()
                        });
                        this._modalconnects = []
                    },
                    onLoad: function() {
                        this.resize();
                        this._position();
                        this.autofocus && L.isTop(this) && (this._getFocusItems(),
                        w.focus(this._firstFocusItem));
                        this.inherited(arguments)
                    },
                    focus: function() {
                        this._getFocusItems();
                        w.focus(this._firstFocusItem)
                    },
                    _endDrag: function() {
                        var a = f.position(this.domNode)
                          , b = x.getBox(this.ownerDocument);
                        a.y = Math.min(Math.max(a.y, 0), b.h - a.h);
                        a.x = Math.min(Math.max(a.x, 0), b.w - a.w);
                        this._relativePosition = a;
                        this._position()
                    },
                    _setup: function() {
                        var b = this.domNode;
                        this.titleBar && this.draggable ? (this._moveable = new (6 == t("ie") ? z : y)(b,{
                            handle: this.titleBar
                        }),
                        n.after(this._moveable, "onMoveStop", a.hitch(this, "_endDrag"), !0)) : g.add(b, "dijitDialogFixed");
                        this.underlayAttrs = {
                            dialogId: this.id,
                            "class": p.map(this["class"].split(/\s/), function(a) {
                                return a + "_underlay"
                            }).join(" "),
                            _onKeyDown: a.hitch(this, "_onKey"),
                            ownerDocument: this.ownerDocument
                        }
                    },
                    _size: function() {
                        this.resize()
                    },
                    _position: function() {
                        if (!g.contains(this.ownerDocumentBody, "dojoMove")) {
                            var a = this.domNode
                              , b = x.getBox(this.ownerDocument)
                              , h = this._relativePosition
                              , c = f.position(a);
                            e.set(a, {
                                left: Math.floor(b.l + (h ? Math.min(h.x, b.w - c.w) : (b.w - c.w) / 2)) + "px",
                                top: Math.floor(b.t + (h ? Math.min(h.y, b.h - c.h) : (b.h - c.h) / 2)) + "px"
                            })
                        }
                    },
                    _onKey: function(a) {
                        if (a.keyCode == b.TAB) {
                            this._getFocusItems();
                            var h = a.target;
                            this._firstFocusItem == this._lastFocusItem ? (a.stopPropagation(),
                            a.preventDefault()) : h == this._firstFocusItem && a.shiftKey ? (w.focus(this._lastFocusItem),
                            a.stopPropagation(),
                            a.preventDefault()) : h != this._lastFocusItem || a.shiftKey || (w.focus(this._firstFocusItem),
                            a.stopPropagation(),
                            a.preventDefault())
                        } else
                            this.closable && a.keyCode == b.ESCAPE && (this.onCancel(),
                            a.stopPropagation(),
                            a.preventDefault())
                    },
                    show: function() {
                        if (this.open)
                            return D.promise;
                        this._started || this.startup();
                        this._alreadyInitialized || (this._setup(),
                        this._alreadyInitialized = !0);
                        this._fadeOutDeferred && (this._fadeOutDeferred.cancel(),
                        L.hide(this));
                        var b = x.get(this.ownerDocument);
                        this._modalconnects.push(h(b, "scroll", a.hitch(this, "resize", null)));
                        this._modalconnects.push(h(this.domNode, "keydown", a.hitch(this, "_onKey")));
                        e.set(this.domNode, {
                            opacity: 0,
                            display: ""
                        });
                        this._set("open", !0);
                        this._onShow();
                        this.resize();
                        this._position();
                        var c;
                        this._fadeInDeferred = new l(a.hitch(this, function() {
                            c.stop();
                            delete this._fadeInDeferred
                        }));
                        this._fadeInDeferred.then(void 0, O);
                        b = this._fadeInDeferred.promise;
                        c = d.fadeIn({
                            node: this.domNode,
                            duration: this.duration,
                            beforeBegin: a.hitch(this, function() {
                                L.show(this, this.underlayAttrs)
                            }),
                            onEnd: a.hitch(this, function() {
                                this.autofocus && L.isTop(this) && (this._getFocusItems(),
                                w.focus(this._firstFocusItem));
                                this._fadeInDeferred.resolve(!0);
                                delete this._fadeInDeferred
                            })
                        }).play();
                        return b
                    },
                    hide: function() {
                        if (!this._alreadyInitialized || !this.open)
                            return D.promise;
                        this._fadeInDeferred && this._fadeInDeferred.cancel();
                        var b;
                        this._fadeOutDeferred = new l(a.hitch(this, function() {
                            b.stop();
                            delete this._fadeOutDeferred
                        }));
                        this._fadeOutDeferred.then(void 0, O);
                        this._fadeOutDeferred.then(a.hitch(this, "onHide"));
                        var h = this._fadeOutDeferred.promise;
                        b = d.fadeOut({
                            node: this.domNode,
                            duration: this.duration,
                            onEnd: a.hitch(this, function() {
                                this.domNode.style.display = "none";
                                L.hide(this);
                                this._fadeOutDeferred.resolve(!0);
                                delete this._fadeOutDeferred
                            })
                        }).play();
                        this._scrollConnected && (this._scrollConnected = !1);
                        for (var c; c = this._modalconnects.pop(); )
                            c.remove();
                        this._relativePosition && delete this._relativePosition;
                        this._set("open", !1);
                        return h
                    },
                    resize: function(a) {
                        if ("none" != this.domNode.style.display) {
                            this._checkIfSingleChild();
                            if (!a) {
                                this._shrunk && (this._singleChild && "undefined" != typeof this._singleChildOriginalStyle && (this._singleChild.domNode.style.cssText = this._singleChildOriginalStyle,
                                delete this._singleChildOriginalStyle),
                                p.forEach([this.domNode, this.containerNode, this.titleBar, this.actionBarNode], function(a) {
                                    a && e.set(a, {
                                        position: "static",
                                        width: "auto",
                                        height: "auto"
                                    })
                                }),
                                this.domNode.style.position = "absolute");
                                var b = x.getBox(this.ownerDocument);
                                b.w *= this.maxRatio;
                                b.h *= this.maxRatio;
                                var h = f.position(this.domNode);
                                h.w >= b.w || h.h >= b.h ? (a = {
                                    w: Math.min(h.w, b.w),
                                    h: Math.min(h.h, b.h)
                                },
                                this._shrunk = !0) : this._shrunk = !1
                            }
                            if (a) {
                                f.setMarginBox(this.domNode, a);
                                b = [];
                                this.titleBar && b.push({
                                    domNode: this.titleBar,
                                    region: "top"
                                });
                                this.actionBarNode && b.push({
                                    domNode: this.actionBarNode,
                                    region: "bottom"
                                });
                                h = {
                                    domNode: this.containerNode,
                                    region: "center"
                                };
                                b.push(h);
                                var c = G.marginBox2contentBox(this.domNode, a);
                                G.layoutChildren(this.domNode, c, b);
                                this._singleChild ? (b = G.marginBox2contentBox(this.containerNode, h),
                                this._singleChild.resize({
                                    w: b.w,
                                    h: b.h
                                })) : (this.containerNode.style.overflow = "auto",
                                this._layoutChildren())
                            } else
                                this._layoutChildren();
                            t("touch") || a || this._position()
                        }
                    },
                    _layoutChildren: function() {
                        p.forEach(this.getChildren(), function(a) {
                            a.resize && a.resize()
                        })
                    },
                    destroy: function() {
                        this._fadeInDeferred && this._fadeInDeferred.cancel();
                        this._fadeOutDeferred && this._fadeOutDeferred.cancel();
                        this._moveable && this._moveable.destroy();
                        for (var a; a = this._modalconnects.pop(); )
                            a.remove();
                        L.hide(this);
                        this.inherited(arguments)
                    }
                });
                t("dojo-bidi") && (v = m("dijit._DialogBase", v, {
                    _setTitleAttr: function(a) {
                        this._set("title", a);
                        this.titleNode.innerHTML = a;
                        this.applyTextDir(this.titleNode)
                    },
                    _setTextDirAttr: function(a) {
                        this._created && this.textDir != a && (this._set("textDir", a),
                        this.set("title", this.title))
                    }
                }));
                var M = m("dijit.Dialog", [F, v], {});
                M._DialogBase = v;
                var L = M._DialogLevelManager = {
                    _beginZIndex: 950,
                    show: function(a, b) {
                        K[K.length - 1].focus = w.curNode;
                        var h = K[K.length - 1].dialog ? K[K.length - 1].zIndex + 2 : M._DialogLevelManager._beginZIndex;
                        e.set(a.domNode, "zIndex", h);
                        H.show(b, h - 1);
                        K.push({
                            dialog: a,
                            underlayAttrs: b,
                            zIndex: h
                        })
                    },
                    hide: function(a) {
                        if (K[K.length - 1].dialog == a) {
                            K.pop();
                            var b = K[K.length - 1];
                            1 == K.length ? H.hide() : H.show(b.underlayAttrs, b.zIndex - 1);
                            if (a.refocus && (a = b.focus,
                            !b.dialog || a && k.isDescendant(a, b.dialog.domNode) || (b.dialog._getFocusItems(),
                            a = b.dialog._firstFocusItem),
                            a))
                                try {
                                    a.focus()
                                } catch (R) {}
                        } else
                            b = p.indexOf(p.map(K, function(a) {
                                return a.dialog
                            }), a),
                            -1 != b && K.splice(b, 1)
                    },
                    isTop: function(a) {
                        return K[K.length - 1].dialog == a
                    }
                }
                  , K = M._dialogStack = [{
                    dialog: null,
                    focus: null,
                    underlayAttrs: null
                }];
                w.watch("curNode", function(a, b, h) {
                    a = K[K.length - 1].dialog;
                    if (h && a && !a._fadeOutDeferred && h.ownerDocument == a.ownerDocument) {
                        do
                            if (h == a.domNode || g.contains(h, "dijitPopup"))
                                return;
                        while (h = h.parentNode);a.focus()
                    }
                });
                t("dijit-legacy-requires") && r(0, function() {
                    q(["dijit/TooltipDialog"])
                });
                return M
            })
        },
        "dijit/_base/manager": function() {
            define(["dojo/_base/array", "dojo/_base/config", "dojo/_base/lang", "../registry", "../main"], function(q, p, n, m, l) {
                var k = {};
                q.forEach("byId getUniqueId findWidgets _destroyAll byNode getEnclosingWidget".split(" "), function(g) {
                    k[g] = m[g]
                });
                n.mixin(k, {
                    defaultDuration: p.defaultDuration || 200
                });
                n.mixin(l, k);
                return l
            })
        },
        "dijit/form/_FormMixin": function() {
            define("dojo/_base/array dojo/_base/declare dojo/_base/kernel dojo/_base/lang dojo/on dojo/window".split(" "), function(q, p, n, m, l, k) {
                return p("dijit.form._FormMixin", null, {
                    state: "",
                    _getDescendantFormWidgets: function(g) {
                        var f = [];
                        q.forEach(g || this.getChildren(), function(e) {
                            "value"in e ? f.push(e) : f = f.concat(this._getDescendantFormWidgets(e.getChildren()))
                        }, this);
                        return f
                    },
                    reset: function() {
                        q.forEach(this._getDescendantFormWidgets(), function(g) {
                            g.reset && g.reset()
                        })
                    },
                    validate: function() {
                        var g = !1;
                        return q.every(q.map(this._getDescendantFormWidgets(), function(f) {
                            f._hasBeenBlurred = !0;
                            var e = f.disabled || !f.validate || f.validate();
                            e || g || (k.scrollIntoView(f.containerNode || f.domNode),
                            f.focus(),
                            g = !0);
                            return e
                        }), function(f) {
                            return f
                        })
                    },
                    setValues: function(g) {
                        n.deprecated(this.declaredClass + "::setValues() is deprecated. Use set('value', val) instead.", "", "2.0");
                        return this.set("value", g)
                    },
                    _setValueAttr: function(g) {
                        var f = {};
                        q.forEach(this._getDescendantFormWidgets(), function(b) {
                            b.name && (f[b.name] || (f[b.name] = [])).push(b)
                        });
                        for (var e in f)
                            if (f.hasOwnProperty(e)) {
                                var d = f[e]
                                  , c = m.getObject(e, !1, g);
                                void 0 !== c && (c = [].concat(c),
                                "boolean" == typeof d[0].checked ? q.forEach(d, function(b) {
                                    b.set("value", -1 != q.indexOf(c, b._get("value")))
                                }) : d[0].multiple ? d[0].set("value", c) : q.forEach(d, function(b, a) {
                                    b.set("value", c[a])
                                }))
                            }
                    },
                    getValues: function() {
                        n.deprecated(this.declaredClass + "::getValues() is deprecated. Use get('value') instead.", "", "2.0");
                        return this.get("value")
                    },
                    _getValueAttr: function() {
                        var g = {};
                        q.forEach(this._getDescendantFormWidgets(), function(f) {
                            var e = f.name;
                            if (e && !f.disabled) {
                                var d = f.get("value");
                                "boolean" == typeof f.checked ? /Radio/.test(f.declaredClass) ? !1 !== d ? m.setObject(e, d, g) : (d = m.getObject(e, !1, g),
                                void 0 === d && m.setObject(e, null, g)) : (f = m.getObject(e, !1, g),
                                f || (f = [],
                                m.setObject(e, f, g)),
                                !1 !== d && f.push(d)) : (f = m.getObject(e, !1, g),
                                "undefined" != typeof f ? m.isArray(f) ? f.push(d) : m.setObject(e, [f, d], g) : m.setObject(e, d, g))
                            }
                        });
                        return g
                    },
                    isValid: function() {
                        return "" == this.state
                    },
                    onValidStateChange: function() {},
                    _getState: function() {
                        var g = q.map(this._descendants, function(f) {
                            return f.get("state") || ""
                        });
                        return 0 <= q.indexOf(g, "Error") ? "Error" : 0 <= q.indexOf(g, "Incomplete") ? "Incomplete" : ""
                    },
                    disconnectChildren: function() {},
                    connectChildren: function(g) {
                        this._descendants = this._getDescendantFormWidgets();
                        q.forEach(this._descendants, function(f) {
                            f._started || f.startup()
                        });
                        g || this._onChildChange()
                    },
                    _onChildChange: function(g) {
                        g && "state" != g && "disabled" != g || this._set("state", this._getState());
                        g && "value" != g && "disabled" != g && "checked" != g || (this._onChangeDelayTimer && this._onChangeDelayTimer.remove(),
                        this._onChangeDelayTimer = this.defer(function() {
                            delete this._onChangeDelayTimer;
                            this._set("value", this.get("value"))
                        }, 10))
                    },
                    startup: function() {
                        this.inherited(arguments);
                        this._descendants = this._getDescendantFormWidgets();
                        this.value = this.get("value");
                        this.state = this._getState();
                        var g = this;
                        this.own(l(this.containerNode, "attrmodified-state, attrmodified-disabled, attrmodified-value, attrmodified-checked", function(f) {
                            f.target != g.domNode && g._onChildChange(f.type.replace("attrmodified-", ""))
                        }));
                        this.watch("state", function(f, e, d) {
                            this.onValidStateChange("" == d)
                        })
                    },
                    destroy: function() {
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/_DialogMixin": function() {
            define(["dojo/_base/declare", "./a11y"], function(q, p) {
                return q("dijit._DialogMixin", null, {
                    actionBarTemplate: "",
                    execute: function() {},
                    onCancel: function() {},
                    onExecute: function() {},
                    _onSubmit: function() {
                        this.onExecute();
                        this.execute(this.get("value"))
                    },
                    _getFocusItems: function() {
                        var n = p._getTabNavigable(this.domNode);
                        this._firstFocusItem = n.lowest || n.first || this.closeButtonNode || this.domNode;
                        this._lastFocusItem = n.last || n.highest || this._firstFocusItem
                    }
                })
            })
        },
        "dijit/DialogUnderlay": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/aspect dojo/dom-attr dojo/dom-style dojo/on dojo/window ./_Widget ./_TemplatedMixin ./BackgroundIframe ./Viewport ./main".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                var a = q("dijit.DialogUnderlay", [f, e], {
                    templateString: "\x3cdiv class\x3d'dijitDialogUnderlayWrapper'\x3e\x3cdiv class\x3d'dijitDialogUnderlay' tabIndex\x3d'-1' data-dojo-attach-point\x3d'node'\x3e\x3c/div\x3e\x3c/div\x3e",
                    dialogId: "",
                    "class": "",
                    _modalConnects: [],
                    _setDialogIdAttr: function(a) {
                        m.set(this.node, "id", a + "_underlay");
                        this._set("dialogId", a)
                    },
                    _setClassAttr: function(a) {
                        this.node.className = "dijitDialogUnderlay " + a;
                        this._set("class", a)
                    },
                    postCreate: function() {
                        this.ownerDocumentBody.appendChild(this.domNode);
                        this.own(k(this.domNode, "keydown", p.hitch(this, "_onKeyDown")));
                        this.inherited(arguments)
                    },
                    layout: function() {
                        var a = this.node.style
                          , b = this.domNode.style;
                        b.display = "none";
                        var c = g.getBox(this.ownerDocument);
                        b.top = c.t + "px";
                        b.left = c.l + "px";
                        a.width = c.w + "px";
                        a.height = c.h + "px";
                        b.display = "block"
                    },
                    show: function() {
                        this.domNode.style.display = "block";
                        this.open = !0;
                        this.layout();
                        this.bgIframe = new d(this.domNode);
                        var a = g.get(this.ownerDocument);
                        this._modalConnects = [c.on("resize", p.hitch(this, "layout")), k(a, "scroll", p.hitch(this, "layout"))]
                    },
                    hide: function() {
                        this.bgIframe.destroy();
                        delete this.bgIframe;
                        for (this.domNode.style.display = "none"; this._modalConnects.length; )
                            this._modalConnects.pop().remove();
                        this.open = !1
                    },
                    destroy: function() {
                        for (; this._modalConnects.length; )
                            this._modalConnects.pop().remove();
                        this.inherited(arguments)
                    },
                    _onKeyDown: function() {}
                });
                a.show = function(h, c) {
                    var r = a._singleton;
                    !r || r._destroyed ? r = b._underlay = a._singleton = new a(h) : h && r.set(h);
                    l.set(r.domNode, "zIndex", c);
                    r.open || r.show()
                }
                ;
                a.hide = function() {
                    var b = a._singleton;
                    b && !b._destroyed && b.hide()
                }
                ;
                return a
            })
        },
        "dijit/layout/ContentPane": function() {
            define("dojo/_base/kernel dojo/_base/lang ../_Widget ../_Container ./_ContentPaneResizeMixin dojo/string dojo/html dojo/_base/array dojo/_base/declare dojo/_base/Deferred dojo/dom dojo/dom-attr dojo/dom-construct dojo/_base/xhr dojo/i18n dojo/when dojo/i18n!../nls/loading".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t) {
                return e("dijit.layout.ContentPane", [n, m, l], {
                    href: "",
                    content: "",
                    extractContent: !1,
                    parseOnLoad: !0,
                    parserScope: q._scopeName,
                    preventCache: !1,
                    preload: !1,
                    refreshOnShow: !1,
                    loadingMessage: "\x3cspan class\x3d'dijitContentPaneLoading'\x3e\x3cspan class\x3d'dijitInline dijitIconLoading'\x3e\x3c/span\x3e${loadingState}\x3c/span\x3e",
                    errorMessage: "\x3cspan class\x3d'dijitContentPaneError'\x3e\x3cspan class\x3d'dijitInline dijitIconError'\x3e\x3c/span\x3e${errorState}\x3c/span\x3e",
                    isLoaded: !1,
                    baseClass: "dijitContentPane",
                    ioArgs: {},
                    onLoadDeferred: null,
                    _setTitleAttr: null,
                    stopParser: !0,
                    template: !1,
                    markupFactory: function(a, b, h) {
                        var c = new h(a,b);
                        return !c.href && c._contentSetter && c._contentSetter.parseDeferred && !c._contentSetter.parseDeferred.isFulfilled() ? c._contentSetter.parseDeferred.then(function() {
                            return c
                        }) : c
                    },
                    create: function(a, b) {
                        if (!(a && a.template || !b || "href"in a || "content"in a)) {
                            b = c.byId(b);
                            for (var h = b.ownerDocument.createDocumentFragment(); b.firstChild; )
                                h.appendChild(b.firstChild);
                            a = p.delegate(a, {
                                content: h
                            })
                        }
                        this.inherited(arguments, [a, b])
                    },
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        var a = r.getLocalization("dijit", "loading", this.lang);
                        this.loadingMessage = k.substitute(this.loadingMessage, a);
                        this.errorMessage = k.substitute(this.errorMessage, a)
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        this.containerNode || (this.containerNode = this.domNode);
                        this.domNode.removeAttribute("title")
                    },
                    startup: function() {
                        this.inherited(arguments);
                        this._contentSetter && f.forEach(this._contentSetter.parseResults, function(a) {
                            a._started || a._destroyed || !p.isFunction(a.startup) || (a.startup(),
                            a._started = !0)
                        }, this)
                    },
                    _startChildren: function() {
                        f.forEach(this.getChildren(), function(a) {
                            a._started || a._destroyed || !p.isFunction(a.startup) || (a.startup(),
                            a._started = !0)
                        });
                        this._contentSetter && f.forEach(this._contentSetter.parseResults, function(a) {
                            a._started || a._destroyed || !p.isFunction(a.startup) || (a.startup(),
                            a._started = !0)
                        }, this)
                    },
                    setHref: function(a) {
                        q.deprecated("dijit.layout.ContentPane.setHref() is deprecated. Use set('href', ...) instead.", "", "2.0");
                        return this.set("href", a)
                    },
                    _setHrefAttr: function(a) {
                        this.cancel();
                        this.onLoadDeferred = new d(p.hitch(this, "cancel"));
                        this.onLoadDeferred.then(p.hitch(this, "onLoad"));
                        this._set("href", a);
                        this.preload || this._created && this._isShown() ? this._load() : this._hrefChanged = !0;
                        return this.onLoadDeferred
                    },
                    setContent: function(a) {
                        q.deprecated("dijit.layout.ContentPane.setContent() is deprecated.  Use set('content', ...) instead.", "", "2.0");
                        this.set("content", a)
                    },
                    _setContentAttr: function(a) {
                        this._set("href", "");
                        this.cancel();
                        this.onLoadDeferred = new d(p.hitch(this, "cancel"));
                        this._created && this.onLoadDeferred.then(p.hitch(this, "onLoad"));
                        this._setContent(a || "");
                        this._isDownloaded = !1;
                        return this.onLoadDeferred
                    },
                    _getContentAttr: function() {
                        return this.containerNode.innerHTML
                    },
                    cancel: function() {
                        this._xhrDfd && -1 == this._xhrDfd.fired && this._xhrDfd.cancel();
                        delete this._xhrDfd;
                        this.onLoadDeferred = null
                    },
                    destroy: function() {
                        this.cancel();
                        this.inherited(arguments)
                    },
                    destroyRecursive: function(a) {
                        this._beingDestroyed || this.inherited(arguments)
                    },
                    _onShow: function() {
                        this.inherited(arguments);
                        if (this.href && !this._xhrDfd && (!this.isLoaded || this._hrefChanged || this.refreshOnShow))
                            return this.refresh()
                    },
                    refresh: function() {
                        this.cancel();
                        this.onLoadDeferred = new d(p.hitch(this, "cancel"));
                        this.onLoadDeferred.then(p.hitch(this, "onLoad"));
                        this._load();
                        return this.onLoadDeferred
                    },
                    _load: function() {
                        this._setContent(this.onDownloadStart(), !0);
                        var a = this
                          , b = {
                            preventCache: this.preventCache || this.refreshOnShow,
                            url: this.href,
                            handleAs: "text"
                        };
                        p.isObject(this.ioArgs) && p.mixin(b, this.ioArgs);
                        var c = this._xhrDfd = (this.ioMethod || h.get)(b), r;
                        c.then(function(b) {
                            r = b;
                            try {
                                return a._isDownloaded = !0,
                                a._setContent(b, !1)
                            } catch (v) {
                                a._onError("Content", v)
                            }
                        }, function(b) {
                            c.canceled || a._onError("Download", b);
                            delete a._xhrDfd;
                            return b
                        }).then(function() {
                            a.onDownloadEnd();
                            delete a._xhrDfd;
                            return r
                        });
                        delete this._hrefChanged
                    },
                    _onLoadHandler: function(a) {
                        this._set("isLoaded", !0);
                        try {
                            this.onLoadDeferred.resolve(a)
                        } catch (x) {
                            console.error("Error " + this.widgetId + " running custom onLoad code: " + x.message)
                        }
                    },
                    _onUnloadHandler: function() {
                        this._set("isLoaded", !1);
                        try {
                            this.onUnload()
                        } catch (u) {
                            console.error("Error " + this.widgetId + " running custom onUnload code: " + u.message)
                        }
                    },
                    destroyDescendants: function(b) {
                        this.isLoaded && this._onUnloadHandler();
                        var h = this._contentSetter;
                        f.forEach(this.getChildren(), function(a) {
                            a.destroyRecursive ? a.destroyRecursive(b) : a.destroy && a.destroy(b);
                            a._destroyed = !0
                        });
                        h && (f.forEach(h.parseResults, function(a) {
                            a._destroyed || (a.destroyRecursive ? a.destroyRecursive(b) : a.destroy && a.destroy(b),
                            a._destroyed = !0)
                        }),
                        delete h.parseResults);
                        b || a.empty(this.containerNode);
                        delete this._singleChild
                    },
                    _setContent: function(a, b) {
                        a = this.preprocessContent(a);
                        this.destroyDescendants();
                        var h = this._contentSetter;
                        h && h instanceof g._ContentSetter || (h = this._contentSetter = new g._ContentSetter({
                            node: this.containerNode,
                            _onError: p.hitch(this, this._onError),
                            onContentError: p.hitch(this, function(a) {
                                a = this.onContentError(a);
                                try {
                                    this.containerNode.innerHTML = a
                                } catch (A) {
                                    console.error("Fatal " + this.id + " could not change content due to " + A.message, A)
                                }
                            })
                        }));
                        var c = p.mixin({
                            cleanContent: this.cleanContent,
                            extractContent: this.extractContent,
                            parseContent: !a.domNode && this.parseOnLoad,
                            parserScope: this.parserScope,
                            startup: !1,
                            dir: this.dir,
                            lang: this.lang,
                            textDir: this.textDir
                        }, this._contentSetterParams || {})
                          , c = h.set(p.isObject(a) && a.domNode ? a.domNode : a, c)
                          , r = this;
                        return t(c && c.then ? c : h.parseDeferred, function() {
                            delete r._contentSetterParams;
                            b || (r._started && (r._startChildren(),
                            r._scheduleLayout()),
                            r._onLoadHandler(a))
                        })
                    },
                    preprocessContent: function(a) {
                        return a
                    },
                    _onError: function(a, b, h) {
                        this.onLoadDeferred.reject(b);
                        a = this["on" + a + "Error"].call(this, b);
                        h ? console.error(h, b) : a && this._setContent(a, !0)
                    },
                    onLoad: function() {},
                    onUnload: function() {},
                    onDownloadStart: function() {
                        return this.loadingMessage
                    },
                    onContentError: function() {},
                    onDownloadError: function() {
                        return this.errorMessage
                    },
                    onDownloadEnd: function() {}
                })
            })
        },
        "dijit/layout/_ContentPaneResizeMixin": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom-class dojo/dom-geometry dojo/dom-style dojo/_base/lang dojo/query ../registry ../Viewport ./utils".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                return p("dijit.layout._ContentPaneResizeMixin", null, {
                    doLayout: !0,
                    isLayoutContainer: !0,
                    startup: function() {
                        if (!this._started) {
                            var c = this.getParent();
                            this._childOfLayoutWidget = c && c.isLayoutContainer;
                            this._needLayout = !this._childOfLayoutWidget;
                            this.inherited(arguments);
                            this._isShown() && this._onShow();
                            this._childOfLayoutWidget || this.own(e.on("resize", k.hitch(this, "resize")))
                        }
                    },
                    _checkIfSingleChild: function() {
                        if (this.doLayout) {
                            var c = []
                              , b = !1;
                            g("\x3e *", this.containerNode).some(function(a) {
                                var h = f.byNode(a);
                                h && h.resize ? c.push(h) : !/script|link|style/i.test(a.nodeName) && a.offsetHeight && (b = !0)
                            });
                            this._singleChild = 1 != c.length || b ? null : c[0];
                            n.toggle(this.containerNode, this.baseClass + "SingleChild", !!this._singleChild)
                        }
                    },
                    resize: function(c, b) {
                        this._resizeCalled = !0;
                        this._scheduleLayout(c, b)
                    },
                    _scheduleLayout: function(c, b) {
                        this._isShown() ? this._layout(c, b) : (this._needLayout = !0,
                        this._changeSize = c,
                        this._resultSize = b)
                    },
                    _layout: function(c, b) {
                        delete this._needLayout;
                        this._wasShown || !1 === this.open || this._onShow();
                        c && m.setMarginBox(this.domNode, c);
                        var a = this.containerNode;
                        if (a === this.domNode) {
                            var h = b || {};
                            k.mixin(h, c || {});
                            "h"in h && "w"in h || (h = k.mixin(m.getMarginBox(a), h));
                            this._contentBox = d.marginBox2contentBox(a, h)
                        } else
                            this._contentBox = m.getContentBox(a);
                        this._layoutChildren()
                    },
                    _layoutChildren: function() {
                        this._checkIfSingleChild();
                        if (this._singleChild && this._singleChild.resize) {
                            var c = this._contentBox || m.getContentBox(this.containerNode);
                            this._singleChild.resize({
                                w: c.w,
                                h: c.h
                            })
                        } else
                            for (var c = this.getChildren(), b, a = 0; b = c[a++]; )
                                b.resize && b.resize()
                    },
                    _isShown: function() {
                        if (this._childOfLayoutWidget)
                            return this._resizeCalled && "open"in this ? this.open : this._resizeCalled;
                        if ("open"in this)
                            return this.open;
                        var c = this.domNode
                          , b = this.domNode.parentNode;
                        return "none" != c.style.display && "hidden" != c.style.visibility && !n.contains(c, "dijitHidden") && b && b.style && "none" != b.style.display
                    },
                    _onShow: function() {
                        this._wasShown = !0;
                        this._needLayout && this._layout(this._changeSize, this._resultSize);
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/layout/utils": function() {
            define(["dojo/_base/array", "dojo/dom-class", "dojo/dom-geometry", "dojo/dom-style", "dojo/_base/lang"], function(q, p, n, m, l) {
                function k(e) {
                    return e.substring(0, 1).toUpperCase() + e.substring(1)
                }
                function g(e, d) {
                    var c = e.resize ? e.resize(d) : n.setMarginBox(e.domNode, d);
                    c ? l.mixin(e, c) : (l.mixin(e, n.getMarginBox(e.domNode)),
                    l.mixin(e, d))
                }
                var f = {
                    marginBox2contentBox: function(e, d) {
                        var c = m.getComputedStyle(e)
                          , b = n.getMarginExtents(e, c)
                          , a = n.getPadBorderExtents(e, c);
                        return {
                            l: m.toPixelValue(e, c.paddingLeft),
                            t: m.toPixelValue(e, c.paddingTop),
                            w: d.w - (b.w + a.w),
                            h: d.h - (b.h + a.h)
                        }
                    },
                    layoutChildren: function(e, d, c, b, a) {
                        d = l.mixin({}, d);
                        p.add(e, "dijitLayoutContainer");
                        c = q.filter(c, function(a) {
                            return "center" != a.region && "client" != a.layoutAlign
                        }).concat(q.filter(c, function(a) {
                            return "center" == a.region || "client" == a.layoutAlign
                        }));
                        q.forEach(c, function(h) {
                            var c = h.domNode
                              , t = h.region || h.layoutAlign;
                            if (!t)
                                throw Error("No region setting for " + h.id);
                            var e = c.style;
                            e.left = d.l + "px";
                            e.top = d.t + "px";
                            e.position = "absolute";
                            p.add(c, "dijitAlign" + k(t));
                            c = {};
                            b && b == h.id && (c["top" == h.region || "bottom" == h.region ? "h" : "w"] = a);
                            "leading" == t && (t = h.isLeftToRight() ? "left" : "right");
                            "trailing" == t && (t = h.isLeftToRight() ? "right" : "left");
                            "top" == t || "bottom" == t ? (c.w = d.w,
                            g(h, c),
                            d.h -= h.h,
                            "top" == t ? d.t += h.h : e.top = d.t + d.h + "px") : "left" == t || "right" == t ? (c.h = d.h,
                            g(h, c),
                            d.w -= h.w,
                            "left" == t ? d.l += h.w : e.left = d.l + d.w + "px") : "client" != t && "center" != t || g(h, d)
                        })
                    }
                };
                l.setObject("dijit.layout.utils", f);
                return f
            })
        },
        "dijit/nls/loading": function() {
            define({
                root: {
                    loadingState: "Loading...",
                    errorState: "Sorry, an error occurred"
                },
                bs: !0,
                mk: !0,
                sr: !0,
                zh: !0,
                "zh-tw": !0,
                uk: !0,
                tr: !0,
                th: !0,
                sv: !0,
                sl: !0,
                sk: !0,
                ru: !0,
                ro: !0,
                pt: !0,
                "pt-pt": !0,
                pl: !0,
                nl: !0,
                nb: !0,
                ko: !0,
                kk: !0,
                ja: !0,
                it: !0,
                id: !0,
                hu: !0,
                hr: !0,
                he: !0,
                fr: !0,
                fi: !0,
                eu: !0,
                es: !0,
                el: !0,
                de: !0,
                da: !0,
                cs: !0,
                ca: !0,
                bg: !0,
                az: !0,
                ar: !0
            })
        },
        "dijit/nls/zh/loading": function() {
            define({
                loadingState: "\u6b63\u5728\u52a0\u8f7d...",
                errorState: "\u5bf9\u4e0d\u8d77\uff0c\u53d1\u751f\u4e86\u9519\u8bef"
            })
        },
        "dijit/nls/common": function() {
            define({
                root: {
                    buttonOk: "OK",
                    buttonCancel: "Cancel",
                    buttonSave: "Save",
                    itemClose: "Close"
                },
                bs: !0,
                mk: !0,
                sr: !0,
                zh: !0,
                "zh-tw": !0,
                uk: !0,
                tr: !0,
                th: !0,
                sv: !0,
                sl: !0,
                sk: !0,
                ru: !0,
                ro: !0,
                pt: !0,
                "pt-pt": !0,
                pl: !0,
                nl: !0,
                nb: !0,
                ko: !0,
                kk: !0,
                ja: !0,
                it: !0,
                id: !0,
                hu: !0,
                hr: !0,
                he: !0,
                fr: !0,
                fi: !0,
                eu: !0,
                es: !0,
                el: !0,
                de: !0,
                da: !0,
                cs: !0,
                ca: !0,
                bg: !0,
                az: !0,
                ar: !0
            })
        },
        "dijit/nls/zh/common": function() {
            define({
                buttonOk: "\u786e\u5b9a",
                buttonCancel: "\u53d6\u6d88",
                buttonSave: "\u4fdd\u5b58",
                itemClose: "\u5173\u95ed"
            })
        },
        "dijit/_ConfirmDialogMixin": function() {
            define(["dojo/_base/declare", "./_WidgetsInTemplateMixin", "dojo/i18n!./nls/common", "dojo/text!./templates/actionBar.html", "./form/Button"], function(q, p, n, m) {
                return q("dijit._ConfirmDialogMixin", p, {
                    actionBarTemplate: m,
                    buttonOk: n.buttonOk,
                    _setButtonOkAttr: {
                        node: "okButton",
                        attribute: "label"
                    },
                    buttonCancel: n.buttonCancel,
                    _setButtonCancelAttr: {
                        node: "cancelButton",
                        attribute: "label"
                    }
                })
            })
        },
        "dijit/_WidgetsInTemplateMixin": function() {
            define(["dojo/_base/array", "dojo/aspect", "dojo/_base/declare", "dojo/_base/lang", "dojo/parser"], function(q, p, n, m, l) {
                return n("dijit._WidgetsInTemplateMixin", null, {
                    _earlyTemplatedStartup: !1,
                    contextRequire: null,
                    _beforeFillContent: function() {
                        if (/dojoType|data-dojo-type/i.test(this.domNode.innerHTML)) {
                            var k = this.domNode;
                            this.containerNode && !this.searchContainerNode && (this.containerNode.stopParser = !0);
                            l.parse(k, {
                                noStart: !this._earlyTemplatedStartup,
                                template: !0,
                                inherited: {
                                    dir: this.dir,
                                    lang: this.lang,
                                    textDir: this.textDir
                                },
                                propsThis: this,
                                contextRequire: this.contextRequire,
                                scope: "dojo"
                            }).then(m.hitch(this, function(g) {
                                this._startupWidgets = g;
                                for (var f = 0; f < g.length; f++)
                                    this._processTemplateNode(g[f], function(e, d) {
                                        return e[d]
                                    }, function(e, d, c) {
                                        return d in e ? e.connect(e, d, c) : e.on(d, c, !0)
                                    });
                                this.containerNode && this.containerNode.stopParser && delete this.containerNode.stopParser
                            }));
                            if (!this._startupWidgets)
                                throw Error(this.declaredClass + ": parser returned unfilled promise (probably waiting for module auto-load), unsupported by _WidgetsInTemplateMixin.   Must pre-load all supporting widgets before instantiation.");
                        }
                    },
                    _processTemplateNode: function(k, g, f) {
                        return g(k, "dojoType") || g(k, "data-dojo-type") ? !0 : this.inherited(arguments)
                    },
                    startup: function() {
                        q.forEach(this._startupWidgets, function(k) {
                            k && !k._started && k.startup && k.startup()
                        });
                        this._startupWidgets = null;
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/ConfirmTooltipDialog": function() {
            define(["dojo/_base/declare", "./TooltipDialog", "./_ConfirmDialogMixin"], function(q, p, n) {
                return q("dijit.ConfirmTooltipDialog", [p, n], {})
            })
        },
        "dijit/TooltipDialog": function() {
            define("dojo/_base/declare dojo/dom-class dojo/has dojo/keys dojo/_base/lang dojo/on ./focus ./layout/ContentPane ./_DialogMixin ./form/_FormMixin ./_TemplatedMixin dojo/text!./templates/TooltipDialog.html ./main".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a) {
                q = q("dijit.TooltipDialog", [f, c, d, e], {
                    title: "",
                    doLayout: !1,
                    autofocus: !0,
                    baseClass: "dijitTooltipDialog",
                    _firstFocusItem: null,
                    _lastFocusItem: null,
                    templateString: b,
                    _setTitleAttr: "containerNode",
                    postCreate: function() {
                        this.inherited(arguments);
                        this.own(k(this.domNode, "keydown", l.hitch(this, "_onKey")))
                    },
                    orient: function(a, b, c) {
                        a = {
                            "MR-ML": "dijitTooltipRight",
                            "ML-MR": "dijitTooltipLeft",
                            "TM-BM": "dijitTooltipAbove",
                            "BM-TM": "dijitTooltipBelow",
                            "BL-TL": "dijitTooltipBelow dijitTooltipABLeft",
                            "TL-BL": "dijitTooltipAbove dijitTooltipABLeft",
                            "BR-TR": "dijitTooltipBelow dijitTooltipABRight",
                            "TR-BR": "dijitTooltipAbove dijitTooltipABRight",
                            "BR-BL": "dijitTooltipRight",
                            "BL-BR": "dijitTooltipLeft",
                            "BR-TL": "dijitTooltipBelow dijitTooltipABLeft",
                            "BL-TR": "dijitTooltipBelow dijitTooltipABRight",
                            "TL-BR": "dijitTooltipAbove dijitTooltipABRight",
                            "TR-BL": "dijitTooltipAbove dijitTooltipABLeft"
                        }[b + "-" + c];
                        p.replace(this.domNode, a, this._currentOrientClass || "");
                        this._currentOrientClass = a
                    },
                    focus: function() {
                        this._getFocusItems();
                        g.focus(this._firstFocusItem)
                    },
                    onOpen: function(a) {
                        this.orient(this.domNode, a.aroundCorner, a.corner);
                        var b = a.aroundNodePos;
                        "M" == a.corner.charAt(0) && "M" == a.aroundCorner.charAt(0) ? (this.connectorNode.style.top = b.y + (b.h - this.connectorNode.offsetHeight >> 1) - a.y + "px",
                        this.connectorNode.style.left = "") : "M" == a.corner.charAt(1) && "M" == a.aroundCorner.charAt(1) && (this.connectorNode.style.left = b.x + (b.w - this.connectorNode.offsetWidth >> 1) - a.x + "px");
                        this._onShow()
                    },
                    onClose: function() {
                        this.onHide()
                    },
                    _onKey: function(a) {
                        if (a.keyCode == m.ESCAPE)
                            this.defer("onCancel"),
                            a.stopPropagation(),
                            a.preventDefault();
                        else if (a.keyCode == m.TAB) {
                            var b = a.target;
                            this._getFocusItems();
                            this._firstFocusItem == this._lastFocusItem ? (a.stopPropagation(),
                            a.preventDefault()) : b == this._firstFocusItem && a.shiftKey ? (g.focus(this._lastFocusItem),
                            a.stopPropagation(),
                            a.preventDefault()) : b != this._lastFocusItem || a.shiftKey ? a.stopPropagation() : (g.focus(this._firstFocusItem),
                            a.stopPropagation(),
                            a.preventDefault())
                        }
                    }
                });
                n("dojo-bidi") && q.extend({
                    _setTitleAttr: function(a) {
                        this.containerNode.title = this.textDir && this.enforceTextDirWithUcc ? this.enforceTextDirWithUcc(null, a) : a;
                        this._set("title", a)
                    },
                    _setTextDirAttr: function(a) {
                        this._created && this.textDir == a || (this._set("textDir", a),
                        this.textDir && this.title && (this.containerNode.title = this.enforceTextDirWithUcc(null, this.title)))
                    }
                });
                return q
            })
        },
        "dijit/DropDownMenu": function() {
            define(["dojo/_base/declare", "dojo/keys", "dojo/text!./templates/Menu.html", "./_MenuBase"], function(q, p, n, m) {
                return q("dijit.DropDownMenu", m, {
                    templateString: n,
                    baseClass: "dijitMenu",
                    _onUpArrow: function() {
                        this.focusPrev()
                    },
                    _onDownArrow: function() {
                        this.focusNext()
                    },
                    _onRightArrow: function(l) {
                        this._moveToPopup(l);
                        l.stopPropagation();
                        l.preventDefault()
                    },
                    _onLeftArrow: function(l) {
                        if (this.parentMenu)
                            if (this.parentMenu._isMenuBar)
                                this.parentMenu.focusPrev();
                            else
                                this.onCancel(!1);
                        else
                            l.stopPropagation(),
                            l.preventDefault()
                    }
                })
            })
        },
        "dijit/_MenuBase": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom dojo/dom-attr dojo/dom-class dojo/_base/lang dojo/mouse dojo/on dojo/window ./a11yclick ./registry ./_Widget ./_CssStateMixin ./_KeyNavContainer ./_TemplatedMixin".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r) {
                return p("dijit._MenuBase", [b, r, h, a], {
                    selected: null,
                    _setSelectedAttr: function(a) {
                        this.selected != a && (this.selected && (this.selected._setSelected(!1),
                        this._onChildDeselect(this.selected)),
                        a && a._setSelected(!0),
                        this._set("selected", a))
                    },
                    activated: !1,
                    _setActivatedAttr: function(a) {
                        l.toggle(this.domNode, "dijitMenuActive", a);
                        l.toggle(this.domNode, "dijitMenuPassive", !a);
                        this._set("activated", a)
                    },
                    parentMenu: null,
                    popupDelay: 500,
                    passivePopupDelay: Infinity,
                    autoFocus: !1,
                    childSelector: function(a) {
                        var b = c.byNode(a);
                        return a.parentNode == this.containerNode && b && b.focus
                    },
                    postCreate: function() {
                        var a = this
                          , b = "string" == typeof this.childSelector ? this.childSelector : k.hitch(this, "childSelector");
                        this.own(f(this.containerNode, f.selector(b, g.enter), function() {
                            a.onItemHover(c.byNode(this))
                        }), f(this.containerNode, f.selector(b, g.leave), function() {
                            a.onItemUnhover(c.byNode(this))
                        }), f(this.containerNode, f.selector(b, d), function(b) {
                            a.onItemClick(c.byNode(this), b);
                            b.stopPropagation()
                        }), f(this.containerNode, f.selector(b, "focusin"), function() {
                            a._onItemFocus(c.byNode(this))
                        }));
                        this.inherited(arguments)
                    },
                    onKeyboardSearch: function(a, b, h, c) {
                        this.inherited(arguments);
                        if (a && (-1 == c || a.popup && 1 == c))
                            this.onItemClick(a, b)
                    },
                    _keyboardSearchCompare: function(a, b) {
                        return a.shortcutKey ? b == a.shortcutKey.toLowerCase() ? -1 : 0 : this.inherited(arguments) ? 1 : 0
                    },
                    onExecute: function() {},
                    onCancel: function() {},
                    _moveToPopup: function(a) {
                        if (this.focusedChild && this.focusedChild.popup && !this.focusedChild.disabled)
                            this.onItemClick(this.focusedChild, a);
                        else
                            (a = this._getTopMenu()) && a._isMenuBar && a.focusNext()
                    },
                    _onPopupHover: function() {
                        this.set("selected", this.currentPopupItem);
                        this._stopPendingCloseTimer()
                    },
                    onItemHover: function(a) {
                        this.activated ? (this.set("selected", a),
                        !a.popup || a.disabled || this.hover_timer || (this.hover_timer = this.defer(function() {
                            this._openItemPopup(a)
                        }, this.popupDelay))) : Infinity > this.passivePopupDelay && (this.passive_hover_timer && this.passive_hover_timer.remove(),
                        this.passive_hover_timer = this.defer(function() {
                            this.onItemClick(a, {
                                type: "click"
                            })
                        }, this.passivePopupDelay));
                        this._hoveredChild = a;
                        a._set("hovering", !0)
                    },
                    _onChildDeselect: function(a) {
                        this._stopPopupTimer();
                        this.currentPopupItem == a && (this._stopPendingCloseTimer(),
                        this._pendingClose_timer = this.defer(function() {
                            this.currentPopupItem = this._pendingClose_timer = null;
                            a._closePopup()
                        }, this.popupDelay))
                    },
                    onItemUnhover: function(a) {
                        this._hoveredChild == a && (this._hoveredChild = null);
                        this.passive_hover_timer && (this.passive_hover_timer.remove(),
                        this.passive_hover_timer = null);
                        a._set("hovering", !1)
                    },
                    _stopPopupTimer: function() {
                        this.hover_timer && (this.hover_timer = this.hover_timer.remove())
                    },
                    _stopPendingCloseTimer: function() {
                        this._pendingClose_timer && (this._pendingClose_timer = this._pendingClose_timer.remove())
                    },
                    _getTopMenu: function() {
                        for (var a = this; a.parentMenu; a = a.parentMenu)
                            ;
                        return a
                    },
                    onItemClick: function(a, b) {
                        this.passive_hover_timer && this.passive_hover_timer.remove();
                        this.focusChild(a);
                        if (a.disabled)
                            return !1;
                        if (a.popup) {
                            this.set("selected", a);
                            this.set("activated", !0);
                            var h = /^key/.test(b._origType || b.type) || 0 == b.clientX && 0 == b.clientY;
                            this._openItemPopup(a, h)
                        } else
                            this.onExecute(),
                            a._onClick ? a._onClick(b) : a.onClick(b)
                    },
                    _openItemPopup: function(a, b) {
                        if (a != this.currentPopupItem) {
                            this.currentPopupItem && (this._stopPendingCloseTimer(),
                            this.currentPopupItem._closePopup());
                            this._stopPopupTimer();
                            var h = a.popup;
                            h.parentMenu = this;
                            this.own(this._mouseoverHandle = f.once(h.domNode, "mouseover", k.hitch(this, "_onPopupHover")));
                            var c = this;
                            a._openPopup({
                                parent: this,
                                orient: this._orient || ["after", "before"],
                                onCancel: function() {
                                    b && c.focusChild(a);
                                    c._cleanUp()
                                },
                                onExecute: k.hitch(this, "_cleanUp", !0),
                                onClose: function() {
                                    c._mouseoverHandle && (c._mouseoverHandle.remove(),
                                    delete c._mouseoverHandle)
                                }
                            }, b);
                            this.currentPopupItem = a
                        }
                    },
                    onOpen: function() {
                        this.isShowingNow = !0;
                        this.set("activated", !0)
                    },
                    onClose: function() {
                        this.set("activated", !1);
                        this.set("selected", null);
                        this.isShowingNow = !1;
                        this.parentMenu = null
                    },
                    _closeChild: function() {
                        this._stopPopupTimer();
                        this.currentPopupItem && (this.focused && (m.set(this.selected.focusNode, "tabIndex", this.tabIndex),
                        this.selected.focusNode.focus()),
                        this.currentPopupItem._closePopup(),
                        this.currentPopupItem = null)
                    },
                    _onItemFocus: function(a) {
                        if (this._hoveredChild && this._hoveredChild != a)
                            this.onItemUnhover(this._hoveredChild);
                        this.set("selected", a)
                    },
                    _onBlur: function() {
                        this._cleanUp(!0);
                        this.inherited(arguments)
                    },
                    _cleanUp: function(a) {
                        this._closeChild();
                        "undefined" == typeof this.isShowingNow && this.set("activated", !1);
                        a && this.set("selected", null)
                    }
                })
            })
        },
        "dijit/_KeyNavContainer": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom-attr dojo/_base/kernel dojo/keys dojo/_base/lang ./registry ./_Container ./_FocusMixin ./_KeyNavMixin".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                return p("dijit._KeyNavContainer", [e, d, f], {
                    connectKeyNavHandlers: function(c, b) {
                        var a = this._keyNavCodes = {}
                          , h = k.hitch(this, "focusPrev")
                          , r = k.hitch(this, "focusNext");
                        q.forEach(c, function(b) {
                            a[b] = h
                        });
                        q.forEach(b, function(b) {
                            a[b] = r
                        });
                        a[l.HOME] = k.hitch(this, "focusFirstChild");
                        a[l.END] = k.hitch(this, "focusLastChild")
                    },
                    startupKeyNavChildren: function() {
                        m.deprecated("startupKeyNavChildren() call no longer needed", "", "2.0")
                    },
                    startup: function() {
                        this.inherited(arguments);
                        q.forEach(this.getChildren(), k.hitch(this, "_startupChild"))
                    },
                    addChild: function(c, b) {
                        this.inherited(arguments);
                        this._startupChild(c)
                    },
                    _startupChild: function(c) {
                        c.set("tabIndex", "-1")
                    },
                    _getFirst: function() {
                        var c = this.getChildren();
                        return c.length ? c[0] : null
                    },
                    _getLast: function() {
                        var c = this.getChildren();
                        return c.length ? c[c.length - 1] : null
                    },
                    focusNext: function() {
                        this.focusChild(this._getNextFocusableChild(this.focusedChild, 1))
                    },
                    focusPrev: function() {
                        this.focusChild(this._getNextFocusableChild(this.focusedChild, -1), !0)
                    },
                    childSelector: function(c) {
                        return (c = g.byNode(c)) && c.getParent() == this
                    }
                })
            })
        },
        "dijit/_KeyNavMixin": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom-attr dojo/keys dojo/_base/lang dojo/on dijit/registry dijit/_FocusMixin".split(" "), function(q, p, n, m, l, k, g, f) {
                return p("dijit._KeyNavMixin", f, {
                    tabIndex: "0",
                    childSelector: null,
                    postCreate: function() {
                        this.inherited(arguments);
                        n.set(this.domNode, "tabIndex", this.tabIndex);
                        if (!this._keyNavCodes) {
                            var e = this._keyNavCodes = {};
                            e[m.HOME] = l.hitch(this, "focusFirstChild");
                            e[m.END] = l.hitch(this, "focusLastChild");
                            e[this.isLeftToRight() ? m.LEFT_ARROW : m.RIGHT_ARROW] = l.hitch(this, "_onLeftArrow");
                            e[this.isLeftToRight() ? m.RIGHT_ARROW : m.LEFT_ARROW] = l.hitch(this, "_onRightArrow");
                            e[m.UP_ARROW] = l.hitch(this, "_onUpArrow");
                            e[m.DOWN_ARROW] = l.hitch(this, "_onDownArrow")
                        }
                        var d = this
                          , e = "string" == typeof this.childSelector ? this.childSelector : l.hitch(this, "childSelector");
                        this.own(k(this.domNode, "keypress", l.hitch(this, "_onContainerKeypress")), k(this.domNode, "keydown", l.hitch(this, "_onContainerKeydown")), k(this.domNode, "focus", l.hitch(this, "_onContainerFocus")), k(this.containerNode, k.selector(e, "focusin"), function(c) {
                            d._onChildFocus(g.getEnclosingWidget(this), c)
                        }))
                    },
                    _onLeftArrow: function() {},
                    _onRightArrow: function() {},
                    _onUpArrow: function() {},
                    _onDownArrow: function() {},
                    focus: function() {
                        this.focusFirstChild()
                    },
                    _getFirstFocusableChild: function() {
                        return this._getNextFocusableChild(null, 1)
                    },
                    _getLastFocusableChild: function() {
                        return this._getNextFocusableChild(null, -1)
                    },
                    focusFirstChild: function() {
                        this.focusChild(this._getFirstFocusableChild())
                    },
                    focusLastChild: function() {
                        this.focusChild(this._getLastFocusableChild())
                    },
                    focusChild: function(e, d) {
                        e && (this.focusedChild && e !== this.focusedChild && this._onChildBlur(this.focusedChild),
                        e.set("tabIndex", this.tabIndex),
                        e.focus(d ? "end" : "start"))
                    },
                    _onContainerFocus: function(e) {
                        e.target !== this.domNode || this.focusedChild || this.focus()
                    },
                    _onFocus: function() {
                        n.set(this.domNode, "tabIndex", "-1");
                        this.inherited(arguments)
                    },
                    _onBlur: function(e) {
                        n.set(this.domNode, "tabIndex", this.tabIndex);
                        this.focusedChild && (this.focusedChild.set("tabIndex", "-1"),
                        this.lastFocusedChild = this.focusedChild,
                        this._set("focusedChild", null));
                        this.inherited(arguments)
                    },
                    _onChildFocus: function(e) {
                        e && e != this.focusedChild && (this.focusedChild && !this.focusedChild._destroyed && this.focusedChild.set("tabIndex", "-1"),
                        e.set("tabIndex", this.tabIndex),
                        this.lastFocused = e,
                        this._set("focusedChild", e))
                    },
                    _searchString: "",
                    multiCharSearchDuration: 1E3,
                    onKeyboardSearch: function(e, d, c, b) {
                        e && this.focusChild(e)
                    },
                    _keyboardSearchCompare: function(e, d) {
                        var c = e.domNode
                          , c = (e.label || (c.focusNode ? c.focusNode.label : "") || c.innerText || c.textContent || "").replace(/^\s+/, "").substr(0, d.length).toLowerCase();
                        return d.length && c == d ? -1 : 0
                    },
                    _onContainerKeydown: function(e) {
                        var d = this._keyNavCodes[e.keyCode];
                        d ? (d(e, this.focusedChild),
                        e.stopPropagation(),
                        e.preventDefault(),
                        this._searchString = "") : e.keyCode != m.SPACE || !this._searchTimer || e.ctrlKey || e.altKey || e.metaKey || (e.stopImmediatePropagation(),
                        e.preventDefault(),
                        this._keyboardSearch(e, " "))
                    },
                    _onContainerKeypress: function(e) {
                        e.charCode <= m.SPACE || e.ctrlKey || e.altKey || e.metaKey || (e.preventDefault(),
                        e.stopPropagation(),
                        this._keyboardSearch(e, String.fromCharCode(e.charCode).toLowerCase()))
                    },
                    _keyboardSearch: function(e, d) {
                        var c = null, b, a = 0;
                        l.hitch(this, function() {
                            this._searchTimer && this._searchTimer.remove();
                            this._searchString += d;
                            var h = /^(.)\1*$/.test(this._searchString) ? 1 : this._searchString.length;
                            b = this._searchString.substr(0, h);
                            this._searchTimer = this.defer(function() {
                                this._searchTimer = null;
                                this._searchString = ""
                            }, this.multiCharSearchDuration);
                            var r = this.focusedChild || null;
                            if (1 == h || !r)
                                if (r = this._getNextFocusableChild(r, 1),
                                !r)
                                    return;
                            h = r;
                            do {
                                var e = this._keyboardSearchCompare(r, b);
                                e && 0 == a++ && (c = r);
                                if (-1 == e) {
                                    a = -1;
                                    break
                                }
                                r = this._getNextFocusableChild(r, 1)
                            } while (r && r != h)
                        })();
                        this.onKeyboardSearch(c, e, b, a)
                    },
                    _onChildBlur: function() {},
                    _getNextFocusableChild: function(e, d) {
                        var c = e;
                        do {
                            if (e)
                                e = this._getNext(e, d);
                            else if (e = this[0 < d ? "_getFirst" : "_getLast"](),
                            !e)
                                break;
                            if (null != e && e != c && e.isFocusable())
                                return e
                        } while (e != c);return null
                    },
                    _getFirst: function() {
                        return null
                    },
                    _getLast: function() {
                        return null
                    },
                    _getNext: function(e, d) {
                        if (e)
                            for (e = e.domNode; e; )
                                if ((e = e[0 > d ? "previousSibling" : "nextSibling"]) && "getAttribute"in e) {
                                    var c = g.byNode(e);
                                    if (c)
                                        return c
                                }
                        return null
                    }
                })
            })
        },
        "dijit/Menu": function() {
            define("require dojo/_base/array dojo/_base/declare dojo/dom dojo/dom-attr dojo/dom-geometry dojo/dom-style dojo/keys dojo/_base/lang dojo/on dojo/sniff dojo/_base/window dojo/window ./popup ./DropDownMenu dojo/ready".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t) {
                c("dijit-legacy-requires") && t(0, function() {
                    q(["dijit/MenuItem", "dijit/PopupMenuItem", "dijit/CheckedMenuItem", "dijit/MenuSeparator"])
                });
                return n("dijit.Menu", r, {
                    constructor: function() {
                        this._bindings = []
                    },
                    targetNodeIds: [],
                    selector: "",
                    contextMenuForWindow: !1,
                    leftClickToOpen: !1,
                    refocus: !0,
                    postCreate: function() {
                        this.contextMenuForWindow ? this.bindDomNode(this.ownerDocumentBody) : p.forEach(this.targetNodeIds, this.bindDomNode, this);
                        this.inherited(arguments)
                    },
                    _iframeContentWindow: function(b) {
                        return a.get(this._iframeContentDocument(b)) || this._iframeContentDocument(b).__parent__ || b.name && document.frames[b.name] || null
                    },
                    _iframeContentDocument: function(a) {
                        return a.contentDocument || a.contentWindow && a.contentWindow.document || a.name && document.frames[a.name] && document.frames[a.name].document || null
                    },
                    bindDomNode: function(a) {
                        a = m.byId(a, this.ownerDocument);
                        var h;
                        if ("iframe" == a.tagName.toLowerCase()) {
                            var c = a;
                            h = this._iframeContentWindow(c);
                            h = b.body(h.document)
                        } else
                            h = a == b.body(this.ownerDocument) ? this.ownerDocument.documentElement : a;
                        var r = {
                            node: a,
                            iframe: c
                        };
                        l.set(a, "_dijitMenu" + this.id, this._bindings.push(r));
                        var t = e.hitch(this, function(a) {
                            var b = this.selector
                              , h = b ? function(a) {
                                return d.selector(b, a)
                            }
                            : function(a) {
                                return a
                            }
                              , r = this;
                            return [d(a, h(this.leftClickToOpen ? "click" : "contextmenu"), function(a) {
                                a.stopPropagation();
                                a.preventDefault();
                                (new Date).getTime() < r._lastKeyDown + 500 || r._scheduleOpen(this, c, {
                                    x: a.pageX,
                                    y: a.pageY
                                }, a.target)
                            }), d(a, h("keydown"), function(a) {
                                if (93 == a.keyCode || a.shiftKey && a.keyCode == f.F10 || r.leftClickToOpen && a.keyCode == f.SPACE)
                                    a.stopPropagation(),
                                    a.preventDefault(),
                                    r._scheduleOpen(this, c, null, a.target),
                                    r._lastKeyDown = (new Date).getTime()
                            })]
                        });
                        r.connects = h ? t(h) : [];
                        c && (r.onloadHandler = e.hitch(this, function() {
                            var a = this._iframeContentWindow(c)
                              , a = b.body(a.document);
                            r.connects = t(a)
                        }),
                        c.addEventListener ? c.addEventListener("load", r.onloadHandler, !1) : c.attachEvent("onload", r.onloadHandler))
                    },
                    unBindDomNode: function(a) {
                        var b;
                        try {
                            b = m.byId(a, this.ownerDocument)
                        } catch (v) {
                            return
                        }
                        a = "_dijitMenu" + this.id;
                        if (b && l.has(b, a)) {
                            for (var h = l.get(b, a) - 1, c = this._bindings[h], r; r = c.connects.pop(); )
                                r.remove();
                            (r = c.iframe) && (r.removeEventListener ? r.removeEventListener("load", c.onloadHandler, !1) : r.detachEvent("onload", c.onloadHandler));
                            l.remove(b, a);
                            delete this._bindings[h]
                        }
                    },
                    _scheduleOpen: function(a, b, h, c) {
                        this._openTimer || (this._openTimer = this.defer(function() {
                            delete this._openTimer;
                            this._openMyself({
                                target: c,
                                delegatedTarget: a,
                                iframe: b,
                                coords: h
                            })
                        }, 1))
                    },
                    _openMyself: function(a) {
                        function b() {
                            n.refocus && p && p.focus();
                            h.close(n)
                        }
                        var r = a.target
                          , d = a.iframe
                          , e = a.coords
                          , t = !e;
                        this.currentTarget = a.delegatedTarget;
                        if (e) {
                            if (d) {
                                a = k.position(d, !0);
                                var r = this._iframeContentWindow(d)
                                  , r = k.docScroll(r.document)
                                  , f = g.getComputedStyle(d)
                                  , u = g.toPixelValue
                                  , l = (c("ie") && c("quirks") ? 0 : u(d, f.paddingLeft)) + (c("ie") && c("quirks") ? u(d, f.borderLeftWidth) : 0)
                                  , d = (c("ie") && c("quirks") ? 0 : u(d, f.paddingTop)) + (c("ie") && c("quirks") ? u(d, f.borderTopWidth) : 0);
                                e.x += a.x + l - r.x;
                                e.y += a.y + d - r.y
                            }
                        } else
                            e = k.position(r, !0),
                            e.x += 10,
                            e.y += 10;
                        var n = this
                          , d = this._focusManager.get("prevNode");
                        a = this._focusManager.get("curNode");
                        var p = !a || m.isDescendant(a, this.domNode) ? d : a;
                        h.open({
                            popup: this,
                            x: e.x,
                            y: e.y,
                            onExecute: b,
                            onCancel: b,
                            orient: this.isLeftToRight() ? "L" : "R"
                        });
                        this.focus();
                        t || this.defer(function() {
                            this._cleanUp(!0)
                        });
                        this._onBlur = function() {
                            this.inherited("_onBlur", arguments);
                            h.close(this)
                        }
                    },
                    destroy: function() {
                        p.forEach(this._bindings, function(a) {
                            a && this.unBindDomNode(a.node)
                        }, this);
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/MenuItem": function() {
            define("dojo/_base/declare dojo/dom dojo/dom-attr dojo/dom-class dojo/_base/kernel dojo/sniff dojo/_base/lang ./_Widget ./_TemplatedMixin ./_Contained ./_CssStateMixin dojo/text!./templates/MenuItem.html".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                g = q("dijit.MenuItem" + (k("dojo-bidi") ? "_NoBidi" : ""), [f, e, d, c], {
                    templateString: b,
                    baseClass: "dijitMenuItem",
                    label: "",
                    _setLabelAttr: function(a) {
                        this._set("label", a);
                        var b = "", c;
                        c = a.search(/{\S}/);
                        if (0 <= c) {
                            var b = a.charAt(c + 1)
                              , d = a.substr(0, c);
                            a = a.substr(c + 3);
                            c = d + b + a;
                            a = d + '\x3cspan class\x3d"dijitMenuItemShortcutKey"\x3e' + b + "\x3c/span\x3e" + a
                        } else
                            c = a;
                        this.domNode.setAttribute("aria-label", c + " " + this.accelKey);
                        this.containerNode.innerHTML = a;
                        this._set("shortcutKey", b)
                    },
                    iconClass: "dijitNoIcon",
                    _setIconClassAttr: {
                        node: "iconNode",
                        type: "class"
                    },
                    accelKey: "",
                    disabled: !1,
                    _fillContent: function(a) {
                        !a || "label"in this.params || this._set("label", a.innerHTML)
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        n.set(this.containerNode, "id", this.id + "_text");
                        this.accelKeyNode && n.set(this.accelKeyNode, "id", this.id + "_accel");
                        p.setSelectable(this.domNode, !1)
                    },
                    onClick: function() {},
                    focus: function() {
                        try {
                            8 == k("ie") && this.containerNode.focus(),
                            this.focusNode.focus()
                        } catch (a) {}
                    },
                    _setSelected: function(a) {
                        m.toggle(this.domNode, "dijitMenuItemSelected", a)
                    },
                    setLabel: function(a) {
                        l.deprecated("dijit.MenuItem.setLabel() is deprecated.  Use set('label', ...) instead.", "", "2.0");
                        this.set("label", a)
                    },
                    setDisabled: function(a) {
                        l.deprecated("dijit.Menu.setDisabled() is deprecated.  Use set('disabled', bool) instead.", "", "2.0");
                        this.set("disabled", a)
                    },
                    _setDisabledAttr: function(a) {
                        this.focusNode.setAttribute("aria-disabled", a ? "true" : "false");
                        this._set("disabled", a)
                    },
                    _setAccelKeyAttr: function(a) {
                        this.accelKeyNode && (this.accelKeyNode.style.display = a ? "" : "none",
                        this.accelKeyNode.innerHTML = a,
                        n.set(this.containerNode, "colSpan", a ? "1" : "2"));
                        this._set("accelKey", a)
                    }
                });
                k("dojo-bidi") && (g = q("dijit.MenuItem", g, {
                    _setLabelAttr: function(a) {
                        this.inherited(arguments);
                        "auto" === this.textDir && this.applyTextDir(this.textDirNode)
                    }
                }));
                return g
            })
        },
        "dijit/_Contained": function() {
            define(["dojo/_base/declare", "./registry"], function(q, p) {
                return q("dijit._Contained", null, {
                    _getSibling: function(n) {
                        var m = this.getParent();
                        return m && m._getSiblingOfChild && m._getSiblingOfChild(this, "previous" == n ? -1 : 1) || null
                    },
                    getPreviousSibling: function() {
                        return this._getSibling("previous")
                    },
                    getNextSibling: function() {
                        return this._getSibling("next")
                    },
                    getIndexInParent: function() {
                        var n = this.getParent();
                        return n && n.getIndexOfChild ? n.getIndexOfChild(this) : -1
                    }
                })
            })
        },
        "dijit/MenuSeparator": function() {
            define("dojo/_base/declare dojo/dom ./_WidgetBase ./_TemplatedMixin ./_Contained dojo/text!./templates/MenuSeparator.html".split(" "), function(q, p, n, m, l, k) {
                return q("dijit.MenuSeparator", [n, m, l], {
                    templateString: k,
                    buildRendering: function() {
                        this.inherited(arguments);
                        p.setSelectable(this.domNode, !1)
                    },
                    isFocusable: function() {
                        return !1
                    }
                })
            })
        },
        "dijit/TitlePane": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom dojo/dom-attr dojo/dom-class dojo/dom-geometry dojo/fx dojo/has dojo/_base/kernel dojo/keys ./_CssStateMixin ./_TemplatedMixin ./layout/ContentPane dojo/text!./templates/TitlePane.html ./_base/manager ./a11yclick".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r) {
                p = p("dijit.TitlePane", [a, b, c], {
                    title: "",
                    _setTitleAttr: {
                        node: "titleNode",
                        type: "innerHTML"
                    },
                    open: !0,
                    toggleable: !0,
                    tabIndex: "0",
                    duration: r.defaultDuration,
                    baseClass: "dijitTitlePane",
                    templateString: h,
                    doLayout: !1,
                    _setTooltipAttr: {
                        node: "focusNode",
                        type: "attribute",
                        attribute: "title"
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        n.setSelectable(this.titleNode, !1)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this.toggleable && this._trackMouseState(this.titleBarNode, this.baseClass + "Title");
                        var a = this.hideNode
                          , b = this.wipeNode;
                        this._wipeIn = g.wipeIn({
                            node: b,
                            duration: this.duration,
                            beforeBegin: function() {
                                a.style.display = ""
                            }
                        });
                        this._wipeOut = g.wipeOut({
                            node: b,
                            duration: this.duration,
                            onEnd: function() {
                                a.style.display = "none"
                            }
                        })
                    },
                    _setOpenAttr: function(a, b) {
                        q.forEach([this._wipeIn, this._wipeOut], function(a) {
                            a && "playing" == a.status() && a.stop()
                        });
                        b ? this[a ? "_wipeIn" : "_wipeOut"].play() : this.hideNode.style.display = this.wipeNode.style.display = a ? "" : "none";
                        if (this._started)
                            if (a)
                                this._onShow();
                            else
                                this.onHide();
                        this.containerNode.setAttribute("aria-hidden", a ? "false" : "true");
                        this.focusNode.setAttribute("aria-pressed", a ? "true" : "false");
                        this._set("open", a);
                        this._setCss()
                    },
                    _setToggleableAttr: function(a) {
                        this.focusNode.setAttribute("role", a ? "button" : "heading");
                        a ? (this.focusNode.setAttribute("aria-controls", this.id + "_pane"),
                        this.focusNode.setAttribute("tabIndex", this.tabIndex),
                        this.focusNode.setAttribute("aria-pressed", this.open)) : (m.remove(this.focusNode, "aria-controls"),
                        m.remove(this.focusNode, "tabIndex"),
                        m.remove(this.focusNode, "aria-pressed"));
                        this._set("toggleable", a);
                        this._setCss()
                    },
                    _setContentAttr: function(a) {
                        this.open && this._wipeOut && "playing" != this._wipeOut.status() ? (this._wipeIn && "playing" == this._wipeIn.status() && this._wipeIn.stop(),
                        k.setMarginBox(this.wipeNode, {
                            h: k.getMarginBox(this.wipeNode).h
                        }),
                        this.inherited(arguments),
                        this._wipeIn ? this._wipeIn.play() : this.hideNode.style.display = "") : this.inherited(arguments)
                    },
                    toggle: function() {
                        this._setOpenAttr(!this.open, !0)
                    },
                    _setCss: function() {
                        var a = this.titleBarNode || this.focusNode
                          , b = this._titleBarClass;
                        this._titleBarClass = this.baseClass + "Title" + (this.toggleable ? "" : "Fixed") + (this.open ? "Open" : "Closed");
                        l.replace(a, this._titleBarClass, b || "");
                        l.replace(a, this._titleBarClass.replace("TitlePaneTitle", ""), (b || "").replace("TitlePaneTitle", ""));
                        this.arrowNodeInner.innerHTML = this.open ? "-" : "+"
                    },
                    _onTitleKey: function(a) {
                        a.keyCode == d.DOWN_ARROW && this.open && (this.containerNode.focus(),
                        a.preventDefault())
                    },
                    _onTitleClick: function() {
                        this.toggleable && this.toggle()
                    },
                    setTitle: function(a) {
                        e.deprecated("dijit.TitlePane.setTitle() is deprecated.  Use set('title', ...) instead.", "", "2.0");
                        this.set("title", a)
                    }
                });
                f("dojo-bidi") && p.extend({
                    _setTitleAttr: function(a) {
                        this._set("title", a);
                        this.titleNode.innerHTML = a;
                        this.applyTextDir(this.titleNode)
                    },
                    _setTooltipAttr: function(a) {
                        this._set("tooltip", a);
                        this.textDir && (a = this.enforceTextDirWithUcc(null, a));
                        m.set(this.focusNode, "title", a)
                    },
                    _setTextDirAttr: function(a) {
                        this._created && this.textDir != a && (this._set("textDir", a),
                        this.set("title", this.title),
                        this.set("tooltip", this.tooltip))
                    }
                });
                return p
            })
        },
        "dijit/Toolbar": function() {
            define("require dojo/_base/declare dojo/has dojo/keys dojo/ready ./_Widget ./_KeyNavContainer ./_TemplatedMixin".split(" "), function(q, p, n, m, l, k, g, f) {
                n("dijit-legacy-requires") && l(0, function() {
                    q(["dijit/ToolbarSeparator"])
                });
                return p("dijit.Toolbar", [k, f, g], {
                    templateString: '\x3cdiv class\x3d"dijit" role\x3d"toolbar" tabIndex\x3d"${tabIndex}" data-dojo-attach-point\x3d"containerNode"\x3e\x3c/div\x3e',
                    baseClass: "dijitToolbar",
                    _onLeftArrow: function() {
                        this.focusPrev()
                    },
                    _onRightArrow: function() {
                        this.focusNext()
                    }
                })
            })
        },
        "dijit/Tooltip": function() {
            define("dojo/_base/array dojo/_base/declare dojo/_base/fx dojo/dom dojo/dom-class dojo/dom-geometry dojo/dom-style dojo/_base/lang dojo/mouse dojo/on dojo/sniff ./_base/manager ./place ./_Widget ./_TemplatedMixin ./BackgroundIframe dojo/text!./templates/Tooltip.html ./main".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x) {
                function y() {}
                var z = p("dijit._MasterTooltip", [h, r], {
                    duration: b.defaultDuration,
                    templateString: u,
                    postCreate: function() {
                        this.ownerDocumentBody.appendChild(this.domNode);
                        this.bgIframe = new t(this.domNode);
                        this.fadeIn = n.fadeIn({
                            node: this.domNode,
                            duration: this.duration,
                            onEnd: f.hitch(this, "_onShow")
                        });
                        this.fadeOut = n.fadeOut({
                            node: this.domNode,
                            duration: this.duration,
                            onEnd: f.hitch(this, "_onHide")
                        })
                    },
                    show: function(b, h, c, r, d, e, t) {
                        if (!this.aroundNode || this.aroundNode !== h || this.containerNode.innerHTML != b)
                            if ("playing" == this.fadeOut.status())
                                this._onDeck = arguments;
                            else {
                                this.containerNode.innerHTML = b;
                                d && this.set("textDir", d);
                                this.containerNode.align = r ? "right" : "left";
                                var u = a.around(this.domNode, h, c && c.length ? c : w.defaultPosition, !r, f.hitch(this, "orient"))
                                  , k = u.aroundNodePos;
                                "M" == u.corner.charAt(0) && "M" == u.aroundCorner.charAt(0) ? (this.connectorNode.style.top = k.y + (k.h - this.connectorNode.offsetHeight >> 1) - u.y + "px",
                                this.connectorNode.style.left = "") : "M" == u.corner.charAt(1) && "M" == u.aroundCorner.charAt(1) ? this.connectorNode.style.left = k.x + (k.w - this.connectorNode.offsetWidth >> 1) - u.x + "px" : (this.connectorNode.style.left = "",
                                this.connectorNode.style.top = "");
                                g.set(this.domNode, "opacity", 0);
                                this.fadeIn.play();
                                this.isShowingNow = !0;
                                this.aroundNode = h;
                                this.onMouseEnter = e || y;
                                this.onMouseLeave = t || y
                            }
                    },
                    orient: function(a, b, h, r, d) {
                        this.connectorNode.style.top = "";
                        var e = r.h;
                        r = r.w;
                        a.className = "dijitTooltip " + {
                            "MR-ML": "dijitTooltipRight",
                            "ML-MR": "dijitTooltipLeft",
                            "TM-BM": "dijitTooltipAbove",
                            "BM-TM": "dijitTooltipBelow",
                            "BL-TL": "dijitTooltipBelow dijitTooltipABLeft",
                            "TL-BL": "dijitTooltipAbove dijitTooltipABLeft",
                            "BR-TR": "dijitTooltipBelow dijitTooltipABRight",
                            "TR-BR": "dijitTooltipAbove dijitTooltipABRight",
                            "BR-BL": "dijitTooltipRight",
                            "BL-BR": "dijitTooltipLeft"
                        }[b + "-" + h];
                        this.domNode.style.width = "auto";
                        var t = k.position(this.domNode);
                        if (c("ie") || c("trident"))
                            t.w += 2;
                        k.setMarginBox(this.domNode, {
                            w: Math.min(Math.max(r, 1), t.w)
                        });
                        "B" == h.charAt(0) && "B" == b.charAt(0) ? (a = k.position(a),
                        b = this.connectorNode.offsetHeight,
                        a.h > e ? (this.connectorNode.style.top = e - (d.h + b >> 1) + "px",
                        this.connectorNode.style.bottom = "") : (this.connectorNode.style.bottom = Math.min(Math.max(d.h / 2 - b / 2, 0), a.h - b) + "px",
                        this.connectorNode.style.top = "")) : (this.connectorNode.style.top = "",
                        this.connectorNode.style.bottom = "");
                        return Math.max(0, t.w - r)
                    },
                    _onShow: function() {
                        c("ie") && (this.domNode.style.filter = "")
                    },
                    hide: function(a) {
                        this._onDeck && this._onDeck[1] == a ? this._onDeck = null : this.aroundNode === a && (this.fadeIn.stop(),
                        this.isShowingNow = !1,
                        this.aroundNode = null,
                        this.fadeOut.play());
                        this.onMouseEnter = this.onMouseLeave = y
                    },
                    _onHide: function() {
                        this.domNode.style.cssText = "";
                        this.containerNode.innerHTML = "";
                        this._onDeck && (this.show.apply(this, this._onDeck),
                        this._onDeck = null)
                    }
                });
                c("dojo-bidi") && z.extend({
                    _setAutoTextDir: function(a) {
                        this.applyTextDir(a);
                        q.forEach(a.children, function(a) {
                            this._setAutoTextDir(a)
                        }, this)
                    },
                    _setTextDirAttr: function(a) {
                        this._set("textDir", a);
                        "auto" == a ? this._setAutoTextDir(this.containerNode) : this.containerNode.dir = this.textDir
                    }
                });
                x.showTooltip = function(a, b, h, c, r, d, e) {
                    h && (h = q.map(h, function(a) {
                        return {
                            after: "after-centered",
                            before: "before-centered"
                        }[a] || a
                    }));
                    w._masterTT || (x._masterTT = w._masterTT = new z);
                    return w._masterTT.show(a, b, h, c, r, d, e)
                }
                ;
                x.hideTooltip = function(a) {
                    return w._masterTT && w._masterTT.hide(a)
                }
                ;
                var w = p("dijit.Tooltip", h, {
                    label: "",
                    showDelay: 400,
                    hideDelay: 400,
                    connectId: [],
                    position: [],
                    selector: "",
                    _setConnectIdAttr: function(a) {
                        q.forEach(this._connections || [], function(a) {
                            q.forEach(a, function(a) {
                                a.remove()
                            })
                        }, this);
                        this._connectIds = q.filter(f.isArrayLike(a) ? a : a ? [a] : [], function(a) {
                            return m.byId(a, this.ownerDocument)
                        }, this);
                        this._connections = q.map(this._connectIds, function(a) {
                            a = m.byId(a, this.ownerDocument);
                            var b = this.selector
                              , h = b ? function(a) {
                                return d.selector(b, a)
                            }
                            : function(a) {
                                return a
                            }
                              , c = this;
                            return [d(a, h(e.enter), function() {
                                c._onHover(this)
                            }), d(a, h("focusin"), function() {
                                c._onHover(this)
                            }), d(a, h(e.leave), f.hitch(c, "_onUnHover")), d(a, h("focusout"), f.hitch(c, "set", "state", "DORMANT"))]
                        }, this);
                        this._set("connectId", a)
                    },
                    addTarget: function(a) {
                        a = a.id || a;
                        -1 == q.indexOf(this._connectIds, a) && this.set("connectId", this._connectIds.concat(a))
                    },
                    removeTarget: function(a) {
                        a = q.indexOf(this._connectIds, a.id || a);
                        0 <= a && (this._connectIds.splice(a, 1),
                        this.set("connectId", this._connectIds))
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        l.add(this.domNode, "dijitTooltipData")
                    },
                    startup: function() {
                        this.inherited(arguments);
                        var a = this.connectId;
                        q.forEach(f.isArrayLike(a) ? a : [a], this.addTarget, this)
                    },
                    getContent: function(a) {
                        return this.label || this.domNode.innerHTML
                    },
                    state: "DORMANT",
                    _setStateAttr: function(a) {
                        if (!(this.state == a || "SHOW TIMER" == a && "SHOWING" == this.state || "HIDE TIMER" == a && "DORMANT" == this.state)) {
                            this._hideTimer && (this._hideTimer.remove(),
                            delete this._hideTimer);
                            this._showTimer && (this._showTimer.remove(),
                            delete this._showTimer);
                            switch (a) {
                            case "DORMANT":
                                this._connectNode && (w.hide(this._connectNode),
                                delete this._connectNode,
                                this.onHide());
                                break;
                            case "SHOW TIMER":
                                "SHOWING" != this.state && (this._showTimer = this.defer(function() {
                                    this.set("state", "SHOWING")
                                }, this.showDelay));
                                break;
                            case "SHOWING":
                                var b = this.getContent(this._connectNode);
                                if (!b) {
                                    this.set("state", "DORMANT");
                                    return
                                }
                                w.show(b, this._connectNode, this.position, !this.isLeftToRight(), this.textDir, f.hitch(this, "set", "state", "SHOWING"), f.hitch(this, "set", "state", "HIDE TIMER"));
                                this.onShow(this._connectNode, this.position);
                                break;
                            case "HIDE TIMER":
                                this._hideTimer = this.defer(function() {
                                    this.set("state", "DORMANT")
                                }, this.hideDelay)
                            }
                            this._set("state", a)
                        }
                    },
                    _onHover: function(a) {
                        this._connectNode && a != this._connectNode && this.set("state", "DORMANT");
                        this._connectNode = a;
                        this.set("state", "SHOW TIMER")
                    },
                    _onUnHover: function(a) {
                        this.set("state", "HIDE TIMER")
                    },
                    open: function(a) {
                        this.set("state", "DORMANT");
                        this._connectNode = a;
                        this.set("state", "SHOWING")
                    },
                    close: function() {
                        this.set("state", "DORMANT")
                    },
                    onShow: function() {},
                    onHide: function() {},
                    destroy: function() {
                        this.set("state", "DORMANT");
                        q.forEach(this._connections || [], function(a) {
                            q.forEach(a, function(a) {
                                a.remove()
                            })
                        }, this);
                        this.inherited(arguments)
                    }
                });
                w._MasterTooltip = z;
                w.show = x.showTooltip;
                w.hide = x.hideTooltip;
                w.defaultPosition = ["after-centered", "before-centered"];
                return w
            })
        },
        "dijit/Tree": function() {
            define("dojo/_base/array dojo/aspect dojo/cookie dojo/_base/declare dojo/Deferred dojo/promise/all dojo/dom dojo/dom-class dojo/dom-geometry dojo/dom-style dojo/errors/create dojo/fx dojo/has dojo/_base/kernel dojo/keys dojo/_base/lang dojo/on dojo/topic dojo/touch dojo/when ./a11yclick ./focus ./registry ./_base/manager ./_Widget ./_TemplatedMixin ./_Container ./_Contained ./_CssStateMixin ./_KeyNavMixin dojo/text!./templates/TreeNode.html dojo/text!./templates/Tree.html ./tree/TreeStoreModel ./tree/ForestStoreModel ./tree/_dndSelector dojo/query!css2".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A, B, C, E, I, H, F, G, J, O, D, M, L) {
                function K(a) {
                    return t.delegate(a.promise || a, {
                        addCallback: function(a) {
                            this.then(a)
                        },
                        addErrback: function(a) {
                            this.otherwise(a)
                        }
                    })
                }
                var N = m("dijit._TreeNode", [C, E, I, H, F], {
                    item: null,
                    isTreeNode: !0,
                    label: "",
                    _setLabelAttr: function(b) {
                        this.labelNode["html" == this.labelType ? "innerHTML" : "innerText"in this.labelNode ? "innerText" : "textContent"] = b;
                        this._set("label", b);
                        a("dojo-bidi") && this.applyTextDir(this.labelNode)
                    },
                    labelType: "text",
                    isExpandable: null,
                    isExpanded: !1,
                    state: "NotLoaded",
                    templateString: J,
                    baseClass: "dijitTreeNode",
                    cssStateNodes: {
                        rowNode: "dijitTreeRow"
                    },
                    _setTooltipAttr: {
                        node: "rowNode",
                        type: "attribute",
                        attribute: "title"
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        this._setExpando();
                        this._updateItemClasses(this.item);
                        this.isExpandable && this.labelNode.setAttribute("aria-expanded", this.isExpanded);
                        this.setSelected(!1)
                    },
                    _setIndentAttr: function(a) {
                        var b = Math.max(a, 0) * this.tree._nodePixelIndent + "px";
                        d.set(this.domNode, "backgroundPosition", b + " 0px");
                        d.set(this.rowNode, this.isLeftToRight() ? "paddingLeft" : "paddingRight", b);
                        q.forEach(this.getChildren(), function(b) {
                            b.set("indent", a + 1)
                        });
                        this._set("indent", a)
                    },
                    markProcessing: function() {
                        this.state = "Loading";
                        this._setExpando(!0)
                    },
                    unmarkProcessing: function() {
                        this._setExpando(!1)
                    },
                    _updateItemClasses: function(a) {
                        var b = this.tree
                          , h = b.model;
                        b._v10Compat && a === h.root && (a = null);
                        this._applyClassAndStyle(a, "icon", "Icon");
                        this._applyClassAndStyle(a, "label", "Label");
                        this._applyClassAndStyle(a, "row", "Row");
                        this.tree._startPaint(!0)
                    },
                    _applyClassAndStyle: function(a, b, h) {
                        var c = "_" + b + "Class";
                        b += "Node";
                        var r = this[c];
                        this[c] = this.tree["get" + h + "Class"](a, this.isExpanded);
                        f.replace(this[b], this[c] || "", r || "");
                        d.set(this[b], this.tree["get" + h + "Style"](a, this.isExpanded) || {})
                    },
                    _updateLayout: function() {
                        var a = this.getParent()
                          , a = !a || !a.rowNode || "none" == a.rowNode.style.display;
                        f.toggle(this.domNode, "dijitTreeIsRoot", a);
                        f.toggle(this.domNode, "dijitTreeIsLast", !a && !this.getNextSibling())
                    },
                    _setExpando: function(a) {
                        var b = ["dijitTreeExpandoLoading", "dijitTreeExpandoOpened", "dijitTreeExpandoClosed", "dijitTreeExpandoLeaf"];
                        a = a ? 0 : this.isExpandable ? this.isExpanded ? 1 : 2 : 3;
                        f.replace(this.expandoNode, b[a], b);
                        this.expandoNodeText.innerHTML = ["*", "-", "+", "*"][a]
                    },
                    expand: function() {
                        if (this._expandDeferred)
                            return K(this._expandDeferred);
                        this._collapseDeferred && (this._collapseDeferred.cancel(),
                        delete this._collapseDeferred);
                        this.isExpanded = !0;
                        this.labelNode.setAttribute("aria-expanded", "true");
                        (this.tree.showRoot || this !== this.tree.rootNode) && this.containerNode.setAttribute("role", "group");
                        f.add(this.contentNode, "dijitTreeContentExpanded");
                        this._setExpando();
                        this._updateItemClasses(this.item);
                        this == this.tree.rootNode && this.tree.showRoot && this.tree.domNode.setAttribute("aria-expanded", "true");
                        var a = b.wipeIn({
                            node: this.containerNode,
                            duration: B.defaultDuration
                        })
                          , h = this._expandDeferred = new l(function() {
                            a.stop()
                        }
                        );
                        p.after(a, "onEnd", function() {
                            h.resolve(!0)
                        }, !0);
                        a.play();
                        return K(h)
                    },
                    collapse: function() {
                        if (this._collapseDeferred)
                            return K(this._collapseDeferred);
                        this._expandDeferred && (this._expandDeferred.cancel(),
                        delete this._expandDeferred);
                        this.isExpanded = !1;
                        this.labelNode.setAttribute("aria-expanded", "false");
                        this == this.tree.rootNode && this.tree.showRoot && this.tree.domNode.setAttribute("aria-expanded", "false");
                        f.remove(this.contentNode, "dijitTreeContentExpanded");
                        this._setExpando();
                        this._updateItemClasses(this.item);
                        var a = b.wipeOut({
                            node: this.containerNode,
                            duration: B.defaultDuration
                        })
                          , h = this._collapseDeferred = new l(function() {
                            a.stop()
                        }
                        );
                        p.after(a, "onEnd", function() {
                            h.resolve(!0)
                        }, !0);
                        a.play();
                        return K(h)
                    },
                    indent: 0,
                    setChildItems: function(a) {
                        var b = this.tree
                          , h = b.model
                          , c = []
                          , r = b.focusedChild
                          , d = this.getChildren();
                        q.forEach(d, function(a) {
                            I.prototype.removeChild.call(this, a)
                        }, this);
                        this.defer(function() {
                            q.forEach(d, function(a) {
                                if (!a._destroyed && !a.getParent()) {
                                    var c = function(a) {
                                        var r = h.getIdentity(a.item)
                                          , d = b._itemNodesMap[r];
                                        1 == d.length ? delete b._itemNodesMap[r] : (r = q.indexOf(d, a),
                                        -1 != r && d.splice(r, 1));
                                        q.forEach(a.getChildren(), c)
                                    };
                                    b.dndController.removeTreeNode(a);
                                    c(a);
                                    if (b.persist) {
                                        var d = q.map(a.getTreePath(), function(a) {
                                            return b.model.getIdentity(a)
                                        }).join("/"), e;
                                        for (e in b._openedNodes)
                                            e.substr(0, d.length) == d && delete b._openedNodes[e];
                                        b._saveExpandedNodes()
                                    }
                                    b.lastFocusedChild && !g.isDescendant(b.lastFocusedChild.domNode, b.domNode) && delete b.lastFocusedChild;
                                    r && !g.isDescendant(r.domNode, b.domNode) && b.focus();
                                    a.destroyRecursive()
                                }
                            })
                        });
                        this.state = "Loaded";
                        a && 0 < a.length ? (this.isExpandable = !0,
                        q.forEach(a, function(a) {
                            var r = h.getIdentity(a), d = b._itemNodesMap[r], e;
                            if (d)
                                for (var t = 0; t < d.length; t++)
                                    if (d[t] && !d[t].getParent()) {
                                        e = d[t];
                                        e.set("indent", this.indent + 1);
                                        break
                                    }
                            e || (e = this.tree._createTreeNode({
                                item: a,
                                tree: b,
                                isExpandable: h.mayHaveChildren(a),
                                label: b.getLabel(a),
                                labelType: b.model && b.model.labelType || "text",
                                tooltip: b.getTooltip(a),
                                ownerDocument: b.ownerDocument,
                                dir: b.dir,
                                lang: b.lang,
                                textDir: b.textDir,
                                indent: this.indent + 1
                            }),
                            d ? d.push(e) : b._itemNodesMap[r] = [e]);
                            this.addChild(e);
                            (this.tree.autoExpand || this.tree._state(e)) && c.push(b._expandNode(e))
                        }, this),
                        q.forEach(this.getChildren(), function(a) {
                            a._updateLayout()
                        })) : this.isExpandable = !1;
                        this._setExpando && this._setExpando(!1);
                        this._updateItemClasses(this.item);
                        a = k(c);
                        this.tree._startPaint(a);
                        return K(a)
                    },
                    getTreePath: function() {
                        for (var a = this, b = []; a && a !== this.tree.rootNode; )
                            b.unshift(a.item),
                            a = a.getParent();
                        b.unshift(this.tree.rootNode.item);
                        return b
                    },
                    getIdentity: function() {
                        return this.tree.model.getIdentity(this.item)
                    },
                    removeChild: function(a) {
                        this.inherited(arguments);
                        var b = this.getChildren();
                        0 == b.length && (this.isExpandable = !1,
                        this.collapse());
                        q.forEach(b, function(a) {
                            a._updateLayout()
                        })
                    },
                    makeExpandable: function() {
                        this.isExpandable = !0;
                        this._setExpando(!1)
                    },
                    setSelected: function(a) {
                        this.labelNode.setAttribute("aria-selected", a ? "true" : "false");
                        f.toggle(this.rowNode, "dijitTreeRowSelected", a)
                    },
                    focus: function() {
                        v.focus(this.focusNode)
                    }
                });
                a("dojo-bidi") && N.extend({
                    _setTextDirAttr: function(a) {
                        !a || this.textDir == a && this._created || (this._set("textDir", a),
                        this.applyTextDir(this.labelNode),
                        q.forEach(this.getChildren(), function(b) {
                            b.set("textDir", a)
                        }, this))
                    }
                });
                var P = m("dijit.Tree", [C, G, E, F], {
                    baseClass: "dijitTree",
                    store: null,
                    model: null,
                    query: null,
                    label: "",
                    showRoot: !0,
                    childrenAttr: ["children"],
                    paths: [],
                    path: [],
                    selectedItems: null,
                    selectedItem: null,
                    openOnClick: !1,
                    openOnDblClick: !1,
                    templateString: O,
                    persist: !1,
                    autoExpand: !1,
                    dndController: L,
                    dndParams: "onDndDrop itemCreator onDndCancel checkAcceptance checkItemAcceptance dragThreshold betweenThreshold".split(" "),
                    onDndDrop: null,
                    itemCreator: null,
                    onDndCancel: null,
                    checkAcceptance: null,
                    checkItemAcceptance: null,
                    dragThreshold: 5,
                    betweenThreshold: 0,
                    _nodePixelIndent: 19,
                    _publish: function(a, b) {
                        x.publish(this.id, t.mixin({
                            tree: this,
                            event: a
                        }, b || {}))
                    },
                    postMixInProperties: function() {
                        this.tree = this;
                        this.autoExpand && (this.persist = !1);
                        this._itemNodesMap = {};
                        !this.cookieName && this.id && (this.cookieName = this.id + "SaveStateCookie");
                        this.expandChildrenDeferred = new l;
                        this.pendingCommandsPromise = this.expandChildrenDeferred.promise;
                        this.inherited(arguments)
                    },
                    postCreate: function() {
                        this._initState();
                        var a = this;
                        this.own(u(this.containerNode, u.selector(".dijitTreeNode", y.enter), function(b) {
                            a._onNodeMouseEnter(A.byNode(this), b)
                        }), u(this.containerNode, u.selector(".dijitTreeNode", y.leave), function(b) {
                            a._onNodeMouseLeave(A.byNode(this), b)
                        }), u(this.containerNode, u.selector(".dijitTreeRow", w.press), function(b) {
                            a._onNodePress(A.getEnclosingWidget(this), b)
                        }), u(this.containerNode, u.selector(".dijitTreeRow", w), function(b) {
                            a._onClick(A.getEnclosingWidget(this), b)
                        }), u(this.containerNode, u.selector(".dijitTreeRow", "dblclick"), function(b) {
                            a._onDblClick(A.getEnclosingWidget(this), b)
                        }));
                        this.model || this._store2model();
                        this.own(p.after(this.model, "onChange", t.hitch(this, "_onItemChange"), !0), p.after(this.model, "onChildrenChange", t.hitch(this, "_onItemChildrenChange"), !0), p.after(this.model, "onDelete", t.hitch(this, "_onItemDelete"), !0));
                        this.inherited(arguments);
                        if (this.dndController) {
                            t.isString(this.dndController) && (this.dndController = t.getObject(this.dndController));
                            for (var b = {}, h = 0; h < this.dndParams.length; h++)
                                this[this.dndParams[h]] && (b[this.dndParams[h]] = this[this.dndParams[h]]);
                            this.dndController = new this.dndController(this,b)
                        }
                        this._load();
                        this.onLoadDeferred = K(this.pendingCommandsPromise);
                        this.onLoadDeferred.then(t.hitch(this, "onLoad"))
                    },
                    _store2model: function() {
                        this._v10Compat = !0;
                        h.deprecated("Tree: from version 2.0, should specify a model object rather than a store/query");
                        var a = {
                            id: this.id + "_ForestStoreModel",
                            store: this.store,
                            query: this.query,
                            childrenAttrs: this.childrenAttr
                        };
                        this.params.mayHaveChildren && (a.mayHaveChildren = t.hitch(this, "mayHaveChildren"));
                        this.params.getItemChildren && (a.getChildren = t.hitch(this, function(a, b, h) {
                            this.getItemChildren(this._v10Compat && a === this.model.root ? null : a, b, h)
                        }));
                        this.model = new M(a);
                        this.showRoot = !!this.label
                    },
                    onLoad: function() {},
                    _load: function() {
                        this.model.getRoot(t.hitch(this, function(a) {
                            var b = this.rootNode = this.tree._createTreeNode({
                                item: a,
                                tree: this,
                                isExpandable: !0,
                                label: this.label || this.getLabel(a),
                                labelType: this.model.labelType || "text",
                                textDir: this.textDir,
                                indent: this.showRoot ? 0 : -1
                            });
                            this.showRoot ? (this.domNode.setAttribute("aria-multiselectable", !this.dndController.singular),
                            this.rootLoadingIndicator.style.display = "none") : (b.rowNode.style.display = "none",
                            this.domNode.setAttribute("role", "presentation"),
                            this.domNode.removeAttribute("aria-expanded"),
                            this.domNode.removeAttribute("aria-multiselectable"),
                            this["aria-label"] ? (b.containerNode.setAttribute("aria-label", this["aria-label"]),
                            this.domNode.removeAttribute("aria-label")) : this["aria-labelledby"] && (b.containerNode.setAttribute("aria-labelledby", this["aria-labelledby"]),
                            this.domNode.removeAttribute("aria-labelledby")),
                            b.labelNode.setAttribute("role", "presentation"),
                            b.labelNode.removeAttribute("aria-selected"),
                            b.containerNode.setAttribute("role", "tree"),
                            b.containerNode.setAttribute("aria-expanded", "true"),
                            b.containerNode.setAttribute("aria-multiselectable", !this.dndController.singular));
                            this.containerNode.appendChild(b.domNode);
                            a = this.model.getIdentity(a);
                            this._itemNodesMap[a] ? this._itemNodesMap[a].push(b) : this._itemNodesMap[a] = [b];
                            b._updateLayout();
                            this._expandNode(b).then(t.hitch(this, function() {
                                this._destroyed || (this.rootLoadingIndicator.style.display = "none",
                                this.expandChildrenDeferred.resolve(!0))
                            }))
                        }), t.hitch(this, function(a) {
                            console.error(this, ": error loading root: ", a)
                        }))
                    },
                    getNodesByItem: function(a) {
                        if (!a)
                            return [];
                        a = t.isString(a) ? a : this.model.getIdentity(a);
                        return [].concat(this._itemNodesMap[a])
                    },
                    _setSelectedItemAttr: function(a) {
                        this.set("selectedItems", [a])
                    },
                    _setSelectedItemsAttr: function(a) {
                        var b = this;
                        return this.pendingCommandsPromise = this.pendingCommandsPromise.always(t.hitch(this, function() {
                            var h = q.map(a, function(a) {
                                return !a || t.isString(a) ? a : b.model.getIdentity(a)
                            })
                              , c = [];
                            q.forEach(h, function(a) {
                                c = c.concat(b._itemNodesMap[a] || [])
                            });
                            this.set("selectedNodes", c)
                        }))
                    },
                    _setPathAttr: function(a) {
                        return a.length ? K(this.set("paths", [a]).then(function(a) {
                            return a[0]
                        })) : K(this.set("paths", []).then(function(a) {
                            return a[0]
                        }))
                    },
                    _setPathsAttr: function(a) {
                        function b(a, c) {
                            var r = a.shift()
                              , d = q.filter(c, function(a) {
                                return a.getIdentity() == r
                            })[0];
                            if (d)
                                return a.length ? h._expandNode(d).then(function() {
                                    return b(a, d.getChildren())
                                }) : d;
                            throw new P.PathError("Could not expand path at " + r);
                        }
                        var h = this;
                        return K(this.pendingCommandsPromise = this.pendingCommandsPromise.always(function() {
                            return k(q.map(a, function(a) {
                                a = q.map(a, function(a) {
                                    return a && t.isObject(a) ? h.model.getIdentity(a) : a
                                });
                                if (a.length)
                                    return b(a, [h.rootNode]);
                                throw new P.PathError("Empty path");
                            }))
                        }).then(function(a) {
                            h.set("selectedNodes", a);
                            return h.paths
                        }))
                    },
                    _setSelectedNodeAttr: function(a) {
                        this.set("selectedNodes", [a])
                    },
                    _setSelectedNodesAttr: function(a) {
                        this.dndController.setSelection(a)
                    },
                    expandAll: function() {
                        function a(h) {
                            return b._expandNode(h).then(function() {
                                var b = q.filter(h.getChildren() || [], function(a) {
                                    return a.isExpandable
                                });
                                return k(q.map(b, a))
                            })
                        }
                        var b = this;
                        return K(a(this.rootNode))
                    },
                    collapseAll: function() {
                        function a(h) {
                            var c = q.filter(h.getChildren() || [], function(a) {
                                return a.isExpandable
                            })
                              , c = k(q.map(c, a));
                            return !h.isExpanded || h == b.rootNode && !b.showRoot ? c : c.then(function() {
                                return b._collapseNode(h)
                            })
                        }
                        var b = this;
                        return K(a(this.rootNode))
                    },
                    mayHaveChildren: function() {},
                    getItemChildren: function() {},
                    getLabel: function(a) {
                        return this.model.getLabel(a)
                    },
                    getIconClass: function(a, b) {
                        return !a || this.model.mayHaveChildren(a) ? b ? "dijitFolderOpened" : "dijitFolderClosed" : "dijitLeaf"
                    },
                    getLabelClass: function() {},
                    getRowClass: function() {},
                    getIconStyle: function() {},
                    getLabelStyle: function() {},
                    getRowStyle: function() {},
                    getTooltip: function() {
                        return ""
                    },
                    _onDownArrow: function(a, b) {
                        var h = this._getNext(b);
                        h && h.isTreeNode && this.focusNode(h)
                    },
                    _onUpArrow: function(a, b) {
                        var h = b.getPreviousSibling();
                        if (h)
                            for (b = h; b.isExpandable && b.isExpanded && b.hasChildren(); )
                                h = b.getChildren(),
                                b = h[h.length - 1];
                        else if (h = b.getParent(),
                        this.showRoot || h !== this.rootNode)
                            b = h;
                        b && b.isTreeNode && this.focusNode(b)
                    },
                    _onRightArrow: function(a, b) {
                        b.isExpandable && !b.isExpanded ? this._expandNode(b) : b.hasChildren() && (b = b.getChildren()[0]) && b.isTreeNode && this.focusNode(b)
                    },
                    _onLeftArrow: function(a, b) {
                        if (b.isExpandable && b.isExpanded)
                            this._collapseNode(b);
                        else {
                            var h = b.getParent();
                            h && h.isTreeNode && (this.showRoot || h !== this.rootNode) && this.focusNode(h)
                        }
                    },
                    focusLastChild: function() {
                        var a = this._getLast();
                        a && a.isTreeNode && this.focusNode(a)
                    },
                    _getFirst: function() {
                        return this.showRoot ? this.rootNode : this.rootNode.getChildren()[0]
                    },
                    _getLast: function() {
                        for (var a = this.rootNode; a.isExpanded; ) {
                            var b = a.getChildren();
                            if (!b.length)
                                break;
                            a = b[b.length - 1]
                        }
                        return a
                    },
                    _getNext: function(a) {
                        if (a.isExpandable && a.isExpanded && a.hasChildren())
                            return a.getChildren()[0];
                        for (; a && a.isTreeNode; ) {
                            var b = a.getNextSibling();
                            if (b)
                                return b;
                            a = a.getParent()
                        }
                        return null
                    },
                    childSelector: ".dijitTreeRow",
                    isExpandoNode: function(a, b) {
                        return g.isDescendant(a, b.expandoNode) || g.isDescendant(a, b.expandoNodeText)
                    },
                    _onNodePress: function(a, b) {
                        this.focusNode(a)
                    },
                    __click: function(a, b, h, c) {
                        var r = this.isExpandoNode(b.target, a);
                        a.isExpandable && (h || r) ? this._onExpandoClick({
                            node: a
                        }) : (this._publish("execute", {
                            item: a.item,
                            node: a,
                            evt: b
                        }),
                        this[c](a.item, a, b),
                        this.focusNode(a));
                        b.stopPropagation();
                        b.preventDefault()
                    },
                    _onClick: function(a, b) {
                        this.__click(a, b, this.openOnClick, "onClick")
                    },
                    _onDblClick: function(a, b) {
                        this.__click(a, b, this.openOnDblClick, "onDblClick")
                    },
                    _onExpandoClick: function(a) {
                        a = a.node;
                        this.focusNode(a);
                        a.isExpanded ? this._collapseNode(a) : this._expandNode(a)
                    },
                    onClick: function() {},
                    onDblClick: function() {},
                    onOpen: function() {},
                    onClose: function() {},
                    _getNextNode: function(a) {
                        h.deprecated(this.declaredClass + "::_getNextNode(node) is deprecated. Use _getNext(node) instead.", "", "2.0");
                        return this._getNext(a)
                    },
                    _getRootOrFirstNode: function() {
                        h.deprecated(this.declaredClass + "::_getRootOrFirstNode() is deprecated. Use _getFirst() instead.", "", "2.0");
                        return this._getFirst()
                    },
                    _collapseNode: function(a) {
                        a._expandNodeDeferred && delete a._expandNodeDeferred;
                        if ("Loading" != a.state && a.isExpanded) {
                            var b = a.collapse();
                            this.onClose(a.item, a);
                            this._state(a, !1);
                            this._startPaint(b);
                            return b
                        }
                    },
                    _expandNode: function(a) {
                        if (a._expandNodeDeferred)
                            return a._expandNodeDeferred;
                        var b = this.model
                          , h = a.item
                          , c = this;
                        a._loadDeferred || (a.markProcessing(),
                        a._loadDeferred = new l,
                        b.getChildren(h, function(b) {
                            a.unmarkProcessing();
                            a.setChildItems(b).then(function() {
                                a._loadDeferred.resolve(b)
                            })
                        }, function(b) {
                            console.error(c, ": error loading " + a.label + " children: ", b);
                            a._loadDeferred.reject(b)
                        }));
                        b = a._loadDeferred.then(t.hitch(this, function() {
                            var b = a.expand();
                            this.onOpen(a.item, a);
                            this._state(a, !0);
                            return b
                        }));
                        this._startPaint(b);
                        return b
                    },
                    focusNode: function(a) {
                        var b = this.domNode.scrollLeft;
                        this.focusChild(a);
                        this.domNode.scrollLeft = b
                    },
                    _onNodeMouseEnter: function() {},
                    _onNodeMouseLeave: function() {},
                    _onItemChange: function(a) {
                        var b = this.model.getIdentity(a);
                        if (b = this._itemNodesMap[b]) {
                            var h = this.getLabel(a)
                              , c = this.getTooltip(a);
                            q.forEach(b, function(b) {
                                b.set({
                                    item: a,
                                    label: h,
                                    tooltip: c
                                });
                                b._updateItemClasses(a)
                            })
                        }
                    },
                    _onItemChildrenChange: function(a, b) {
                        var h = this.model.getIdentity(a);
                        (h = this._itemNodesMap[h]) && q.forEach(h, function(a) {
                            a.setChildItems(b)
                        })
                    },
                    _onItemDelete: function(a) {
                        a = this.model.getIdentity(a);
                        var b = this._itemNodesMap[a];
                        b && (q.forEach(b, function(a) {
                            this.dndController.removeTreeNode(a);
                            var b = a.getParent();
                            b && b.removeChild(a);
                            this.lastFocusedChild && !g.isDescendant(this.lastFocusedChild.domNode, this.domNode) && delete this.lastFocusedChild;
                            this.focusedChild && !g.isDescendant(this.focusedChild.domNode, this.domNode) && this.focus();
                            a.destroyRecursive()
                        }, this),
                        delete this._itemNodesMap[a])
                    },
                    _initState: function() {
                        this._openedNodes = {};
                        if (this.persist && this.cookieName) {
                            var a = n(this.cookieName);
                            a && q.forEach(a.split(","), function(a) {
                                this._openedNodes[a] = !0
                            }, this)
                        }
                    },
                    _state: function(a, b) {
                        if (!this.persist)
                            return !1;
                        var h = q.map(a.getTreePath(), function(a) {
                            return this.model.getIdentity(a)
                        }, this).join("/");
                        if (1 === arguments.length)
                            return this._openedNodes[h];
                        b ? this._openedNodes[h] = !0 : delete this._openedNodes[h];
                        this._saveExpandedNodes()
                    },
                    _saveExpandedNodes: function() {
                        if (this.persist && this.cookieName) {
                            var a = [], b;
                            for (b in this._openedNodes)
                                a.push(b);
                            n(this.cookieName, a.join(","), {
                                expires: 365
                            })
                        }
                    },
                    destroy: function() {
                        this._curSearch && (this._curSearch.timer.remove(),
                        delete this._curSearch);
                        this.rootNode && this.rootNode.destroyRecursive();
                        this.dndController && !t.isString(this.dndController) && this.dndController.destroy();
                        this.rootNode = null;
                        this.inherited(arguments)
                    },
                    destroyRecursive: function() {
                        this.destroy()
                    },
                    resize: function(a) {
                        a && e.setMarginBox(this.domNode, a);
                        this._nodePixelIndent = e.position(this.tree.indentDetector).w || this._nodePixelIndent;
                        this.expandChildrenDeferred.then(t.hitch(this, function() {
                            this.rootNode.set("indent", this.showRoot ? 0 : -1);
                            this._adjustWidths()
                        }))
                    },
                    _outstandingPaintOperations: 0,
                    _startPaint: function(a) {
                        this._outstandingPaintOperations++;
                        this._adjustWidthsTimer && (this._adjustWidthsTimer.remove(),
                        delete this._adjustWidthsTimer);
                        var b = t.hitch(this, function() {
                            this._outstandingPaintOperations--;
                            0 >= this._outstandingPaintOperations && !this._adjustWidthsTimer && this._started && (this._adjustWidthsTimer = this.defer("_adjustWidths"))
                        });
                        z(a, b, b)
                    },
                    _adjustWidths: function() {
                        this._adjustWidthsTimer && (this._adjustWidthsTimer.remove(),
                        delete this._adjustWidthsTimer);
                        this.containerNode.style.width = "auto";
                        this.containerNode.style.width = this.domNode.scrollWidth > this.domNode.offsetWidth ? "auto" : "100%"
                    },
                    _createTreeNode: function(a) {
                        return new N(a)
                    },
                    focus: function() {
                        this.lastFocusedChild ? this.focusNode(this.lastFocusedChild) : this.focusFirstChild()
                    }
                });
                a("dojo-bidi") && P.extend({
                    _setTextDirAttr: function(a) {
                        a && this.textDir != a && (this._set("textDir", a),
                        this.rootNode.set("textDir", a))
                    }
                });
                P.PathError = c("TreePathError");
                P._TreeNode = N;
                return P
            })
        },
        "dijit/tree/TreeStoreModel": function() {
            define(["dojo/_base/array", "dojo/aspect", "dojo/_base/declare", "dojo/_base/lang"], function(q, p, n, m) {
                return n("dijit.tree.TreeStoreModel", null, {
                    store: null,
                    childrenAttrs: ["children"],
                    newItemIdAttr: "id",
                    labelAttr: "",
                    root: null,
                    query: null,
                    deferItemLoadingUntilExpand: !1,
                    constructor: function(l) {
                        m.mixin(this, l);
                        this.connects = [];
                        l = this.store;
                        if (!l.getFeatures()["dojo.data.api.Identity"])
                            throw Error("dijit.tree.TreeStoreModel: store must support dojo.data.Identity");
                        l.getFeatures()["dojo.data.api.Notification"] && (this.connects = this.connects.concat([p.after(l, "onNew", m.hitch(this, "onNewItem"), !0), p.after(l, "onDelete", m.hitch(this, "onDeleteItem"), !0), p.after(l, "onSet", m.hitch(this, "onSetItem"), !0)]))
                    },
                    destroy: function() {
                        for (var l; l = this.connects.pop(); )
                            l.remove()
                    },
                    getRoot: function(l, k) {
                        this.root ? l(this.root) : this.store.fetch({
                            query: this.query,
                            onComplete: m.hitch(this, function(g) {
                                if (1 != g.length)
                                    throw Error("dijit.tree.TreeStoreModel: root query returned " + g.length + " items, but must return exactly one");
                                this.root = g[0];
                                l(this.root)
                            }),
                            onError: k
                        })
                    },
                    mayHaveChildren: function(l) {
                        return q.some(this.childrenAttrs, function(k) {
                            return this.store.hasAttribute(l, k)
                        }, this)
                    },
                    getChildren: function(l, k, g) {
                        var f = this.store;
                        if (f.isItemLoaded(l)) {
                            for (var e = [], d = 0; d < this.childrenAttrs.length; d++)
                                var c = f.getValues(l, this.childrenAttrs[d])
                                  , e = e.concat(c);
                            var b = 0;
                            this.deferItemLoadingUntilExpand || q.forEach(e, function(a) {
                                f.isItemLoaded(a) || b++
                            });
                            0 == b ? k(e) : q.forEach(e, function(a, c) {
                                f.isItemLoaded(a) || f.loadItem({
                                    item: a,
                                    onItem: function(a) {
                                        e[c] = a;
                                        0 == --b && k(e)
                                    },
                                    onError: g
                                })
                            })
                        } else {
                            var a = m.hitch(this, arguments.callee);
                            f.loadItem({
                                item: l,
                                onItem: function(b) {
                                    a(b, k, g)
                                },
                                onError: g
                            })
                        }
                    },
                    isItem: function(l) {
                        return this.store.isItem(l)
                    },
                    fetchItemByIdentity: function(l) {
                        this.store.fetchItemByIdentity(l)
                    },
                    getIdentity: function(l) {
                        return this.store.getIdentity(l)
                    },
                    getLabel: function(l) {
                        return this.labelAttr ? this.store.getValue(l, this.labelAttr) : this.store.getLabel(l)
                    },
                    newItem: function(l, k, g) {
                        var f = {
                            parent: k,
                            attribute: this.childrenAttrs[0]
                        }, e;
                        this.newItemIdAttr && l[this.newItemIdAttr] ? this.fetchItemByIdentity({
                            identity: l[this.newItemIdAttr],
                            scope: this,
                            onItem: function(d) {
                                d ? this.pasteItem(d, null, k, !0, g) : (e = this.store.newItem(l, f)) && void 0 != g && this.pasteItem(e, k, k, !1, g)
                            }
                        }) : (e = this.store.newItem(l, f)) && void 0 != g && this.pasteItem(e, k, k, !1, g)
                    },
                    pasteItem: function(l, k, g, f, e) {
                        var d = this.store
                          , c = this.childrenAttrs[0];
                        k && q.forEach(this.childrenAttrs, function(a) {
                            if (d.containsValue(k, a, l)) {
                                if (!f) {
                                    var b = q.filter(d.getValues(k, a), function(a) {
                                        return a != l
                                    });
                                    d.setValues(k, a, b)
                                }
                                c = a
                            }
                        });
                        if (g)
                            if ("number" == typeof e) {
                                var b = d.getValues(g, c).slice();
                                b.splice(e, 0, l);
                                d.setValues(g, c, b)
                            } else
                                d.setValues(g, c, d.getValues(g, c).concat(l))
                    },
                    onChange: function() {},
                    onChildrenChange: function() {},
                    onDelete: function() {},
                    onNewItem: function(l, k) {
                        k && this.getChildren(k.item, m.hitch(this, function(g) {
                            this.onChildrenChange(k.item, g)
                        }))
                    },
                    onDeleteItem: function(l) {
                        this.onDelete(l)
                    },
                    onSetItem: function(l, k) {
                        if (-1 != q.indexOf(this.childrenAttrs, k))
                            this.getChildren(l, m.hitch(this, function(g) {
                                this.onChildrenChange(l, g)
                            }));
                        else
                            this.onChange(l)
                    }
                })
            })
        },
        "dijit/tree/ForestStoreModel": function() {
            define(["dojo/_base/array", "dojo/_base/declare", "dojo/_base/kernel", "dojo/_base/lang", "./TreeStoreModel"], function(q, p, n, m, l) {
                return p("dijit.tree.ForestStoreModel", l, {
                    rootId: "$root$",
                    rootLabel: "ROOT",
                    query: null,
                    constructor: function(k) {
                        this.root = {
                            store: this,
                            root: !0,
                            id: k.rootId,
                            label: k.rootLabel,
                            children: k.rootChildren
                        }
                    },
                    mayHaveChildren: function(k) {
                        return k === this.root || this.inherited(arguments)
                    },
                    getChildren: function(k, g, f) {
                        k === this.root ? this.root.children ? g(this.root.children) : this.store.fetch({
                            query: this.query,
                            onComplete: m.hitch(this, function(e) {
                                this.root.children = e;
                                g(e)
                            }),
                            onError: f
                        }) : this.inherited(arguments)
                    },
                    isItem: function(k) {
                        return k === this.root ? !0 : this.inherited(arguments)
                    },
                    fetchItemByIdentity: function(k) {
                        if (k.identity == this.root.id) {
                            var g = k.scope || n.global;
                            k.onItem && k.onItem.call(g, this.root)
                        } else
                            this.inherited(arguments)
                    },
                    getIdentity: function(k) {
                        return k === this.root ? this.root.id : this.inherited(arguments)
                    },
                    getLabel: function(k) {
                        return k === this.root ? this.root.label : this.inherited(arguments)
                    },
                    newItem: function(k, g, f) {
                        return g === this.root ? (this.onNewRootItem(k),
                        this.store.newItem(k)) : this.inherited(arguments)
                    },
                    onNewRootItem: function() {},
                    pasteItem: function(k, g, f, e, d) {
                        if (g === this.root && !e)
                            this.onLeaveRoot(k);
                        this.inherited(arguments, [k, g === this.root ? null : g, f === this.root ? null : f, e, d]);
                        if (f === this.root)
                            this.onAddToRoot(k)
                    },
                    onAddToRoot: function(k) {},
                    onLeaveRoot: function(k) {},
                    _requeryTop: function() {
                        var k = this.root.children || [];
                        this.store.fetch({
                            query: this.query,
                            onComplete: m.hitch(this, function(g) {
                                this.root.children = g;
                                if (k.length != g.length || q.some(k, function(f, e) {
                                    return g[e] != f
                                }))
                                    this.onChildrenChange(this.root, g)
                            })
                        })
                    },
                    onNewItem: function(k, g) {
                        this._requeryTop();
                        this.inherited(arguments)
                    },
                    onDeleteItem: function(k) {
                        -1 != q.indexOf(this.root.children, k) && this._requeryTop();
                        this.inherited(arguments)
                    },
                    onSetItem: function(k, g, f, e) {
                        this._requeryTop();
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/tree/_dndSelector": function() {
            define("dojo/_base/array dojo/_base/declare dojo/_base/kernel dojo/_base/lang dojo/dnd/common dojo/dom dojo/mouse dojo/on dojo/touch ../a11yclick ./_dndContainer".split(" "), function(q, p, n, m, l, k, g, f, e, d, c) {
                return p("dijit.tree._dndSelector", c, {
                    constructor: function() {
                        this.selection = {};
                        this.anchor = null;
                        this.events.push(f(this.tree.domNode, e.press, m.hitch(this, "onMouseDown")), f(this.tree.domNode, e.release, m.hitch(this, "onMouseUp")), f(this.tree.domNode, e.move, m.hitch(this, "onMouseMove")), f(this.tree.domNode, d.press, m.hitch(this, "onClickPress")), f(this.tree.domNode, d.release, m.hitch(this, "onClickRelease")))
                    },
                    singular: !1,
                    getSelectedTreeNodes: function() {
                        var b = [], a = this.selection, h;
                        for (h in a)
                            b.push(a[h]);
                        return b
                    },
                    selectNone: function() {
                        this.setSelection([]);
                        return this
                    },
                    destroy: function() {
                        this.inherited(arguments);
                        this.selection = this.anchor = null
                    },
                    addTreeNode: function(b, a) {
                        this.setSelection(this.getSelectedTreeNodes().concat([b]));
                        a && (this.anchor = b);
                        return b
                    },
                    removeTreeNode: function(b) {
                        var a = q.filter(this.getSelectedTreeNodes(), function(a) {
                            return !k.isDescendant(a.domNode, b.domNode)
                        });
                        this.setSelection(a);
                        return b
                    },
                    isTreeNodeSelected: function(b) {
                        return b.id && !!this.selection[b.id]
                    },
                    setSelection: function(b) {
                        var a = this.getSelectedTreeNodes();
                        q.forEach(this._setDifference(a, b), m.hitch(this, function(a) {
                            a.setSelected(!1);
                            this.anchor == a && delete this.anchor;
                            delete this.selection[a.id]
                        }));
                        q.forEach(this._setDifference(b, a), m.hitch(this, function(a) {
                            a.setSelected(!0);
                            this.selection[a.id] = a
                        }));
                        this._updateSelectionProperties()
                    },
                    _setDifference: function(b, a) {
                        q.forEach(a, function(a) {
                            a.__exclude__ = !0
                        });
                        var h = q.filter(b, function(a) {
                            return !a.__exclude__
                        });
                        q.forEach(a, function(a) {
                            delete a.__exclude__
                        });
                        return h
                    },
                    _updateSelectionProperties: function() {
                        var b = this.getSelectedTreeNodes()
                          , a = []
                          , h = [];
                        q.forEach(b, function(b) {
                            var c = b.getTreePath();
                            h.push(b);
                            a.push(c)
                        }, this);
                        b = q.map(h, function(a) {
                            return a.item
                        });
                        this.tree._set("paths", a);
                        this.tree._set("path", a[0] || []);
                        this.tree._set("selectedNodes", h);
                        this.tree._set("selectedNode", h[0] || null);
                        this.tree._set("selectedItems", b);
                        this.tree._set("selectedItem", b[0] || null)
                    },
                    onClickPress: function(b) {
                        if (!(this.current && this.current.isExpandable && this.tree.isExpandoNode(b.target, this.current))) {
                            "mousedown" == b.type && g.isLeft(b) && b.preventDefault();
                            var a = "keydown" == b.type ? this.tree.focusedChild : this.current;
                            if (a) {
                                var h = l.getCopyKeyState(b)
                                  , c = a.id;
                                this.singular || b.shiftKey || !this.selection[c] ? (this._doDeselect = !1,
                                this.userSelect(a, h, b.shiftKey)) : this._doDeselect = !0
                            }
                        }
                    },
                    onClickRelease: function(b) {
                        this._doDeselect && (this._doDeselect = !1,
                        this.userSelect("keyup" == b.type ? this.tree.focusedChild : this.current, l.getCopyKeyState(b), b.shiftKey))
                    },
                    onMouseMove: function() {
                        this._doDeselect = !1
                    },
                    onMouseDown: function() {},
                    onMouseUp: function() {},
                    _compareNodes: function(b, a) {
                        if (b === a)
                            return 0;
                        if ("sourceIndex"in document.documentElement)
                            return b.sourceIndex - a.sourceIndex;
                        if ("compareDocumentPosition"in document.documentElement)
                            return b.compareDocumentPosition(a) & 2 ? 1 : -1;
                        if (document.createRange) {
                            var h = doc.createRange();
                            h.setStartBefore(b);
                            var c = doc.createRange();
                            c.setStartBefore(a);
                            return h.compareBoundaryPoints(h.END_TO_END, c)
                        }
                        throw Error("dijit.tree._compareNodes don't know how to compare two different nodes in this browser");
                    },
                    userSelect: function(b, a, h) {
                        if (this.singular)
                            this.anchor == b && a ? this.selectNone() : (this.setSelection([b]),
                            this.anchor = b);
                        else if (h && this.anchor) {
                            a = this._compareNodes(this.anchor.rowNode, b.rowNode);
                            h = this.anchor;
                            0 > a ? a = h : (a = b,
                            b = h);
                            for (h = []; a != b; )
                                h.push(a),
                                a = this.tree._getNext(a);
                            h.push(b);
                            this.setSelection(h)
                        } else
                            this.selection[b.id] && a ? this.removeTreeNode(b) : a ? this.addTreeNode(b, !0) : (this.setSelection([b]),
                            this.anchor = b)
                    },
                    getItem: function(b) {
                        return {
                            data: this.selection[b],
                            type: ["treeNode"]
                        }
                    },
                    forInSelectedItems: function(b, a) {
                        a = a || n.global;
                        for (var h in this.selection)
                            b.call(a, this.getItem(h), h, this)
                    }
                })
            })
        },
        "dijit/tree/_dndContainer": function() {
            define("dojo/aspect dojo/_base/declare dojo/dom-class dojo/_base/lang dojo/on dojo/touch".split(" "), function(q, p, n, m, l, k) {
                return p("dijit.tree._dndContainer", null, {
                    constructor: function(g, f) {
                        this.tree = g;
                        this.node = g.domNode;
                        m.mixin(this, f);
                        this.containerState = "";
                        n.add(this.node, "dojoDndContainer");
                        this.events = [l(this.node, k.enter, m.hitch(this, "onOverEvent")), l(this.node, k.leave, m.hitch(this, "onOutEvent")), q.after(this.tree, "_onNodeMouseEnter", m.hitch(this, "onMouseOver"), !0), q.after(this.tree, "_onNodeMouseLeave", m.hitch(this, "onMouseOut"), !0), l(this.node, "dragstart, selectstart", function(e) {
                            e.preventDefault()
                        })]
                    },
                    destroy: function() {
                        for (var g; g = this.events.pop(); )
                            g.remove();
                        this.node = this.parent = null
                    },
                    onMouseOver: function(g) {
                        this.current = g
                    },
                    onMouseOut: function() {
                        this.current = null
                    },
                    _changeState: function(g, f) {
                        var e = "dojoDnd" + g
                          , d = g.toLowerCase() + "State";
                        n.replace(this.node, e + f, e + this[d]);
                        this[d] = f
                    },
                    _addItemClass: function(g, f) {
                        n.add(g, "dojoDndItem" + f)
                    },
                    _removeItemClass: function(g, f) {
                        n.remove(g, "dojoDndItem" + f)
                    },
                    onOverEvent: function() {
                        this._changeState("Container", "Over")
                    },
                    onOutEvent: function() {
                        this._changeState("Container", "")
                    }
                })
            })
        },
        "dijit/_BidiMixin": function() {
            define([], function() {
                return {
                    getTextDir: function(q) {
                        return "auto" == this.textDir ? this._checkContextual(q) : this.textDir
                    },
                    _checkContextual: function(q) {
                        return (q = /[A-Za-z\u05d0-\u065f\u066a-\u06ef\u06fa-\u07ff\ufb1d-\ufdff\ufe70-\ufefc]/.exec(q)) ? "z" >= q[0] ? "ltr" : "rtl" : this.dir ? this.dir : this.isLeftToRight() ? "ltr" : "rtl"
                    },
                    applyTextDir: function(q, p) {
                        if (this.textDir) {
                            var n = this.textDir;
                            "auto" == n && ("undefined" === typeof p && (n = q.tagName.toLowerCase(),
                            p = "input" == n || "textarea" == n ? q.value : q.innerText || q.textContent || ""),
                            n = this._checkContextual(p));
                            q.dir != n && (q.dir = n)
                        }
                    },
                    enforceTextDirWithUcc: function(q, p) {
                        return this.textDir ? (q && (q.originalText = p),
                        ("ltr" == ("auto" == this.textDir ? this._checkContextual(p) : this.textDir) ? "\u202a" : "\u202b") + p + "\u202c") : p
                    },
                    restoreOriginalText: function(q) {
                        q.originalText && (q.text = q.originalText,
                        delete q.originalText);
                        return q
                    },
                    _setTextDirAttr: function(q) {
                        this._created && this.textDir == q || (this._set("textDir", q),
                        q = null,
                        this.displayNode ? (q = this.displayNode,
                        this.displayNode.align = "rtl" == this.dir ? "right" : "left") : q = this.textDirNode || this.focusNode || this.textbox,
                        q && this.applyTextDir(q))
                    }
                }
            })
        },
        "dijit/_BidiSupport": function() {
            define(["dojo/has", "./_WidgetBase", "./_BidiMixin"], function(q, p, n) {
                p.extend(n);
                q.add("dojo-bidi", !0);
                return p
            })
        },
        "dijit/_TimePicker": function() {
            define("dojo/_base/array dojo/date dojo/date/locale dojo/date/stamp dojo/_base/declare dojo/dom-class dojo/dom-construct dojo/_base/kernel dojo/keys dojo/_base/lang dojo/sniff dojo/query dojo/mouse dojo/on ./_WidgetBase ./form/_ListMouseMixin".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t) {
                return l("dijit._TimePicker", [r, t], {
                    baseClass: "dijitTimePicker",
                    pickerMin: "T00:00:00",
                    pickerMax: "T23:59:59",
                    clickableIncrement: "T00:15:00",
                    visibleIncrement: "T01:00:00",
                    value: new Date,
                    _visibleIncrement: 2,
                    _clickableIncrement: 1,
                    _totalIncrements: 10,
                    constraints: {},
                    serialize: m.toISOString,
                    buildRendering: function() {
                        this.inherited(arguments);
                        this.timeMenu = this.containerNode = this.domNode
                    },
                    setValue: function(a) {
                        f.deprecated("dijit._TimePicker:setValue() is deprecated.  Use set('value', ...) instead.", "", "2.0");
                        this.set("value", a)
                    },
                    _setValueAttr: function(a) {
                        this._set("value", a);
                        this._showText()
                    },
                    _setFilterStringAttr: function(a) {
                        this._set("filterString", a);
                        this._showText()
                    },
                    isDisabledDate: function() {
                        return !1
                    },
                    _getFilteredNodes: function(a, b, h, c) {
                        a = this.ownerDocument.createDocumentFragment();
                        for (b = 0; b < this._maxIncrement; b++)
                            (h = this._createOption(b)) && a.appendChild(h);
                        return a
                    },
                    _showText: function() {
                        var a = m.fromISOString;
                        this.domNode.innerHTML = "";
                        this._clickableIncrementDate = a(this.clickableIncrement);
                        this._visibleIncrementDate = a(this.visibleIncrement);
                        var b = function(a) {
                            return 3600 * a.getHours() + 60 * a.getMinutes() + a.getSeconds()
                        }
                          , h = b(this._clickableIncrementDate)
                          , b = b(this._visibleIncrementDate);
                        (this.value || this.currentFocus).getTime();
                        this._refDate = a(this.pickerMin);
                        this._refDate.setFullYear(1970, 0, 1);
                        this._clickableIncrement = 1;
                        this._visibleIncrement = b / h;
                        a = a(this.pickerMax);
                        a.setFullYear(1970, 0, 1);
                        a = .001 * (a.getTime() - this._refDate.getTime());
                        this._maxIncrement = Math.ceil((a + 1) / h);
                        h = this._getFilteredNodes();
                        !h.firstChild && this.filterString ? (this.filterString = "",
                        this._showText()) : this.domNode.appendChild(h)
                    },
                    constructor: function() {
                        this.constraints = {}
                    },
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this._setConstraintsAttr(this.constraints)
                    },
                    _setConstraintsAttr: function(a) {
                        for (var b in {
                            clickableIncrement: 1,
                            visibleIncrement: 1,
                            pickerMin: 1,
                            pickerMax: 1
                        })
                            b in a && (this[b] = a[b]);
                        a.locale || (a.locale = this.lang)
                    },
                    _createOption: function(a) {
                        var b = new Date(this._refDate)
                          , h = this._clickableIncrementDate;
                        b.setHours(b.getHours() + h.getHours() * a, b.getMinutes() + h.getMinutes() * a, b.getSeconds() + h.getSeconds() * a);
                        "time" == this.constraints.selector && b.setFullYear(1970, 0, 1);
                        var c = n.format(b, this.constraints);
                        if (this.filterString && 0 !== c.toLowerCase().indexOf(this.filterString))
                            return null;
                        h = this.ownerDocument.createElement("div");
                        h.className = this.baseClass + "Item";
                        h.date = b;
                        h.idx = a;
                        g.create("div", {
                            "class": this.baseClass + "ItemInner",
                            innerHTML: c
                        }, h);
                        c = 1 > a % this._visibleIncrement && -1 < a % this._visibleIncrement;
                        a = !c && !(a % this._clickableIncrement);
                        c ? h.className += " " + this.baseClass + "Marker" : a && (h.className += " " + this.baseClass + "Tick");
                        this.isDisabledDate(b) && (h.className += " " + this.baseClass + "ItemDisabled");
                        this.value && !p.compare(this.value, b, this.constraints.selector) && (h.selected = !0,
                        h.className += " " + this.baseClass + "ItemSelected",
                        this._selectedDiv = h,
                        c ? h.className += " " + this.baseClass + "MarkerSelected" : a && (h.className += " " + this.baseClass + "TickSelected"),
                        this._highlightOption(h, !0));
                        return h
                    },
                    onOpen: function() {
                        this.inherited(arguments);
                        this.set("selected", this._selectedDiv)
                    },
                    _onOptionSelected: function(a, b) {
                        var h = a.target.date || a.target.parentNode.date;
                        h && !this.isDisabledDate(h) && (this._set("value", h),
                        this.emit("input"),
                        b && (this._highlighted_option = null,
                        this.set("value", h),
                        this.onChange(h)))
                    },
                    onChange: function() {},
                    _highlightOption: function(a, b) {
                        if (a) {
                            if (b)
                                this._highlighted_option && this._highlightOption(this._highlighted_option, !1),
                                this._highlighted_option = a;
                            else {
                                if (this._highlighted_option !== a)
                                    return;
                                this._highlighted_option = null
                            }
                            k.toggle(a, this.baseClass + "ItemHover", b);
                            k.contains(a, this.baseClass + "Marker") ? k.toggle(a, this.baseClass + "MarkerHover", b) : k.toggle(a, this.baseClass + "TickHover", b)
                        }
                    },
                    handleKey: function(a) {
                        if (a.keyCode == e.DOWN_ARROW)
                            return this.selectNextNode(),
                            this._onOptionSelected({
                                target: this._highlighted_option
                            }, !1),
                            a.stopPropagation(),
                            a.preventDefault(),
                            !1;
                        if (a.keyCode == e.UP_ARROW)
                            return this.selectPreviousNode(),
                            this._onOptionSelected({
                                target: this._highlighted_option
                            }, !1),
                            a.stopPropagation(),
                            a.preventDefault(),
                            !1;
                        if (a.keyCode == e.ENTER || a.keyCode === e.TAB) {
                            if (!this._keyboardSelected && a.keyCode === e.TAB)
                                return !0;
                            this._highlighted_option && this._onOptionSelected({
                                target: this._highlighted_option
                            }, !0);
                            return a.keyCode === e.TAB
                        }
                    },
                    onHover: function(a) {
                        this._highlightOption(a, !0)
                    },
                    onUnhover: function(a) {
                        this._highlightOption(a, !1)
                    },
                    onSelect: function(a) {
                        this._highlightOption(a, !0)
                    },
                    onDeselect: function(a) {
                        this._highlightOption(a, !1)
                    },
                    onClick: function(a) {
                        this._onOptionSelected({
                            target: a
                        }, !0)
                    }
                })
            })
        },
        "dijit/form/_ListMouseMixin": function() {
            define(["dojo/_base/declare", "dojo/on", "dojo/touch", "./_ListBase"], function(q, p, n, m) {
                return q("dijit.form._ListMouseMixin", m, {
                    postCreate: function() {
                        this.inherited(arguments);
                        this.domNode.dojoClick = !0;
                        this._listConnect("click", "_onClick");
                        this._listConnect("mousedown", "_onMouseDown");
                        this._listConnect("mouseup", "_onMouseUp");
                        this._listConnect("mouseover", "_onMouseOver");
                        this._listConnect("mouseout", "_onMouseOut")
                    },
                    _onClick: function(l, k) {
                        this._setSelectedAttr(k, !1);
                        this._deferredClick && this._deferredClick.remove();
                        this._deferredClick = this.defer(function() {
                            this._deferredClick = null;
                            this.onClick(k)
                        })
                    },
                    _onMouseDown: function(l, k) {
                        this._hoveredNode && (this.onUnhover(this._hoveredNode),
                        this._hoveredNode = null);
                        this._isDragging = !0;
                        this._setSelectedAttr(k, !1)
                    },
                    _onMouseUp: function(l, k) {
                        this._isDragging = !1;
                        var g = this.selected
                          , f = this._hoveredNode;
                        g && k == g ? this.defer(function() {
                            this._onClick(l, g)
                        }) : f && this.defer(function() {
                            this._onClick(l, f)
                        })
                    },
                    _onMouseOut: function(l, k) {
                        this._hoveredNode && (this.onUnhover(this._hoveredNode),
                        this._hoveredNode = null);
                        this._isDragging && (this._cancelDrag = (new Date).getTime() + 1E3)
                    },
                    _onMouseOver: function(l, k) {
                        this._cancelDrag && ((new Date).getTime() > this._cancelDrag && (this._isDragging = !1),
                        this._cancelDrag = null);
                        this._hoveredNode = k;
                        this.onHover(k);
                        this._isDragging && this._setSelectedAttr(k, !1)
                    }
                })
            })
        },
        "dijit/form/_ListBase": function() {
            define(["dojo/_base/declare", "dojo/on", "dojo/window"], function(q, p, n) {
                return q("dijit.form._ListBase", null, {
                    selected: null,
                    _listConnect: function(m, l) {
                        var k = this;
                        return k.own(p(k.containerNode, p.selector(function(g, f, e) {
                            return g.parentNode == e
                        }, m), function(g) {
                            k[l](g, this)
                        }))
                    },
                    selectFirstNode: function() {
                        for (var m = this.containerNode.firstChild; m && "none" == m.style.display; )
                            m = m.nextSibling;
                        this._setSelectedAttr(m, !0)
                    },
                    selectLastNode: function() {
                        for (var m = this.containerNode.lastChild; m && "none" == m.style.display; )
                            m = m.previousSibling;
                        this._setSelectedAttr(m, !0)
                    },
                    selectNextNode: function() {
                        var m = this.selected;
                        if (m) {
                            for (m = m.nextSibling; m && "none" == m.style.display; )
                                m = m.nextSibling;
                            m ? this._setSelectedAttr(m, !0) : this.selectFirstNode()
                        } else
                            this.selectFirstNode()
                    },
                    selectPreviousNode: function() {
                        var m = this.selected;
                        if (m) {
                            for (m = m.previousSibling; m && "none" == m.style.display; )
                                m = m.previousSibling;
                            m ? this._setSelectedAttr(m, !0) : this.selectLastNode()
                        } else
                            this.selectLastNode()
                    },
                    _setSelectedAttr: function(m, l) {
                        if (this.selected != m) {
                            var k = this.selected;
                            if (k)
                                this.onDeselect(k);
                            m && (l && n.scrollIntoView(m),
                            this.onSelect(m));
                            this._set("selected", m)
                        } else if (m)
                            this.onSelect(m)
                    }
                })
            })
        },
        "dijit/form/CheckBox": function() {
            define("require dojo/_base/declare dojo/dom-attr dojo/has dojo/query dojo/ready ./ToggleButton ./_CheckBoxMixin dojo/text!./templates/CheckBox.html dojo/NodeList-dom ../a11yclick".split(" "), function(q, p, n, m, l, k, g, f, e) {
                m("dijit-legacy-requires") && k(0, function() {
                    q(["dijit/form/RadioButton"])
                });
                return p("dijit.form.CheckBox", [g, f], {
                    templateString: e,
                    baseClass: "dijitCheckBox",
                    _setValueAttr: function(d, c) {
                        "string" == typeof d && (this.inherited(arguments),
                        d = !0);
                        this._created && this.set("checked", d, c)
                    },
                    _getValueAttr: function() {
                        return this.checked && this._get("value")
                    },
                    _setIconClassAttr: null,
                    _setNameAttr: "focusNode",
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.checkedAttrSetting = ""
                    },
                    _fillContent: function() {},
                    _onFocus: function() {
                        this.id && l("label[for\x3d'" + this.id + "']").addClass("dijitFocusedLabel");
                        this.inherited(arguments)
                    },
                    _onBlur: function() {
                        this.id && l("label[for\x3d'" + this.id + "']").removeClass("dijitFocusedLabel");
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/form/ToggleButton": function() {
            define(["dojo/_base/declare", "dojo/_base/kernel", "./Button", "./_ToggleButtonMixin"], function(q, p, n, m) {
                return q("dijit.form.ToggleButton", [n, m], {
                    baseClass: "dijitToggleButton",
                    setChecked: function(l) {
                        p.deprecated("setChecked(" + l + ") is deprecated. Use set('checked'," + l + ") instead.", "", "2.0");
                        this.set("checked", l)
                    }
                })
            })
        },
        "dijit/form/_ToggleButtonMixin": function() {
            define(["dojo/_base/declare", "dojo/dom-attr"], function(q, p) {
                return q("dijit.form._ToggleButtonMixin", null, {
                    checked: !1,
                    _aria_attr: "aria-pressed",
                    _onClick: function(n) {
                        var m = this.checked;
                        this._set("checked", !m);
                        var l = this.inherited(arguments);
                        this.set("checked", l ? this.checked : m);
                        return l
                    },
                    _setCheckedAttr: function(n, m) {
                        this._set("checked", n);
                        var l = this.focusNode || this.domNode;
                        this._created && p.get(l, "checked") != !!n && p.set(l, "checked", !!n);
                        l.setAttribute(this._aria_attr, String(n));
                        this._handleOnChange(n, m)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        var n = this.focusNode || this.domNode;
                        this.checked && n.setAttribute("checked", "checked");
                        void 0 === this._resetValue && (this._lastValueReported = this._resetValue = this.checked)
                    },
                    reset: function() {
                        this._hasBeenBlurred = !1;
                        this.set("checked", this.params.checked || !1)
                    }
                })
            })
        },
        "dijit/form/_CheckBoxMixin": function() {
            define(["dojo/_base/declare", "dojo/dom-attr"], function(q, p) {
                return q("dijit.form._CheckBoxMixin", null, {
                    type: "checkbox",
                    value: "on",
                    readOnly: !1,
                    _aria_attr: "aria-checked",
                    _setReadOnlyAttr: function(n) {
                        this._set("readOnly", n);
                        p.set(this.focusNode, "readOnly", n)
                    },
                    _setLabelAttr: void 0,
                    _getSubmitValue: function(n) {
                        return null == n || "" === n ? "on" : n
                    },
                    _setValueAttr: function(n) {
                        n = this._getSubmitValue(n);
                        this._set("value", n);
                        p.set(this.focusNode, "value", n)
                    },
                    reset: function() {
                        this.inherited(arguments);
                        this._set("value", this._getSubmitValue(this.params.value));
                        p.set(this.focusNode, "value", this.value)
                    },
                    _onClick: function(n) {
                        return this.readOnly ? (n.stopPropagation(),
                        n.preventDefault(),
                        !1) : this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/form/ComboBox": function() {
            define(["dojo/_base/declare", "./ValidationTextBox", "./ComboBoxMixin"], function(q, p, n) {
                return q("dijit.form.ComboBox", [p, n], {})
            })
        },
        "dijit/form/ValidationTextBox": function() {
            define("dojo/_base/declare dojo/_base/kernel dojo/_base/lang dojo/i18n ./TextBox ../Tooltip dojo/text!./templates/ValidationTextBox.html dojo/i18n!./nls/validate".split(" "), function(q, p, n, m, l, k, g) {
                var f = q("dijit.form.ValidationTextBox", l, {
                    templateString: g,
                    required: !1,
                    promptMessage: "",
                    invalidMessage: "$_unset_$",
                    missingMessage: "$_unset_$",
                    message: "",
                    constraints: {},
                    pattern: ".*",
                    regExp: "",
                    regExpGen: function() {},
                    state: "",
                    tooltipPosition: [],
                    _deprecateRegExp: function(e, d) {
                        d != f.prototype[e] && (p.deprecated("ValidationTextBox id\x3d" + this.id + ", set('" + e + "', ...) is deprecated.  Use set('pattern', ...) instead.", "", "2.0"),
                        this.set("pattern", d))
                    },
                    _setRegExpGenAttr: function(e) {
                        this._deprecateRegExp("regExpGen", e);
                        this._set("regExpGen", this._computeRegexp)
                    },
                    _setRegExpAttr: function(e) {
                        this._deprecateRegExp("regExp", e)
                    },
                    _setValueAttr: function() {
                        this.inherited(arguments);
                        this._refreshState()
                    },
                    validator: function(e, d) {
                        return (new RegExp("^(?:" + this._computeRegexp(d) + ")" + (this.required ? "" : "?") + "$")).test(e) && (!this.required || !this._isEmpty(e)) && (this._isEmpty(e) || void 0 !== this.parse(e, d))
                    },
                    _isValidSubset: function() {
                        return 0 == this.textbox.value.search(this._partialre)
                    },
                    isValid: function() {
                        return this.validator(this.textbox.value, this.get("constraints"))
                    },
                    _isEmpty: function(e) {
                        return (this.trim ? /^\s*$/ : /^$/).test(e)
                    },
                    getErrorMessage: function() {
                        var e = "$_unset_$" == this.invalidMessage ? this.messages.invalidMessage : this.invalidMessage ? this.invalidMessage : this.promptMessage
                          , d = "$_unset_$" == this.missingMessage ? this.messages.missingMessage : this.missingMessage ? this.missingMessage : e;
                        return this.required && this._isEmpty(this.textbox.value) ? d : e
                    },
                    getPromptMessage: function() {
                        return this.promptMessage
                    },
                    _maskValidSubsetError: !0,
                    validate: function(e) {
                        var d = ""
                          , c = this.disabled || this.isValid(e);
                        c && (this._maskValidSubsetError = !0);
                        var b = this._isEmpty(this.textbox.value)
                          , a = !c && e && this._isValidSubset();
                        this._set("state", c ? "" : ((!this._hasBeenBlurred || e) && b || a) && (this._maskValidSubsetError || a && !this._hasBeenBlurred && e) ? "Incomplete" : "Error");
                        this.focusNode.setAttribute("aria-invalid", "Error" == this.state ? "true" : "false");
                        "Error" == this.state ? (this._maskValidSubsetError = e && a,
                        d = this.getErrorMessage(e)) : "Incomplete" == this.state ? (d = this.getPromptMessage(e),
                        this._maskValidSubsetError = !this._hasBeenBlurred || e) : b && (d = this.getPromptMessage(e));
                        this.set("message", d);
                        return c
                    },
                    displayMessage: function(e) {
                        e && this.focused ? k.show(e, this.domNode, this.tooltipPosition, !this.isLeftToRight()) : k.hide(this.domNode)
                    },
                    _refreshState: function() {
                        this._created && this.validate(this.focused);
                        this.inherited(arguments)
                    },
                    constructor: function(e) {
                        this.constraints = n.clone(this.constraints);
                        this.baseClass += " dijitValidationTextBox"
                    },
                    startup: function() {
                        this.inherited(arguments);
                        this._refreshState()
                    },
                    _setConstraintsAttr: function(e) {
                        !e.locale && this.lang && (e.locale = this.lang);
                        this._set("constraints", e);
                        this._refreshState()
                    },
                    _setPatternAttr: function(e) {
                        this._set("pattern", e);
                        this._refreshState()
                    },
                    _computeRegexp: function(e) {
                        var d = this.pattern;
                        "function" == typeof d && (d = d.call(this, e));
                        if (d != this._lastRegExp) {
                            var c = "";
                            this._lastRegExp = d;
                            ".*" != d && d.replace(/\\.|\[\]|\[.*?[^\\]{1}\]|\{.*?\}|\(\?[=:!]|./g, function(b) {
                                switch (b.charAt(0)) {
                                case "{":
                                case "+":
                                case "?":
                                case "*":
                                case "^":
                                case "$":
                                case "|":
                                case "(":
                                    c += b;
                                    break;
                                case ")":
                                    c += "|$)";
                                    break;
                                default:
                                    c += "(?:" + b + "|$)"
                                }
                            });
                            try {
                                "".search(c)
                            } catch (b) {
                                c = this.pattern,
                                console.warn("RegExp error in " + this.declaredClass + ": " + this.pattern)
                            }
                            this._partialre = "^(?:" + c + ")$"
                        }
                        return d
                    },
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.messages = m.getLocalization("dijit.form", "validate", this.lang);
                        this._setConstraintsAttr(this.constraints)
                    },
                    _setDisabledAttr: function(e) {
                        this.inherited(arguments);
                        this._refreshState()
                    },
                    _setRequiredAttr: function(e) {
                        this._set("required", e);
                        this.focusNode.setAttribute("aria-required", e);
                        this._refreshState()
                    },
                    _setMessageAttr: function(e) {
                        this._set("message", e);
                        this.displayMessage(e)
                    },
                    reset: function() {
                        this._maskValidSubsetError = !0;
                        this.inherited(arguments)
                    },
                    _onBlur: function() {
                        this.displayMessage("");
                        this.inherited(arguments)
                    },
                    destroy: function() {
                        k.hide(this.domNode);
                        this.inherited(arguments)
                    }
                });
                return f
            })
        },
        "dijit/form/TextBox": function() {
            define("dojo/_base/declare dojo/dom-construct dojo/dom-style dojo/_base/kernel dojo/_base/lang dojo/on dojo/sniff ./_FormValueWidget ./_TextBoxMixin dojo/text!./templates/TextBox.html ../main".split(" "), function(q, p, n, m, l, k, g, f, e, d, c) {
                f = q("dijit.form.TextBox" + (g("dojo-bidi") ? "_NoBidi" : ""), [f, e], {
                    templateString: d,
                    _singleNodeTemplate: '\x3cinput class\x3d"dijit dijitReset dijitLeft dijitInputField" data-dojo-attach-point\x3d"textbox,focusNode" autocomplete\x3d"off" type\x3d"${type}" ${!nameAttrSetting} /\x3e',
                    _buttonInputDisabled: g("ie") ? "disabled" : "",
                    baseClass: "dijitTextBox",
                    postMixInProperties: function() {
                        var b = this.type.toLowerCase();
                        if (this.templateString && "input" == this.templateString.toLowerCase() || ("hidden" == b || "file" == b) && this.templateString == this.constructor.prototype.templateString)
                            this.templateString = this._singleNodeTemplate;
                        this.inherited(arguments)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        9 > g("ie") && this.defer(function() {
                            try {
                                var b = n.getComputedStyle(this.domNode);
                                if (b) {
                                    var a = b.fontFamily;
                                    if (a) {
                                        var h = this.domNode.getElementsByTagName("INPUT");
                                        if (h)
                                            for (b = 0; b < h.length; b++)
                                                h[b].style.fontFamily = a
                                    }
                                }
                            } catch (r) {}
                        })
                    },
                    _setPlaceHolderAttr: function(b) {
                        this._set("placeHolder", b);
                        this._phspan || (this._attachPoints.push("_phspan"),
                        this._phspan = p.create("span", {
                            className: "dijitPlaceHolder dijitInputField"
                        }, this.textbox, "after"),
                        this.own(k(this._phspan, "mousedown", function(a) {
                            a.preventDefault()
                        }), k(this._phspan, "touchend, pointerup, MSPointerUp", l.hitch(this, function() {
                            this.focus()
                        }))));
                        this._phspan.innerHTML = "";
                        this._phspan.appendChild(this._phspan.ownerDocument.createTextNode(b));
                        this._updatePlaceHolder()
                    },
                    _onInput: function(b) {
                        this.inherited(arguments);
                        this._updatePlaceHolder()
                    },
                    _updatePlaceHolder: function() {
                        this._phspan && (this._phspan.style.display = this.placeHolder && !this.textbox.value ? "" : "none")
                    },
                    _setValueAttr: function(b, a, h) {
                        this.inherited(arguments);
                        this._updatePlaceHolder()
                    },
                    getDisplayedValue: function() {
                        m.deprecated(this.declaredClass + "::getDisplayedValue() is deprecated. Use get('displayedValue') instead.", "", "2.0");
                        return this.get("displayedValue")
                    },
                    setDisplayedValue: function(b) {
                        m.deprecated(this.declaredClass + "::setDisplayedValue() is deprecated. Use set('displayedValue', ...) instead.", "", "2.0");
                        this.set("displayedValue", b)
                    },
                    _onBlur: function(b) {
                        this.disabled || (this.inherited(arguments),
                        this._updatePlaceHolder(),
                        g("mozilla") && this.selectOnClick && (this.textbox.selectionStart = this.textbox.selectionEnd = void 0))
                    },
                    _onFocus: function(b) {
                        this.disabled || this.readOnly || (this.inherited(arguments),
                        this._updatePlaceHolder())
                    }
                });
                9 > g("ie") && (f.prototype._isTextSelected = function() {
                    var b = this.ownerDocument.selection.createRange();
                    return b.parentElement() == this.textbox && 0 < b.text.length
                }
                ,
                c._setSelectionRange = e._setSelectionRange = function(b, a, h) {
                    b.createTextRange && (b = b.createTextRange(),
                    b.collapse(!0),
                    b.moveStart("character", -99999),
                    b.moveStart("character", a),
                    b.moveEnd("character", h - a),
                    b.select())
                }
                );
                g("dojo-bidi") && (f = q("dijit.form.TextBox", f, {
                    _setPlaceHolderAttr: function(b) {
                        this.inherited(arguments);
                        this.applyTextDir(this._phspan)
                    }
                }));
                return f
            })
        },
        "dijit/form/_FormValueWidget": function() {
            define(["dojo/_base/declare", "dojo/sniff", "./_FormWidget", "./_FormValueMixin"], function(q, p, n, m) {
                return q("dijit.form._FormValueWidget", [n, m], {
                    _layoutHackIE7: function() {
                        if (7 == p("ie"))
                            for (var l = this.domNode, k = l.parentNode, g = l.firstChild || l, f = g.style.filter, e = this; k && 0 == k.clientHeight; )
                                (function() {
                                    var d = e.connect(k, "onscroll", function() {
                                        e.disconnect(d);
                                        g.style.filter = (new Date).getMilliseconds();
                                        e.defer(function() {
                                            g.style.filter = f
                                        })
                                    })
                                }
                                )(),
                                k = k.parentNode
                    }
                })
            })
        },
        "dijit/form/_FormValueMixin": function() {
            define("dojo/_base/declare dojo/dom-attr dojo/keys dojo/_base/lang dojo/on ./_FormWidgetMixin".split(" "), function(q, p, n, m, l, k) {
                return q("dijit.form._FormValueMixin", k, {
                    readOnly: !1,
                    _setReadOnlyAttr: function(g) {
                        p.set(this.focusNode, "readOnly", g);
                        this._set("readOnly", g)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        void 0 === this._resetValue && (this._lastValueReported = this._resetValue = this.value)
                    },
                    _setValueAttr: function(g, f) {
                        this._handleOnChange(g, f)
                    },
                    _handleOnChange: function(g, f) {
                        this._set("value", g);
                        this.inherited(arguments)
                    },
                    undo: function() {
                        this._setValueAttr(this._lastValueReported, !1)
                    },
                    reset: function() {
                        this._hasBeenBlurred = !1;
                        this._setValueAttr(this._resetValue, !0)
                    }
                })
            })
        },
        "dijit/form/_TextBoxMixin": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom dojo/sniff dojo/keys dojo/_base/lang dojo/on ../main".split(" "), function(q, p, n, m, l, k, g, f) {
                var e = p("dijit.form._TextBoxMixin" + (m("dojo-bidi") ? "_NoBidi" : ""), null, {
                    trim: !1,
                    uppercase: !1,
                    lowercase: !1,
                    propercase: !1,
                    maxLength: "",
                    selectOnClick: !1,
                    placeHolder: "",
                    _getValueAttr: function() {
                        return this.parse(this.get("displayedValue"), this.constraints)
                    },
                    _setValueAttr: function(d, c, b) {
                        var a;
                        void 0 !== d && (a = this.filter(d),
                        "string" != typeof b && (b = null === a || "number" == typeof a && isNaN(a) ? "" : this.filter(this.format(a, this.constraints)),
                        0 != this.compare(a, this.filter(this.parse(b, this.constraints))) && (b = null)));
                        null == b || "number" == typeof b && isNaN(b) || this.textbox.value == b || (this.textbox.value = b,
                        this._set("displayedValue", this.get("displayedValue")));
                        this.inherited(arguments, [a, c])
                    },
                    displayedValue: "",
                    _getDisplayedValueAttr: function() {
                        return this.filter(this.textbox.value)
                    },
                    _setDisplayedValueAttr: function(d) {
                        null == d ? d = "" : "string" != typeof d && (d = String(d));
                        this.textbox.value = d;
                        this._setValueAttr(this.get("value"), void 0);
                        this._set("displayedValue", this.get("displayedValue"))
                    },
                    format: function(d) {
                        return null == d ? "" : d.toString ? d.toString() : d
                    },
                    parse: function(d) {
                        return d
                    },
                    _refreshState: function() {},
                    onInput: function() {},
                    _onInput: function(d) {
                        this._lastInputEventValue = this.textbox.value;
                        this._processInput(this._lastInputProducingEvent || d);
                        delete this._lastInputProducingEvent;
                        this.intermediateChanges && this._handleOnChange(this.get("value"), !1)
                    },
                    _processInput: function() {
                        this._refreshState();
                        this._set("displayedValue", this.get("displayedValue"))
                    },
                    postCreate: function() {
                        this.textbox.setAttribute("value", this.textbox.value);
                        this.inherited(arguments);
                        this.own(g(this.textbox, "keydown, keypress, paste, cut, compositionend", k.hitch(this, function(d) {
                            var c;
                            if ("keydown" == d.type && 229 != d.keyCode) {
                                c = d.keyCode;
                                switch (c) {
                                case l.SHIFT:
                                case l.ALT:
                                case l.CTRL:
                                case l.META:
                                case l.CAPS_LOCK:
                                case l.NUM_LOCK:
                                case l.SCROLL_LOCK:
                                    return
                                }
                                if (!d.ctrlKey && !d.metaKey && !d.altKey) {
                                    switch (c) {
                                    case l.NUMPAD_0:
                                    case l.NUMPAD_1:
                                    case l.NUMPAD_2:
                                    case l.NUMPAD_3:
                                    case l.NUMPAD_4:
                                    case l.NUMPAD_5:
                                    case l.NUMPAD_6:
                                    case l.NUMPAD_7:
                                    case l.NUMPAD_8:
                                    case l.NUMPAD_9:
                                    case l.NUMPAD_MULTIPLY:
                                    case l.NUMPAD_PLUS:
                                    case l.NUMPAD_ENTER:
                                    case l.NUMPAD_MINUS:
                                    case l.NUMPAD_PERIOD:
                                    case l.NUMPAD_DIVIDE:
                                        return
                                    }
                                    if (65 <= c && 90 >= c || 48 <= c && 57 >= c || c == l.SPACE)
                                        return;
                                    c = !1;
                                    for (var b in l)
                                        if (l[b] === d.keyCode) {
                                            c = !0;
                                            break
                                        }
                                    if (!c)
                                        return
                                }
                            }
                            (c = 32 <= d.charCode ? String.fromCharCode(d.charCode) : d.charCode) || (c = 65 <= d.keyCode && 90 >= d.keyCode || 48 <= d.keyCode && 57 >= d.keyCode || d.keyCode == l.SPACE ? String.fromCharCode(d.keyCode) : d.keyCode);
                            c || (c = 229);
                            if ("keypress" == d.type) {
                                if ("string" != typeof c)
                                    return;
                                if ("a" <= c && "z" >= c || "A" <= c && "Z" >= c || "0" <= c && "9" >= c || " " === c)
                                    if (d.ctrlKey || d.metaKey || d.altKey)
                                        return
                            }
                            var a = {
                                faux: !0
                            }, h;
                            for (h in d)
                                /^(layer[XY]|returnValue|keyLocation)$/.test(h) || (b = d[h],
                                "function" != typeof b && "undefined" != typeof b && (a[h] = b));
                            k.mixin(a, {
                                charOrCode: c,
                                _wasConsumed: !1,
                                preventDefault: function() {
                                    a._wasConsumed = !0;
                                    d.preventDefault()
                                },
                                stopPropagation: function() {
                                    d.stopPropagation()
                                }
                            });
                            this._lastInputProducingEvent = a;
                            !1 === this.onInput(a) && (a.preventDefault(),
                            a.stopPropagation());
                            if (!a._wasConsumed && 9 >= m("ie"))
                                switch (d.keyCode) {
                                case l.TAB:
                                case l.ESCAPE:
                                case l.DOWN_ARROW:
                                case l.UP_ARROW:
                                case l.LEFT_ARROW:
                                case l.RIGHT_ARROW:
                                    break;
                                default:
                                    d.keyCode == l.ENTER && "textarea" != this.textbox.tagName.toLowerCase() || this.defer(function() {
                                        this.textbox.value !== this._lastInputEventValue && g.emit(this.textbox, "input", {
                                            bubbles: !0
                                        })
                                    })
                                }
                        })), g(this.textbox, "input", k.hitch(this, "_onInput")), g(this.domNode, "keypress", function(d) {
                            d.stopPropagation()
                        }))
                    },
                    _blankValue: "",
                    filter: function(d) {
                        if (null === d)
                            return this._blankValue;
                        if ("string" != typeof d)
                            return d;
                        this.trim && (d = k.trim(d));
                        this.uppercase && (d = d.toUpperCase());
                        this.lowercase && (d = d.toLowerCase());
                        this.propercase && (d = d.replace(/[^\s]+/g, function(c) {
                            return c.substring(0, 1).toUpperCase() + c.substring(1)
                        }));
                        return d
                    },
                    _setBlurValue: function() {
                        this._setValueAttr(this.get("value"), !0)
                    },
                    _onBlur: function(d) {
                        this.disabled || (this._setBlurValue(),
                        this.inherited(arguments))
                    },
                    _isTextSelected: function() {
                        return this.textbox.selectionStart != this.textbox.selectionEnd
                    },
                    _onFocus: function(d) {
                        this.disabled || this.readOnly || (this.selectOnClick && "mouse" == d && (this._selectOnClickHandle = g.once(this.domNode, "mouseup, touchend", k.hitch(this, function(c) {
                            this._isTextSelected() || e.selectInputText(this.textbox)
                        })),
                        this.own(this._selectOnClickHandle),
                        this.defer(function() {
                            this._selectOnClickHandle && (this._selectOnClickHandle.remove(),
                            this._selectOnClickHandle = null)
                        }, 500)),
                        this.inherited(arguments),
                        this._refreshState())
                    },
                    reset: function() {
                        this.textbox.value = "";
                        this.inherited(arguments)
                    }
                });
                m("dojo-bidi") && (e = p("dijit.form._TextBoxMixin", e, {
                    _setValueAttr: function() {
                        this.inherited(arguments);
                        this.applyTextDir(this.focusNode)
                    },
                    _setDisplayedValueAttr: function() {
                        this.inherited(arguments);
                        this.applyTextDir(this.focusNode)
                    },
                    _onInput: function() {
                        this.applyTextDir(this.focusNode);
                        this.inherited(arguments)
                    }
                }));
                e._setSelectionRange = f._setSelectionRange = function(d, c, b) {
                    d.setSelectionRange && d.setSelectionRange(c, b)
                }
                ;
                e.selectInputText = f.selectInputText = function(d, c, b) {
                    d = n.byId(d);
                    isNaN(c) && (c = 0);
                    isNaN(b) && (b = d.value ? d.value.length : 0);
                    try {
                        d.focus(),
                        e._setSelectionRange(d, c, b)
                    } catch (a) {}
                }
                ;
                return e
            })
        },
        "dijit/form/nls/validate": function() {
            define({
                root: {
                    invalidMessage: "The value entered is not valid.",
                    missingMessage: "This value is required.",
                    rangeMessage: "This value is out of range."
                },
                bs: !0,
                mk: !0,
                sr: !0,
                zh: !0,
                "zh-tw": !0,
                uk: !0,
                tr: !0,
                th: !0,
                sv: !0,
                sl: !0,
                sk: !0,
                ru: !0,
                ro: !0,
                pt: !0,
                "pt-pt": !0,
                pl: !0,
                nl: !0,
                nb: !0,
                ko: !0,
                kk: !0,
                ja: !0,
                it: !0,
                id: !0,
                hu: !0,
                hr: !0,
                he: !0,
                fr: !0,
                fi: !0,
                eu: !0,
                es: !0,
                el: !0,
                de: !0,
                da: !0,
                cs: !0,
                ca: !0,
                bg: !0,
                az: !0,
                ar: !0
            })
        },
        "dijit/form/nls/zh/validate": function() {
            define({
                invalidMessage: "\u8f93\u5165\u7684\u503c\u65e0\u6548\u3002",
                missingMessage: "\u8be5\u503c\u662f\u5fc5\u9700\u7684\u3002",
                rangeMessage: "\u6b64\u503c\u8d85\u51fa\u8303\u56f4\u3002"
            })
        },
        "dijit/form/ComboBoxMixin": function() {
            define("dojo/_base/declare dojo/Deferred dojo/_base/kernel dojo/_base/lang dojo/store/util/QueryResults ./_AutoCompleterMixin ./_ComboBoxMenu ../_HasDropDown dojo/text!./templates/DropDownBox.html".split(" "), function(q, p, n, m, l, k, g, f, e) {
                return q("dijit.form.ComboBoxMixin", [f, k], {
                    dropDownClass: g,
                    hasDownArrow: !0,
                    templateString: e,
                    baseClass: "dijitTextBox dijitComboBox",
                    cssStateNodes: {
                        _buttonNode: "dijitDownArrowButton"
                    },
                    _setHasDownArrowAttr: function(d) {
                        this._set("hasDownArrow", d);
                        this._buttonNode.style.display = d ? "" : "none"
                    },
                    _showResultList: function() {
                        this.displayMessage("");
                        this.inherited(arguments)
                    },
                    _setStoreAttr: function(d) {
                        d.get || m.mixin(d, {
                            _oldAPI: !0,
                            get: function(c) {
                                var b = new p;
                                this.fetchItemByIdentity({
                                    identity: c,
                                    onItem: function(a) {
                                        b.resolve(a)
                                    },
                                    onError: function(a) {
                                        b.reject(a)
                                    }
                                });
                                return b.promise
                            },
                            query: function(c, b) {
                                var a = new p(function() {
                                    h.abort && h.abort()
                                }
                                );
                                a.total = new p;
                                var h = this.fetch(m.mixin({
                                    query: c,
                                    onBegin: function(b) {
                                        a.total.resolve(b)
                                    },
                                    onComplete: function(b) {
                                        a.resolve(b)
                                    },
                                    onError: function(b) {
                                        a.reject(b)
                                    }
                                }, b));
                                return l(a)
                            }
                        });
                        this._set("store", d)
                    },
                    postMixInProperties: function() {
                        var d = this.params.store || this.store;
                        d && this._setStoreAttr(d);
                        this.inherited(arguments);
                        if (!this.params.store && this.store && !this.store._oldAPI) {
                            var c = this.declaredClass;
                            m.mixin(this.store, {
                                getValue: function(b, a) {
                                    n.deprecated(c + ".store.getValue(item, attr) is deprecated for builtin store.  Use item.attr directly", "", "2.0");
                                    return b[a]
                                },
                                getLabel: function(b) {
                                    n.deprecated(c + ".store.getLabel(item) is deprecated for builtin store.  Use item.label directly", "", "2.0");
                                    return b.name
                                },
                                fetch: function(b) {
                                    n.deprecated(c + ".store.fetch() is deprecated for builtin store.", "Use store.query()", "2.0");
                                    require(["dojo/data/ObjectStore"], m.hitch(this, function(a) {
                                        (new a({
                                            objectStore: this
                                        })).fetch(b)
                                    }))
                                }
                            })
                        }
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        this.focusNode.setAttribute("aria-autocomplete", this.autoComplete ? "both" : "list")
                    }
                })
            })
        },
        "dijit/form/_AutoCompleterMixin": function() {
            define("dojo/aspect dojo/_base/declare dojo/dom-attr dojo/keys dojo/_base/lang dojo/query dojo/regexp dojo/sniff ./DataList ./_TextBoxMixin ./_SearchMixin".split(" "), function(q, p, n, m, l, k, g, f, e, d, c) {
                p = p("dijit.form._AutoCompleterMixin", c, {
                    item: null,
                    autoComplete: !0,
                    highlightMatch: "first",
                    labelAttr: "",
                    labelType: "text",
                    maxHeight: -1,
                    _stopClickEvents: !1,
                    _getCaretPos: function(b) {
                        var a = 0;
                        if ("number" == typeof b.selectionStart)
                            a = b.selectionStart;
                        else if (f("ie")) {
                            var h = b.ownerDocument.selection.createRange().duplicate();
                            b = b.createTextRange();
                            h.move("character", 0);
                            b.move("character", 0);
                            try {
                                b.setEndPoint("EndToEnd", h),
                                a = String(b.text).replace(/\r/g, "").length
                            } catch (r) {}
                        }
                        return a
                    },
                    _setCaretPos: function(b, a) {
                        a = parseInt(a);
                        d.selectInputText(b, a, a)
                    },
                    _setDisabledAttr: function(b) {
                        this.inherited(arguments);
                        this.domNode.setAttribute("aria-disabled", b ? "true" : "false")
                    },
                    _onKey: function(b) {
                        if (!(32 <= b.charCode)) {
                            var a = b.charCode || b.keyCode;
                            if (a != m.ALT && a != m.CTRL && a != m.META && a != m.SHIFT) {
                                var h = this.dropDown
                                  , c = null;
                                this._abortQuery();
                                this.inherited(arguments);
                                if (!(b.altKey || b.ctrlKey || b.metaKey))
                                    switch (this._opened && (c = h.getHighlightedOption()),
                                    a) {
                                    case m.PAGE_DOWN:
                                    case m.DOWN_ARROW:
                                    case m.PAGE_UP:
                                    case m.UP_ARROW:
                                        this._opened && this._announceOption(c);
                                        b.stopPropagation();
                                        b.preventDefault();
                                        break;
                                    case m.ENTER:
                                        if (c) {
                                            if (c == h.nextButton) {
                                                this._nextSearch(1);
                                                b.stopPropagation();
                                                b.preventDefault();
                                                break
                                            } else if (c == h.previousButton) {
                                                this._nextSearch(-1);
                                                b.stopPropagation();
                                                b.preventDefault();
                                                break
                                            }
                                            b.stopPropagation();
                                            b.preventDefault()
                                        } else
                                            this._setBlurValue(),
                                            this._setCaretPos(this.focusNode, this.focusNode.value.length);
                                    case m.TAB:
                                        a = this.get("displayedValue");
                                        if (h && (a == h._messages.previousMessage || a == h._messages.nextMessage))
                                            break;
                                        c && this._selectOption(c);
                                    case m.ESCAPE:
                                        this._opened && (this._lastQuery = null,
                                        this.closeDropDown())
                                    }
                            }
                        }
                    },
                    _autoCompleteText: function(b) {
                        var a = this.focusNode;
                        d.selectInputText(a, a.value.length);
                        var h = this.ignoreCase ? "toLowerCase" : "substr";
                        0 == b[h](0).indexOf(this.focusNode.value[h](0)) ? (h = this.autoComplete ? this._getCaretPos(a) : a.value.length,
                        h + 1 > a.value.length && (a.value = b,
                        d.selectInputText(a, h))) : (a.value = b,
                        d.selectInputText(a))
                    },
                    _openResultList: function(b, a, h) {
                        var c = this.dropDown.getHighlightedOption();
                        this.dropDown.clearResultList();
                        b.length || 0 != h.start ? (this._nextSearch = this.dropDown.onPage = l.hitch(this, function(a) {
                            b.nextPage(-1 !== a);
                            this.focus()
                        }),
                        this.dropDown.createOptions(b, h, l.hitch(this, "_getMenuLabelFromItem")),
                        this._showResultList(),
                        "direction"in h ? (h.direction ? this.dropDown.highlightFirstOption() : h.direction || this.dropDown.highlightLastOption(),
                        c && this._announceOption(this.dropDown.getHighlightedOption())) : !this.autoComplete || this._prev_key_backspace || /^[*]+$/.test(a[this.searchAttr].toString()) || this._announceOption(this.dropDown.containerNode.firstChild.nextSibling)) : this.closeDropDown()
                    },
                    _showResultList: function() {
                        this.closeDropDown(!0);
                        this.openDropDown();
                        this.domNode.setAttribute("aria-expanded", "true")
                    },
                    loadDropDown: function() {
                        this._startSearchAll()
                    },
                    isLoaded: function() {
                        return !1
                    },
                    closeDropDown: function() {
                        this._abortQuery();
                        this._opened && (this.inherited(arguments),
                        this.domNode.setAttribute("aria-expanded", "false"))
                    },
                    _setBlurValue: function() {
                        var b = this.get("displayedValue")
                          , a = this.dropDown;
                        !a || b != a._messages.previousMessage && b != a._messages.nextMessage ? "undefined" == typeof this.item ? (this.item = null,
                        this.set("displayedValue", b)) : (this.value != this._lastValueReported && this._handleOnChange(this.value, !0),
                        this._refreshState()) : this._setValueAttr(this._lastValueReported, !0);
                        this.focusNode.removeAttribute("aria-activedescendant")
                    },
                    _setItemAttr: function(b, a, h) {
                        var c = "";
                        b && (h || (h = this.store._oldAPI ? this.store.getValue(b, this.searchAttr) : b[this.searchAttr]),
                        c = this._getValueField() != this.searchAttr ? this.store.getIdentity(b) : h);
                        this.set("value", c, a, h, b)
                    },
                    _announceOption: function(b) {
                        if (b) {
                            var a;
                            if (b == this.dropDown.nextButton || b == this.dropDown.previousButton)
                                a = b.innerHTML,
                                this.item = void 0,
                                this.value = "";
                            else {
                                var h = this.dropDown.items[b.getAttribute("item")];
                                a = (this.store._oldAPI ? this.store.getValue(h, this.searchAttr) : h[this.searchAttr]).toString();
                                this.set("item", h, !1, a)
                            }
                            this.focusNode.value = this.focusNode.value.substring(0, this._lastInput.length);
                            this.focusNode.setAttribute("aria-activedescendant", n.get(b, "id"));
                            this._autoCompleteText(a)
                        }
                    },
                    _selectOption: function(b) {
                        this.closeDropDown();
                        b && this._announceOption(b);
                        this._setCaretPos(this.focusNode, this.focusNode.value.length);
                        this._handleOnChange(this.value, !0);
                        this.focusNode.removeAttribute("aria-activedescendant")
                    },
                    _startSearchAll: function() {
                        this._startSearch("")
                    },
                    _startSearchFromInput: function() {
                        this.item = void 0;
                        this.inherited(arguments)
                    },
                    _startSearch: function(b) {
                        if (!this.dropDown) {
                            var a = this.id + "_popup";
                            this.dropDown = new (l.isString(this.dropDownClass) ? l.getObject(this.dropDownClass, !1) : this.dropDownClass)({
                                onChange: l.hitch(this, this._selectOption),
                                id: a,
                                dir: this.dir,
                                textDir: this.textDir
                            })
                        }
                        this._lastInput = b;
                        this.inherited(arguments)
                    },
                    _getValueField: function() {
                        return this.searchAttr
                    },
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        if (!this.store && this.srcNodeRef && (this.store = new e({},this.srcNodeRef),
                        !("value"in this.params))) {
                            var b = this.item = this.store.fetchSelectedItem();
                            if (b) {
                                var a = this._getValueField();
                                this.value = this.store._oldAPI ? this.store.getValue(b, a) : b[a]
                            }
                        }
                    },
                    postCreate: function() {
                        var b = k('label[for\x3d"' + this.id + '"]');
                        b.length && (b[0].id || (b[0].id = this.id + "_label"),
                        this.domNode.setAttribute("aria-labelledby", b[0].id));
                        this.inherited(arguments);
                        q.after(this, "onSearch", l.hitch(this, "_openResultList"), !0)
                    },
                    _getMenuLabelFromItem: function(b) {
                        b = this.labelFunc(b, this.store);
                        var a = this.labelType;
                        "none" != this.highlightMatch && "text" == this.labelType && this._lastInput && (b = this.doHighlight(b, this._lastInput),
                        a = "html");
                        return {
                            html: "html" == a,
                            label: b
                        }
                    },
                    doHighlight: function(b, a) {
                        var h = (this.ignoreCase ? "i" : "") + ("all" == this.highlightMatch ? "g" : "")
                          , c = this.queryExpr.indexOf("${0}");
                        a = g.escapeString(a);
                        return this._escapeHtml(b.replace(new RegExp((0 == c ? "^" : "") + "(" + a + ")" + (c == this.queryExpr.length - 4 ? "$" : ""),h), "\uffff$1\uffff")).replace(/\uFFFF([^\uFFFF]+)\uFFFF/g, '\x3cspan class\x3d"dijitComboBoxHighlightMatch"\x3e$1\x3c/span\x3e')
                    },
                    _escapeHtml: function(b) {
                        return b = String(b).replace(/&/gm, "\x26amp;").replace(/</gm, "\x26lt;").replace(/>/gm, "\x26gt;").replace(/"/gm, "\x26quot;")
                    },
                    reset: function() {
                        this.item = null;
                        this.inherited(arguments)
                    },
                    labelFunc: function(b, a) {
                        return (a._oldAPI ? a.getValue(b, this.labelAttr || this.searchAttr) : b[this.labelAttr || this.searchAttr]).toString()
                    },
                    _setValueAttr: function(b, a, h, c) {
                        this._set("item", c || null);
                        null == b && (b = "");
                        this.inherited(arguments)
                    }
                });
                f("dojo-bidi") && p.extend({
                    _setTextDirAttr: function(b) {
                        this.inherited(arguments);
                        this.dropDown && this.dropDown._set("textDir", b)
                    }
                });
                return p
            })
        },
        "dijit/form/DataList": function() {
            define("dojo/_base/declare dojo/dom dojo/_base/lang dojo/query dojo/store/Memory ../registry".split(" "), function(q, p, n, m, l, k) {
                function g(f) {
                    return {
                        id: f.value,
                        value: f.value,
                        name: n.trim(f.innerText || f.textContent || "")
                    }
                }
                return q("dijit.form.DataList", l, {
                    constructor: function(f, e) {
                        this.domNode = p.byId(e);
                        n.mixin(this, f);
                        this.id && k.add(this);
                        this.domNode.style.display = "none";
                        this.inherited(arguments, [{
                            data: m("option", this.domNode).map(g)
                        }])
                    },
                    destroy: function() {
                        k.remove(this.id)
                    },
                    fetchSelectedItem: function() {
                        var f = m("\x3e option[selected]", this.domNode)[0] || m("\x3e option", this.domNode)[0];
                        return f && g(f)
                    }
                })
            })
        },
        "dijit/form/_SearchMixin": function() {
            define("dojo/_base/declare dojo/keys dojo/_base/lang dojo/query dojo/string dojo/when ../registry".split(" "), function(q, p, n, m, l, k, g) {
                return q("dijit.form._SearchMixin", null, {
                    pageSize: Infinity,
                    store: null,
                    fetchProperties: {},
                    query: {},
                    list: "",
                    _setListAttr: function(f) {
                        this._set("list", f)
                    },
                    searchDelay: 200,
                    searchAttr: "name",
                    queryExpr: "${0}*",
                    ignoreCase: !0,
                    _patternToRegExp: function(f) {
                        return new RegExp("^" + f.replace(/(\\.)|(\*)|(\?)|\W/g, function(e, d, c, b) {
                            return c ? ".*" : b ? "." : d ? d : "\\" + e
                        }) + "$",this.ignoreCase ? "mi" : "m")
                    },
                    _abortQuery: function() {
                        this.searchTimer && (this.searchTimer = this.searchTimer.remove());
                        this._queryDeferHandle && (this._queryDeferHandle = this._queryDeferHandle.remove());
                        this._fetchHandle && (this._fetchHandle.abort && (this._cancelingQuery = !0,
                        this._fetchHandle.abort(),
                        this._cancelingQuery = !1),
                        this._fetchHandle.cancel && (this._cancelingQuery = !0,
                        this._fetchHandle.cancel(),
                        this._cancelingQuery = !1),
                        this._fetchHandle = null)
                    },
                    _processInput: function(f) {
                        if (!this.disabled && !this.readOnly) {
                            f = f.charOrCode;
                            this._prev_key_backspace = !1;
                            if (f == p.DELETE || f == p.BACKSPACE)
                                this._maskValidSubsetError = this._prev_key_backspace = !0;
                            if (this.store)
                                this.searchTimer = this.defer("_startSearchFromInput", 1);
                            else
                                this.onSearch()
                        }
                    },
                    onSearch: function() {},
                    _startSearchFromInput: function() {
                        this._startSearch(this.focusNode.value)
                    },
                    _startSearch: function(f) {
                        this._abortQuery();
                        var e = this, d = n.clone(this.query), c = {
                            start: 0,
                            count: this.pageSize,
                            queryOptions: {
                                ignoreCase: this.ignoreCase,
                                deep: !0
                            }
                        }, b = l.substitute(this.queryExpr, [f.replace(/([\\\*\?])/g, "\\$1")]), a, h = function() {
                            var b = e._fetchHandle = e.store.query(d, c);
                            e.disabled || e.readOnly || a !== e._lastQuery || k(b, function(r) {
                                e._fetchHandle = null;
                                e.disabled || e.readOnly || a !== e._lastQuery || k(b.total, function(a) {
                                    r.total = a;
                                    var b = e.pageSize;
                                    if (isNaN(b) || b > r.total)
                                        b = r.total;
                                    r.nextPage = function(a) {
                                        c.direction = a = !1 !== a;
                                        c.count = b;
                                        a ? (c.start += r.length,
                                        c.start >= r.total && (c.count = 0)) : (c.start -= b,
                                        0 > c.start && (c.count = Math.max(b + c.start, 0),
                                        c.start = 0));
                                        0 >= c.count ? (r.length = 0,
                                        e.onSearch(r, d, c)) : h()
                                    }
                                    ;
                                    e.onSearch(r, d, c)
                                })
                            }, function(a) {
                                e._fetchHandle = null;
                                e._cancelingQuery || console.error(e.declaredClass + " " + a.toString())
                            })
                        };
                        n.mixin(c, this.fetchProperties);
                        this.store._oldAPI ? a = b : (a = this._patternToRegExp(b),
                        a.toString = function() {
                            return b
                        }
                        );
                        this._lastQuery = d[this.searchAttr] = a;
                        this._queryDeferHandle = this.defer(h, this.searchDelay)
                    },
                    constructor: function() {
                        this.query = {};
                        this.fetchProperties = {}
                    },
                    postMixInProperties: function() {
                        if (!this.store) {
                            var f = this.list;
                            f && (this.store = g.byId(f))
                        }
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/form/_ComboBoxMenu": function() {
            define("dojo/_base/declare dojo/dom-class dojo/dom-style dojo/keys ../_WidgetBase ../_TemplatedMixin ./_ComboBoxMenuMixin ./_ListMouseMixin".split(" "), function(q, p, n, m, l, k, g, f) {
                return q("dijit.form._ComboBoxMenu", [l, k, f, g], {
                    templateString: "\x3cdiv class\x3d'dijitReset dijitMenu' data-dojo-attach-point\x3d'containerNode' style\x3d'overflow: auto; overflow-x: hidden;' role\x3d'listbox'\x3e\x3cdiv class\x3d'dijitMenuItem dijitMenuPreviousButton' data-dojo-attach-point\x3d'previousButton' role\x3d'option'\x3e\x3c/div\x3e\x3cdiv class\x3d'dijitMenuItem dijitMenuNextButton' data-dojo-attach-point\x3d'nextButton' role\x3d'option'\x3e\x3c/div\x3e\x3c/div\x3e",
                    baseClass: "dijitComboBoxMenu",
                    postCreate: function() {
                        this.inherited(arguments);
                        this.isLeftToRight() || (p.add(this.previousButton, "dijitMenuItemRtl"),
                        p.add(this.nextButton, "dijitMenuItemRtl"));
                        this.containerNode.setAttribute("role", "listbox")
                    },
                    _createMenuItem: function() {
                        var e = this.ownerDocument.createElement("div");
                        e.className = "dijitReset dijitMenuItem" + (this.isLeftToRight() ? "" : " dijitMenuItemRtl");
                        e.setAttribute("role", "option");
                        return e
                    },
                    onHover: function(e) {
                        p.add(e, "dijitMenuItemHover")
                    },
                    onUnhover: function(e) {
                        p.remove(e, "dijitMenuItemHover")
                    },
                    onSelect: function(e) {
                        p.add(e, "dijitMenuItemSelected")
                    },
                    onDeselect: function(e) {
                        p.remove(e, "dijitMenuItemSelected")
                    },
                    _page: function(e) {
                        var d = 0
                          , c = this.domNode.scrollTop
                          , b = n.get(this.domNode, "height");
                        for (this.getHighlightedOption() || this.selectNextNode(); d < b; ) {
                            var a = this.getHighlightedOption();
                            if (e) {
                                if (!a.previousSibling || "none" == a.previousSibling.style.display)
                                    break;
                                this.selectPreviousNode()
                            } else {
                                if (!a.nextSibling || "none" == a.nextSibling.style.display)
                                    break;
                                this.selectNextNode()
                            }
                            a = this.domNode.scrollTop;
                            d += (a - c) * (e ? -1 : 1);
                            c = a
                        }
                    },
                    handleKey: function(e) {
                        switch (e.keyCode) {
                        case m.DOWN_ARROW:
                            return this.selectNextNode(),
                            !1;
                        case m.PAGE_DOWN:
                            return this._page(!1),
                            !1;
                        case m.UP_ARROW:
                            return this.selectPreviousNode(),
                            !1;
                        case m.PAGE_UP:
                            return this._page(!0),
                            !1;
                        default:
                            return !0
                        }
                    }
                })
            })
        },
        "dijit/form/_ComboBoxMenuMixin": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom-attr dojo/has dojo/i18n dojo/i18n!./nls/ComboBox".split(" "), function(q, p, n, m, l) {
                var k = p("dijit.form._ComboBoxMenuMixin" + (m("dojo-bidi") ? "_NoBidi" : ""), null, {
                    _messages: null,
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this._messages = l.getLocalization("dijit.form", "ComboBox", this.lang)
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        this.previousButton.innerHTML = this._messages.previousMessage;
                        this.nextButton.innerHTML = this._messages.nextMessage
                    },
                    _setValueAttr: function(g) {
                        this._set("value", g);
                        this.onChange(g)
                    },
                    onClick: function(g) {
                        if (g == this.previousButton)
                            this._setSelectedAttr(null),
                            this.onPage(-1);
                        else if (g == this.nextButton)
                            this._setSelectedAttr(null),
                            this.onPage(1);
                        else
                            this.onChange(g)
                    },
                    onChange: function() {},
                    onPage: function() {},
                    onClose: function() {
                        this._setSelectedAttr(null)
                    },
                    _createOption: function(g, f) {
                        var e = this._createMenuItem()
                          , d = f(g);
                        d.html ? e.innerHTML = d.label : e.appendChild(e.ownerDocument.createTextNode(d.label));
                        "" == e.innerHTML && (e.innerHTML = "\x26#160;");
                        return e
                    },
                    createOptions: function(g, f, e) {
                        this.items = g;
                        this.previousButton.style.display = 0 == f.start ? "none" : "";
                        n.set(this.previousButton, "id", this.id + "_prev");
                        q.forEach(g, function(c, b) {
                            var a = this._createOption(c, e);
                            a.setAttribute("item", b);
                            n.set(a, "id", this.id + b);
                            this.nextButton.parentNode.insertBefore(a, this.nextButton)
                        }, this);
                        var d = !1;
                        g.total && !g.total.then && -1 != g.total ? f.start + f.count < g.total ? d = !0 : f.start + f.count > g.total && f.count == g.length && (d = !0) : f.count == g.length && (d = !0);
                        this.nextButton.style.display = d ? "" : "none";
                        n.set(this.nextButton, "id", this.id + "_next")
                    },
                    clearResultList: function() {
                        for (var g = this.containerNode; 2 < g.childNodes.length; )
                            g.removeChild(g.childNodes[g.childNodes.length - 2]);
                        this._setSelectedAttr(null)
                    },
                    highlightFirstOption: function() {
                        this.selectFirstNode()
                    },
                    highlightLastOption: function() {
                        this.selectLastNode()
                    },
                    selectFirstNode: function() {
                        this.inherited(arguments);
                        this.getHighlightedOption() == this.previousButton && this.selectNextNode()
                    },
                    selectLastNode: function() {
                        this.inherited(arguments);
                        this.getHighlightedOption() == this.nextButton && this.selectPreviousNode()
                    },
                    getHighlightedOption: function() {
                        return this.selected
                    }
                });
                m("dojo-bidi") && (k = p("dijit.form._ComboBoxMenuMixin", k, {
                    _createOption: function() {
                        var g = this.inherited(arguments);
                        this.applyTextDir(g);
                        return g
                    }
                }));
                return k
            })
        },
        "dijit/form/nls/ComboBox": function() {
            define({
                root: {
                    previousMessage: "Previous choices",
                    nextMessage: "More choices"
                },
                bs: !0,
                mk: !0,
                sr: !0,
                zh: !0,
                "zh-tw": !0,
                uk: !0,
                tr: !0,
                th: !0,
                sv: !0,
                sl: !0,
                sk: !0,
                ru: !0,
                ro: !0,
                pt: !0,
                "pt-pt": !0,
                pl: !0,
                nl: !0,
                nb: !0,
                ko: !0,
                kk: !0,
                ja: !0,
                it: !0,
                id: !0,
                hu: !0,
                hr: !0,
                he: !0,
                fr: !0,
                fi: !0,
                eu: !0,
                es: !0,
                el: !0,
                de: !0,
                da: !0,
                cs: !0,
                ca: !0,
                bg: !0,
                az: !0,
                ar: !0
            })
        },
        "dijit/form/nls/zh/ComboBox": function() {
            define({
                previousMessage: "\u5148\u524d\u9009\u9879",
                nextMessage: "\u66f4\u591a\u9009\u9879"
            })
        },
        "dijit/form/ComboButton": function() {
            define("dojo/_base/declare dojo/keys ../focus ./DropDownButton dojo/text!./templates/ComboButton.html ../a11yclick".split(" "), function(q, p, n, m, l) {
                return q("dijit.form.ComboButton", m, {
                    templateString: l,
                    _setIdAttr: "",
                    _setTabIndexAttr: ["focusNode", "titleNode"],
                    _setTitleAttr: "titleNode",
                    optionsTitle: "",
                    baseClass: "dijitComboButton",
                    cssStateNodes: {
                        buttonNode: "dijitButtonNode",
                        titleNode: "dijitButtonContents",
                        _popupStateNode: "dijitDownArrowButton"
                    },
                    _focusedNode: null,
                    _onButtonKeyDown: function(k) {
                        k.keyCode == p[this.isLeftToRight() ? "RIGHT_ARROW" : "LEFT_ARROW"] && (n.focus(this._popupStateNode),
                        k.stopPropagation(),
                        k.preventDefault())
                    },
                    _onArrowKeyDown: function(k) {
                        k.keyCode == p[this.isLeftToRight() ? "LEFT_ARROW" : "RIGHT_ARROW"] && (n.focus(this.titleNode),
                        k.stopPropagation(),
                        k.preventDefault())
                    },
                    focus: function(k) {
                        this.disabled || n.focus("start" == k ? this.titleNode : this._popupStateNode)
                    }
                })
            })
        },
        "dijit/form/DateTextBox": function() {
            define(["dojo/_base/declare", "../Calendar", "./_DateTimeTextBox"], function(q, p, n) {
                return q("dijit.form.DateTextBox", n, {
                    baseClass: "dijitTextBox dijitComboBox dijitDateTextBox",
                    popupClass: p,
                    _selector: "date",
                    maxHeight: Infinity,
                    value: new Date("")
                })
            })
        },
        "dijit/form/_DateTimeTextBox": function() {
            define("dojo/date dojo/date/locale dojo/date/stamp dojo/_base/declare dojo/_base/lang ./RangeBoundTextBox ../_HasDropDown dojo/text!./templates/DropDownBox.html".split(" "), function(q, p, n, m, l, k, g, f) {
                new Date("X");
                return m("dijit.form._DateTimeTextBox", [k, g], {
                    templateString: f,
                    hasDownArrow: !0,
                    cssStateNodes: {
                        _buttonNode: "dijitDownArrowButton"
                    },
                    _unboundedConstraints: {},
                    pattern: p.regexp,
                    datePackage: "",
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this._set("type", "text")
                    },
                    compare: function(e, d) {
                        var c = this._isInvalidDate(e)
                          , b = this._isInvalidDate(d);
                        if (c || b)
                            return c && b ? 0 : c ? -1 : 1;
                        var c = this.format(e, this._unboundedConstraints)
                          , b = this.format(d, this._unboundedConstraints)
                          , a = this.parse(c, this._unboundedConstraints)
                          , h = this.parse(b, this._unboundedConstraints);
                        return c == b ? 0 : q.compare(a, h, this._selector)
                    },
                    autoWidth: !0,
                    format: function(e, d) {
                        return e ? this.dateLocaleModule.format(e, d) : ""
                    },
                    parse: function(e, d) {
                        return this.dateLocaleModule.parse(e, d) || (this._isEmpty(e) ? null : void 0)
                    },
                    serialize: function(e, d) {
                        e.toGregorian && (e = e.toGregorian());
                        return n.toISOString(e, d)
                    },
                    dropDownDefaultValue: new Date,
                    value: new Date(""),
                    _blankValue: null,
                    popupClass: "",
                    _selector: "",
                    constructor: function(e) {
                        e = e || {};
                        this.dateModule = e.datePackage ? l.getObject(e.datePackage, !1) : q;
                        this.dateClassObj = this.dateModule.Date || Date;
                        this.dateClassObj instanceof Date || (this.value = new this.dateClassObj(this.value));
                        this.dateLocaleModule = e.datePackage ? l.getObject(e.datePackage + ".locale", !1) : p;
                        this._set("pattern", this.dateLocaleModule.regexp);
                        this._invalidDate = this.constructor.prototype.value.toString()
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        this.hasDownArrow || (this._buttonNode.style.display = "none");
                        this.hasDownArrow || (this._buttonNode = this.domNode,
                        this.baseClass += " dijitComboBoxOpenOnClick")
                    },
                    _setConstraintsAttr: function(e) {
                        e.selector = this._selector;
                        e.fullYear = !0;
                        var d = n.fromISOString;
                        "string" == typeof e.min && (e.min = d(e.min),
                        this.dateClassObj instanceof Date || (e.min = new this.dateClassObj(e.min)));
                        "string" == typeof e.max && (e.max = d(e.max),
                        this.dateClassObj instanceof Date || (e.max = new this.dateClassObj(e.max)));
                        this.inherited(arguments);
                        this._unboundedConstraints = l.mixin({}, this.constraints, {
                            min: null,
                            max: null
                        })
                    },
                    _isInvalidDate: function(e) {
                        return !e || isNaN(e) || "object" != typeof e || e.toString() == this._invalidDate
                    },
                    _setValueAttr: function(e, d, c) {
                        void 0 !== e && ("string" == typeof e && (e = n.fromISOString(e)),
                        this._isInvalidDate(e) && (e = null),
                        e instanceof Date && !(this.dateClassObj instanceof Date) && (e = new this.dateClassObj(e)));
                        this.inherited(arguments, [e, d, c]);
                        this.value instanceof Date && (this.filterString = "");
                        !1 !== d && this.dropDown && this.dropDown.set("value", e, !1)
                    },
                    _set: function(e, d) {
                        if ("value" == e) {
                            d instanceof Date && !(this.dateClassObj instanceof Date) && (d = new this.dateClassObj(d));
                            var c = this._get("value");
                            if (c instanceof this.dateClassObj && 0 == this.compare(d, c))
                                return
                        }
                        this.inherited(arguments)
                    },
                    _setDropDownDefaultValueAttr: function(e) {
                        this._isInvalidDate(e) && (e = new this.dateClassObj);
                        this._set("dropDownDefaultValue", e)
                    },
                    openDropDown: function(e) {
                        this.dropDown && this.dropDown.destroy();
                        var d = l.isString(this.popupClass) ? l.getObject(this.popupClass, !1) : this.popupClass
                          , c = this
                          , b = this.get("value");
                        this.dropDown = new d({
                            onChange: function(a) {
                                c.set("value", a, !0)
                            },
                            id: this.id + "_popup",
                            dir: c.dir,
                            lang: c.lang,
                            value: b,
                            textDir: c.textDir,
                            currentFocus: this._isInvalidDate(b) ? this.dropDownDefaultValue : b,
                            constraints: c.constraints,
                            filterString: c.filterString,
                            datePackage: c.datePackage,
                            isDisabledDate: function(a) {
                                return !c.rangeCheck(a, c.constraints)
                            }
                        });
                        this.inherited(arguments)
                    },
                    _getDisplayedValueAttr: function() {
                        return this.textbox.value
                    },
                    _setDisplayedValueAttr: function(e, d) {
                        this._setValueAttr(this.parse(e, this.constraints), d, e)
                    }
                })
            })
        },
        "dijit/form/RangeBoundTextBox": function() {
            define(["dojo/_base/declare", "dojo/i18n", "./MappedTextBox", "dojo/i18n!./nls/validate"], function(q, p, n) {
                return q("dijit.form.RangeBoundTextBox", n, {
                    rangeMessage: "",
                    rangeCheck: function(m, l) {
                        return ("min"in l ? 0 <= this.compare(m, l.min) : !0) && ("max"in l ? 0 >= this.compare(m, l.max) : !0)
                    },
                    isInRange: function() {
                        return this.rangeCheck(this.get("value"), this.constraints)
                    },
                    _isDefinitelyOutOfRange: function() {
                        var m = this.get("value");
                        if (null == m)
                            return !1;
                        var l = !1;
                        "min"in this.constraints && (l = this.constraints.min,
                        l = 0 > this.compare(m, "number" == typeof l && 0 <= l && 0 != m ? 0 : l));
                        !l && "max"in this.constraints && (l = this.constraints.max,
                        l = 0 < this.compare(m, "number" != typeof l || 0 < l ? l : 0));
                        return l
                    },
                    _isValidSubset: function() {
                        return this.inherited(arguments) && !this._isDefinitelyOutOfRange()
                    },
                    isValid: function(m) {
                        return this.inherited(arguments) && (this._isEmpty(this.textbox.value) && !this.required || this.isInRange(m))
                    },
                    getErrorMessage: function(m) {
                        var l = this.get("value");
                        return null == l || "" === l || "number" == typeof l && isNaN(l) || this.isInRange(m) ? this.inherited(arguments) : this.rangeMessage
                    },
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.rangeMessage || (this.messages = p.getLocalization("dijit.form", "validate", this.lang),
                        this.rangeMessage = this.messages.rangeMessage)
                    }
                })
            })
        },
        "dijit/form/MappedTextBox": function() {
            define(["dojo/_base/declare", "dojo/sniff", "dojo/dom-construct", "./ValidationTextBox"], function(q, p, n, m) {
                return q("dijit.form.MappedTextBox", m, {
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.nameAttrSetting = ""
                    },
                    _setNameAttr: "valueNode",
                    serialize: function(l) {
                        return l.toString ? l.toString() : ""
                    },
                    toString: function() {
                        var l = this.filter(this.get("value"));
                        return null != l ? "string" == typeof l ? l : this.serialize(l, this.constraints) : ""
                    },
                    validate: function() {
                        this.valueNode.value = this.toString();
                        return this.inherited(arguments)
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        this.valueNode = n.place("\x3cinput type\x3d'hidden'" + (this.name && !p("msapp") ? ' name\x3d"' + this.name.replace(/"/g, "\x26quot;") + '"' : "") + "/\x3e", this.textbox, "after")
                    },
                    reset: function() {
                        this.valueNode.value = "";
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/form/FilteringSelect": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/when", "./MappedTextBox", "./ComboBoxMixin"], function(q, p, n, m, l) {
                return q("dijit.form.FilteringSelect", [m, l], {
                    required: !0,
                    _lastDisplayedValue: "",
                    _isValidSubset: function() {
                        return this._opened
                    },
                    isValid: function() {
                        return !!this.item || !this.required && "" == this.get("displayedValue")
                    },
                    _refreshState: function() {
                        this.searchTimer || this.inherited(arguments)
                    },
                    _callbackSetLabel: function(k, g, f, e) {
                        g && g[this.searchAttr] !== this._lastQuery || !g && k.length && this.store.getIdentity(k[0]) != this._lastQuery || (k.length ? this.set("item", k[0], e) : this.set("value", "", e || void 0 === e && !this.focused, this.textbox.value, null))
                    },
                    _openResultList: function(k, g, f) {
                        g[this.searchAttr] === this._lastQuery && (this.inherited(arguments),
                        void 0 === this.item && this.validate(!0))
                    },
                    _getValueAttr: function() {
                        return this.valueNode.value
                    },
                    _getValueField: function() {
                        return "value"
                    },
                    _setValueAttr: function(k, g, f, e) {
                        this._onChangeActive || (g = null);
                        if (void 0 === e) {
                            if (null === k || "" === k)
                                if (k = "",
                                !p.isString(f)) {
                                    this._setDisplayedValueAttr(f || "", g);
                                    return
                                }
                            var d = this;
                            this._lastQuery = k;
                            n(this.store.get(k), function(c) {
                                d._callbackSetLabel(c ? [c] : [], void 0, void 0, g)
                            })
                        } else
                            this.valueNode.value = k,
                            this.inherited(arguments, [k, g, f, e])
                    },
                    _setItemAttr: function(k, g, f) {
                        this.inherited(arguments);
                        this._lastDisplayedValue = this.textbox.value
                    },
                    _getDisplayQueryString: function(k) {
                        return k.replace(/([\\\*\?])/g, "\\$1")
                    },
                    _setDisplayedValueAttr: function(k, g) {
                        null == k && (k = "");
                        if (!this._created) {
                            if (!("displayedValue"in this.params))
                                return;
                            g = !1
                        }
                        if (this.store) {
                            this.closeDropDown();
                            var f = p.clone(this.query), e = this._getDisplayQueryString(k), d;
                            this.store._oldAPI ? d = e : (d = this._patternToRegExp(e),
                            d.toString = function() {
                                return e
                            }
                            );
                            this._lastQuery = f[this.searchAttr] = d;
                            this._lastDisplayedValue = this.textbox.value = k;
                            this._set("displayedValue", k);
                            var c = this
                              , b = {
                                queryOptions: {
                                    ignoreCase: this.ignoreCase,
                                    deep: !0
                                }
                            };
                            p.mixin(b, this.fetchProperties);
                            this._fetchHandle = this.store.query(f, b);
                            n(this._fetchHandle, function(a) {
                                c._fetchHandle = null;
                                c._callbackSetLabel(a || [], f, b, g)
                            }, function(a) {
                                c._fetchHandle = null;
                                c._cancelingQuery || console.error("dijit.form.FilteringSelect: " + a.toString())
                            })
                        }
                    },
                    undo: function() {
                        this.set("displayedValue", this._lastDisplayedValue)
                    }
                })
            })
        },
        "dijit/form/Form": function() {
            define("dojo/_base/declare dojo/dom-attr dojo/_base/kernel dojo/sniff ../_Widget ../_TemplatedMixin ./_FormMixin ../layout/_ContentPaneResizeMixin".split(" "), function(q, p, n, m, l, k, g, f) {
                return q("dijit.form.Form", [l, k, g, f], {
                    name: "",
                    action: "",
                    method: "",
                    encType: "",
                    "accept-charset": "",
                    accept: "",
                    target: "",
                    templateString: "\x3cform data-dojo-attach-point\x3d'containerNode' data-dojo-attach-event\x3d'onreset:_onReset,onsubmit:_onSubmit' ${!nameAttrSetting}\x3e\x3c/form\x3e",
                    postMixInProperties: function() {
                        this.nameAttrSetting = this.name ? "name\x3d'" + this.name + "'" : "";
                        this.inherited(arguments)
                    },
                    execute: function() {},
                    onExecute: function() {},
                    _setEncTypeAttr: function(e) {
                        p.set(this.domNode, "encType", e);
                        m("ie") && (this.domNode.encoding = e);
                        this._set("encType", e)
                    },
                    reset: function(e) {
                        var d = {
                            returnValue: !0,
                            preventDefault: function() {
                                this.returnValue = !1
                            },
                            stopPropagation: function() {},
                            currentTarget: e ? e.target : this.domNode,
                            target: e ? e.target : this.domNode
                        };
                        !1 !== this.onReset(d) && d.returnValue && this.inherited(arguments, [])
                    },
                    onReset: function() {
                        return !0
                    },
                    _onReset: function(e) {
                        this.reset(e);
                        e.stopPropagation();
                        e.preventDefault();
                        return !1
                    },
                    _onSubmit: function(e) {
                        var d = this.constructor.prototype;
                        if (this.execute != d.execute || this.onExecute != d.onExecute)
                            n.deprecated("dijit.form.Form:execute()/onExecute() are deprecated. Use onSubmit() instead.", "", "2.0"),
                            this.onExecute(),
                            this.execute(this.getValues());
                        !1 === this.onSubmit(e) && (e.stopPropagation(),
                        e.preventDefault())
                    },
                    onSubmit: function() {
                        return this.isValid()
                    },
                    submit: function() {
                        !1 !== this.onSubmit() && this.containerNode.submit()
                    }
                })
            })
        },
        "dijit/form/NumberSpinner": function() {
            define(["dojo/_base/declare", "dojo/keys", "./_Spinner", "./NumberTextBox"], function(q, p, n, m) {
                return q("dijit.form.NumberSpinner", [n, m.Mixin], {
                    baseClass: "dijitTextBox dijitSpinner dijitNumberTextBox",
                    adjust: function(l, k) {
                        var g = this.constraints
                          , f = isNaN(l)
                          , e = !isNaN(g.max)
                          , d = !isNaN(g.min);
                        f && 0 != k && (l = 0 < k ? d ? g.min : e ? g.max : 0 : e ? this.constraints.max : d ? g.min : 0);
                        var c = l + k;
                        if (f || isNaN(c))
                            return l;
                        e && c > g.max && (c = g.max);
                        d && c < g.min && (c = g.min);
                        return c
                    },
                    _onKeyDown: function(l) {
                        if (!(this.disabled || this.readOnly || l.keyCode != p.HOME && l.keyCode != p.END || l.ctrlKey || l.altKey || l.metaKey || "undefined" == typeof this.get("value"))) {
                            var k = this.constraints[l.keyCode == p.HOME ? "min" : "max"];
                            "number" == typeof k && this._setValueAttr(k, !1);
                            l.stopPropagation();
                            l.preventDefault()
                        }
                    }
                })
            })
        },
        "dijit/form/_Spinner": function() {
            define("dojo/_base/declare dojo/keys dojo/_base/lang dojo/sniff dojo/mouse dojo/on ../typematic ./RangeBoundTextBox dojo/text!./templates/Spinner.html ./_TextBoxMixin".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                return q("dijit.form._Spinner", f, {
                    defaultTimeout: 500,
                    minimumTimeout: 10,
                    timeoutChangeRate: .9,
                    smallDelta: 1,
                    largeDelta: 10,
                    templateString: e,
                    baseClass: "dijitTextBox dijitSpinner",
                    cssStateNodes: {
                        upArrowNode: "dijitUpArrowButton",
                        downArrowNode: "dijitDownArrowButton"
                    },
                    adjust: function(c) {
                        return c
                    },
                    _arrowPressed: function(c, b, a) {
                        this.disabled || this.readOnly || (this._setValueAttr(this.adjust(this.get("value"), b * a), !1),
                        d.selectInputText(this.textbox, this.textbox.value.length))
                    },
                    _arrowReleased: function() {
                        this._wheelTimer = null
                    },
                    _typematicCallback: function(c, b, a) {
                        var h = this.smallDelta;
                        b == this.textbox && (b = a.keyCode,
                        h = b == p.PAGE_UP || b == p.PAGE_DOWN ? this.largeDelta : this.smallDelta,
                        b = b == p.UP_ARROW || b == p.PAGE_UP ? this.upArrowNode : this.downArrowNode);
                        -1 == c ? this._arrowReleased(b) : this._arrowPressed(b, b == this.upArrowNode ? 1 : -1, h)
                    },
                    _wheelTimer: null,
                    _mouseWheeled: function(c) {
                        if (this.focused) {
                            c.stopPropagation();
                            c.preventDefault();
                            var b = c.wheelDelta / 120;
                            Math.floor(b) != b && (b = 0 < c.wheelDelta ? 1 : -1);
                            c = c.detail ? -1 * c.detail : b;
                            if (0 !== c) {
                                var a = this[0 < c ? "upArrowNode" : "downArrowNode"];
                                this._arrowPressed(a, c, this.smallDelta);
                                this._wheelTimer && this._wheelTimer.remove();
                                this._wheelTimer = this.defer(function() {
                                    this._arrowReleased(a)
                                }, 50)
                            }
                        }
                    },
                    _setConstraintsAttr: function(c) {
                        this.inherited(arguments);
                        this.focusNode && (void 0 !== this.constraints.min ? this.focusNode.setAttribute("aria-valuemin", this.constraints.min) : this.focusNode.removeAttribute("aria-valuemin"),
                        void 0 !== this.constraints.max ? this.focusNode.setAttribute("aria-valuemax", this.constraints.max) : this.focusNode.removeAttribute("aria-valuemax"))
                    },
                    _setValueAttr: function(c, b) {
                        this.focusNode.setAttribute("aria-valuenow", c);
                        this.inherited(arguments)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this.own(k(this.domNode, l.wheel, n.hitch(this, "_mouseWheeled")), g.addListener(this.upArrowNode, this.textbox, {
                            keyCode: p.UP_ARROW,
                            ctrlKey: !1,
                            altKey: !1,
                            shiftKey: !1,
                            metaKey: !1
                        }, this, "_typematicCallback", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout), g.addListener(this.downArrowNode, this.textbox, {
                            keyCode: p.DOWN_ARROW,
                            ctrlKey: !1,
                            altKey: !1,
                            shiftKey: !1,
                            metaKey: !1
                        }, this, "_typematicCallback", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout), g.addListener(this.upArrowNode, this.textbox, {
                            keyCode: p.PAGE_UP,
                            ctrlKey: !1,
                            altKey: !1,
                            shiftKey: !1,
                            metaKey: !1
                        }, this, "_typematicCallback", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout), g.addListener(this.downArrowNode, this.textbox, {
                            keyCode: p.PAGE_DOWN,
                            ctrlKey: !1,
                            altKey: !1,
                            shiftKey: !1,
                            metaKey: !1
                        }, this, "_typematicCallback", this.timeoutChangeRate, this.defaultTimeout, this.minimumTimeout))
                    }
                })
            })
        },
        "dijit/typematic": function() {
            define("dojo/_base/array dojo/_base/connect dojo/_base/lang dojo/on dojo/sniff ./main".split(" "), function(q, p, n, m, l, k) {
                var g = k.typematic = {
                    _fireEventAndReload: function() {
                        this._timer = null;
                        this._callback(++this._count, this._node, this._evt);
                        this._currentTimeout = Math.max(0 > this._currentTimeout ? this._initialDelay : 1 < this._subsequentDelay ? this._subsequentDelay : Math.round(this._currentTimeout * this._subsequentDelay), this._minDelay);
                        this._timer = setTimeout(n.hitch(this, "_fireEventAndReload"), this._currentTimeout)
                    },
                    trigger: function(f, e, d, c, b, a, h, r) {
                        if (b != this._obj) {
                            this.stop();
                            this._initialDelay = h || 500;
                            this._subsequentDelay = a || .9;
                            this._minDelay = r || 10;
                            this._obj = b;
                            this._node = d;
                            this._count = this._currentTimeout = -1;
                            this._callback = n.hitch(e, c);
                            this._evt = {
                                faux: !0
                            };
                            for (var t in f)
                                "layerX" != t && "layerY" != t && (e = f[t],
                                "function" != typeof e && "undefined" != typeof e && (this._evt[t] = e));
                            this._fireEventAndReload()
                        }
                    },
                    stop: function() {
                        this._timer && (clearTimeout(this._timer),
                        this._timer = null);
                        this._obj && (this._callback(-1, this._node, this._evt),
                        this._obj = null)
                    },
                    addKeyListener: function(f, e, d, c, b, a, h) {
                        var r = "keyCode"in e ? "keyCode" : "charCode"in e ? "charCode" : "charOrCode"
                          , t = [m(f, "keyCode"in e ? "keydown" : "charCode"in e ? "keypress" : p._keypress, n.hitch(this, function(t) {
                            t[r] != e[r] || void 0 !== e.ctrlKey && e.ctrlKey != t.ctrlKey || void 0 !== e.altKey && e.altKey != t.altKey || void 0 !== e.metaKey && e.metaKey != (t.metaKey || !1) || void 0 !== e.shiftKey && e.shiftKey != t.shiftKey ? g._obj == e && g.stop() : (t.stopPropagation(),
                            t.preventDefault(),
                            g.trigger(t, d, f, c, e, b, a, h))
                        })), m(f, "keyup", n.hitch(this, function() {
                            g._obj == e && g.stop()
                        }))];
                        return {
                            remove: function() {
                                q.forEach(t, function(a) {
                                    a.remove()
                                })
                            }
                        }
                    },
                    addMouseListener: function(f, e, d, c, b, a) {
                        var h = [m(f, "mousedown", n.hitch(this, function(h) {
                            h.preventDefault();
                            g.trigger(h, e, f, d, f, c, b, a)
                        })), m(f, "mouseup", n.hitch(this, function(a) {
                            this._obj && a.preventDefault();
                            g.stop()
                        })), m(f, "mouseout", n.hitch(this, function(a) {
                            this._obj && a.preventDefault();
                            g.stop()
                        })), m(f, "dblclick", n.hitch(this, function(h) {
                            h.preventDefault();
                            9 > l("ie") && (g.trigger(h, e, f, d, f, c, b, a),
                            setTimeout(n.hitch(this, g.stop), 50))
                        }))];
                        return {
                            remove: function() {
                                q.forEach(h, function(a) {
                                    a.remove()
                                })
                            }
                        }
                    },
                    addListener: function(f, e, d, c, b, a, h, r) {
                        var t = [this.addKeyListener(e, d, c, b, a, h, r), this.addMouseListener(f, c, b, a, h, r)];
                        return {
                            remove: function() {
                                q.forEach(t, function(a) {
                                    a.remove()
                                })
                            }
                        }
                    }
                };
                return g
            })
        },
        "dijit/form/NumberTextBox": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/i18n dojo/string dojo/number ./RangeBoundTextBox".split(" "), function(q, p, n, m, l, k) {
                var g = function(e) {
                    e = e || {};
                    var d = n.getLocalization("dojo.cldr", "number", n.normalizeLocale(e.locale))
                      , c = e.pattern ? e.pattern : d[(e.type || "decimal") + "Format"];
                    e = "number" == typeof e.places ? e.places : "string" === typeof e.places && 0 < e.places.length ? e.places.replace(/.*,/, "") : -1 != c.indexOf(".") ? c.split(".")[1].replace(/[^#0]/g, "").length : 0;
                    return {
                        sep: d.decimal,
                        places: e
                    }
                }
                  , f = q("dijit.form.NumberTextBoxMixin", null, {
                    pattern: function(e) {
                        return "(" + (this.focused && this.editOptions ? this._regExpGenerator(p.delegate(e, this.editOptions)) + "|" : "") + this._regExpGenerator(e) + ")"
                    },
                    value: NaN,
                    editOptions: {
                        pattern: "#.######"
                    },
                    _formatter: l.format,
                    _regExpGenerator: l.regexp,
                    _decimalInfo: g(),
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this._set("type", "text")
                    },
                    _setConstraintsAttr: function(e) {
                        var d = "number" == typeof e.places ? e.places : 0;
                        d && d++;
                        "number" != typeof e.max && (e.max = 9 * Math.pow(10, 15 - d));
                        "number" != typeof e.min && (e.min = -9 * Math.pow(10, 15 - d));
                        this.inherited(arguments, [e]);
                        this.focusNode && this.focusNode.value && !isNaN(this.value) && this.set("value", this.value);
                        this._decimalInfo = g(e)
                    },
                    _onFocus: function() {
                        if (!this.disabled && !this.readOnly) {
                            var e = this.get("value");
                            "number" != typeof e || isNaN(e) || (e = this.format(e, this.constraints),
                            void 0 !== e && (this.textbox.value = e));
                            this.inherited(arguments)
                        }
                    },
                    format: function(e, d) {
                        var c = String(e);
                        if ("number" != typeof e)
                            return c;
                        if (isNaN(e))
                            return "";
                        if (!("rangeCheck"in this && this.rangeCheck(e, d)) && !1 !== d.exponent && /\de[-+]?\d/i.test(c))
                            return c;
                        this.editOptions && this.focused && (d = p.mixin({}, d, this.editOptions));
                        return this._formatter(e, d)
                    },
                    _parser: l.parse,
                    parse: function(e, d) {
                        var c = p.mixin({}, d, this.editOptions && this.focused ? this.editOptions : {});
                        if (this.focused && null != c.places) {
                            var b = c.places
                              , b = "number" === typeof b ? b : Number(b.split(",").pop());
                            c.places = "0," + b
                        }
                        c = this._parser(e, c);
                        this.editOptions && this.focused && isNaN(c) && (c = this._parser(e, d));
                        return c
                    },
                    _getDisplayedValueAttr: function() {
                        var e = this.inherited(arguments);
                        return isNaN(e) ? this.textbox.value : e
                    },
                    filter: function(e) {
                        if (null == e || "string" == typeof e && "" == e)
                            return NaN;
                        "number" != typeof e || isNaN(e) || 0 == e || (e = l.round(e, this._decimalInfo.places));
                        return this.inherited(arguments, [e])
                    },
                    serialize: function(e, d) {
                        return "number" != typeof e || isNaN(e) ? "" : this.inherited(arguments)
                    },
                    _setBlurValue: function() {
                        var e = p.hitch(p.delegate(this, {
                            focused: !0
                        }), "get")("value");
                        this._setValueAttr(e, !0)
                    },
                    _setValueAttr: function(e, d, c) {
                        if (void 0 !== e && void 0 === c)
                            if (c = String(e),
                            "number" == typeof e)
                                if (isNaN(e))
                                    c = "";
                                else {
                                    if ("rangeCheck"in this && this.rangeCheck(e, this.constraints) || !1 === this.constraints.exponent || !/\de[-+]?\d/i.test(c))
                                        c = void 0
                                }
                            else
                                e ? e = void 0 : (c = "",
                                e = NaN);
                        this.inherited(arguments, [e, d, c])
                    },
                    _getValueAttr: function() {
                        var e = this.inherited(arguments);
                        if (isNaN(e) && "" !== this.textbox.value) {
                            if (!1 !== this.constraints.exponent && /\de[-+]?\d/i.test(this.textbox.value) && (new RegExp("^" + l._realNumberRegexp(p.delegate(this.constraints)) + "$")).test(this.textbox.value))
                                return e = Number(this.textbox.value),
                                isNaN(e) ? void 0 : e
                        } else
                            return e
                    },
                    isValid: function(e) {
                        if (!this.focused || this._isEmpty(this.textbox.value))
                            return this.inherited(arguments);
                        var d = this.get("value");
                        return !isNaN(d) && this.rangeCheck(d, this.constraints) ? !1 !== this.constraints.exponent && /\de[-+]?\d/i.test(this.textbox.value) ? !0 : this.inherited(arguments) : !1
                    },
                    _isValidSubset: function() {
                        var e = "number" == typeof this.constraints.min
                          , d = "number" == typeof this.constraints.max
                          , c = this.get("value");
                        if (isNaN(c) || !e && !d)
                            return this.inherited(arguments);
                        var b = c | 0
                          , a = 0 > c
                          , h = -1 != this.textbox.value.indexOf(this._decimalInfo.sep)
                          , r = (this.maxLength || 20) - this.textbox.value.length
                          , t = h ? this.textbox.value.split(this._decimalInfo.sep)[1].replace(/[^0-9]/g, "") : ""
                          , b = h ? b + "." + t : b + ""
                          , r = m.rep("9", r)
                          , h = c;
                        a ? h = Number(b + r) : c = Number(b + r);
                        return !(e && c < this.constraints.min || d && h > this.constraints.max)
                    }
                });
                q = q("dijit.form.NumberTextBox", [k, f], {
                    baseClass: "dijitTextBox dijitNumberTextBox"
                });
                q.Mixin = f;
                return q
            })
        },
        "dijit/form/RadioButton": function() {
            define(["dojo/_base/declare", "./CheckBox", "./_RadioButtonMixin"], function(q, p, n) {
                return q("dijit.form.RadioButton", [p, n], {
                    baseClass: "dijitRadio"
                })
            })
        },
        "dijit/form/_RadioButtonMixin": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom-attr dojo/_base/lang dojo/query!css2 ../registry".split(" "), function(q, p, n, m, l, k) {
                return p("dijit.form._RadioButtonMixin", null, {
                    type: "radio",
                    _getRelatedWidgets: function() {
                        var g = [];
                        l("input[type\x3dradio]", this.focusNode.form || this.ownerDocument).forEach(m.hitch(this, function(f) {
                            f.name == this.name && f.form == this.focusNode.form && (f = k.getEnclosingWidget(f)) && g.push(f)
                        }));
                        return g
                    },
                    _setCheckedAttr: function(g) {
                        this.inherited(arguments);
                        this._created && g && q.forEach(this._getRelatedWidgets(), m.hitch(this, function(f) {
                            f != this && f.checked && f.set("checked", !1)
                        }))
                    },
                    _getSubmitValue: function(g) {
                        return null == g ? "on" : g
                    },
                    _onClick: function(g) {
                        if (this.checked || this.disabled)
                            return g.stopPropagation(),
                            g.preventDefault(),
                            !1;
                        if (this.readOnly)
                            return g.stopPropagation(),
                            g.preventDefault(),
                            q.forEach(this._getRelatedWidgets(), m.hitch(this, function(d) {
                                n.set(this.focusNode || this.domNode, "checked", d.checked)
                            })),
                            !1;
                        var f = !1, e;
                        q.some(this._getRelatedWidgets(), function(d) {
                            return d.checked ? (e = d,
                            !0) : !1
                        });
                        this.checked = !0;
                        e && (e.checked = !1);
                        if (!1 === this.onClick(g) || g.defaultPrevented)
                            f = !0;
                        this.checked = !1;
                        e && (e.checked = !0);
                        f ? g.preventDefault() : this.set("checked", !0);
                        return !f
                    }
                })
            })
        },
        "dijit/form/Select": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom-attr dojo/dom-class dojo/dom-geometry dojo/i18n dojo/keys dojo/_base/lang dojo/on dojo/sniff ./_FormSelectWidget ../_HasDropDown ../DropDownMenu ../MenuItem ../MenuSeparator ../Tooltip ../_KeyNavMixin ../registry dojo/text!./templates/Select.html dojo/i18n!./nls/validate".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y) {
                function z(a) {
                    return function(b) {
                        this._isLoaded ? this.inherited(a, arguments) : this.loadDropDown(f.hitch(this, a, b))
                    }
                }
                var w = p("dijit.form._SelectMenu", a, {
                    autoFocus: !0,
                    buildRendering: function() {
                        this.inherited(arguments);
                        this.domNode.setAttribute("role", "listbox")
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this.own(e(this.domNode, "selectstart", function(a) {
                            a.preventDefault();
                            a.stopPropagation()
                        }))
                    },
                    focus: function() {
                        var a = !1
                          , b = this.parentWidget.value;
                        f.isArray(b) && (b = b[b.length - 1]);
                        b && q.forEach(this.parentWidget._getChildren(), function(h) {
                            h.option && b === h.option.value && (a = !0,
                            this.focusChild(h, !1))
                        }, this);
                        a || this.inherited(arguments)
                    }
                });
                l = p("dijit.form.Select" + (d("dojo-bidi") ? "_NoBidi" : ""), [c, b, u], {
                    baseClass: "dijitSelect dijitValidationTextBox",
                    templateString: y,
                    _buttonInputDisabled: d("ie") ? "disabled" : "",
                    required: !1,
                    state: "",
                    message: "",
                    tooltipPosition: [],
                    emptyLabel: "\x26#160;",
                    _isLoaded: !1,
                    _childrenLoaded: !1,
                    labelType: "html",
                    _fillContent: function() {
                        this.inherited(arguments);
                        if (this.options.length && !this.value && this.srcNodeRef) {
                            var a = this.srcNodeRef.selectedIndex || 0;
                            this._set("value", this.options[0 <= a ? a : 0].value)
                        }
                        this.dropDown = new w({
                            id: this.id + "_menu",
                            parentWidget: this
                        });
                        m.add(this.dropDown.domNode, this.baseClass.replace(/\s+|$/g, "Menu "))
                    },
                    _getMenuItemForOption: function(a) {
                        if (a.value || a.label) {
                            var b = f.hitch(this, "_setValueAttr", a);
                            a = new h({
                                option: a,
                                label: ("text" === this.labelType ? (a.label || "").toString().replace(/&/g, "\x26amp;").replace(/</g, "\x26lt;") : a.label) || this.emptyLabel,
                                onClick: b,
                                ownerDocument: this.ownerDocument,
                                dir: this.dir,
                                textDir: this.textDir,
                                disabled: a.disabled || !1
                            });
                            a.focusNode.setAttribute("role", "option");
                            return a
                        }
                        return new r({
                            ownerDocument: this.ownerDocument
                        })
                    },
                    _addOptionItem: function(a) {
                        this.dropDown && this.dropDown.addChild(this._getMenuItemForOption(a))
                    },
                    _getChildren: function() {
                        return this.dropDown ? this.dropDown.getChildren() : []
                    },
                    focus: function() {
                        if (!this.disabled && this.focusNode.focus)
                            try {
                                this.focusNode.focus()
                            } catch (v) {}
                    },
                    focusChild: function(a) {
                        a && this.set("value", a.option)
                    },
                    _getFirst: function() {
                        var a = this._getChildren();
                        return a.length ? a[0] : null
                    },
                    _getLast: function() {
                        var a = this._getChildren();
                        return a.length ? a[a.length - 1] : null
                    },
                    childSelector: function(a) {
                        return (a = x.byNode(a)) && a.getParent() == this.dropDown
                    },
                    onKeyboardSearch: function(a, b, h, c) {
                        a && this.focusChild(a)
                    },
                    _loadChildren: function(a) {
                        if (!0 === a)
                            if (this.dropDown && (delete this.dropDown.focusedChild,
                            this.focusedChild = null),
                            this.options.length)
                                this.inherited(arguments);
                            else {
                                q.forEach(this._getChildren(), function(a) {
                                    a.destroyRecursive()
                                });
                                var b = new h({
                                    ownerDocument: this.ownerDocument,
                                    label: this.emptyLabel
                                });
                                this.dropDown.addChild(b)
                            }
                        else
                            this._updateSelection();
                        this._isLoaded = !1;
                        this._childrenLoaded = !0;
                        this._loadingStore || this._setValueAttr(this.value, !1)
                    },
                    _refreshState: function() {
                        this._started && this.validate(this.focused)
                    },
                    startup: function() {
                        this.inherited(arguments);
                        this._refreshState()
                    },
                    _setValueAttr: function(a) {
                        this.inherited(arguments);
                        n.set(this.valueNode, "value", this.get("value"));
                        this._refreshState()
                    },
                    _setNameAttr: "valueNode",
                    _setDisabledAttr: function(a) {
                        this.inherited(arguments);
                        this._refreshState()
                    },
                    _setRequiredAttr: function(a) {
                        this._set("required", a);
                        this.focusNode.setAttribute("aria-required", a);
                        this._refreshState()
                    },
                    _setOptionsAttr: function(a) {
                        this._isLoaded = !1;
                        this._set("options", a)
                    },
                    _setDisplay: function(a) {
                        a = ("text" === this.labelType ? (a || "").replace(/&/g, "\x26amp;").replace(/</g, "\x26lt;") : a) || this.emptyLabel;
                        this.containerNode.innerHTML = '\x3cspan role\x3d"option" aria-selected\x3d"true" class\x3d"dijitReset dijitInline ' + this.baseClass.replace(/\s+|$/g, "Label ") + '"\x3e' + a + "\x3c/span\x3e"
                    },
                    validate: function(a) {
                        a = this.disabled || this.isValid(a);
                        this._set("state", a ? "" : this._hasBeenBlurred ? "Error" : "Incomplete");
                        this.focusNode.setAttribute("aria-invalid", a ? "false" : "true");
                        var b = a ? "" : this._missingMsg;
                        b && this.focused && this._hasBeenBlurred ? t.show(b, this.domNode, this.tooltipPosition, !this.isLeftToRight()) : t.hide(this.domNode);
                        this._set("message", b);
                        return a
                    },
                    isValid: function() {
                        return !this.required || 0 === this.value || !/^\s*$/.test(this.value || "")
                    },
                    reset: function() {
                        this.inherited(arguments);
                        t.hide(this.domNode);
                        this._refreshState()
                    },
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this._missingMsg = k.getLocalization("dijit.form", "validate", this.lang).missingMessage
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this.own(e(this.domNode, "selectstart", function(a) {
                            a.preventDefault();
                            a.stopPropagation()
                        }));
                        this.domNode.setAttribute("aria-expanded", "false");
                        var a = this._keyNavCodes;
                        delete a[g.LEFT_ARROW];
                        delete a[g.RIGHT_ARROW]
                    },
                    _setStyleAttr: function(a) {
                        this.inherited(arguments);
                        m.toggle(this.domNode, this.baseClass.replace(/\s+|$/g, "FixedWidth "), !!this.domNode.style.width)
                    },
                    isLoaded: function() {
                        return this._isLoaded
                    },
                    loadDropDown: function(a) {
                        this._loadChildren(!0);
                        this._isLoaded = !0;
                        a()
                    },
                    destroy: function(a) {
                        this.dropDown && !this.dropDown._destroyed && (this.dropDown.destroyRecursive(a),
                        delete this.dropDown);
                        t.hide(this.domNode);
                        this.inherited(arguments)
                    },
                    _onFocus: function() {
                        this.validate(!0)
                    },
                    _onBlur: function() {
                        t.hide(this.domNode);
                        this.inherited(arguments);
                        this.validate(!1)
                    }
                });
                d("dojo-bidi") && (l = p("dijit.form.Select", l, {
                    _setDisplay: function(a) {
                        this.inherited(arguments);
                        this.applyTextDir(this.containerNode)
                    }
                }));
                l._Menu = w;
                l.prototype._onContainerKeydown = z("_onContainerKeydown");
                l.prototype._onContainerKeypress = z("_onContainerKeypress");
                return l
            })
        },
        "dijit/form/_FormSelectWidget": function() {
            define("dojo/_base/array dojo/_base/Deferred dojo/aspect dojo/data/util/sorter dojo/_base/declare dojo/dom dojo/dom-class dojo/_base/kernel dojo/_base/lang dojo/query dojo/when dojo/store/util/QueryResults ./_FormValueWidget".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a) {
                return l("dijit.form._FormSelectWidget", a, {
                    multiple: !1,
                    options: null,
                    store: null,
                    _setStoreAttr: function(a) {
                        this._created && this._deprecatedSetStore(a)
                    },
                    query: null,
                    _setQueryAttr: function(a) {
                        this._created && this._deprecatedSetStore(this.store, this.selectedValue, {
                            query: a
                        })
                    },
                    queryOptions: null,
                    _setQueryOptionsAttr: function(a) {
                        this._created && this._deprecatedSetStore(this.store, this.selectedValue, {
                            queryOptions: a
                        })
                    },
                    labelAttr: "",
                    onFetch: null,
                    sortByLabel: !0,
                    loadChildrenOnOpen: !1,
                    onLoadDeferred: null,
                    getOptions: function(a) {
                        var b = this.options || [];
                        if (null == a)
                            return b;
                        if (e.isArrayLike(a))
                            return q.map(a, "return this.getOptions(item);", this);
                        e.isString(a) && (a = {
                            value: a
                        });
                        e.isObject(a) && (q.some(b, function(b, h) {
                            for (var c in a)
                                if (!(c in b) || b[c] != a[c])
                                    return !1;
                            a = h;
                            return !0
                        }) || (a = -1));
                        return 0 <= a && a < b.length ? b[a] : null
                    },
                    addOption: function(a) {
                        q.forEach(e.isArrayLike(a) ? a : [a], function(a) {
                            a && e.isObject(a) && this.options.push(a)
                        }, this);
                        this._loadChildren()
                    },
                    removeOption: function(a) {
                        a = this.getOptions(e.isArrayLike(a) ? a : [a]);
                        q.forEach(a, function(a) {
                            a && (this.options = q.filter(this.options, function(b) {
                                return b.value !== a.value || b.label !== a.label
                            }),
                            this._removeOptionItem(a))
                        }, this);
                        this._loadChildren()
                    },
                    updateOption: function(a) {
                        q.forEach(e.isArrayLike(a) ? a : [a], function(a) {
                            var b = this.getOptions({
                                value: a.value
                            }), h;
                            if (b)
                                for (h in a)
                                    b[h] = a[h]
                        }, this);
                        this._loadChildren()
                    },
                    setStore: function(a, b, c) {
                        f.deprecated(this.declaredClass + "::setStore(store, selectedValue, fetchArgs) is deprecated. Use set('query', fetchArgs.query), set('queryOptions', fetchArgs.queryOptions), set('store', store), or set('value', selectedValue) instead.", "", "2.0");
                        this._deprecatedSetStore(a, b, c)
                    },
                    _deprecatedSetStore: function(a, d, t) {
                        var h = this.store;
                        t = t || {};
                        if (h !== a) {
                            for (var r; r = this._notifyConnections.pop(); )
                                r.remove();
                            a.get || (e.mixin(a, {
                                _oldAPI: !0,
                                get: function(a) {
                                    var b = new p;
                                    this.fetchItemByIdentity({
                                        identity: a,
                                        onItem: function(a) {
                                            b.resolve(a)
                                        },
                                        onError: function(a) {
                                            b.reject(a)
                                        }
                                    });
                                    return b.promise
                                },
                                query: function(a, h) {
                                    var c = new p(function() {
                                        d.abort && d.abort()
                                    }
                                    );
                                    c.total = new p;
                                    var d = this.fetch(e.mixin({
                                        query: a,
                                        onBegin: function(a) {
                                            c.total.resolve(a)
                                        },
                                        onComplete: function(a) {
                                            c.resolve(a)
                                        },
                                        onError: function(a) {
                                            c.reject(a)
                                        }
                                    }, h));
                                    return new b(c)
                                }
                            }),
                            a.getFeatures()["dojo.data.api.Notification"] && (this._notifyConnections = [n.after(a, "onNew", e.hitch(this, "_onNewItem"), !0), n.after(a, "onDelete", e.hitch(this, "_onDeleteItem"), !0), n.after(a, "onSet", e.hitch(this, "_onSetItem"), !0)]));
                            this._set("store", a)
                        }
                        this.options && this.options.length && this.removeOption(this.options);
                        this._queryRes && this._queryRes.close && this._queryRes.close();
                        this._observeHandle && this._observeHandle.remove && (this._observeHandle.remove(),
                        this._observeHandle = null);
                        t.query && this._set("query", t.query);
                        t.queryOptions && this._set("queryOptions", t.queryOptions);
                        a && a.query && (this._loadingStore = !0,
                        this.onLoadDeferred = new p,
                        this._queryRes = a.query(this.query, this.queryOptions),
                        c(this._queryRes, e.hitch(this, function(b) {
                            if (this.sortByLabel && !t.sort && b.length)
                                if (a.getValue)
                                    b.sort(m.createSortFunction([{
                                        attribute: a.getLabelAttributes(b[0])[0]
                                    }], a));
                                else {
                                    var h = this.labelAttr;
                                    b.sort(function(a, b) {
                                        return a[h] > b[h] ? 1 : b[h] > a[h] ? -1 : 0
                                    })
                                }
                            t.onFetch && (b = t.onFetch.call(this, b, t));
                            q.forEach(b, function(a) {
                                this._addOptionForItem(a)
                            }, this);
                            this._queryRes.observe && (this._observeHandle = this._queryRes.observe(e.hitch(this, function(a, b, h) {
                                b == h ? this._onSetItem(a) : (-1 != b && this._onDeleteItem(a),
                                -1 != h && this._onNewItem(a))
                            }), !0));
                            this._loadingStore = !1;
                            this.set("value", "_pendingValue"in this ? this._pendingValue : d);
                            delete this._pendingValue;
                            this.loadChildrenOnOpen ? this._pseudoLoadChildren(b) : this._loadChildren();
                            this.onLoadDeferred.resolve(!0);
                            this.onSetStore()
                        }), e.hitch(this, function(a) {
                            console.error("dijit.form.Select: " + a.toString());
                            this.onLoadDeferred.reject(a)
                        })));
                        return h
                    },
                    _setValueAttr: function(a, b) {
                        this._onChangeActive || (b = null);
                        if (this._loadingStore)
                            this._pendingValue = a;
                        else if (null != a) {
                            a = e.isArrayLike(a) ? q.map(a, function(a) {
                                return e.isObject(a) ? a : {
                                    value: a
                                }
                            }) : e.isObject(a) ? [a] : [{
                                value: a
                            }];
                            a = q.filter(this.getOptions(a), function(a) {
                                return a && a.value
                            });
                            var h = this.getOptions() || [];
                            this.multiple || a[0] && a[0].value || !h.length || (a[0] = h[0]);
                            q.forEach(h, function(b) {
                                b.selected = q.some(a, function(a) {
                                    return a.value === b.value
                                })
                            });
                            h = q.map(a, function(a) {
                                return a.value
                            });
                            if ("undefined" != typeof h && "undefined" != typeof h[0]) {
                                var c = q.map(a, function(a) {
                                    return a.label
                                });
                                this._setDisplay(this.multiple ? c : c[0]);
                                this.inherited(arguments, [this.multiple ? h : h[0], b]);
                                this._updateSelection()
                            }
                        }
                    },
                    _getDisplayedValueAttr: function() {
                        var a = q.map([].concat(this.get("selectedOptions")), function(a) {
                            return a && "label"in a ? a.label : a ? a.value : null
                        }, this);
                        return this.multiple ? a : a[0]
                    },
                    _setDisplayedValueAttr: function(a) {
                        this.set("value", this.getOptions("string" == typeof a ? {
                            label: a
                        } : a))
                    },
                    _loadChildren: function() {
                        this._loadingStore || (q.forEach(this._getChildren(), function(a) {
                            a.destroyRecursive()
                        }),
                        q.forEach(this.options, this._addOptionItem, this),
                        this._updateSelection())
                    },
                    _updateSelection: function() {
                        this.focusedChild = null;
                        this._set("value", this._getValueFromOpts());
                        var a = [].concat(this.value);
                        if (a && a[0]) {
                            var b = this;
                            q.forEach(this._getChildren(), function(h) {
                                var c = q.some(a, function(a) {
                                    return h.option && a === h.option.value
                                });
                                c && !b.multiple && (b.focusedChild = h);
                                g.toggle(h.domNode, this.baseClass.replace(/\s+|$/g, "SelectedOption "), c);
                                h.domNode.setAttribute("aria-selected", c ? "true" : "false")
                            }, this)
                        }
                    },
                    _getValueFromOpts: function() {
                        var a = this.getOptions() || [];
                        if (!this.multiple && a.length) {
                            var b = q.filter(a, function(a) {
                                return a.selected
                            })[0];
                            if (b && b.value)
                                return b.value;
                            a[0].selected = !0;
                            return a[0].value
                        }
                        return this.multiple ? q.map(q.filter(a, function(a) {
                            return a.selected
                        }), function(a) {
                            return a.value
                        }) || [] : ""
                    },
                    _onNewItem: function(a, b) {
                        b && b.parent || this._addOptionForItem(a)
                    },
                    _onDeleteItem: function(a) {
                        this.removeOption({
                            value: this.store.getIdentity(a)
                        })
                    },
                    _onSetItem: function(a) {
                        this.updateOption(this._getOptionObjForItem(a))
                    },
                    _getOptionObjForItem: function(a) {
                        var b = this.store
                          , h = this.labelAttr && this.labelAttr in a ? a[this.labelAttr] : b.getLabel(a);
                        return {
                            value: h ? b.getIdentity(a) : null,
                            label: h,
                            item: a
                        }
                    },
                    _addOptionForItem: function(a) {
                        var b = this.store;
                        b.isItemLoaded && !b.isItemLoaded(a) ? b.loadItem({
                            item: a,
                            onItem: function(a) {
                                this._addOptionForItem(a)
                            },
                            scope: this
                        }) : (a = this._getOptionObjForItem(a),
                        this.addOption(a))
                    },
                    constructor: function(a) {
                        this._oValue = (a || {}).value || null;
                        this._notifyConnections = []
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        k.setSelectable(this.focusNode, !1)
                    },
                    _fillContent: function() {
                        this.options || (this.options = this.srcNodeRef ? d("\x3e *", this.srcNodeRef).map(function(a) {
                            return "separator" === a.getAttribute("type") ? {
                                value: "",
                                label: "",
                                selected: !1,
                                disabled: !1
                            } : {
                                value: a.getAttribute("data-" + f._scopeName + "-value") || a.getAttribute("value"),
                                label: String(a.innerHTML),
                                selected: a.getAttribute("selected") || !1,
                                disabled: a.getAttribute("disabled") || !1
                            }
                        }, this) : []);
                        this.value ? this.multiple && "string" == typeof this.value && this._set("value", this.value.split(",")) : this._set("value", this._getValueFromOpts())
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        n.after(this, "onChange", e.hitch(this, "_updateSelection"));
                        var a = this.store;
                        a && (a.getIdentity || a.getFeatures()["dojo.data.api.Identity"]) && (this.store = null,
                        this._deprecatedSetStore(a, this._oValue, {
                            query: this.query,
                            queryOptions: this.queryOptions
                        }));
                        this._storeInitialized = !0
                    },
                    startup: function() {
                        this._loadChildren();
                        this.inherited(arguments)
                    },
                    destroy: function() {
                        for (var a; a = this._notifyConnections.pop(); )
                            a.remove();
                        this._queryRes && this._queryRes.close && this._queryRes.close();
                        this._observeHandle && this._observeHandle.remove && (this._observeHandle.remove(),
                        this._observeHandle = null);
                        this.inherited(arguments)
                    },
                    _addOptionItem: function() {},
                    _removeOptionItem: function() {},
                    _setDisplay: function() {},
                    _getChildren: function() {
                        return []
                    },
                    _getSelectedOptionsAttr: function() {
                        return this.getOptions({
                            selected: !0
                        })
                    },
                    _pseudoLoadChildren: function() {},
                    onSetStore: function() {}
                })
            })
        },
        "dijit/form/SimpleTextarea": function() {
            define(["dojo/_base/declare", "dojo/dom-class", "dojo/sniff", "./TextBox"], function(q, p, n, m) {
                return q("dijit.form.SimpleTextarea", m, {
                    baseClass: "dijitTextBox dijitTextArea",
                    rows: "3",
                    cols: "20",
                    templateString: "\x3ctextarea ${!nameAttrSetting} data-dojo-attach-point\x3d'focusNode,containerNode,textbox' autocomplete\x3d'off'\x3e\x3c/textarea\x3e",
                    postMixInProperties: function() {
                        !this.value && this.srcNodeRef && (this.value = this.srcNodeRef.value);
                        this.inherited(arguments)
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        n("ie") && this.cols && p.add(this.textbox, "dijitTextAreaCols")
                    },
                    filter: function(l) {
                        l && (l = l.replace(/\r/g, ""));
                        return this.inherited(arguments)
                    },
                    _onInput: function(l) {
                        if (this.maxLength) {
                            var k = parseInt(this.maxLength)
                              , g = this.textbox.value.replace(/\r/g, "")
                              , k = g.length - k;
                            if (0 < k) {
                                var f = this.textbox;
                                if (f.selectionStart) {
                                    var e = f.selectionStart
                                      , d = 0;
                                    n("opera") && (d = (this.textbox.value.substring(0, e).match(/\r/g) || []).length);
                                    this.textbox.value = g.substring(0, e - k - d) + g.substring(e - d);
                                    f.setSelectionRange(e - k, e - k)
                                } else
                                    this.ownerDocument.selection && (f.focus(),
                                    g = this.ownerDocument.selection.createRange(),
                                    g.moveStart("character", -k),
                                    g.text = "",
                                    g.select())
                            }
                        }
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/form/TimeTextBox": function() {
            define("dojo/_base/declare dojo/keys dojo/query dojo/_base/lang ../_TimePicker ./_DateTimeTextBox".split(" "), function(q, p, n, m, l, k) {
                return q("dijit.form.TimeTextBox", k, {
                    baseClass: "dijitTextBox dijitComboBox dijitTimeTextBox",
                    popupClass: l,
                    _selector: "time",
                    value: new Date(""),
                    maxHeight: -1,
                    openDropDown: function(g) {
                        this.inherited(arguments);
                        var f = n(".dijitTimePickerItemSelected", this.dropDown.domNode)
                          , e = this.dropDown.domNode.parentNode;
                        e.scrollTop = f[0] ? f[0].offsetTop - (e.clientHeight - f[0].clientHeight) / 2 : (e.scrollHeight - e.clientHeight) / 2;
                        this.dropDown.on("input", m.hitch(this, function() {
                            this.set("value", this.dropDown.get("value"), !1)
                        }))
                    },
                    _onInput: function() {
                        this.inherited(arguments);
                        var g = this.get("displayedValue");
                        this.filterString = g && !this.parse(g, this.constraints) ? g.toLowerCase() : "";
                        this._opened && this.closeDropDown();
                        this.openDropDown()
                    }
                })
            })
        },
        "dijit/form/nls/zh/ComboBox": function() {
            define({
                previousMessage: "\u5148\u524d\u9009\u9879",
                nextMessage: "\u66f4\u591a\u9009\u9879"
            })
        },
        "dijit/form/nls/zh/validate": function() {
            define({
                invalidMessage: "\u8f93\u5165\u7684\u503c\u65e0\u6548\u3002",
                missingMessage: "\u8be5\u503c\u662f\u5fc5\u9700\u7684\u3002",
                rangeMessage: "\u6b64\u503c\u8d85\u51fa\u8303\u56f4\u3002"
            })
        },
        "dijit/layout/AccordionContainer": function() {
            define("require dojo/_base/array dojo/_base/declare dojo/_base/fx dojo/dom dojo/dom-attr dojo/dom-class dojo/dom-construct dojo/dom-geometry dojo/keys dojo/_base/lang dojo/sniff dojo/topic ../focus ../_base/manager dojo/ready ../_Widget ../_Container ../_TemplatedMixin ../_CssStateMixin ./StackContainer ./ContentPane dojo/text!./templates/AccordionButton.html ../a11yclick".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A) {
                function B(a, b) {
                    a.resize ? a.resize(b) : e.setMarginBox(a.domNode, b)
                }
                a = n("dijit.layout._AccordionButton", [u, y, z], {
                    templateString: A,
                    label: "",
                    _setLabelAttr: {
                        node: "titleTextNode",
                        type: "innerHTML"
                    },
                    title: "",
                    _setTitleAttr: {
                        node: "titleTextNode",
                        type: "attribute",
                        attribute: "title"
                    },
                    iconClassAttr: "",
                    _setIconClassAttr: {
                        node: "iconNode",
                        type: "class"
                    },
                    baseClass: "dijitAccordionTitle",
                    getParent: function() {
                        return this.parent
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        var a = this.id.replace(" ", "_");
                        k.set(this.titleTextNode, "id", a + "_title");
                        this.focusNode.setAttribute("aria-labelledby", k.get(this.titleTextNode, "id"));
                        l.setSelectable(this.domNode, !1)
                    },
                    getTitleHeight: function() {
                        return e.getMarginSize(this.domNode).h
                    },
                    _onTitleClick: function() {
                        this.getParent().selectChild(this.contentWidget, !0);
                        h.focus(this.focusNode)
                    },
                    _onTitleKeyDown: function(a) {
                        return this.getParent()._onKeyDown(a, this.contentWidget)
                    },
                    _setSelectedAttr: function(a) {
                        this._set("selected", a);
                        this.focusNode.setAttribute("aria-expanded", a ? "true" : "false");
                        this.focusNode.setAttribute("aria-selected", a ? "true" : "false");
                        this.focusNode.setAttribute("tabIndex", a ? "0" : "-1")
                    }
                });
                b("dojo-bidi") && a.extend({
                    _setLabelAttr: function(a) {
                        this._set("label", a);
                        k.set(this.titleTextNode, "innerHTML", a);
                        this.applyTextDir(this.titleTextNode)
                    },
                    _setTitleAttr: function(a) {
                        this._set("title", a);
                        k.set(this.titleTextNode, "title", a);
                        this.applyTextDir(this.titleTextNode)
                    }
                });
                var C = n("dijit.layout._AccordionInnerContainer" + (b("dojo-bidi") ? "_NoBidi" : ""), [u, z], {
                    baseClass: "dijitAccordionInnerContainer",
                    isLayoutContainer: !0,
                    buildRendering: function() {
                        this.domNode = f.place("\x3cdiv class\x3d'" + this.baseClass + "' role\x3d'presentation'\x3e", this.contentWidget.domNode, "after");
                        var a = this.contentWidget
                          , b = c.isString(this.buttonWidget) ? c.getObject(this.buttonWidget) : this.buttonWidget;
                        this.button = a._buttonWidget = (new b({
                            contentWidget: a,
                            label: a.title,
                            title: a.tooltip,
                            dir: a.dir,
                            lang: a.lang,
                            textDir: a.textDir || this.textDir,
                            iconClass: a.iconClass,
                            id: a.id + "_button",
                            parent: this.parent
                        })).placeAt(this.domNode);
                        this.containerNode = f.place("\x3cdiv class\x3d'dijitAccordionChildWrapper' role\x3d'tabpanel' style\x3d'display:none'\x3e", this.domNode);
                        this.containerNode.setAttribute("aria-labelledby", this.button.id);
                        f.place(this.contentWidget.domNode, this.containerNode)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        var a = this.button
                          , b = this.contentWidget;
                        this._contentWidgetWatches = [b.watch("title", c.hitch(this, function(b, c, h) {
                            a.set("label", h)
                        })), b.watch("tooltip", c.hitch(this, function(b, c, h) {
                            a.set("title", h)
                        })), b.watch("iconClass", c.hitch(this, function(b, c, h) {
                            a.set("iconClass", h)
                        }))]
                    },
                    _setSelectedAttr: function(a) {
                        this._set("selected", a);
                        this.button.set("selected", a);
                        if (a && (a = this.contentWidget,
                        a.onSelected))
                            a.onSelected()
                    },
                    startup: function() {
                        this.contentWidget.startup()
                    },
                    destroy: function() {
                        this.button.destroyRecursive();
                        p.forEach(this._contentWidgetWatches || [], function(a) {
                            a.unwatch()
                        });
                        delete this.contentWidget._buttonWidget;
                        delete this.contentWidget._wrapperWidget;
                        this.inherited(arguments)
                    },
                    destroyDescendants: function(a) {
                        this.contentWidget.destroyRecursive(a)
                    }
                });
                b("dojo-bidi") && (C = n("dijit.layout._AccordionInnerContainer", C, {
                    postCreate: function() {
                        this.inherited(arguments);
                        var a = this.button;
                        this._contentWidgetWatches.push(this.contentWidget.watch("textDir", function(b, c, h) {
                            a.set("textDir", h)
                        }))
                    }
                }));
                n = n("dijit.layout.AccordionContainer", w, {
                    duration: r.defaultDuration,
                    buttonWidget: a,
                    baseClass: "dijitAccordionContainer",
                    buildRendering: function() {
                        this.inherited(arguments);
                        this.domNode.style.overflow = "hidden";
                        this.domNode.setAttribute("role", "tablist")
                    },
                    startup: function() {
                        this._started || (this.inherited(arguments),
                        this.selectedChildWidget && this.selectedChildWidget._wrapperWidget.set("selected", !0))
                    },
                    layout: function() {
                        var a = this.selectedChildWidget;
                        if (a) {
                            var b = a._wrapperWidget.domNode
                              , c = e.getMarginExtents(b)
                              , b = e.getPadBorderExtents(b)
                              , h = a._wrapperWidget.containerNode
                              , d = e.getMarginExtents(h)
                              , h = e.getPadBorderExtents(h)
                              , r = this._contentBox
                              , t = 0;
                            p.forEach(this.getChildren(), function(b) {
                                b != a && (t += e.getMarginSize(b._wrapperWidget.domNode).h)
                            });
                            this._verticalSpace = r.h - t - c.h - b.h - d.h - h.h - a._buttonWidget.getTitleHeight();
                            this._containerContentBox = {
                                h: this._verticalSpace,
                                w: this._contentBox.w - c.w - b.w - d.w - h.w
                            };
                            a && B(a, this._containerContentBox)
                        }
                    },
                    _setupChild: function(a) {
                        a._wrapperWidget = C({
                            contentWidget: a,
                            buttonWidget: this.buttonWidget,
                            id: a.id + "_wrapper",
                            dir: a.dir,
                            lang: a.lang,
                            textDir: a.textDir || this.textDir,
                            parent: this
                        });
                        this.inherited(arguments);
                        f.place(a.domNode, a._wrapper, "replace")
                    },
                    removeChild: function(a) {
                        a._wrapperWidget && (f.place(a.domNode, a._wrapperWidget.domNode, "after"),
                        a._wrapperWidget.destroy(),
                        delete a._wrapperWidget);
                        g.remove(a.domNode, "dijitHidden");
                        this.inherited(arguments)
                    },
                    getChildren: function() {
                        return p.map(this.inherited(arguments), function(a) {
                            return "dijit.layout._AccordionInnerContainer" == a.declaredClass ? a.contentWidget : a
                        }, this)
                    },
                    destroy: function() {
                        this._animation && this._animation.stop();
                        p.forEach(this.getChildren(), function(a) {
                            a._wrapperWidget ? a._wrapperWidget.destroy() : a.destroyRecursive()
                        });
                        this.inherited(arguments)
                    },
                    _showChild: function(a) {
                        a._wrapperWidget.containerNode.style.display = "block";
                        return this.inherited(arguments)
                    },
                    _hideChild: function(a) {
                        a._wrapperWidget.containerNode.style.display = "none";
                        this.inherited(arguments)
                    },
                    _transition: function(a, h, c) {
                        8 > b("ie") && (c = !1);
                        this._animation && (this._animation.stop(!0),
                        delete this._animation);
                        var d = this;
                        if (a) {
                            a._wrapperWidget.set("selected", !0);
                            var r = this._showChild(a);
                            this.doLayout && B(a, this._containerContentBox)
                        }
                        h && (h._wrapperWidget.set("selected", !1),
                        c || this._hideChild(h));
                        if (c) {
                            var t = a._wrapperWidget.containerNode
                              , f = h._wrapperWidget.containerNode;
                            c = a._wrapperWidget.containerNode;
                            a = e.getMarginExtents(c);
                            c = e.getPadBorderExtents(c);
                            var u = a.h + c.h;
                            f.style.height = d._verticalSpace - u + "px";
                            this._animation = new m.Animation({
                                node: t,
                                duration: this.duration,
                                curve: [1, this._verticalSpace - u - 1],
                                onAnimate: function(a) {
                                    a = Math.floor(a);
                                    t.style.height = a + "px";
                                    f.style.height = d._verticalSpace - u - a + "px"
                                },
                                onEnd: function() {
                                    delete d._animation;
                                    t.style.height = "auto";
                                    h._wrapperWidget.containerNode.style.display = "none";
                                    f.style.height = "auto";
                                    d._hideChild(h)
                                }
                            });
                            this._animation.onStop = this._animation.onEnd;
                            this._animation.play()
                        }
                        return r
                    },
                    _onKeyDown: function(a, b) {
                        if (!this.disabled && !a.altKey && (b || a.ctrlKey)) {
                            var c = a.keyCode;
                            if (b && (c == d.LEFT_ARROW || c == d.UP_ARROW) || a.ctrlKey && c == d.PAGE_UP)
                                this._adjacent(!1)._buttonWidget._onTitleClick(),
                                a.stopPropagation(),
                                a.preventDefault();
                            else if (b && (c == d.RIGHT_ARROW || c == d.DOWN_ARROW) || a.ctrlKey && (c == d.PAGE_DOWN || c == d.TAB))
                                this._adjacent(!0)._buttonWidget._onTitleClick(),
                                a.stopPropagation(),
                                a.preventDefault()
                        }
                    }
                });
                b("dijit-legacy-requires") && t(0, function() {
                    q(["dijit/layout/AccordionPane"])
                });
                n._InnerContainer = C;
                n._Button = a;
                return n
            })
        },
        "dijit/layout/StackContainer": function() {
            define("dojo/_base/array dojo/cookie dojo/_base/declare dojo/dom-class dojo/dom-construct dojo/has dojo/_base/lang dojo/on dojo/ready dojo/topic dojo/when ../registry ../_WidgetBase ./_LayoutWidget".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h) {
                k("dijit-legacy-requires") && e(0, function() {
                    require(["dijit/layout/StackController"])
                });
                n = n("dijit.layout.StackContainer", h, {
                    doLayout: !0,
                    persist: !1,
                    baseClass: "dijitStackContainer",
                    buildRendering: function() {
                        this.inherited(arguments);
                        m.add(this.domNode, "dijitLayoutContainer")
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this.own(f(this.domNode, "keydown", g.hitch(this, "_onKeyDown")))
                    },
                    startup: function() {
                        if (!this._started) {
                            var a = this.getChildren();
                            q.forEach(a, this._setupChild, this);
                            this.persist ? this.selectedChildWidget = b.byId(p(this.id + "_selectedChild")) : q.some(a, function(a) {
                                a.selected && (this.selectedChildWidget = a);
                                return a.selected
                            }, this);
                            var c = this.selectedChildWidget;
                            !c && a[0] && (c = this.selectedChildWidget = a[0],
                            c.selected = !0);
                            d.publish(this.id + "-startup", {
                                children: a,
                                selected: c,
                                textDir: this.textDir
                            });
                            this.inherited(arguments)
                        }
                    },
                    resize: function() {
                        if (!this._hasBeenShown) {
                            this._hasBeenShown = !0;
                            var a = this.selectedChildWidget;
                            a && this._showChild(a)
                        }
                        this.inherited(arguments)
                    },
                    _setupChild: function(a) {
                        var b = a.domNode
                          , c = l.place("\x3cdiv role\x3d'tabpanel' class\x3d'" + this.baseClass + "ChildWrapper dijitHidden'\x3e", a.domNode, "replace")
                          , h = a["aria-label"] || a.title || a.label;
                        h && c.setAttribute("aria-label", h);
                        l.place(b, c);
                        a._wrapper = c;
                        this.inherited(arguments);
                        "none" == b.style.display && (b.style.display = "block");
                        a.domNode.removeAttribute("title")
                    },
                    addChild: function(a, b) {
                        this.inherited(arguments);
                        this._started && (d.publish(this.id + "-addChild", a, b),
                        this.layout(),
                        this.selectedChildWidget || this.selectChild(a))
                    },
                    removeChild: function(a) {
                        var b = q.indexOf(this.getChildren(), a);
                        this.inherited(arguments);
                        l.destroy(a._wrapper);
                        delete a._wrapper;
                        this._started && d.publish(this.id + "-removeChild", a);
                        if (!this._descendantsBeingDestroyed) {
                            if (this.selectedChildWidget === a && (this.selectedChildWidget = void 0,
                            this._started)) {
                                var c = this.getChildren();
                                c.length && this.selectChild(c[Math.max(b - 1, 0)])
                            }
                            this._started && this.layout()
                        }
                    },
                    selectChild: function(a, h) {
                        var r;
                        a = b.byId(a);
                        this.selectedChildWidget != a && (r = this._transition(a, this.selectedChildWidget, h),
                        this._set("selectedChildWidget", a),
                        d.publish(this.id + "-selectChild", a, this._focused),
                        this.persist && p(this.id + "_selectedChild", this.selectedChildWidget.id));
                        return c(r || !0)
                    },
                    _transition: function(a, b) {
                        b && this._hideChild(b);
                        var c = this._showChild(a);
                        a.resize && (this.doLayout ? a.resize(this._containerContentBox || this._contentBox) : a.resize());
                        return c
                    },
                    _adjacent: function(a) {
                        var b = this.getChildren()
                          , c = q.indexOf(b, this.selectedChildWidget)
                          , c = c + (a ? 1 : b.length - 1);
                        return b[c % b.length]
                    },
                    forward: function() {
                        return this.selectChild(this._adjacent(!0), !0)
                    },
                    back: function() {
                        return this.selectChild(this._adjacent(!1), !0)
                    },
                    _onKeyDown: function(a) {
                        d.publish(this.id + "-containerKeyDown", {
                            e: a,
                            page: this
                        })
                    },
                    layout: function() {
                        var a = this.selectedChildWidget;
                        a && a.resize && (this.doLayout ? a.resize(this._containerContentBox || this._contentBox) : a.resize())
                    },
                    _showChild: function(a) {
                        var b = this.getChildren();
                        a.isFirstChild = a == b[0];
                        a.isLastChild = a == b[b.length - 1];
                        a._set("selected", !0);
                        a._wrapper && m.replace(a._wrapper, "dijitVisible", "dijitHidden");
                        return a._onShow && a._onShow() || !0
                    },
                    _hideChild: function(a) {
                        a._set("selected", !1);
                        a._wrapper && m.replace(a._wrapper, "dijitHidden", "dijitVisible");
                        a.onHide && a.onHide()
                    },
                    closeChild: function(a) {
                        if (!a.onClose || a.onClose(this, a))
                            this.removeChild(a),
                            a.destroyRecursive()
                    },
                    destroyDescendants: function(a) {
                        this._descendantsBeingDestroyed = !0;
                        this.selectedChildWidget = void 0;
                        q.forEach(this.getChildren(), function(b) {
                            a || this.removeChild(b);
                            b.destroyRecursive(a)
                        }, this);
                        this._descendantsBeingDestroyed = !1
                    }
                });
                n.ChildWidgetProperties = {
                    selected: !1,
                    disabled: !1,
                    closable: !1,
                    iconClass: "dijitNoIcon",
                    showTitle: !0
                };
                g.extend(a, n.ChildWidgetProperties);
                return n
            })
        },
        "dijit/layout/_LayoutWidget": function() {
            define("dojo/_base/lang ../_Widget ../_Container ../_Contained ../Viewport dojo/_base/declare dojo/dom-class dojo/dom-geometry dojo/dom-style".split(" "), function(q, p, n, m, l, k, g, f, e) {
                return k("dijit.layout._LayoutWidget", [p, n, m], {
                    baseClass: "dijitLayoutContainer",
                    isLayoutContainer: !0,
                    _setTitleAttr: null,
                    buildRendering: function() {
                        this.inherited(arguments);
                        g.add(this.domNode, "dijitContainer")
                    },
                    startup: function() {
                        if (!this._started) {
                            this.inherited(arguments);
                            var d = this.getParent && this.getParent();
                            d && d.isLayoutContainer || (this.resize(),
                            this.own(l.on("resize", q.hitch(this, "resize"))))
                        }
                    },
                    resize: function(d, c) {
                        var b = this.domNode;
                        d && f.setMarginBox(b, d);
                        var a = c || {};
                        q.mixin(a, d || {});
                        "h"in a && "w"in a || (a = q.mixin(f.getMarginBox(b), a));
                        var h = e.getComputedStyle(b)
                          , r = f.getMarginExtents(b, h)
                          , t = f.getBorderExtents(b, h)
                          , a = this._borderBox = {
                            w: a.w - (r.w + t.w),
                            h: a.h - (r.h + t.h)
                        }
                          , r = f.getPadExtents(b, h);
                        this._contentBox = {
                            l: e.toPixelValue(b, h.paddingLeft),
                            t: e.toPixelValue(b, h.paddingTop),
                            w: a.w - r.w,
                            h: a.h - r.h
                        };
                        this.layout()
                    },
                    layout: function() {},
                    _setupChild: function(d) {
                        g.add(d.domNode, this.baseClass + "-child " + (d.baseClass ? this.baseClass + "-" + d.baseClass : ""))
                    },
                    addChild: function(d, c) {
                        this.inherited(arguments);
                        this._started && this._setupChild(d)
                    },
                    removeChild: function(d) {
                        g.remove(d.domNode, this.baseClass + "-child" + (d.baseClass ? " " + this.baseClass + "-" + d.baseClass : ""));
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/layout/BorderContainer": function() {
            define("dojo/_base/array dojo/cookie dojo/_base/declare dojo/dom-class dojo/dom-construct dojo/dom-geometry dojo/dom-style dojo/keys dojo/_base/lang dojo/on dojo/touch ../_WidgetBase ../_Widget ../_TemplatedMixin ./LayoutContainer ./utils".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t) {
                var u = n("dijit.layout._Splitter", [a, h], {
                    live: !0,
                    templateString: '\x3cdiv class\x3d"dijitSplitter" data-dojo-attach-event\x3d"onkeydown:_onKeyDown,press:_startDrag,onmouseenter:_onMouse,onmouseleave:_onMouse" tabIndex\x3d"0" role\x3d"separator"\x3e\x3cdiv class\x3d"dijitSplitterThumb"\x3e\x3c/div\x3e\x3c/div\x3e',
                    constructor: function() {
                        this._handlers = []
                    },
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.horizontal = /top|bottom/.test(this.region);
                        this._factor = /top|left/.test(this.region) ? 1 : -1;
                        this._cookieName = this.container.id + "_" + this.region
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        m.add(this.domNode, "dijitSplitter" + (this.horizontal ? "H" : "V"));
                        if (this.container.persist) {
                            var a = p(this._cookieName);
                            a && (this.child.domNode.style[this.horizontal ? "height" : "width"] = a)
                        }
                    },
                    _computeMaxSize: function() {
                        var a = this.horizontal ? "h" : "w"
                          , b = k.getMarginBox(this.child.domNode)[a]
                          , c = q.filter(this.container.getChildren(), function(a) {
                            return "center" == a.region
                        })[0]
                          , a = k.getContentBox(c.domNode)[a] - 10;
                        return Math.min(this.child.maxSize, b + a)
                    },
                    _startDrag: function(a) {
                        this.cover || (this.cover = l.place("\x3cdiv class\x3ddijitSplitterCover\x3e\x3c/div\x3e", this.child.domNode, "after"));
                        m.add(this.cover, "dijitSplitterCoverActive");
                        this.fake && l.destroy(this.fake);
                        (this._resize = this.live) || ((this.fake = this.domNode.cloneNode(!0)).removeAttribute("id"),
                        m.add(this.domNode, "dijitSplitterShadow"),
                        l.place(this.fake, this.domNode, "after"));
                        m.add(this.domNode, "dijitSplitterActive dijitSplitter" + (this.horizontal ? "H" : "V") + "Active");
                        this.fake && m.remove(this.fake, "dijitSplitterHover dijitSplitter" + (this.horizontal ? "H" : "V") + "Hover");
                        var b = this._factor
                          , h = this.horizontal
                          , r = h ? "pageY" : "pageX"
                          , t = a[r]
                          , f = this.domNode.style
                          , h = h ? "h" : "w"
                          , u = g.getComputedStyle(this.child.domNode)
                          , x = k.getMarginBox(this.child.domNode, u)[h]
                          , n = this._computeMaxSize()
                          , y = Math.max(this.child.minSize, k.getPadBorderExtents(this.child.domNode, u)[h] + 10)
                          , h = this.region
                          , p = "top" == h || "bottom" == h ? "top" : "left"
                          , q = parseInt(f[p], 10)
                          , J = this._resize
                          , O = e.hitch(this.container, "_layoutChildren", this.child.id)
                          , h = this.ownerDocument;
                        this._handlers = this._handlers.concat([d(h, c.move, this._drag = function(a, c) {
                            var h = a[r] - t
                              , d = b * h + x
                              , e = Math.max(Math.min(d, n), y);
                            (J || c) && O(e);
                            f[p] = h + q + b * (e - d) + "px"
                        }
                        ), d(h, "dragstart", function(a) {
                            a.stopPropagation();
                            a.preventDefault()
                        }), d(this.ownerDocumentBody, "selectstart", function(a) {
                            a.stopPropagation();
                            a.preventDefault()
                        }), d(h, c.release, e.hitch(this, "_stopDrag"))]);
                        a.stopPropagation();
                        a.preventDefault()
                    },
                    _onMouse: function(a) {
                        a = "mouseover" == a.type || "mouseenter" == a.type;
                        m.toggle(this.domNode, "dijitSplitterHover", a);
                        m.toggle(this.domNode, "dijitSplitter" + (this.horizontal ? "H" : "V") + "Hover", a)
                    },
                    _stopDrag: function(a) {
                        try {
                            this.cover && m.remove(this.cover, "dijitSplitterCoverActive"),
                            this.fake && l.destroy(this.fake),
                            m.remove(this.domNode, "dijitSplitterActive dijitSplitter" + (this.horizontal ? "H" : "V") + "Active dijitSplitterShadow"),
                            this._drag(a),
                            this._drag(a, !0)
                        } finally {
                            this._cleanupHandlers(),
                            delete this._drag
                        }
                        this.container.persist && p(this._cookieName, this.child.domNode.style[this.horizontal ? "height" : "width"], {
                            expires: 365
                        })
                    },
                    _cleanupHandlers: function() {
                        for (var a; a = this._handlers.pop(); )
                            a.remove()
                    },
                    _onKeyDown: function(a) {
                        this._resize = !0;
                        var b = this.horizontal
                          , c = 1;
                        switch (a.keyCode) {
                        case b ? f.UP_ARROW : f.LEFT_ARROW:
                            c *= -1;
                        case b ? f.DOWN_ARROW : f.RIGHT_ARROW:
                            break;
                        default:
                            return
                        }
                        b = k.getMarginSize(this.child.domNode)[b ? "h" : "w"] + this._factor * c;
                        this.container._layoutChildren(this.child.id, Math.max(Math.min(b, this._computeMaxSize()), this.child.minSize));
                        a.stopPropagation();
                        a.preventDefault()
                    },
                    destroy: function() {
                        this._cleanupHandlers();
                        delete this.child;
                        delete this.container;
                        delete this.cover;
                        delete this.fake;
                        this.inherited(arguments)
                    }
                })
                  , x = n("dijit.layout._Gutter", [a, h], {
                    templateString: '\x3cdiv class\x3d"dijitGutter" role\x3d"presentation"\x3e\x3c/div\x3e',
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.horizontal = /top|bottom/.test(this.region)
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        m.add(this.domNode, "dijitGutter" + (this.horizontal ? "H" : "V"))
                    }
                });
                n = n("dijit.layout.BorderContainer", r, {
                    gutters: !0,
                    liveSplitters: !0,
                    persist: !1,
                    baseClass: "dijitBorderContainer",
                    _splitterClass: u,
                    postMixInProperties: function() {
                        this.gutters || (this.baseClass += "NoGutter");
                        this.inherited(arguments)
                    },
                    _setupChild: function(a) {
                        this.inherited(arguments);
                        var b = a.region
                          , c = a.isLeftToRight();
                        "leading" == b && (b = c ? "left" : "right");
                        "trailing" == b && (b = c ? "right" : "left");
                        b && "center" != b && (a.splitter || this.gutters) && !a._splitterWidget && (c = a.splitter ? this._splitterClass : x,
                        e.isString(c) && (c = e.getObject(c)),
                        c = new c({
                            id: a.id + "_splitter",
                            container: this,
                            child: a,
                            region: b,
                            live: this.liveSplitters
                        }),
                        c.isSplitter = !0,
                        a._splitterWidget = c,
                        b = "bottom" == b || b == (this.isLeftToRight() ? "right" : "left"),
                        l.place(c.domNode, a.domNode, b ? "before" : "after"),
                        c.startup())
                    },
                    layout: function() {
                        this._layoutChildren()
                    },
                    removeChild: function(a) {
                        var b = a._splitterWidget;
                        b && (b.destroy(),
                        delete a._splitterWidget);
                        this.inherited(arguments)
                    },
                    getChildren: function() {
                        return q.filter(this.inherited(arguments), function(a) {
                            return !a.isSplitter
                        })
                    },
                    getSplitter: function(a) {
                        return q.filter(this.getChildren(), function(b) {
                            return b.region == a
                        })[0]._splitterWidget
                    },
                    resize: function(a, b) {
                        if (!this.cs || !this.pe) {
                            var c = this.domNode;
                            this.cs = g.getComputedStyle(c);
                            this.pe = k.getPadExtents(c, this.cs);
                            this.pe.r = g.toPixelValue(c, this.cs.paddingRight);
                            this.pe.b = g.toPixelValue(c, this.cs.paddingBottom);
                            g.set(c, "padding", "0px")
                        }
                        this.inherited(arguments)
                    },
                    _layoutChildren: function(a, b) {
                        if (this._borderBox && this._borderBox.h) {
                            var c = [];
                            q.forEach(this._getOrderedChildren(), function(a) {
                                c.push(a);
                                a._splitterWidget && c.push(a._splitterWidget)
                            });
                            t.layoutChildren(this.domNode, {
                                l: this.pe.l,
                                t: this.pe.t,
                                w: this._borderBox.w - this.pe.w,
                                h: this._borderBox.h - this.pe.h
                            }, c, a, b)
                        }
                    },
                    destroyRecursive: function() {
                        q.forEach(this.getChildren(), function(a) {
                            var b = a._splitterWidget;
                            b && b.destroy();
                            delete a._splitterWidget
                        });
                        this.inherited(arguments)
                    }
                });
                n.ChildWidgetProperties = {
                    splitter: !1,
                    minSize: 0,
                    maxSize: Infinity
                };
                e.mixin(n.ChildWidgetProperties, r.ChildWidgetProperties);
                e.extend(b, n.ChildWidgetProperties);
                n._Splitter = u;
                n._Gutter = x;
                return n
            })
        },
        "dijit/layout/LayoutContainer": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom-class dojo/dom-style dojo/_base/lang ../_WidgetBase ./_LayoutWidget ./utils".split(" "), function(q, p, n, m, l, k, g, f) {
                p = p("dijit.layout.LayoutContainer", g, {
                    design: "headline",
                    baseClass: "dijitLayoutContainer",
                    startup: function() {
                        this._started || (q.forEach(this.getChildren(), this._setupChild, this),
                        this.inherited(arguments))
                    },
                    _setupChild: function(e) {
                        this.inherited(arguments);
                        e.region && n.add(e.domNode, this.baseClass + "Pane")
                    },
                    _getOrderedChildren: function() {
                        var e = q.map(this.getChildren(), function(d, c) {
                            return {
                                pane: d,
                                weight: ["center" == d.region ? Infinity : 0, d.layoutPriority, ("sidebar" == this.design ? 1 : -1) * (/top|bottom/.test(d.region) ? 1 : -1), c]
                            }
                        }, this);
                        e.sort(function(d, c) {
                            for (var b = d.weight, a = c.weight, h = 0; h < b.length; h++)
                                if (b[h] != a[h])
                                    return b[h] - a[h];
                            return 0
                        });
                        return q.map(e, function(d) {
                            return d.pane
                        })
                    },
                    layout: function() {
                        f.layoutChildren(this.domNode, this._contentBox, this._getOrderedChildren())
                    },
                    addChild: function(e, d) {
                        this.inherited(arguments);
                        this._started && this.layout()
                    },
                    removeChild: function(e) {
                        this.inherited(arguments);
                        this._started && this.layout();
                        n.remove(e.domNode, this.baseClass + "Pane");
                        m.set(e.domNode, {
                            top: "auto",
                            bottom: "auto",
                            left: "auto",
                            right: "auto",
                            position: "static"
                        });
                        m.set(e.domNode, /top|bottom/.test(e.region) ? "width" : "height", "auto")
                    }
                });
                p.ChildWidgetProperties = {
                    region: "",
                    layoutAlign: "",
                    layoutPriority: 0
                };
                l.extend(k, p.ChildWidgetProperties);
                return p
            })
        },
        "dijit/layout/ScrollingTabController": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom-class dojo/dom-geometry dojo/dom-style dojo/_base/fx dojo/_base/lang dojo/on dojo/query dojo/sniff ../registry dojo/text!./templates/ScrollingTabController.html dojo/text!./templates/_ScrollingTabControllerButton.html ./TabController ./utils ../_WidgetsInTemplateMixin ../Menu ../MenuItem ../form/Button ../_HasDropDown dojo/NodeList-dom ../a11yclick".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z) {
                b = p("dijit.layout.ScrollingTabController", [h, t], {
                    baseClass: "dijitTabController dijitScrollingTabController",
                    templateString: b,
                    useMenu: !0,
                    useSlider: !0,
                    tabStripClass: "",
                    _minScroll: 5,
                    _setClassAttr: {
                        node: "containerNode",
                        type: "class"
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        var a = this.domNode;
                        this.scrollNode = this.tablistWrapper;
                        this._initButtons();
                        this.tabStripClass || (this.tabStripClass = "dijitTabContainer" + this.tabPosition.charAt(0).toUpperCase() + this.tabPosition.substr(1).replace(/-.*/, "") + "None",
                        n.add(a, "tabStrip-disabled"));
                        n.add(this.tablistWrapper, this.tabStripClass)
                    },
                    onStartup: function() {
                        this.inherited(arguments);
                        l.set(this.domNode, "visibility", "");
                        this._postStartup = !0;
                        this.own(f(this.containerNode, "attrmodified-label, attrmodified-iconclass", g.hitch(this, function(a) {
                            this._dim && this.resize(this._dim)
                        })))
                    },
                    onAddChild: function(a, b) {
                        this.inherited(arguments);
                        l.set(this.containerNode, "width", l.get(this.containerNode, "width") + 200 + "px")
                    },
                    onRemoveChild: function(a, b) {
                        var c = this.pane2button(a.id);
                        this._selectedTab === c.domNode && (this._selectedTab = null);
                        this.inherited(arguments)
                    },
                    _initButtons: function() {
                        this._btnWidth = 0;
                        this._buttons = e("\x3e .tabStripButton", this.domNode).filter(function(a) {
                            if (this.useMenu && a == this._menuBtn.domNode || this.useSlider && (a == this._rightBtn.domNode || a == this._leftBtn.domNode))
                                return this._btnWidth += m.getMarginSize(a).w,
                                !0;
                            l.set(a, "display", "none");
                            return !1
                        }, this)
                    },
                    _getTabsWidth: function() {
                        var a = this.getChildren();
                        if (a.length) {
                            var b = a[this.isLeftToRight() ? 0 : a.length - 1].domNode
                              , a = a[this.isLeftToRight() ? a.length - 1 : 0].domNode;
                            return a.offsetLeft + a.offsetWidth - b.offsetLeft
                        }
                        return 0
                    },
                    _enableBtn: function(a) {
                        var b = this._getTabsWidth();
                        a = a || l.get(this.scrollNode, "width");
                        return 0 < b && a < b
                    },
                    resize: function(a) {
                        this._dim = a;
                        this.scrollNode.style.height = "auto";
                        var b = this._contentBox = r.marginBox2contentBox(this.domNode, {
                            h: 0,
                            w: a.w
                        });
                        b.h = this.scrollNode.offsetHeight;
                        m.setContentSize(this.domNode, b);
                        b = this._enableBtn(this._contentBox.w);
                        this._buttons.style("display", b ? "" : "none");
                        this._leftBtn.region = "left";
                        this._rightBtn.region = "right";
                        this._menuBtn.region = this.isLeftToRight() ? "right" : "left";
                        r.layoutChildren(this.domNode, this._contentBox, [this._menuBtn, this._leftBtn, this._rightBtn, {
                            domNode: this.scrollNode,
                            region: "center"
                        }]);
                        this._selectedTab && (this._anim && "playing" == this._anim.status() && this._anim.stop(),
                        this.scrollNode.scrollLeft = this._convertToScrollLeft(this._getScrollForSelectedTab()));
                        this._setButtonClass(this._getScroll());
                        this._postResize = !0;
                        return {
                            h: this._contentBox.h,
                            w: a.w
                        }
                    },
                    _getScroll: function() {
                        return this.isLeftToRight() || 8 > d("ie") || d("trident") && d("quirks") || d("webkit") ? this.scrollNode.scrollLeft : l.get(this.containerNode, "width") - l.get(this.scrollNode, "width") + (d("trident") || d("edge") ? -1 : 1) * this.scrollNode.scrollLeft
                    },
                    _convertToScrollLeft: function(a) {
                        if (this.isLeftToRight() || 8 > d("ie") || d("trident") && d("quirks") || d("webkit"))
                            return a;
                        var b = l.get(this.containerNode, "width") - l.get(this.scrollNode, "width");
                        return (d("trident") || d("edge") ? -1 : 1) * (a - b)
                    },
                    onSelectChild: function(a, b) {
                        var c = this.pane2button(a.id);
                        if (c) {
                            var h = c.domNode;
                            if (h != this._selectedTab && (this._selectedTab = h,
                            this._postResize)) {
                                var d = this._getScroll();
                                d > h.offsetLeft || d + l.get(this.scrollNode, "width") < h.offsetLeft + l.get(h, "width") ? (h = this.createSmoothScroll(),
                                b && (h.onEnd = function() {
                                    c.focus()
                                }
                                ),
                                h.play()) : b && c.focus()
                            }
                            this.inherited(arguments)
                        }
                    },
                    _getScrollBounds: function() {
                        var a = this.getChildren()
                          , b = l.get(this.scrollNode, "width")
                          , c = l.get(this.containerNode, "width") - b
                          , h = this._getTabsWidth();
                        if (a.length && h > b)
                            return {
                                min: this.isLeftToRight() ? 0 : a[a.length - 1].domNode.offsetLeft,
                                max: this.isLeftToRight() ? a[a.length - 1].domNode.offsetLeft + a[a.length - 1].domNode.offsetWidth - b : c
                            };
                        a = this.isLeftToRight() ? 0 : c;
                        return {
                            min: a,
                            max: a
                        }
                    },
                    _getScrollForSelectedTab: function() {
                        var a = this._selectedTab
                          , b = l.get(this.scrollNode, "width")
                          , c = this._getScrollBounds()
                          , a = a.offsetLeft + l.get(a, "width") / 2 - b / 2;
                        return a = Math.min(Math.max(a, c.min), c.max)
                    },
                    createSmoothScroll: function(a) {
                        if (0 < arguments.length) {
                            var b = this._getScrollBounds();
                            a = Math.min(Math.max(a, b.min), b.max)
                        } else
                            a = this._getScrollForSelectedTab();
                        this._anim && "playing" == this._anim.status() && this._anim.stop();
                        var c = this
                          , h = this.scrollNode
                          , d = new k.Animation({
                            beforeBegin: function() {
                                this.curve && delete this.curve;
                                var b = h.scrollLeft
                                  , r = c._convertToScrollLeft(a);
                                d.curve = new k._Line(b,r)
                            },
                            onAnimate: function(a) {
                                h.scrollLeft = a
                            }
                        });
                        this._anim = d;
                        this._setButtonClass(a);
                        return d
                    },
                    _getBtnNode: function(a) {
                        for (a = a.target; a && !n.contains(a, "tabStripButton"); )
                            a = a.parentNode;
                        return a
                    },
                    doSlideRight: function(a) {
                        this.doSlide(1, this._getBtnNode(a))
                    },
                    doSlideLeft: function(a) {
                        this.doSlide(-1, this._getBtnNode(a))
                    },
                    doSlide: function(a, b) {
                        if (!b || !n.contains(b, "dijitTabDisabled")) {
                            var c = .75 * l.get(this.scrollNode, "width") * a
                              , c = this._getScroll() + c;
                            this._setButtonClass(c);
                            this.createSmoothScroll(c).play()
                        }
                    },
                    _setButtonClass: function(a) {
                        var b = this._getScrollBounds();
                        this._leftBtn.set("disabled", a <= b.min);
                        this._rightBtn.set("disabled", a >= b.max)
                    }
                });
                a = p("dijit.layout._ScrollingTabControllerButtonMixin", null, {
                    baseClass: "dijitTab tabStripButton",
                    templateString: a,
                    tabIndex: "",
                    isFocusable: function() {
                        return !1
                    }
                });
                p("dijit.layout._ScrollingTabControllerButton", [y, a]);
                p("dijit.layout._ScrollingTabControllerMenuButton", [y, z, a], {
                    containerId: "",
                    tabIndex: "-1",
                    isLoaded: function() {
                        return !1
                    },
                    loadDropDown: function(a) {
                        this.dropDown = new u({
                            id: this.containerId + "_menu",
                            ownerDocument: this.ownerDocument,
                            dir: this.dir,
                            lang: this.lang,
                            textDir: this.textDir
                        });
                        var b = c.byId(this.containerId);
                        q.forEach(b.getChildren(), function(a) {
                            var c = new x({
                                id: a.id + "_stcMi",
                                label: a.title,
                                iconClass: a.iconClass,
                                disabled: a.disabled,
                                ownerDocument: this.ownerDocument,
                                dir: a.dir,
                                lang: a.lang,
                                textDir: a.textDir || b.textDir,
                                onClick: function() {
                                    b.selectChild(a)
                                }
                            });
                            this.dropDown.addChild(c)
                        }, this);
                        a()
                    },
                    closeDropDown: function(a) {
                        this.inherited(arguments);
                        this.dropDown && (this._popupStateNode.removeAttribute("aria-owns"),
                        this.dropDown.destroyRecursive(),
                        delete this.dropDown)
                    }
                });
                return b
            })
        },
        "dijit/layout/TabController": function() {
            define("dojo/_base/declare dojo/dom dojo/dom-attr dojo/dom-class dojo/has dojo/i18n dojo/_base/lang ./StackController ../registry ../Menu ../MenuItem dojo/text!./templates/_TabButton.html dojo/i18n!../nls/common".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                b = q("dijit.layout._TabButton" + (l("dojo-bidi") ? "_NoBidi" : ""), f.StackButton, {
                    baseClass: "dijitTab",
                    cssStateNodes: {
                        closeNode: "dijitTabCloseButton"
                    },
                    templateString: b,
                    _setNameAttr: "focusNode",
                    scrollOnFocus: !1,
                    buildRendering: function() {
                        this.inherited(arguments);
                        p.setSelectable(this.containerNode, !1)
                    },
                    startup: function() {
                        this.inherited(arguments);
                        var a = this.domNode;
                        this.defer(function() {
                            a.className = a.className
                        }, 1)
                    },
                    _setCloseButtonAttr: function(a) {
                        this._set("closeButton", a);
                        m.toggle(this.domNode, "dijitClosable", a);
                        this.closeNode.style.display = a ? "" : "none";
                        a && (a = k.getLocalization("dijit", "common"),
                        this.closeNode && n.set(this.closeNode, "title", a.itemClose))
                    },
                    _setDisabledAttr: function(a) {
                        this.inherited(arguments);
                        if (this.closeNode)
                            if (a)
                                n.remove(this.closeNode, "title");
                            else {
                                var b = k.getLocalization("dijit", "common");
                                n.set(this.closeNode, "title", b.itemClose)
                            }
                    },
                    _setLabelAttr: function(a) {
                        this.inherited(arguments);
                        this.showLabel || this.params.title || (this.iconNode.alt = g.trim(this.containerNode.innerText || this.containerNode.textContent || ""))
                    }
                });
                l("dojo-bidi") && (b = q("dijit.layout._TabButton", b, {
                    _setLabelAttr: function(a) {
                        this.inherited(arguments);
                        this.applyTextDir(this.iconNode, this.iconNode.alt)
                    }
                }));
                q = q("dijit.layout.TabController", f, {
                    baseClass: "dijitTabController",
                    templateString: "\x3cdiv role\x3d'tablist' data-dojo-attach-event\x3d'onkeydown:onkeydown'\x3e\x3c/div\x3e",
                    tabPosition: "top",
                    buttonWidget: b,
                    buttonWidgetCloseClass: "dijitTabCloseButton",
                    postCreate: function() {
                        this.inherited(arguments);
                        var a = new d({
                            id: this.id + "_Menu",
                            ownerDocument: this.ownerDocument,
                            dir: this.dir,
                            lang: this.lang,
                            textDir: this.textDir,
                            targetNodeIds: [this.domNode],
                            selector: function(a) {
                                return m.contains(a, "dijitClosable") && !m.contains(a, "dijitTabDisabled")
                            }
                        });
                        this.own(a);
                        var b = k.getLocalization("dijit", "common")
                          , r = this;
                        a.addChild(new c({
                            label: b.itemClose,
                            ownerDocument: this.ownerDocument,
                            dir: this.dir,
                            lang: this.lang,
                            textDir: this.textDir,
                            onClick: function(a) {
                                a = e.byNode(this.getParent().currentTarget);
                                r.onCloseButtonClick(a.page)
                            }
                        }))
                    }
                });
                q.TabButton = b;
                return q
            })
        },
        "dijit/layout/StackController": function() {
            define("dojo/_base/array dojo/_base/declare dojo/dom-class dojo/dom-construct dojo/keys dojo/_base/lang dojo/on dojo/topic ../focus ../registry ../_Widget ../_TemplatedMixin ../_Container ../form/ToggleButton dojo/touch".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h) {
                m = p("dijit.layout._StackButton", h, {
                    tabIndex: "-1",
                    closeButton: !1,
                    _aria_attr: "aria-selected",
                    buildRendering: function(a) {
                        this.inherited(arguments);
                        (this.focusNode || this.domNode).setAttribute("role", "tab")
                    }
                });
                p = p("dijit.layout.StackController", [c, b, a], {
                    baseClass: "dijitStackController",
                    templateString: "\x3cspan role\x3d'tablist' data-dojo-attach-event\x3d'onkeydown'\x3e\x3c/span\x3e",
                    containerId: "",
                    buttonWidget: m,
                    buttonWidgetCloseClass: "dijitStackCloseButton",
                    pane2button: function(a) {
                        return d.byId(this.id + "_" + a)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this.own(f.subscribe(this.containerId + "-startup", k.hitch(this, "onStartup")), f.subscribe(this.containerId + "-addChild", k.hitch(this, "onAddChild")), f.subscribe(this.containerId + "-removeChild", k.hitch(this, "onRemoveChild")), f.subscribe(this.containerId + "-selectChild", k.hitch(this, "onSelectChild")), f.subscribe(this.containerId + "-containerKeyDown", k.hitch(this, "onContainerKeyDown")));
                        this.containerNode.dojoClick = !0;
                        this.own(g(this.containerNode, "click", k.hitch(this, function(a) {
                            var b = d.getEnclosingWidget(a.target);
                            if (b != this.containerNode && !b.disabled && b.page)
                                for (a = a.target; a !== this.containerNode; a = a.parentNode)
                                    if (n.contains(a, this.buttonWidgetCloseClass)) {
                                        this.onCloseButtonClick(b.page);
                                        break
                                    } else if (a == b.domNode) {
                                        this.onButtonClick(b.page);
                                        break
                                    }
                        })))
                    },
                    onStartup: function(a) {
                        this.textDir = a.textDir;
                        q.forEach(a.children, this.onAddChild, this);
                        if (a.selected)
                            this.onSelectChild(a.selected);
                        var b = d.byId(this.containerId).containerNode
                          , c = k.hitch(this, "pane2button");
                        a = {
                            title: "label",
                            showtitle: "showLabel",
                            iconclass: "iconClass",
                            closable: "closeButton",
                            tooltip: "title",
                            disabled: "disabled",
                            textdir: "textdir"
                        };
                        var h = function(a, h) {
                            return g(b, "attrmodified-" + a, function(a) {
                                var b = c(a.detail && a.detail.widget && a.detail.widget.id);
                                b && b.set(h, a.detail.newValue)
                            })
                        }, r;
                        for (r in a)
                            this.own(h(r, a[r]))
                    },
                    destroy: function(a) {
                        this.destroyDescendants(a);
                        this.inherited(arguments)
                    },
                    onAddChild: function(a, b) {
                        var c = new (k.isString(this.buttonWidget) ? k.getObject(this.buttonWidget) : this.buttonWidget)({
                            id: this.id + "_" + a.id,
                            name: this.id + "_" + a.id,
                            label: a.title,
                            disabled: a.disabled,
                            ownerDocument: this.ownerDocument,
                            dir: a.dir,
                            lang: a.lang,
                            textDir: a.textDir || this.textDir,
                            showLabel: a.showTitle,
                            iconClass: a.iconClass,
                            closeButton: a.closable,
                            title: a.tooltip,
                            page: a
                        });
                        this.addChild(c, b);
                        a.controlButton = c;
                        if (!this._currentChild)
                            this.onSelectChild(a);
                        c = a._wrapper.getAttribute("aria-labelledby") ? a._wrapper.getAttribute("aria-labelledby") + " " + c.id : c.id;
                        a._wrapper.removeAttribute("aria-label");
                        a._wrapper.setAttribute("aria-labelledby", c)
                    },
                    onRemoveChild: function(a) {
                        this._currentChild === a && (this._currentChild = null);
                        var b = this.pane2button(a.id);
                        b && (this.removeChild(b),
                        b.destroy());
                        delete a.controlButton
                    },
                    onSelectChild: function(a) {
                        if (a) {
                            if (this._currentChild) {
                                var b = this.pane2button(this._currentChild.id);
                                b.set("checked", !1);
                                b.focusNode.setAttribute("tabIndex", "-1")
                            }
                            b = this.pane2button(a.id);
                            b.set("checked", !0);
                            this._currentChild = a;
                            b.focusNode.setAttribute("tabIndex", "0");
                            d.byId(this.containerId)
                        }
                    },
                    onButtonClick: function(a) {
                        var b = this.pane2button(a.id);
                        e.focus(b.focusNode);
                        this._currentChild && this._currentChild.id === a.id && b.set("checked", !0);
                        d.byId(this.containerId).selectChild(a)
                    },
                    onCloseButtonClick: function(a) {
                        d.byId(this.containerId).closeChild(a);
                        this._currentChild && (a = this.pane2button(this._currentChild.id)) && e.focus(a.focusNode || a.domNode)
                    },
                    adjacent: function(a) {
                        this.isLeftToRight() || this.tabPosition && !/top|bottom/.test(this.tabPosition) || (a = !a);
                        var b = this.getChildren(), c = q.indexOf(b, this.pane2button(this._currentChild.id)), h = b[c], d;
                        do
                            c = (c + (a ? 1 : b.length - 1)) % b.length,
                            d = b[c];
                        while (d.disabled && d != h);return d
                    },
                    onkeydown: function(a, b) {
                        if (!this.disabled && !a.altKey) {
                            var c = null;
                            if (a.ctrlKey || !a._djpage) {
                                switch (a.keyCode) {
                                case l.LEFT_ARROW:
                                case l.UP_ARROW:
                                    a._djpage || (c = !1);
                                    break;
                                case l.PAGE_UP:
                                    a.ctrlKey && (c = !1);
                                    break;
                                case l.RIGHT_ARROW:
                                case l.DOWN_ARROW:
                                    a._djpage || (c = !0);
                                    break;
                                case l.PAGE_DOWN:
                                    a.ctrlKey && (c = !0);
                                    break;
                                case l.HOME:
                                    for (var h = this.getChildren(), d = 0; d < h.length; d++) {
                                        var e = h[d];
                                        if (!e.disabled) {
                                            this.onButtonClick(e.page);
                                            break
                                        }
                                    }
                                    a.stopPropagation();
                                    a.preventDefault();
                                    break;
                                case l.END:
                                    h = this.getChildren();
                                    for (d = h.length - 1; 0 <= d; d--)
                                        if (e = h[d],
                                        !e.disabled) {
                                            this.onButtonClick(e.page);
                                            break
                                        }
                                    a.stopPropagation();
                                    a.preventDefault();
                                    break;
                                case l.DELETE:
                                case 87:
                                    this._currentChild.closable && (a.keyCode == l.DELETE || a.ctrlKey) && (this.onCloseButtonClick(this._currentChild),
                                    a.stopPropagation(),
                                    a.preventDefault());
                                    break;
                                case l.TAB:
                                    a.ctrlKey && (this.onButtonClick(this.adjacent(!a.shiftKey).page),
                                    a.stopPropagation(),
                                    a.preventDefault())
                                }
                                null !== c && (this.onButtonClick(this.adjacent(c).page),
                                a.stopPropagation(),
                                a.preventDefault())
                            }
                        }
                    },
                    onContainerKeyDown: function(a) {
                        a.e._djpage = a.page;
                        this.onkeydown(a.e)
                    }
                });
                p.StackButton = m;
                return p
            })
        },
        "dijit/layout/TabContainer": function() {
            define(["dojo/_base/lang", "dojo/_base/declare", "./_TabContainerBase", "./TabController", "./ScrollingTabController"], function(q, p, n, m, l) {
                return p("dijit.layout.TabContainer", n, {
                    useMenu: !0,
                    useSlider: !0,
                    controllerWidget: "",
                    _makeController: function(k) {
                        var g = this.baseClass + "-tabs" + (this.doLayout ? "" : " dijitTabNoLayout");
                        return new ("string" == typeof this.controllerWidget ? q.getObject(this.controllerWidget) : this.controllerWidget)({
                            id: this.id + "_tablist",
                            ownerDocument: this.ownerDocument,
                            dir: this.dir,
                            lang: this.lang,
                            textDir: this.textDir,
                            tabPosition: this.tabPosition,
                            doLayout: this.doLayout,
                            containerId: this.id,
                            "class": g,
                            nested: this.nested,
                            useMenu: this.useMenu,
                            useSlider: this.useSlider,
                            tabStripClass: this.tabStrip ? this.baseClass + (this.tabStrip ? "" : "No") + "Strip" : null
                        },k)
                    },
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.controllerWidget || (this.controllerWidget = "top" != this.tabPosition && "bottom" != this.tabPosition || this.nested ? m : l)
                    }
                })
            })
        },
        "dijit/layout/_TabContainerBase": function() {
            define("dojo/_base/declare dojo/dom-class dojo/dom-geometry dojo/dom-style ./StackContainer ./utils ../_TemplatedMixin dojo/text!./templates/TabContainer.html".split(" "), function(q, p, n, m, l, k, g, f) {
                return q("dijit.layout._TabContainerBase", [l, g], {
                    tabPosition: "top",
                    baseClass: "dijitTabContainer",
                    tabStrip: !1,
                    nested: !1,
                    templateString: f,
                    postMixInProperties: function() {
                        this.baseClass += this.tabPosition.charAt(0).toUpperCase() + this.tabPosition.substr(1).replace(/-.*/, "");
                        this.srcNodeRef && m.set(this.srcNodeRef, "visibility", "hidden");
                        this.inherited(arguments)
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        this.tablist = this._makeController(this.tablistNode);
                        this.doLayout || p.add(this.domNode, "dijitTabContainerNoLayout");
                        this.nested ? (p.add(this.domNode, "dijitTabContainerNested"),
                        p.add(this.tablist.containerNode, "dijitTabContainerTabListNested"),
                        p.add(this.tablistSpacer, "dijitTabContainerSpacerNested"),
                        p.add(this.containerNode, "dijitTabPaneWrapperNested")) : p.add(this.domNode, "tabStrip-" + (this.tabStrip ? "enabled" : "disabled"))
                    },
                    _setupChild: function(e) {
                        p.add(e.domNode, "dijitTabPane");
                        this.inherited(arguments)
                    },
                    removeChild: function(e) {
                        p.remove(e.domNode, "dijitTabPane");
                        this.inherited(arguments)
                    },
                    startup: function() {
                        this._started || (this.tablist.startup(),
                        this.inherited(arguments))
                    },
                    layout: function() {
                        if (this._contentBox && "undefined" != typeof this._contentBox.l) {
                            var e = this.selectedChildWidget;
                            if (this.doLayout) {
                                var d = this.tabPosition.replace(/-h/, "");
                                this.tablist.region = d;
                                d = [this.tablist, {
                                    domNode: this.tablistSpacer,
                                    region: d
                                }, {
                                    domNode: this.containerNode,
                                    region: "center"
                                }];
                                k.layoutChildren(this.domNode, this._contentBox, d);
                                this._containerContentBox = k.marginBox2contentBox(this.containerNode, d[2]);
                                e && e.resize && e.resize(this._containerContentBox)
                            } else {
                                if (this.tablist.resize) {
                                    d = this.tablist.domNode.style;
                                    d.width = "0";
                                    var c = n.getContentBox(this.domNode).w;
                                    d.width = "";
                                    this.tablist.resize({
                                        w: c
                                    })
                                }
                                e && e.resize && e.resize()
                            }
                        }
                    },
                    destroy: function(e) {
                        this.tablist && this.tablist.destroy(e);
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dijit/nls/zh/common": function() {
            define({
                buttonOk: "\u786e\u5b9a",
                buttonCancel: "\u53d6\u6d88",
                buttonSave: "\u4fdd\u5b58",
                itemClose: "\u5173\u95ed"
            })
        },
        "dijit/nls/zh/loading": function() {
            define({
                loadingState: "\u6b63\u5728\u52a0\u8f7d...",
                errorState: "\u5bf9\u4e0d\u8d77\uff0c\u53d1\u751f\u4e86\u9519\u8bef"
            })
        },
        "ttx/dijit/LoginDialog": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/dom-construct dojo/dom-class dojo/dom-attr dojo/dom-geometry dojo/dom-style dojo/on dojo/keys dojo/topic dojo/window dijit/ConfirmDialog dijit/layout/ContentPane ttx/util/_I18nMixin ttx/AppConfig dojo/text!./templates/LoginDialog.html dojox/encoding/digests/MD5".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u) {
                return q([b, h], {
                    templateString: t,
                    app: null,
                    username: null,
                    password: null,
                    tpLogin: null,
                    customLoginPage: null,
                    loginDeferred: null,
                    onFocus: function() {
                        if (this.app.session.user)
                            return this.password.focus()
                    },
                    windowLogin: function() {
                        var a;
                        a = this;
                        return window.addEventListener("message", function(b) {
                            if ((b.origin || b.originalEvent.origin) === r.loginPageServer)
                                return a.username.set("value", b.data.username),
                                a.password.set("value", b.data.password),
                                a.validateLogin()
                        }, !1)
                    },
                    postCreate: function() {
                        var a;
                        a = this;
                        this.inherited(arguments);
                        this.app.session.db && this.customer.set("value", this.app.session.db);
                        this.app.session.user && this.username.set("value", this.app.session.user);
                        this.own(f(this.customer, "keydown", function(b) {
                            if (b.keyCode === dojo.keys.ENTER)
                                return a.username.focus()
                        }));
                        this.own(f(this.username, "keydown", function(b) {
                            if (b.keyCode === dojo.keys.ENTER)
                                return a.password.focus()
                        }));
                        this.own(f(this.password, "keydown", function(b) {
                            if (b.keyCode === e.ENTER)
                                return a.validateLogin()
                        }));
                        this.okButton.containerNode.innerText = tt("\u767b\u5f55");
                        n.create("div", {
                            "class": "inputIcon customer"
                        }, this.customer.domNode, "first");
                        n.create("div", {
                            "class": "inputIcon username"
                        }, this.username.domNode, "first");
                        n.create("div", {
                            "class": "inputIcon password"
                        }, this.password.domNode, "first");
                        return this.windowLogin()
                    },
                    notifyLeftDays: function(a) {
                        if (void 0 !== a && null !== a && 31 > parseInt(a))
                            return 0 > a && (a = -a),
                            layer.open({
                                type: 1,
                                area: ["420px", "240px"],
                                title: !1,
                                closeBtn: 0,
                                area: ["530px", "400px"],
                                shadeClose: !0,
                                skin: "layui-layer-nobg",
                                content: "\x3cdiv class\x3d'licenseExpireDialog'\x3e\n\x3cdiv class\x3d'content'\x3e\n\x3cp\x3e\u60a8\u597d\uff0c\u7cfb\u7edf\u6388\u6743\u8fd8\u6709\x3cspan\x3e" + a + "\x3c/span\x3e\u5929\u5230\u671f\uff0c\u5230\u671f\u540e\u7cfb\u7edf\u5c06\u4e0d\u53ef\u7528\uff0c\u8bf7\u53ca\u65f6\u7eed\u8d39\u4ee5\u4fdd\u8bc1\u6b63\u5e38\u4f7f\u7528\uff0e\x3c/p\x3e\n\x3cp\x3e\u54a8\u8be2\u60a8\u7684\x3cspan\x3e\u5ba2\u6237\u987e\u95ee\x3c/span\x3e\uff0c\u6216\u62e8\u6253\x3cspan\x3e400 052 5566\x3c/span\x3e\u8054\u7cfb\u6211\u4eec\uff0e\x3c/p\x3e\x3c/div\x3e\n\x3cimg src\x3d'/images/license-expire.png' alt\x3d''\x3e\n\x3c/div\x3e"
                            })
                    },
                    validateLogin: function() {
                        var a;
                        a = this;
                        if (this.form.validate() && (!this.loginDeferred || this.loginDeferred.isFulfilled()))
                            return this.loginDeferred = a.app.dataManager.post("rest/auth/login", {
                                customer: a.customer.get("value"),
                                username: a.username.get("value"),
                                encryption: "1",
                                password: u(a.password.get("value"), 1)
                            }).then(function(b) {
                                switch (b.code) {
                                case 0:
                                case "0":
                                    return a.app.writeSession(b.session),
                                    a.app.navigator && a.app.navigator.reload(),
                                    a.app.loginDialog.hide(),
                                    a.publishLoginSuccess(),
                                    a.onExecute(),
                                    a.notifyLeftDays(b.leftDays);
                                default:
                                    return a.onFailure(),
                                    a.password.focus()
                                }
                            })
                    },
                    onFailure: function() {},
                    onOk: function() {
                        return this.validateLogin()
                    },
                    checkLoginStatus: function() {
                        var a;
                        a = this;
                        return this.app.dataManager.checkLogin().then(function(b) {
                            switch (b.code) {
                            case 0:
                            case "0":
                                return a.app.sessionSyncFromCookie(),
                                a.app.navigator && a.app.navigator.reload(),
                                a.app.topNav && a.app.topNav.setUser(a.app.sessionGet("user")),
                                a.publishLoginSuccess(),
                                a.notifyLeftDays(b.leftDays);
                            default:
                                return a.app.session.sso && "2" === a.app.session.sso ? a.app.dataManager.post("/sso/login").then(function(b) {
                                    switch (b.code) {
                                    case 0:
                                    case "0":
                                        return a.app.writeSession(b.session),
                                        a.app.navigator && a.app.navigator.reload(),
                                        a.app.loginDialog.hide(),
                                        a.app.topNav && a.app.topNav.setUser(b.userName || a.app.session.user),
                                        a.publishLoginSuccess(),
                                        a.onExecute(),
                                        a.notifyLeftDays(b.leftDays);
                                    default:
                                        return a.app.loginDialog.show()
                                    }
                                }) : a.app.loginDialog.show()
                            }
                        }, function() {
                            return a.app.loginDialog.show()
                        })
                    },
                    publishLoginSuccess: function() {
                        return d.publish("appLoginSuccess", {})
                    },
                    _position: function() {
                        var a, b, h, d, e;
                        m.contains(this.ownerDocumentBody, "dojoMove") || (h = this.domNode,
                        e = c.getBox(this.ownerDocument),
                        a = (d = this._relativePosition) ? null : k.position(h),
                        b = Math.floor(e.l + (d ? d.x : (e.w - a.w) / 2)),
                        a = Math.floor(e.t + (d ? d.y : (e.h - 100 - a.h) / 2)),
                        g.set(h, {
                            left: b + "px",
                            top: a + "px"
                        }))
                    },
                    logout: function() {
                        this.app.dataManager.get("/rest/auth/logout");
                        d.publish("appLogoutSuccess", {});
                        this.app.sessionSet("user", "");
                        this.app.sessionSet("token", "");
                        this.app.cleanSessionCookie();
                        location.reload();
                        return this.app.navigator.reset()
                    },
                    show: function() {
                        return this.customLoginPage ? this.layerIndex = layer.open({
                            type: 2,
                            title: "",
                            fix: !1,
                            maxmin: !1,
                            closeBtn: 0,
                            shadeClose: !1,
                            area: ["100%", "100%"],
                            content: this.customLoginPage
                        }) : this.inherited(arguments)
                    },
                    hide: function() {
                        return this.customLoginPage ? layer.close(this.layerIndex) : this.inherited(arguments)
                    }
                })
            })
        },
        "ttx/util/_I18nMixin": function() {
            define(["dojo/_base/declare", "dojo/string", "dojo/i18n!locale/nls/message"], function(q, p, n) {
                var m, l, k;
                window.logger = l = {
                    TRACE: 0,
                    INFO: 1,
                    WARN: 2,
                    ERROR: 3,
                    level: 0,
                    logPrefix: "",
                    log: function(g) {
                        if (dojoConfig.isDebug)
                            return 0
                    },
                    trace: function(g) {
                        if (this.level <= this.TRACE)
                            return this._print(g)
                    },
                    info: function(g) {
                        if (this.level <= this.INFO)
                            return this._print(g)
                    },
                    warn: function(g) {
                        if (this.level <= this.WARN)
                            return this._print(g)
                    },
                    error: function(g) {
                        if (this.level <= this.ERROR)
                            return this._print(g)
                    },
                    _print: function(g) {
                        return 0
                    }
                };
                m = {};
                window.tt = k = function(g, f) {
                    var e, d;
                    if (!g)
                        return "";
                    d = m[g] ? m[g] : n[g];
                    d || (dojoConfig.isDebug && l.log("locale(" + dojoConfig.locale + "), word(" + g + ") not translated"),
                    d = g);
                    1 < arguments.length && (e = Array.isArray(f) ? f : [].slice.apply(arguments).splice(1),
                    d = p.substitute(d, e));
                    return d
                }
                ;
                return q(null, {
                    logger: l,
                    messages: n,
                    tt: k,
                    i18: n,
                    updateMessages: function(g) {
                        return m = g
                    }
                })
            })
        },
        "locale/nls/message": function() {
            define({
                root: {
                    login: "Login",
                    logout: "Logout",
                    tab_list: "List",
                    tab_bill: "Bill",
                    tab_detail: "Detail"
                },
                zh: !0,
                en: !0,
                "zh-tw": !0,
                ja: !0
            })
        },
        "locale/nls/en/message": function() {
            define({
                logout: "Logout",
                tab_list: "List",
                tab_bill: "Bill",
                tab_query: "Detail",
                "\u6b22\u8fce\u4f7f\u7528TTX\u7cfb\u7edf\uff0c\u5f00\u59cb\u5efa\u7acb\u60a8\u7684\u4f01\u4e1a\u6570\u636e\u5427\uff01": "Build your enterprise data with TTX",
                "\u7cfb\u7edf\u767b\u5f55": "System Login",
                "\u5408\u4f5c\u8d26\u53f7\u767b\u5f55": "Login via",
                "\u670d\u52a1\u7aef\u6d88\u606f": "Server Messages",
                "\u5f00\u53d1": "Development",
                "\u660e\u7ec6": "Detail",
                "\u5185\u5bb9": "Content",
                "\u7528\u6237\u6536\u85cf": "My Favorites",
                "\u5feb\u901f\u67e5\u627e": "Quick Find",
                "\u5168\u9009": "Select All",
                "\u53cd\u9009": "Reverse",
                "\u6b22\u8fce": "Welcome",
                "\u53d1\u9001\u7ad9\u5185\u4fe1": "Send Message",
                "\u7f16\u5199\u7ad9\u5185\u4fe1": "Write Message",
                "\u53d1\u9001\u81f3": "Send to",
                "\u786e\u5b9a\u8981\u5220\u9664\uff1f": "Confirm to delete?",
                "\u786e\u5b9a\x26\u7ee7\u7eed": "Confirm \x26 Continue",
                "\u5f00\u59cb\u7f16\u8f91": "Begin Edit",
                "\u505c\u6b62\u7f16\u8f91": "End Edit",
                "\u663e\u793a": "Display",
                "\u6062\u590d\u9ed8\u8ba4": "Set Default",
                "\u9009\u62e9\u663e\u793a\u5217": "Choose Columns",
                "\u4fdd\u5b58\u663e\u793a\u8bbe\u7f6e": "Save Settings",
                "\u9009\u62e9\u8868\u683c\u5217": "Choose Columns",
                "\u67e5\u8be2": "Search",
                "\u65b0\u589e": "Add",
                "\u5220\u9664": "Delete",
                "\u521b\u5efa": "Create",
                "\u66f4\u65b0": "Update",
                "\u4ee3\u7801": "Code",
                "\u8bbe\u7f6e": "Set",
                "\u6743\u9650": "Permission",
                "\u9000\u51fa": "Sign Out",
                "\u8868\u6a21\u578b\u5b57\u6bb5": "Table Model Fields",
                "\u8868\u6a21\u578b(\u4e0b\u62c9\u6570\u636e)": "Table Model",
                "\u5934\u8868(\u8868\u6a21\u578b)": "Header Table Model",
                "\u660e\u7ec6\u8868(\u8868\u6a21\u578b)": "Detail Table Model",
                "\u8868\u6a21\u578b": "Table Model",
                "\u5355\u636e\u6a21\u578b": "Bill Model",
                "\u754c\u9762\u6a21\u578b": "View Model",
                "\u540c\u6b65\u914d\u7f6e": "Sync Config",
                "SQL\u6a21\u677f\u5b9a\u4e49": "SQL Template",
                "SQL\u6a21\u677f\u6267\u884c": "SQL Template Execution",
                "SQL\u6267\u884c": "Execute SQL",
                "\u83dc\u5355\u914d\u7f6e": "Navigator Editor",
                "\u8bbe\u7f6e\u83dc\u5355\u6743\u9650": "Set Navigator Permission",
                "\u5355\u636e\u53ca\u83dc\u5355\u914d\u7f6e": "Model \x26 Navigation",
                "RF\u83dc\u5355\u914d\u7f6e": "RF Menus",
                "\u5934": " Header",
                "\u5934\u5173\u8054": "Header Ref",
                "\u660e\u7ec61": "Detail 1",
                "\u660e\u7ec61\u5173\u8054": "Detail 1 Ref",
                "\u540c\u6b65table": "Sync Table",
                "\u540c\u6b65bill": "Sync Bill",
                "\u540c\u6b65view": "Sync View",
                "\u540c\u6b65nav": "Sync Nav",
                "\u52a0\u8f7d": "Loading",
                "\u6761\u4ef6": "Criteria",
                "\u6267\u884c": "Execute",
                "\u9875\u9762\u53c2\u6570": "Page Params",
                "\u6570\u5b57": "Digit",
                "\u5b57\u6bcd": "Alpha",
                "\u957f\u5ea6": "Length",
                "\u8bf7\u8f93\u5165": "Please enter ",
                "\u62f7\u8d1d\u6743\u9650\u5230\u5df2\u9009\u7528\u6237": "Copy to Users",
                "\u62f7\u8d1d\u6743\u9650\u5230\u5176\u4ed6\u7528\u6237": "Copy to Others",
                "\u66f4\u65b0\u65e5\u5fd7": "Release Note",
                "\u4fee\u6539\u5bc6\u7801": "Change Password",
                "\u57fa\u672c\u4fe1\u606f": "Basic Info.",
                "\u7cfb\u7edf\u914d\u7f6e": "System Configuration",
                "\u7528\u6237": "User",
                "\u7528\u6237\u7f16\u7801": "User Code",
                "\u7528\u6237\u540d": "User Name",
                "\u9ad8\u7ea7\u529f\u80fd": "Json Editor",
                "\u89d2\u8272": "Role",
                "\u5728\u7ebf\u7528\u6237\u7ba1\u7406": "Active Users",
                "\u5bc6\u7801\u7ba1\u7406": "Password Management",
                "\u4e1a\u52a1\u6743\u9650": "Function Permission",
                "\u6570\u636e\u6743\u9650": "Data Permission",
                "\u7ba1\u7406": "Management",
                "\u7cfb\u7edf\u9519\u8bef\u65e5\u5fd7": "Error Log",
                "\u57fa\u7840\u8d44\u6599": "Basic",
                "\u62a5\u8868": "Report",
                "\u62a5\u8868\u6d4f\u89c8\u5668": "Report Browser",
                "\u56fe\u8868": "Chart",
                "\u901a\u7528\u67e5\u8be2": "Common Query",
                "Sql\u7ba1\u7406": "Sql Management",
                "\u6570\u636e\u8868\u540d": "Table Name",
                "\u63cf\u8ff0": "Description",
                "Id\u5217": "Id Column",
                "\u670d\u52a1\u540d": "Service Class",
                "\u4e0b\u62c9\u6846\u503c": "Id Attribute",
                "\u4e0b\u62c9\u6846\u6807\u7b7e": "Label Attribute",
                RowMapper: "RowMapper Class",
                Validator: "Validator Class",
                "\u4f7f\u7528\u7f13\u5b58": "Use Cache",
                "\u5b57\u6bb5": "Field",
                "\u540d\u79f0": "Name",
                "\u7c7b\u578b": "Type",
                "\u7f16\u53f7\u89c4\u5219": "Auto No Pattern",
                "\u7ea6\u675f": "Constraint",
                "\u5934\u8868\u5173\u8054\u5217": "PK",
                "\u660e\u7ec6\u8868\u5173\u8054\u5217": "FK",
                "Action Js \u6a21\u5757": "Action JS",
                "\u754c\u9762\u7c7b\u578b": "View Model",
                "\u754c\u9762\u540d\u79f0": "View Name",
                "\u7236\u8282\u70b9": "Parent",
                "\u6570\u636e\u5e93\u5230\u6587\u4ef6": "DB to File",
                "\u6587\u4ef6\u5230\u6570\u636e\u5e93": "File to DB",
                "\u4fdd\u5b58": "Save",
                "\u5bc6\u7801": "Password",
                "\u72b6\u6001": "Status",
                "\u65b0\u589e\u660e\u7ec6": "New Detail",
                "\u5220\u9664\u660e\u7ec6": "Delete Detail",
                "\u4fdd\u5b58\u660e\u7ec6": "Save Detail",
                "\u7f16\u7801": "Code",
                "\u91cd\u590d\u5bc6\u7801": "Confirm Password",
                "\u52a0\u8f7d\u7528\u6237": "Load Users",
                "\u6dfb\u52a0": "Add",
                "\u4fdd\u5b58\u66f4\u6539": "Save Change",
                "\u5237\u65b0": "Refresh",
                "\u8e22\u4e0b\u7ebf": "Logoff",
                "\u9519\u8bef\u7ea7\u522b": "Level",
                "\u7c7b": "Class",
                "\u9519\u8bef\u6d88\u606f": "Message",
                "\u5f02\u5e38\u5806\u6808\u4fe1\u606f": "Stack Trace",
                "\u53c2\u6570": "Parameter",
                "\u521b\u5efa\u7528\u6237": "Created By",
                "\u521b\u5efa\u65f6\u95f4": "Created At",
                "Logo\u56fe\u7247\u5730\u5740": "Logo Image URL"
            })
        },
        "locale/nls/zh/message": function() {
            define({
                logout: "\u6ce8\u9500",
                tab_list: "\u5217\u8868",
                tab_bill: "\u5355\u636e",
                tab_detail: "\u660e\u7ec6",
                pageLabel: "\u9875\u9762",
                pageSizeLabel: "\u6bcf\u9875\u884c\u6570",
                Ok: "\u786e\u5b9a",
                Cancel: "\u53d6\u6d88",
                "Close All": "\u5173\u95ed\u5168\u90e8",
                "Close Others": "\u5173\u95ed\u5176\u5b83",
                MSG_USER_0001: "\u5bc6\u7801\u4e0d\u80fd\u548c\u4e0a\u6b21\u76f8\u540c",
                MSG_USER_0002: "\u8bf7\u5148\u4fdd\u5b58\u7528\u6237",
                MSG_USER_0003: "\u7528\u6237\u4e0d\u5b58\u5728",
                MSG_USER_0004: "\u7528\u6237\u5df2\u62e5\u6709\u8be5\u89d2\u8272",
                MSG_USER_0005: "\u8bf7\u5148\u4fdd\u5b58\u89d2\u8272",
                MSG_USER_0006: "\u7528\u6237\u5df2\u5b58\u5728"
            })
        },
        "ttx/AppConfig": function() {
            define([], function() {
                return {
                    server: "",
                    db: "xoms",
                    dataServer: this.server + "rest/jf/",
                    roleTableModel: "ttx_role",
                    wsos: {
                        bill: {
                            id: "ttx.wso.Bill"
                        },
                        creation: {
                            id: "ttx.wso.Creation"
                        },
                        navigatorEditor: {
                            id: "ttx.wso.general.NavigatorEditor"
                        },
                        permission: {
                            id: "ttx.wso.Permission"
                        },
                        dataRight: {
                            id: "ttx.wso.DataRight"
                        },
                        jsonEditor: {
                            id: "ttx.wso.JsonEditor"
                        },
                        orderAudit: {
                            id: "oms.wso.outbound.OrderAudit"
                        },
                        buyGift: {
                            id: "oms.wso.promotion.BuyGift"
                        },
                        demoCompanyItem: {
                            id: "oms.wso.general.CompanyItem"
                        },
                        demoWarehouseItem: {
                            id: "oms.wso.general.WarehouseItem"
                        },
                        demoWarehouseItem: {
                            id: "oms.wso.outbound.ScanDelivery"
                        },
                        demoSimple: {
                            id: "ttx.demo.wso.Simple"
                        },
                        demoUseTemplate: {
                            id: "ttx.demo.wso.UseTemplate"
                        },
                        demoUseServerData: {
                            id: "ttx.demo.wso.UseServerData"
                        },
                        demoChartConfigWso: {
                            id: "ttx.demo.chart.ChartConfigWso"
                        },
                        demoInbound: {
                            id: "ttx.demo.wms.Inbound"
                        },
                        demoPack: {
                            id: "ttx.demo.wms.Pack"
                        },
                        demoReportForm: {
                            id: "ttx.demo.wms.reportForm"
                        },
                        demoAuditLog: {
                            id: "ttx.demo.wms.auditLog"
                        },
                        buySend: {
                            id: "oms.wso.general.BuySend"
                        }
                    },
                    viewStatus: {
                        Ready: 0,
                        New: 1,
                        Edit: 2,
                        DetailReady: 0,
                        DetailNew: 1,
                        DetailEdit: 2
                    },
                    urls: {
                        table: "rest/creation/tableModels",
                        bill: "rest/creation/billModels",
                        wso: "rest/creation/viewModels",
                        nav: "rest/creation/navigator",
                        view: "rest/creation/viewModels/ttx.wso.Bill",
                        creationView: "rest/creation/viewModels/admin/ttx.wso.Creation/*",
                        billTemplateView: "rest/creation/viewModels/admin/ttx.wso.Bill/BillTemplate",
                        sqlTemplate: "rest/sqlTemplate",
                        orderAudit: "oms/outbound/order/audit",
                        buySend: "oms/outbound/order/audit",
                        userService: "user"
                    },
                    code: {
                        SUCCESS: "0",
                        ERROR: "1",
                        TIMEOUT: "2",
                        DANGER: "5",
                        BLACKLIST: "6",
                        PASSWORD_ERROR: "7"
                    },
                    loginPageServer: "http://114.55.140.242:30001"
                }
            })
        },
        "dojox/encoding/digests/MD5": function() {
            define(["./_base"], function(q) {
                function p(f, e) {
                    return f << e | f >>> 32 - e
                }
                function n(f, e, d, c, b, a) {
                    return q.addWords(p(q.addWords(q.addWords(e, f), q.addWords(c, a)), b), d)
                }
                function m(f, e, d, c, b, a, h) {
                    return n(e & d | ~e & c, f, e, b, a, h)
                }
                function l(f, e, d, c, b, a, h) {
                    return n(e & c | d & ~c, f, e, b, a, h)
                }
                function k(f, e, d, c, b, a, h) {
                    return n(d ^ (e | ~c), f, e, b, a, h)
                }
                function g(f, e) {
                    f[e >> 5] |= 128 << e % 32;
                    f[(e + 64 >>> 9 << 4) + 14] = e;
                    for (var d = 1732584193, c = -271733879, b = -1732584194, a = 271733878, h = 0; h < f.length; h += 16)
                        var r = d
                          , t = c
                          , g = b
                          , x = a
                          , d = m(d, c, b, a, f[h + 0], 7, -680876936)
                          , a = m(a, d, c, b, f[h + 1], 12, -389564586)
                          , b = m(b, a, d, c, f[h + 2], 17, 606105819)
                          , c = m(c, b, a, d, f[h + 3], 22, -1044525330)
                          , d = m(d, c, b, a, f[h + 4], 7, -176418897)
                          , a = m(a, d, c, b, f[h + 5], 12, 1200080426)
                          , b = m(b, a, d, c, f[h + 6], 17, -1473231341)
                          , c = m(c, b, a, d, f[h + 7], 22, -45705983)
                          , d = m(d, c, b, a, f[h + 8], 7, 1770035416)
                          , a = m(a, d, c, b, f[h + 9], 12, -1958414417)
                          , b = m(b, a, d, c, f[h + 10], 17, -42063)
                          , c = m(c, b, a, d, f[h + 11], 22, -1990404162)
                          , d = m(d, c, b, a, f[h + 12], 7, 1804603682)
                          , a = m(a, d, c, b, f[h + 13], 12, -40341101)
                          , b = m(b, a, d, c, f[h + 14], 17, -1502002290)
                          , c = m(c, b, a, d, f[h + 15], 22, 1236535329)
                          , d = l(d, c, b, a, f[h + 1], 5, -165796510)
                          , a = l(a, d, c, b, f[h + 6], 9, -1069501632)
                          , b = l(b, a, d, c, f[h + 11], 14, 643717713)
                          , c = l(c, b, a, d, f[h + 0], 20, -373897302)
                          , d = l(d, c, b, a, f[h + 5], 5, -701558691)
                          , a = l(a, d, c, b, f[h + 10], 9, 38016083)
                          , b = l(b, a, d, c, f[h + 15], 14, -660478335)
                          , c = l(c, b, a, d, f[h + 4], 20, -405537848)
                          , d = l(d, c, b, a, f[h + 9], 5, 568446438)
                          , a = l(a, d, c, b, f[h + 14], 9, -1019803690)
                          , b = l(b, a, d, c, f[h + 3], 14, -187363961)
                          , c = l(c, b, a, d, f[h + 8], 20, 1163531501)
                          , d = l(d, c, b, a, f[h + 13], 5, -1444681467)
                          , a = l(a, d, c, b, f[h + 2], 9, -51403784)
                          , b = l(b, a, d, c, f[h + 7], 14, 1735328473)
                          , c = l(c, b, a, d, f[h + 12], 20, -1926607734)
                          , d = n(c ^ b ^ a, d, c, f[h + 5], 4, -378558)
                          , a = n(d ^ c ^ b, a, d, f[h + 8], 11, -2022574463)
                          , b = n(a ^ d ^ c, b, a, f[h + 11], 16, 1839030562)
                          , c = n(b ^ a ^ d, c, b, f[h + 14], 23, -35309556)
                          , d = n(c ^ b ^ a, d, c, f[h + 1], 4, -1530992060)
                          , a = n(d ^ c ^ b, a, d, f[h + 4], 11, 1272893353)
                          , b = n(a ^ d ^ c, b, a, f[h + 7], 16, -155497632)
                          , c = n(b ^ a ^ d, c, b, f[h + 10], 23, -1094730640)
                          , d = n(c ^ b ^ a, d, c, f[h + 13], 4, 681279174)
                          , a = n(d ^ c ^ b, a, d, f[h + 0], 11, -358537222)
                          , b = n(a ^ d ^ c, b, a, f[h + 3], 16, -722521979)
                          , c = n(b ^ a ^ d, c, b, f[h + 6], 23, 76029189)
                          , d = n(c ^ b ^ a, d, c, f[h + 9], 4, -640364487)
                          , a = n(d ^ c ^ b, a, d, f[h + 12], 11, -421815835)
                          , b = n(a ^ d ^ c, b, a, f[h + 15], 16, 530742520)
                          , c = n(b ^ a ^ d, c, b, f[h + 2], 23, -995338651)
                          , d = k(d, c, b, a, f[h + 0], 6, -198630844)
                          , a = k(a, d, c, b, f[h + 7], 10, 1126891415)
                          , b = k(b, a, d, c, f[h + 14], 15, -1416354905)
                          , c = k(c, b, a, d, f[h + 5], 21, -57434055)
                          , d = k(d, c, b, a, f[h + 12], 6, 1700485571)
                          , a = k(a, d, c, b, f[h + 3], 10, -1894986606)
                          , b = k(b, a, d, c, f[h + 10], 15, -1051523)
                          , c = k(c, b, a, d, f[h + 1], 21, -2054922799)
                          , d = k(d, c, b, a, f[h + 8], 6, 1873313359)
                          , a = k(a, d, c, b, f[h + 15], 10, -30611744)
                          , b = k(b, a, d, c, f[h + 6], 15, -1560198380)
                          , c = k(c, b, a, d, f[h + 13], 21, 1309151649)
                          , d = k(d, c, b, a, f[h + 4], 6, -145523070)
                          , a = k(a, d, c, b, f[h + 11], 10, -1120210379)
                          , b = k(b, a, d, c, f[h + 2], 15, 718787259)
                          , c = k(c, b, a, d, f[h + 9], 21, -343485551)
                          , d = q.addWords(d, r)
                          , c = q.addWords(c, t)
                          , b = q.addWords(b, g)
                          , a = q.addWords(a, x);
                    return [d, c, b, a]
                }
                q.MD5 = function(f, e) {
                    var d = e || q.outputTypes.Base64
                      , c = g(q.stringToWord(f), 8 * f.length);
                    switch (d) {
                    case q.outputTypes.Raw:
                        return c;
                    case q.outputTypes.Hex:
                        return q.wordToHex(c);
                    case q.outputTypes.String:
                        return q.wordToString(c);
                    default:
                        return q.wordToBase64(c)
                    }
                }
                ;
                q.MD5._hmac = function(f, e, d) {
                    d = d || q.outputTypes.Base64;
                    var c = q.stringToWord(e);
                    16 < c.length && (c = g(c, 8 * e.length));
                    var b = [];
                    e = [];
                    for (var a = 0; 16 > a; a++)
                        b[a] = c[a] ^ 909522486,
                        e[a] = c[a] ^ 1549556828;
                    f = g(b.concat(q.stringToWord(f)), 512 + 8 * f.length);
                    f = g(e.concat(f), 640);
                    switch (d) {
                    case q.outputTypes.Raw:
                        return f;
                    case q.outputTypes.Hex:
                        return q.wordToHex(f);
                    case q.outputTypes.String:
                        return q.wordToString(f);
                    default:
                        return q.wordToBase64(f)
                    }
                }
                ;
                return q.MD5
            })
        },
        "dojox/encoding/digests/_base": function() {
            define(["dojo/_base/lang"], function(q) {
                q = q.getObject("dojox.encoding.digests", !0);
                q.outputTypes = {
                    Base64: 0,
                    Hex: 1,
                    String: 2,
                    Raw: 3
                };
                q.addWords = function(p, n) {
                    var m = (p & 65535) + (n & 65535);
                    return (p >> 16) + (n >> 16) + (m >> 16) << 16 | m & 65535
                }
                ;
                q.stringToWord = function(p) {
                    for (var n = [], m = 0, l = 8 * p.length; m < l; m += 8)
                        n[m >> 5] |= (p.charCodeAt(m / 8) & 255) << m % 32;
                    return n
                }
                ;
                q.wordToString = function(p) {
                    for (var n = [], m = 0, l = 32 * p.length; m < l; m += 8)
                        n.push(String.fromCharCode(p[m >> 5] >>> m % 32 & 255));
                    return n.join("")
                }
                ;
                q.wordToHex = function(p) {
                    for (var n = [], m = 0, l = 4 * p.length; m < l; m++)
                        n.push("0123456789abcdef".charAt(p[m >> 2] >> m % 4 * 8 + 4 & 15) + "0123456789abcdef".charAt(p[m >> 2] >> m % 4 * 8 & 15));
                    return n.join("")
                }
                ;
                q.wordToBase64 = function(p) {
                    for (var n = [], m = 0, l = 4 * p.length; m < l; m += 3)
                        for (var k = (p[m >> 2] >> m % 4 * 8 & 255) << 16 | (p[m + 1 >> 2] >> (m + 1) % 4 * 8 & 255) << 8 | p[m + 2 >> 2] >> (m + 2) % 4 * 8 & 255, g = 0; 4 > g; g++)
                            8 * m + 6 * g > 32 * p.length ? n.push("\x3d") : n.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(k >> 6 * (3 - g) & 63));
                    return n.join("")
                }
                ;
                q.stringToUtf8 = function(p) {
                    for (var n = "", m = -1, l, k; ++m < p.length; )
                        l = p.charCodeAt(m),
                        k = m + 1 < p.length ? p.charCodeAt(m + 1) : 0,
                        55296 <= l && 56319 >= l && 56320 <= k && 57343 >= k && (l = 65536 + ((l & 1023) << 10) + (k & 1023),
                        m++),
                        127 >= l ? n += String.fromCharCode(l) : 2047 >= l ? n += String.fromCharCode(192 | l >>> 6 & 31, 128 | l & 63) : 65535 >= l ? n += String.fromCharCode(224 | l >>> 12 & 15, 128 | l >>> 6 & 63, 128 | l & 63) : 2097151 >= l && (n += String.fromCharCode(240 | l >>> 18 & 7, 128 | l >>> 12 & 63, 128 | l >>> 6 & 63, 128 | l & 63));
                    return n
                }
                ;
                return q
            })
        },
        "ttx/WorkspaceManager": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/query dojo/topic dojo/aspect dojo/dom-construct dojo/dom-class dijit/registry dijit/MenuItem dijit/MenuSeparator dijit/layout/ContentPane ttx/dijit/layout/TabContainer ttx/store/localStorageProvider ttx/wso/Bill ttx/material/ripple ttx/dnd/Source ttx/util".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x) {
                var y;
                y = {
                    type: -2,
                    tid: -2,
                    oid: -2,
                    nid: -2,
                    form: null
                };
                return q(null, {
                    app: null,
                    current: {},
                    useTab: !0,
                    wsoContainer: null,
                    dndSource: null,
                    wsoStatistic: {},
                    constructor: function(a) {
                        this.inherited(arguments);
                        this.app = a.app;
                        return l.subscribe("clickNavNode", p.hitch(this, this._showObject))
                    },
                    getWsoContainer: function() {
                        this.wsoContainer || (this.useTab ? (this.wsoContainer = new a({
                            region: "center",
                            splitter: !0,
                            id: "workspace",
                            tabListRightPadding: 112
                        }),
                        this.addCloseMenu(this.wsoContainer),
                        this.tabCloseEventBinding(this.wsoContainer),
                        this.wsoTabSelectEventBinding()) : this.wsoContainer = new b({
                            style: "width:100%; height:100%",
                            region: "center",
                            splitter: !0,
                            id: "workspace"
                        }));
                        return this.wsoContainer
                    },
                    tabCloseEventBinding: function(a) {
                        var b;
                        b = this;
                        return k.after(a, "closeChild", function(c) {
                            var h;
                            if (c = a.selectedChildWidget)
                                return h = c.getChildren()[0],
                                c = h.navigatorItem,
                                b.setCurrentItem(c),
                                b.current = {
                                    tid: c.tid,
                                    oid: c.oid,
                                    nid: c.nid,
                                    form: h
                                };
                            b.setCurrentItem(null);
                            return b.current = null
                        })
                    },
                    tabContainerDnd: function(a) {
                        if (a && a.tablist)
                            return dojo.forEach(a.tablist.containerNode.children, function(a) {
                                dojo.addClass(a, "dojoDndItem")
                            }),
                            this.dndSource && this.dndSource.destroy(),
                            this.dndSource = new u(a.tablist.containerNode,{
                                allowedCopyItem: !1,
                                withHandles: !1,
                                horizontal: !0
                            })
                    },
                    wsoTabSelectEventBinding: function() {
                        return k.after(this.wsoContainer, "selectChild", function(a) {
                            return l.publish("wsoTabSelect", a)
                        })
                    },
                    addCloseMenu: function(a) {
                        var b;
                        b = this;
                        k.after(a.tablist._menuBtn, "loadDropDown", function(a) {
                            a = new d({
                                label: "Close all",
                                iconClass: "dijitInline dijitIcon dijitMenuItemIcon dijitIconDelete",
                                onClick: function() {
                                    b.closeAllTabs()
                                }
                            });
                            this.dropDown.addChild(a, 0);
                            return this.dropDown.addChild(new c, 1)
                        });
                        a = dijit.registry.byId("workspace_tablist_Menu");
                        a.onOpen = function() {
                            var a;
                            this.isShowingNow = !0;
                            this.set("activated", !0);
                            b;
                            a = e.byNode(this.currentTarget).page.wso.navigatorItem;
                            return a.__sourceItem || !a.maxOpened || 0 === 1 * a.maxOpened || b.wsoStatistic[a.id] && b.wsoStatistic[a.id].next > b.wsoStatistic[a.id].max ? f.add(this.containerNode.firstElementChild, "displayNone") : f.remove(this.containerNode.firstElementChild, "displayNone")
                        }
                        ;
                        a.addChild(new d({
                            id: this.id + "_Menu_OpenMore",
                            label: tt("\u518d\u6b21\u6253\u5f00"),
                            onClick: function(a) {
                                var c, h, d;
                                h = e.byNode(this.getParent().currentTarget).page.wso.navigatorItem;
                                d = {
                                    max: 1 * h.maxOpened || 0,
                                    next: 1
                                };
                                b.wsoStatistic[h.id] ? d = b.wsoStatistic[h.id] : b.wsoStatistic[h.id] = d;
                                c = d.next;
                                if (!(c > d.max)) {
                                    a = p.clone(h);
                                    a.id = x.getUUId(13);
                                    a.name = a.name + " [" + c + "]";
                                    a.__sourceItem = h;
                                    a.__count = c;
                                    d[c] = a.id;
                                    for (c = 1; c <= d.max; )
                                        if (d[c])
                                            c += 1;
                                        else
                                            break;
                                    d.next = c;
                                    b.wsoStatistic[h.id] = d;
                                    l.publish("clickNavNode", a)
                                }
                            }
                        }), 0);
                        a.addChild(new d({
                            id: this.id + "_Menu_CloseAll",
                            label: tt("Close All"),
                            onClick: function(a) {
                                b.closeAllTabs()
                            }
                        }));
                        a.addChild(new d({
                            id: this.id + "_Menu_CloseOthers",
                            label: tt("Close Others"),
                            onClick: function(a) {
                                a = e.byNode(this.getParent().currentTarget);
                                b.closeOtherTabs(a)
                            }
                        }))
                    },
                    closeAllTabs: function() {
                        var a;
                        a = this.wsoContainer;
                        n.forEach(a.getChildren(), function(b) {
                            b.closable && (b.onClose(),
                            a.removeChild(b),
                            b.destroyRecursive())
                        })
                    },
                    closeOtherTabs: function(a) {
                        var b;
                        b = this.wsoContainer;
                        n.forEach(b.getChildren(), function(c) {
                            c.closable && c !== a.page && (c.onClose(),
                            b.removeChild(c),
                            c.destroyRecursive())
                        })
                    },
                    getWsoInTabByType: function(a) {
                        var b, c, h, d, e, r;
                        if (this.useTab) {
                            r = [];
                            e = this.wsoContainer.getChildren();
                            h = 0;
                            for (d = e.length; h < d; h++)
                                c = e[h],
                                b = c.getChildren()[0].navigatorItem,
                                b.id === a.id && r.push(c);
                            return r
                        }
                    },
                    newWso: function(a) {
                        var b, c, h, d, e, r, t;
                        e = a.tid;
                        r = e.replace(/\./g, "/");
                        d = a.oid;
                        h = a.id;
                        a.__sourceItem && (h = a.__sourceItem.id);
                        if (a.param && "string" === typeof a.param)
                            try {
                                a.paramObject = JSON.parse(a.param)
                            } catch (H) {}
                        b = this;
                        c = null;
                        t = b.app.session.user;
                        require({
                            async: !1
                        }, [r], function(r) {
                            var f;
                            f = this.app.dataManager.getPermissionViewModels(t, e, d, h);
                            c = new r({
                                viewModelDeferred: f,
                                closable: !0,
                                navigatorItem: a,
                                _title: a.name,
                                app: this.app,
                                workspace: b.wsoContainer,
                                "class": "wso"
                            });
                            return b.wsoContainer ? b._addNewWso(a, c) : b._addNewWsoToWindow(a, c)
                        });
                        this.setCurrentItem(a);
                        this.tabContainerDnd(this.wsoContainer);
                        return c
                    },
                    setCurrentItem: function(a) {
                        try {
                            return h.put("currentWsoItem", a)
                        } catch (w) {}
                    },
                    _showObject: function(a) {
                        var b, c;
                        this.useTab ? (c = this.getWsoInTabByType(a)) && 0 < c.length ? (b = c[0].getChildren()[0],
                        this.wsoContainer.selectChild(c[0])) : this.newWso(a) : (this.destroyCurrent(),
                        b = this.newWso(a),
                        this.wsoContainer.addChild(b),
                        b.startup());
                        return this.current = {
                            tid: a.tid,
                            oid: a.oid,
                            nid: a.nid,
                            form: b
                        }
                    },
                    _addNewWso: function(a, c) {
                        var h, d;
                        h = this;
                        d = new b({
                            closable: void 0 !== a.closable ? a.closable : !0,
                            title: c._title,
                            "class": "wsoRootPane",
                            style: {
                                padding: "4px 0 0 0"
                            },
                            wso: c,
                            onClose: function() {
                                var b;
                                this.wso.navigatorItem.__count && this.wso.navigatorItem.__sourceItem && (a = this.wso.navigatorItem,
                                b = h.wsoStatistic[a.__sourceItem.id],
                                b.next > a.__count && (b.next = a.__count),
                                delete b[a.__count],
                                h.wsoStatistic[a.__sourceItem.id] = b);
                                l.publish("wsoClose", c);
                                return !0
                            }
                        });
                        d.addChild(c);
                        this.wsoContainer.addChild(d);
                        this.wsoContainer.selectChild(d);
                        c.startup();
                        return p.mixin(this.current, {
                            tid: a.tid,
                            oid: a.oid,
                            nid: a.nid,
                            form: c
                        })
                    },
                    _addNewWsoToWindow: function(a, b) {
                        g.place(b.domNode, dojo.body(), "first");
                        return b
                    },
                    destroyCurrent: function() {
                        var a;
                        a = this.current;
                        if (a.form)
                            try {
                                this.wsoContainer.removeChild(a.form),
                                a.form.destroyRecursive()
                            } catch (w) {}
                        return a = y
                    },
                    destroy: function() {}
                })
            })
        },
        "ttx/dijit/layout/TabContainer": function() {
            define(["dojo/_base/lang", "dojo/_base/declare", "dijit/layout/_TabContainerBase", "dijit/layout/TabController", "ttx/dijit/layout/ScrollingTabController"], function(q, p, n, m, l) {
                return p("dijit.layout.TabContainer", n, {
                    useMenu: !0,
                    useSlider: !0,
                    controllerWidget: "",
                    tabListRightPadding: 0,
                    postCreate: function() {
                        var k;
                        this.inherited(arguments);
                        k = this;
                        return this.tablist.domNode.onwheel = function(g) {
                            if (!g.ctrlKey && !g.shiftKey)
                                return 0 < g.wheelDelta ? k.back() : k.forward()
                        }
                    },
                    forward: function() {
                        return this.tablist.onButtonClick(this._adjacent(!0))
                    },
                    back: function() {
                        return this.tablist.onButtonClick(this._adjacent(!1))
                    },
                    _makeController: function(k) {
                        var g;
                        g = this.baseClass + "-tabs" + (this.doLayout ? "" : " dijitTabNoLayout");
                        m = "string" === typeof this.controllerWidget ? q.getObject(this.controllerWidget) : this.controllerWidget;
                        return new m({
                            id: this.id + "_tablist",
                            ownerDocument: this.ownerDocument,
                            dir: this.dir,
                            lang: this.lang,
                            textDir: this.textDir,
                            tabPosition: this.tabPosition,
                            doLayout: this.doLayout,
                            tabListRightPadding: this.tabListRightPadding,
                            containerId: this.id,
                            "class": g,
                            nested: this.nested,
                            useMenu: this.useMenu,
                            useSlider: this.useSlider,
                            tabStripClass: this.tabStrip ? this.baseClass + (this.tabStrip ? "" : "No") + "Strip" : null
                        },k)
                    },
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.controllerWidget || (this.controllerWidget = "top" !== this.tabPosition && "bottom" !== this.tabPosition || this.nested ? m : l)
                    }
                })
            })
        },
        "ttx/dijit/layout/ScrollingTabController": function() {
            define(["dojo/_base/lang", "dojo/_base/declare", "dojo/dom-geometry", "dijit/layout/utils", "dijit/layout/ScrollingTabController"], function(q, p, n, m, l) {
                return p([l], {
                    tabListRightPadding: 0,
                    resize: function(k) {
                        var g;
                        this._dim = k;
                        this.scrollNode.style.height = "auto";
                        g = this._contentBox = m.marginBox2contentBox(this.domNode, {
                            h: 0,
                            w: k.w
                        });
                        g.h = this.scrollNode.offsetHeight;
                        g.w -= this.tabListRightPadding;
                        n.setContentSize(this.domNode, g);
                        g = this._enableBtn(this._contentBox.w);
                        this._buttons.style("display", g ? "" : "none");
                        this._leftBtn.region = "left";
                        this._rightBtn.region = "right";
                        this._menuBtn.region = this.isLeftToRight() ? "right" : "left";
                        m.layoutChildren(this.domNode, this._contentBox, [this._menuBtn, this._leftBtn, this._rightBtn, {
                            domNode: this.scrollNode,
                            region: "center"
                        }]);
                        this._selectedTab && (this._anim && "playing" === this._anim.status() && this._anim.stop(),
                        this.scrollNode.scrollLeft = this._convertToScrollLeft(this._getScrollForSelectedTab()));
                        this._setButtonClass(this._getScroll());
                        this._postResize = !0;
                        return {
                            h: this._contentBox.h,
                            w: k.w
                        }
                    }
                })
            })
        },
        "ttx/store/localStorageProvider": function() {
            define([], function() {
                return {
                    DEFAULT_NAMESPACE: "",
                    store: localStorage,
                    put: function(q, p, n, m) {
                        var l;
                        m = m || this.DEFAULT_NAMESPACE;
                        l = this.getFullKey(q, m);
                        p = dojo.toJson(p);
                        try {
                            if (this.store.setItem(l, p),
                            n)
                                return n(this.SUCCESS, q, null, m)
                        } catch (k) {
                            if (n)
                                return n(this.FAILED, q, k.toString(), m)
                        }
                    },
                    get: function(q, p) {
                        var n;
                        p = p || this.DEFAULT_NAMESPACE;
                        n = this.getFullKey(q, p);
                        return dojo.fromJson(this.store.getItem(n))
                    },
                    getFullKey: function(q, p) {
                        return "__" + p + "_" + q
                    }
                }
            })
        },
        "ttx/wso/Bill": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/fx dojo/dom dojo/dom-class dojo/dom-style dojo/dom-construct dojo/dom-geometry dojo/query dojo/on dojo/aspect dojo/DeferredList dojo/store/Memory ttx/store/JsonRest dijit/registry dijit/layout/ContentPane dijit/layout/TabContainer dijit/form/Form dijit/form/TextBox dijit/form/Button dijit/_Container dijit/Toolbar dojox/mvc/at dojox/mvc/getStateful dojox/mvc/ModelRefController gridx/Grid gridx/core/model/cache/Sync gridx/allModules ttx/actions/BillActions ttx/wso/_ViewModelWso ttx/wso/_TabLayoutMixin ttx/util/_I18nMixin dojo/text!./templates/Bill.html".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A, B, C, E, I, H, F, G, J, O, D) {
                var M;
                return q([G, J, O], {
                    templateString: D,
                    _loading: "",
                    app: null,
                    workspace: null,
                    tc: null,
                    navigatorItem: {},
                    actionSets: {
                        global: {},
                        "default": {}
                    },
                    cpList: null,
                    cpBill: null,
                    cpDetail: null,
                    cpAddition: null,
                    viewModel: null,
                    viewModelDeferred: null,
                    billModel: null,
                    headerTableModel: null,
                    detailTableModel: null,
                    viewStatus: 0,
                    deferredStatus: null != (M = this.DEFERRED_STATUS) ? M.Init : void 0,
                    cache: {
                        bill: {},
                        table: {},
                        view: {}
                    },
                    constructor: function(a) {
                        this.app = a.app;
                        return this.actionSets = {
                            global: {},
                            "default": {}
                        }
                    },
                    getListDef: function() {
                        return this.viewModel.list
                    },
                    getBillDef: function() {
                        return this.viewModel.bill
                    },
                    getDetailDef: function() {
                        return this.viewModel.detail
                    },
                    getAdditionDef: function() {
                        return this.viewModel.addition
                    },
                    buildForm: function(a) {
                        var c, h;
                        h = this;
                        c = h.app.dataManager;
                        this.postBuildFormCalled = !0;
                        c.getBillModel(a.billCode).then(function(a) {
                            var d;
                            h.billModel = a;
                            d = [c.getTableModel(a.header)];
                            a.detail && d.push(c.getTableModel(a.detail));
                            return (new b(d)).then(function(b) {
                                h.deferredStatus = h.DEFERRED_STATUS.Finish;
                                h.headerTableModel = b[0][1];
                                a.detail && (h.detailTableModel = b[1][1]);
                                h.actionSets.global = new F({
                                    wso: h
                                });
                                if (h.viewModel.actionJs)
                                    try {
                                        require({
                                            async: !1
                                        }, [h.viewModel.actionJs], function(a) {
                                            h.actionSets["default"] = new a({
                                                wso: h
                                            });
                                            h.actionSets["default"] && h.actionSets["default"].preBuildForm && h.actionSets["default"].preBuildForm();
                                            h.buildFormAfterLoaded();
                                            if (h.actionSets["default"] && h.actionSets["default"].postBuildForm)
                                                return h.actionSets["default"].postBuildForm()
                                        })
                                    } catch (U) {
                                        console.error(U)
                                    }
                                else
                                    h.actionSets["default"] && h.actionSets["default"].preBuildForm && h.actionSets["default"].preBuildForm(),
                                    h.buildFormAfterLoaded(),
                                    h.actionSets["default"] && h.actionSets["default"].postBuildForm && h.actionSets["default"].postBuildForm();
                                return h.resetBillActionStyle()
                            })
                        })
                    },
                    bindingEvent: function() {
                        var a;
                        a = this;
                        this.own(d(window, "resize", function() {
                            return a.resize()
                        }));
                        return c.after(this.tc, "selectChild", function(b, c) {
                            var h, d, e, r, t, g;
                            t = c[0];
                            a.resetBillActionStyle();
                            a.layoutPane(t.domNode);
                            if (t.ttxRole && "bill" === t.ttxRole && t.grid) {
                                d = f.getContentBox(t.domNode).h;
                                g = t.domNode.children;
                                e = 0;
                                for (r = g.length; e < r; e++)
                                    h = g[e],
                                    h.classList.contains("listGridContainer") || "absolute" === k.get(h, "position") || (d -= f.getMarginBox(h).h);
                                d = Math.max(d - 16, 200);
                                k.set(t.grid.domNode, "height", d + "px");
                                return t.grid.resize()
                            }
                        })
                    },
                    buildFormAfterLoaded: function() {
                        var a, b, c, h, e, r, t, g, u;
                        (a = this.getListDef()) && this.__buildCpList(a);
                        a = this.getBillDef();
                        this.__buildCpBill(a);
                        a = this.getDetailDef();
                        this.__buildCpDetail(a);
                        a = this.getAdditionDef();
                        this.__buildCpAddition(a);
                        this.resize();
                        this.layoutPane(this.cpList.domNode);
                        if (this.cpList.grid && this.cpList.grid.domNode) {
                            c = f.getContentBox(this.cpList.domNode).h;
                            g = this.cpList.domNode.children;
                            h = 0;
                            for (t = g.length; h < t; h++)
                                a = g[h],
                                a.classList.contains("listGridContainer") || (c -= f.getMarginBox(a).h);
                            k.set(this.cpList.grid.domNode, "height", c - 20 + "px")
                        }
                        try {
                            if (e = this,
                            this.cpList.grid.actionMap.query) {
                                u = this.cpList.fieldMap;
                                for (r in u)
                                    b = u[r],
                                    d(b, "keydown", function(a) {
                                        if (a.keyCode === dojo.keys.ENTER)
                                            return this.setValue(this.getValue()),
                                            e.cpList.grid.actionMap.query.onClick()
                                    });
                                if (this.cpList.grid.headerFilterEnabled)
                                    return this.cpList.grid.headerFilter.onFieldsAct = function(a) {
                                        return e.cpList.grid.actionMap.query.onClick()
                                    }
                            }
                        } catch (aa) {
                            return 0
                        }
                    },
                    __buildCpList: function(a) {
                        return this.buildCpList(a)
                    },
                    bindEnterQuery: function() {},
                    buildCpList: function(b) {
                        var c, e, r, t, f, g;
                        g = this;
                        e = this.cpList;
                        f = e.form = new x({
                            "class": "ttxForm"
                        });
                        e.addChild(f);
                        c = e.ctrl = new C({
                            model: B({})
                        });
                        t = e.fieldMap = {};
                        b.fields && this.addTtxFieldSet(b.fields, c, b.columns, f.domNode, t);
                        c = e.actionMap = {};
                        b.actions && (e.actionDom = this.addTtxActionSet(b.actions, e.domNode, c));
                        t = (t = b.grid.url) ? this.app.dataManager.getUrl(t) : this.app.dataManager.getTableRestUrl(this.headerTableModel.code);
                        c = b.grid.muteQuery;
                        void 0 === c && (c = !0);
                        c = {
                            target: t,
                            idProperty: this.headerTableModel.idColumnName,
                            muteQuery: c,
                            headers: {
                                "X-Result-Fields": this._getGridFieldsToRequest(this.headerTableModel, this.viewModel.list.grid)
                            }
                        };
                        b.grid.clientSide ? (e.grid = this.addTtxGrid(b.grid, e.domNode, {
                            store: new a({
                                data: []
                            })
                        }),
                        b.grid.url && (e.grid.url = b.grid.url,
                        g.app.dataManager.get(b.grid.url).then(function(b) {
                            return e.grid.setStore(new a({
                                data: b
                            }))
                        }))) : e.grid = this.addTtxServerGrid(b.grid, e.domNode, {
                            storeArgs: c,
                            store: new h(c)
                        });
                        r = function(a) {
                            a = e.grid.row(a.rowIndex).item();
                            if (e.grid)
                                return g.actionSets["default"] && g.actionSets["default"].edit ? g.actionSets["default"].edit.call(g.actionSets["default"], a) : g.actionSets.global.edit.call(g.actionSets.global, a)
                        }
                        ;
                        0 > navigator.userAgent.toLowerCase().indexOf("mobile") ? e.grid && this.own(d(e.grid, "cellDblClick", function(a) {
                            return r(a)
                        })) : e.grid && this.own(d(e.grid, "cellClick", function(a) {
                            return window.touchtime && 500 > (new Date).getTime() - window.touchtime ? (r(a),
                            window.touchtime = 0) : window.touchtime = (new Date).getTime()
                        }));
                        return this.gridDblClickEffect(e.grid)
                    },
                    needRemoveTab: function(a) {
                        var b, c;
                        if (!a)
                            return !0;
                        b = a.actions && a.actions.items && a.actions.items.length;
                        (c = !!a.fields) && (c = void 0 !== a.fields.length ? 0 < a.fields.length : a.fields.items && void 0 !== a.fields.items.length ? 0 < a.fields.items.length : !1);
                        return !c && !b
                    },
                    __buildCpBill: function(a) {
                        var b;
                        b = this.cpBill;
                        if (this.needRemoveTab(a))
                            this.tc.removeChild(b),
                            b.destroyRecursive();
                        else
                            return this.buildCpBill(a)
                    },
                    buildCpBill: function(a) {
                        var b, c, d, e;
                        c = this.cpBill;
                        c.status = this.app.config.viewStatus.Ready;
                        b = c.actionMap = {};
                        c.actionDom = this.addTtxActionSet(a.actions, c.domNode, b);
                        c.addChild(new x({
                            "class": "placeholder"
                        }));
                        e = c.form = new x({
                            "class": "ttxForm"
                        });
                        c.addChild(e);
                        b = c.ctrl = new C({
                            model: B({})
                        });
                        d = c.fieldMap = {};
                        this.addTtxFieldSet(a.fields, b, a.columns, e.domNode, d);
                        if (this.detailTableModel)
                            return d = (d = a.grid.url) ? this.app.dataManager.getUrl(d) : this.app.dataManager.getTableRestUrl(this.detailTableModel.code),
                            b = a.grid.muteQuery,
                            void 0 === b && (b = !0),
                            b = {
                                target: d,
                                idProperty: this.detailTableModel.idColumnName,
                                muteQuery: b,
                                headers: {
                                    "X-Result-Fields": this._getGridFieldsToRequest(this.detailTableModel, this.viewModel.bill.grid)
                                }
                            },
                            c.grid = this.addTtxServerGrid(a.grid, c.domNode, {
                                storeArgs: b,
                                store: new h(b)
                            }),
                            this.bindDetailGridEditAction(),
                            this.gridDblClickEffect(c.grid)
                    },
                    bindDetailGridEditAction: function() {
                        var a, b;
                        b = this;
                        a = this.cpBill;
                        if (a.grid)
                            return this.own(d(a.grid, "cellDblClick", function(c) {
                                c = a.grid.row(c.rowIndex).item();
                                return b.actionSets["default"].editDetail ? b.actionSets["default"].editDetail.call(b.actionSets["default"], c) : b.actionSets.global.editDetail.call(b.actionSets.global, c)
                            }))
                    },
                    __buildCpDetail: function(a) {
                        var b;
                        b = this.cpDetail;
                        if (this.needRemoveTab(a))
                            this.tc.removeChild(b),
                            b.destroyRecursive();
                        else
                            return this.buildCpDetail(a)
                    },
                    buildCpDetail: function(a) {
                        var b, c, h;
                        c = this.cpDetail;
                        c.status = this.app.config.viewStatus.Ready;
                        b = c.actionMap = {};
                        c.actionDom = this.addTtxActionSet(a.actions, c.domNode, b);
                        h = c.form = new x({
                            "class": "ttxForm"
                        });
                        c.addChild(h);
                        b = c.ctrl = new C({
                            model: B({})
                        });
                        c = c.fieldMap = {};
                        return this.addTtxFieldSet(a.fields, b, a.columns, h.domNode, c)
                    },
                    __buildCpAddition: function(a) {
                        var b;
                        b = this.cpAddition;
                        if (a)
                            return a.title && b.set("title", a.title),
                            this.buildCpAddition(a);
                        this.tc.removeChild(b);
                        b.destroyRecursive()
                    },
                    buildCpAddition: function(a) {}
                })
            })
        },
        "ttx/store/JsonRest": function() {
            define(["dojo/_base/declare", "dojo/Deferred", "dojo/store/JsonRest"], function(q, p, n) {
                return q([n], {
                    muteQuery: !1,
                    constructor: function(m) {
                        return this.inherited(arguments)
                    },
                    query: function(m, l) {
                        var k;
                        k = new p;
                        k.resolve([]);
                        if (this.muteQuery)
                            return k;
                        this.headers = app.dataManager.mixinHeaders(this.headers);
                        this.headers.filter && 0 === this.headers.filter.indexOf("{") && (this.headers.filter = encodeURIComponent(this.headers.filter));
                        this.headers["x-rights"] && 0 === this.headers["x-rights"].indexOf("{") && (this.headers["x-rights"] = encodeURIComponent(this.headers["x-rights"]));
                        k = this.inherited(arguments);
                        k.then(function(g) {
                            return app.dataManager.parseReturnData(g)
                        });
                        return k
                    }
                })
            })
        },
        "dojox/mvc/at": function() {
            define(["dojo/_base/kernel", "dojo/_base/lang", "./sync", "./_atBindingExtension"], function(q, p, n) {
                q.experimental("dojox.mvc");
                q = function(m, l) {
                    return {
                        atsignature: "dojox.mvc.at",
                        target: m,
                        targetProp: l,
                        bindDirection: n.both,
                        direction: function(k) {
                            this.bindDirection = k;
                            return this
                        },
                        transform: function(k) {
                            this.converter = k;
                            return this
                        },
                        equals: function(k) {
                            this.equalsCallback = k;
                            return this
                        }
                    }
                }
                ;
                q.from = n.from;
                q.to = n.to;
                q.both = n.both;
                return p.setObject("dojox.mvc.at", q)
            })
        },
        "dojox/mvc/sync": function() {
            define(["dojo/_base/lang", "dojo/_base/config", "dojo/_base/array", "dojo/has"], function(q, p, n, m) {
                function l(e, d, c, b, a, h, r, t, g, k) {
                    if (!(c(g, t) || "*" == a && 0 > n.indexOf(b.get("properties") || [r], r) || "*" == a && r in (k || {}))) {
                        c = "*" == a ? r : a;
                        m("mvc-bindings-log-api") && f(b, c, h, r);
                        try {
                            g = e ? e(g, d) : g
                        } catch (y) {
                            m("mvc-bindings-log-api");
                            return
                        }
                        m("mvc-bindings-log-api");
                        q.isFunction(b.set) ? b.set(c, g) : b[c] = g
                    }
                }
                var k = q.getObject("dojox.mvc", !0);
                m.add("mvc-bindings-log-api", (p.mvc || {}).debugBindings);
                var g, f = m("mvc-bindings-log-api") ? function(e, d, c, b) {
                    return [[c.canConvertToLoggable || !c.declaredClass ? c : c.declaredClass, b].join(":"), [e.canConvertToLoggable || !e.declaredClass ? e : e.declaredClass, d].join(":")]
                }
                : "";
                p = {
                    from: 1,
                    to: 2,
                    both: 3
                };
                g = function(e, d, c, b, a) {
                    var h = (a || {}).converter, r, t, u;
                    h && (r = {
                        source: e,
                        target: c
                    },
                    t = h.format && q.hitch(r, h.format),
                    u = h.parse && q.hitch(r, h.parse));
                    var x = []
                      , p = []
                      , z = q.mixin({}, e.constraints, c.constraints)
                      , h = (a || {}).bindDirection || k.both
                      , w = (a || {}).equals || g.equals;
                    m("mvc-bindings-log-api") && f(e, d, c, b);
                    if ("*" == b) {
                        if ("*" != d)
                            throw Error("Unmatched wildcard is specified between source and target.");
                        a = c.get("properties");
                        if (!a) {
                            a = [];
                            for (var v in c)
                                c.hasOwnProperty(v) && "_watchCallbacks" != v && a.push(v)
                        }
                        p = c.get("excludes")
                    } else
                        a = [d];
                    h & k.from && (q.isFunction(e.set) && q.isFunction(e.watch) ? x.push(e.watch.apply(e, ("*" != d ? [d] : []).concat([function(a, h, d) {
                        l(t, z, w, c, b, e, a, h, d, p)
                    }
                    ]))) : m("mvc-bindings-log-api"),
                    n.forEach(a, function(a) {
                        if ("*" != b || !(a in (p || {}))) {
                            var h = q.isFunction(e.get) ? e.get(a) : e[a];
                            l(t, z, w, c, "*" == b ? a : b, e, a, void 0, h)
                        }
                    }));
                    h & k.to && (h & k.from || n.forEach(a, function(a) {
                        if ("*" != b || !(a in (p || {}))) {
                            var h = q.isFunction(c.get) ? c.get(b) : c[b];
                            l(u, z, w, e, a, c, "*" == b ? a : b, void 0, h)
                        }
                    }),
                    q.isFunction(c.set) && q.isFunction(c.watch) ? x.push(c.watch.apply(c, ("*" != b ? [b] : []).concat([function(a, b, h) {
                        l(u, z, w, e, d, c, a, b, h, p)
                    }
                    ]))) : m("mvc-bindings-log-api"));
                    m("mvc-bindings-log-api");
                    v = {};
                    v.unwatch = v.remove = function() {
                        for (var a = null; a = x.pop(); )
                            a.unwatch();
                        m("mvc-bindings-log-api")
                    }
                    ;
                    return v
                }
                ;
                q.mixin(k, p);
                return q.setObject("dojox.mvc.sync", q.mixin(g, {
                    equals: function(e, d) {
                        return e === d || "number" == typeof e && isNaN(e) && "number" == typeof d && isNaN(d) || q.isFunction((e || {}).getTime) && q.isFunction((d || {}).getTime) && e.getTime() == d.getTime() || (q.isFunction((e || {}).equals) ? e.equals(d) : q.isFunction((d || {}).equals) ? d.equals(e) : !1)
                    }
                }, p))
            })
        },
        "dojox/mvc/_atBindingExtension": function() {
            define(["dojo/_base/config", "dojo/has", "dijit/_WidgetBase", "./atBindingExtension"], function(q, p, n, m) {
                p.add("mvc-extension-per-widget", (q.mvc || {}).extensionPerWidget);
                p("mvc-extension-per-widget") || m(n.prototype)
            })
        },
        "dojox/mvc/atBindingExtension": function() {
            define("dojo/aspect dojo/_base/array dojo/_base/lang dijit/_WidgetBase ./_atBindingMixin dijit/registry".split(" "), function(q, p, n, m, l) {
                return function(k) {
                    p.forEach(arguments, function(g) {
                        g.dataBindAttr ? console.warn("Detected a widget or a widget class that has already been applied data binding extension. Skipping...") : (n._mixin(g, l.mixin),
                        q.before(g, "postscript", function(f, e) {
                            this._dbpostscript(f, e)
                        }),
                        q.before(g, "startup", function() {
                            this._started || this._startAtWatchHandles()
                        }),
                        q.before(g, "destroy", function() {
                            this._stopAtWatchHandles()
                        }),
                        q.around(g, "set", function(f) {
                            return function(e, d) {
                                return e == l.prototype.dataBindAttr ? this._setBind(d) : "dojox.mvc.at" == (d || {}).atsignature ? this._setAtWatchHandle(e, d) : f.apply(this, n._toArray(arguments))
                            }
                        }))
                    });
                    return arguments
                }
            })
        },
        "dojox/mvc/_atBindingMixin": function() {
            define("dojo/_base/array dojo/_base/lang dojo/_base/declare dojo/has dojo/Stateful ./resolve ./sync".split(" "), function(q, p, n, m, l, k, g) {
                function f(b) {
                    var a;
                    try {
                        a = require("dijit/registry")
                    } catch (r) {
                        return
                    }
                    for (b = b.domNode && b.domNode.parentNode; b; ) {
                        if (b = a.getEnclosingWidget(b)) {
                            var c = b._relTargetProp || "target";
                            if ((p.isFunction(b.get) ? b.get(c) : b[c]) || c in b.constructor.prototype)
                                return b
                        }
                        b = b && b.domNode.parentNode
                    }
                }
                function e(b, a, c, e, t) {
                    function h() {
                        r.Two && r.Two.unwatch();
                        delete r.Two;
                        var h = l && (p.isFunction(l.get) ? l.get(n) : l[n])
                          , f = k(b, h)
                          , h = k(c, h);
                        m("mvc-bindings-log-api") && (!f || /^rel:/.test(b) && !l) && d(b, a);
                        m("mvc-bindings-log-api") && (!h || /^rel:/.test(c) && !l) && d(c, e);
                        f && h && (!/^rel:/.test(b) && !/^rel:/.test(c) || l) && (f.set && f.watch || "*" != a ? null == a ? (p.isFunction(h.set) ? h.set(e, f) : h[e] = f,
                        m("mvc-bindings-log-api")) : r.Two = g(f, a, h, e, t) : m("mvc-bindings-log-api") && d(b, a))
                    }
                    var r = {}
                      , l = f(c)
                      , n = l && l._relTargetProp || "target";
                    h();
                    if (l && /^rel:/.test(b) || /^rel:/.test(c) && p.isFunction(l.set) && p.isFunction(l.watch))
                        r.rel = l.watch(n, function(a, b, c) {
                            b !== c && (m("mvc-bindings-log-api"),
                            h())
                        });
                    var w = {};
                    w.unwatch = w.remove = function() {
                        for (var a in r)
                            r[a] && r[a].unwatch(),
                            delete r[a]
                    }
                    ;
                    return w
                }
                m("mvc-bindings-log-api");
                var d = m("mvc-bindings-log-api") ? function(b, a) {
                    console.warn(a + " could not be resolved" + ("string" == typeof b ? " with " + b : "") + ".")
                }
                : ""
                  , c = {
                    dataBindAttr: "data-mvc-bindings",
                    _dbpostscript: function(b, a) {
                        var c = this._refs = (b || {}).refs || {}, d;
                        for (d in b)
                            if ("dojox.mvc.at" == (b[d] || {}).atsignature) {
                                var e = b[d];
                                delete b[d];
                                c[d] = e
                            }
                        var e = new l
                          , f = this;
                        e.toString = function() {
                            return "[Mixin value of widget " + f.declaredClass + ", " + (f.id || "NO ID") + "]"
                        }
                        ;
                        e.canConvertToLoggable = !0;
                        this._startAtWatchHandles(e);
                        for (d in c)
                            void 0 !== e[d] && ((b = b || {})[d] = e[d]);
                        this._stopAtWatchHandles()
                    },
                    _startAtWatchHandles: function(b) {
                        this.canConvertToLoggable = !0;
                        var a = this._refs;
                        if (a) {
                            var c = this._atWatchHandles = this._atWatchHandles || {};
                            this._excludes = null;
                            for (var d in a)
                                a[d] && "*" != d && (c[d] = e(a[d].target, a[d].targetProp, b || this, d, {
                                    bindDirection: a[d].bindDirection,
                                    converter: a[d].converter,
                                    equals: a[d].equalsCallback
                                }));
                            "dojox.mvc.at" == (a["*"] || {}).atsignature && (c["*"] = e(a["*"].target, a["*"].targetProp, b || this, "*", {
                                bindDirection: a["*"].bindDirection,
                                converter: a["*"].converter,
                                equals: a["*"].equalsCallback
                            }))
                        }
                    },
                    _stopAtWatchHandles: function() {
                        for (var b in this._atWatchHandles)
                            this._atWatchHandles[b].unwatch(),
                            delete this._atWatchHandles[b]
                    },
                    _setAtWatchHandle: function(b, a) {
                        if ("ref" == b)
                            throw Error(this + ": 1.7 ref syntax used in conjunction with 1.8 dojox/mvc/at syntax, which is not supported.");
                        var c = this._atWatchHandles = this._atWatchHandles || {};
                        c[b] && (c[b].unwatch(),
                        delete c[b]);
                        this._excludes = this[b] = null;
                        this._started ? c[b] = e(a.target, a.targetProp, this, b, {
                            bindDirection: a.bindDirection,
                            converter: a.converter,
                            equals: a.equalsCallback
                        }) : this._refs[b] = a
                    },
                    _setBind: function(b) {
                        b = eval("({" + b + "})");
                        for (var a in b) {
                            var c = b[a];
                            "dojox.mvc.at" != (c || {}).atsignature ? console.warn(a + " in " + dataBindAttr + " is not a data binding handle.") : this._setAtWatchHandle(a, c)
                        }
                    },
                    _getExcludesAttr: function() {
                        if (this._excludes)
                            return this._excludes;
                        var b = [], a;
                        for (a in this._atWatchHandles)
                            "*" != a && b.push(a);
                        return b
                    },
                    _getPropertiesAttr: function() {
                        if (this.constructor._attribs)
                            return this.constructor._attribs;
                        var b = ["onClick"].concat(this.constructor._setterAttrs);
                        q.forEach(["id", "excludes", "properties", "ref", "binding"], function(a) {
                            a = q.indexOf(b, a);
                            0 <= a && b.splice(a, 1)
                        });
                        return this.constructor._attribs = b
                    }
                };
                c[c.dataBindAttr] = "";
                n = n("dojox/mvc/_atBindingMixin", null, c);
                n.mixin = c;
                return n
            })
        },
        "dojox/mvc/resolve": function() {
            define(["dojo/_base/lang", "dijit/registry", "dojo/Stateful"], function(q, p) {
                return q.setObject("dojox.mvc.resolve", function(n, m) {
                    if ("string" == typeof n) {
                        var l = n.match(/^(expr|rel|widget):(.*)$/) || [];
                        try {
                            n = "rel" == l[1] ? q.getObject(l[2] || "", !1, m) : "widget" == l[1] ? p.byId(l[2]) : q.getObject(l[2] || n, !1, m)
                        } catch (k) {}
                    }
                    return n
                })
            })
        },
        "dojox/embed/Flash": function() {
            define("dojo/_base/lang dojo/_base/unload dojo/_base/array dojo/query dojo/has dojo/dom dojo/on dojo/window dojo/string".split(" "), function(q, p, n, m, l, k, g, f, e) {
                function d(b) {
                    b = q.delegate(h, b);
                    if (!("path"in b))
                        return console.error("dojox.embed.Flash(ctor):: no path reference to a Flash movie was provided."),
                        null;
                    "id"in b || (b.id = "dojox-embed-flash-" + a++);
                    return b
                }
                var c, b, a = 0, h = {
                    expressInstall: !1,
                    width: 320,
                    height: 240,
                    swLiveConnect: "true",
                    allowScriptAccess: "sameDomain",
                    allowNetworking: "all",
                    style: null,
                    redirect: null
                };
                l("ie") ? (c = function(a) {
                    a = d(a);
                    if (!a)
                        return null;
                    var b, c = a.path;
                    if (a.vars) {
                        var h = [];
                        for (b in a.vars)
                            h.push(encodeURIComponent(b) + "\x3d" + encodeURIComponent(a.vars[b]));
                        a.params.FlashVars = h.join("\x26");
                        delete a.vars
                    }
                    c = '\x3cobject id\x3d"' + e.escape(String(a.id)) + '" classid\x3d"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width\x3d"' + e.escape(String(a.width)) + '" height\x3d"' + e.escape(String(a.height)) + '"' + (a.style ? ' style\x3d"' + e.escape(String(a.style)) + '"' : "") + '\x3e\x3cparam name\x3d"movie" value\x3d"' + e.escape(String(c)) + '" /\x3e';
                    if (a.params)
                        for (b in a.params)
                            c += '\x3cparam name\x3d"' + e.escape(b) + '" value\x3d"' + e.escape(String(a.params[b])) + '" /\x3e';
                    return {
                        id: a.id,
                        markup: c + "\x3c/object\x3e"
                    }
                }
                ,
                b = function() {
                    for (var a = 10, b = null; !b && 7 < a; )
                        try {
                            b = new ActiveXObject("ShockwaveFlash.ShockwaveFlash." + a--)
                        } catch (x) {}
                    return b ? (a = b.GetVariable("$version").split(" ")[1].split(","),
                    {
                        major: null != a[0] ? parseInt(a[0]) : 0,
                        minor: null != a[1] ? parseInt(a[1]) : 0,
                        rev: null != a[2] ? parseInt(a[2]) : 0
                    }) : {
                        major: 0,
                        minor: 0,
                        rev: 0
                    }
                }(),
                p.addOnWindowUnload(function() {
                    console.warn("***************UNLOAD");
                    var a = function() {};
                    m("object").reverse().style("display", "none").forEach(function(b) {
                        for (var c in b)
                            if ("FlashVars" != c && "function" == typeof b[c])
                                try {
                                    b[c] = a
                                } catch (y) {}
                    })
                })) : (c = function(a) {
                    a = d(a);
                    if (!a)
                        return null;
                    var b, c = a.path;
                    if (a.vars) {
                        var h = [];
                        for (b in a.vars)
                            h.push(encodeURIComponent(b) + "\x3d" + encodeURIComponent(a.vars[b]));
                        a.params.flashVars = h.join("\x26");
                        delete a.vars
                    }
                    c = '\x3cembed type\x3d"application/x-shockwave-flash" src\x3d"' + e.escape(String(c)) + '" id\x3d"' + e.escape(String(a.id)) + '" width\x3d"' + e.escape(String(a.width)) + '" height\x3d"' + e.escape(String(a.height)) + '"' + (a.style ? ' style\x3d"' + e.escape(String(a.style)) + '" ' : "") + 'pluginspage\x3d"' + window.location.protocol + '//www.adobe.com/go/getflashplayer" ';
                    if (a.params)
                        for (b in a.params)
                            c += " " + e.escape(b) + '\x3d"' + e.escape(String(a.params[b])) + '"';
                    return {
                        id: a.id,
                        markup: c + " /\x3e"
                    }
                }
                ,
                b = function() {
                    var a = navigator.plugins["Shockwave Flash"];
                    return a && a.description ? (a = a.description.replace(/([a-zA-Z]|\s)+/, "").replace(/(\s+r|\s+b[0-9]+)/, ".").split("."),
                    {
                        major: null != a[0] ? parseInt(a[0]) : 0,
                        minor: null != a[1] ? parseInt(a[1]) : 0,
                        rev: null != a[2] ? parseInt(a[2]) : 0
                    }) : {
                        major: 0,
                        minor: 0,
                        rev: 0
                    }
                }());
                var r = function(a, c) {
                    if (-1 < location.href.toLowerCase().indexOf("file://"))
                        throw Error("dojox.embed.Flash can't be run directly from a file. To instatiate the required SWF correctly it must be run from a server, like localHost.");
                    this.available = b.major;
                    this.minimumVersion = a.minimumVersion || 9;
                    this.domNode = this.movie = this.id = null;
                    c && (c = k.byId(c));
                    setTimeout(q.hitch(this, function() {
                        if (a.expressInstall || this.available && this.available >= this.minimumVersion)
                            if (a && c)
                                this.init(a, c);
                            else
                                this.onError("embed.Flash was not provided with the proper arguments.");
                        else if (this.available)
                            this.onError("Flash version detected: " + this.available + " is out of date. Minimum required: " + this.minimumVersion);
                        else
                            this.onError("Flash is not installed.")
                    }), 100)
                };
                q.extend(r, {
                    onReady: function(a) {},
                    onLoad: function(a) {},
                    onError: function(a) {},
                    _onload: function() {
                        clearInterval(this._poller);
                        delete this._poller;
                        delete this._pollCount;
                        delete this._pollMax;
                        this.onLoad(this.movie)
                    },
                    init: function(a, b) {
                        this.destroy();
                        b = k.byId(b || this.domNode);
                        if (!b)
                            throw Error("dojox.embed.Flash: no domNode reference has been passed.");
                        var c = 0;
                        this._poller = null;
                        this._pollCount = 0;
                        this._pollMax = 15;
                        this.pollTime = 100;
                        r.initialized && (this.id = r.place(a, b),
                        this.domNode = b,
                        setTimeout(q.hitch(this, function() {
                            this.movie = this.byId(this.id, a.doc);
                            this.onReady(this.movie);
                            this._poller = setInterval(q.hitch(this, function() {
                                try {
                                    c = this.movie.PercentLoaded()
                                } catch (y) {
                                    console.warn("this.movie.PercentLoaded() failed", y, this.movie)
                                }
                                if (100 == c)
                                    this._onload();
                                else if (0 == c && this._pollCount++ > this._pollMax)
                                    throw clearInterval(this._poller),
                                    Error("Building SWF failed.");
                            }), this.pollTime)
                        }), 1))
                    },
                    _destroy: function() {
                        try {
                            this.domNode.removeChild(this.movie)
                        } catch (t) {}
                        this.id = this.movie = this.domNode = null
                    },
                    destroy: function() {
                        if (this.movie) {
                            var a = q.delegate({
                                id: !0,
                                movie: !0,
                                domNode: !0,
                                onReady: !0,
                                onLoad: !0
                            }), b;
                            for (b in this)
                                a[b] || delete this[b];
                            this._poller ? g(this, "Load", this, "_destroy") : this._destroy()
                        }
                    },
                    byId: function(a, b) {
                        b = b || document;
                        return b.embeds[a] ? b.embeds[a] : b[a] ? b[a] : window[a] ? window[a] : document[a] ? document[a] : null
                    }
                });
                q.mixin(r, {
                    minSupported: 8,
                    available: b.major,
                    supported: b.major >= b.required,
                    minimumRequired: b.required,
                    version: b,
                    initialized: !1,
                    onInitialize: function() {
                        r.initialized = !0
                    },
                    __ie_markup__: function(a) {
                        return c(a)
                    },
                    proxy: function(a, b) {
                        n.forEach(b instanceof Array ? b : [b], function(a) {
                            this[a] = q.hitch(this, function() {
                                return function() {
                                    return eval(this.movie.CallFunction('\x3cinvoke name\x3d"' + a + '" returntype\x3d"javascript"\x3e\x3carguments\x3e' + n.map(arguments, function(a) {
                                        return __flash__toXML(a)
                                    }).join("") + "\x3c/arguments\x3e\x3c/invoke\x3e"))
                                }
                                .apply(this, arguments || [])
                            })
                        }, a)
                    }
                });
                r.place = function(a, b) {
                    var h = c(a);
                    b = k.byId(b);
                    b || (b = f.doc.createElement("div"),
                    b.id = h.id + "-container",
                    f.body().appendChild(b));
                    return h ? (b.innerHTML = h.markup,
                    h.id) : null
                }
                ;
                r.onInitialize();
                q.setObject("dojox.embed.Flash", r);
                return r
            })
        },
        "dojox/form/CheckedMultiSelect": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/event dojo/dom-geometry dojo/dom-class dojo/dom-construct dojo/i18n dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin dijit/registry dijit/Menu dijit/MenuItem dijit/Tooltip dijit/form/_FormSelectWidget dijit/form/ComboButton dojo/text!dojox/form/resources/_CheckedMultiSelectMenuItem.html dojo/text!dojox/form/resources/_CheckedMultiSelectItem.html dojo/text!dojox/form/resources/CheckedMultiSelect.html dojo/i18n!dojox/form/nls/CheckedMultiSelect dijit/form/CheckBox".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w) {
                var v = q("dojox.form._CheckedMultiSelectItem", [e, d, c], {
                    templateString: y,
                    baseClass: "dojoxMultiSelectItem",
                    option: null,
                    parent: null,
                    disabled: !1,
                    readOnly: !1,
                    postMixInProperties: function() {
                        this._type = this.parent.multiple ? {
                            type: "checkbox",
                            baseClass: "dijitCheckBox"
                        } : {
                            type: "radio",
                            baseClass: "dijitRadio"
                        };
                        this.disabled || (this.disabled = this.option.disabled = this.option.disabled || !1);
                        this.readOnly || (this.readOnly = this.option.readOnly = this.option.readOnly || !1);
                        this.inherited(arguments)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this.labelNode.innerHTML = this.option.label
                    },
                    _changeBox: function() {
                        this.get("disabled") || this.get("readOnly") || (this.parent.multiple ? this.option.selected = this.checkBox.get("value") && !0 : this.parent.set("value", this.option.value),
                        this.parent._updateSelection(),
                        this.parent.focus())
                    },
                    _onClick: function(a) {
                        this.get("disabled") || this.get("readOnly") ? m.stop(a) : this.checkBox._onClick(a)
                    },
                    _updateBox: function() {
                        this.checkBox.set("value", this.option.selected)
                    },
                    _setDisabledAttr: function(a) {
                        this.disabled = a || this.option.disabled;
                        this.checkBox.set("disabled", this.disabled);
                        k.toggle(this.domNode, "dojoxMultiSelectDisabled", this.disabled)
                    },
                    _setReadOnlyAttr: function(a) {
                        this.checkBox.set("readOnly", a);
                        this.readOnly = a
                    }
                })
                  , A = q("dojox.form._CheckedMultiSelectMenu", a, {
                    multiple: !1,
                    buildRendering: function() {
                        this.inherited(arguments);
                        var a = this.menuTableNode = this.domNode
                          , b = this.domNode = g.create("div", {
                            style: {
                                overflowX: "hidden",
                                overflowY: "scroll"
                            }
                        });
                        a.parentNode && a.parentNode.replaceChild(b, a);
                        k.remove(a, "dijitMenuTable");
                        b.className = a.className + " dojoxCheckedMultiSelectMenu";
                        a.className = "dijitReset dijitMenuTable";
                        a.setAttribute("role", "listbox");
                        b.setAttribute("role", "presentation");
                        b.appendChild(a)
                    },
                    resize: function(a) {
                        a && (l.setMarginBox(this.domNode, a),
                        "w"in a && (this.menuTableNode.style.width = "100%"))
                    },
                    onClose: function() {
                        this.inherited(arguments);
                        this.menuTableNode && (this.menuTableNode.style.width = "")
                    },
                    onItemClick: function(a, b) {
                        "undefined" == typeof this.isShowingNow && this._markActive();
                        this.focusChild(a);
                        if (a.disabled || a.readOnly)
                            return !1;
                        if (!this.multiple)
                            this.onExecute();
                        a.onClick(b)
                    }
                })
                  , B = q("dojox.form._CheckedMultiSelectMenuItem", h, {
                    templateString: x,
                    option: null,
                    parent: null,
                    iconClass: "",
                    postMixInProperties: function() {
                        this.parent.multiple ? (this._iconClass = "dojoxCheckedMultiSelectMenuCheckBoxItemIcon",
                        this._type = {
                            type: "checkbox"
                        }) : (this._iconClass = "",
                        this._type = {
                            type: "hidden"
                        });
                        this.disabled = this.option.disabled;
                        this.checked = this.option.selected;
                        this.label = this.option.label;
                        this.readOnly = this.option.readOnly;
                        this.inherited(arguments)
                    },
                    onChange: function(a) {},
                    _updateBox: function() {
                        k.toggle(this.domNode, "dojoxCheckedMultiSelectMenuItemChecked", !!this.option.selected);
                        this.domNode.setAttribute("aria-checked", this.option.selected);
                        this.inputNode.checked = this.option.selected;
                        this.parent.multiple || k.toggle(this.domNode, "dijitSelectSelectedOption", !!this.option.selected)
                    },
                    _onClick: function(a) {
                        this.disabled || this.readOnly || (this.parent.multiple ? (this.option.selected = !this.option.selected,
                        this.parent.onChange(),
                        this.onChange(this.option.selected)) : this.option.selected || (n.forEach(this.parent.getChildren(), function(a) {
                            a.option.selected = !1
                        }),
                        this.option.selected = !0,
                        this.parent.onChange(),
                        this.onChange(this.option.selected)));
                        this.inherited(arguments)
                    }
                });
                return q("dojox.form.CheckedMultiSelect", t, {
                    templateString: z,
                    baseClass: "dojoxCheckedMultiSelect",
                    required: !1,
                    invalidMessage: "$_unset_$",
                    _message: "",
                    dropDown: !1,
                    labelText: "",
                    tooltipPosition: [],
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this._nlsResources = f.getLocalization("dojox.form", "CheckedMultiSelect", this.lang);
                        "$_unset_$" == this.invalidMessage && (this.invalidMessage = this._nlsResources.invalidMessage)
                    },
                    _fillContent: function() {
                        this.inherited(arguments);
                        if (this.options.length && !this.value && this.srcNodeRef) {
                            var a = this.srcNodeRef.selectedIndex || 0;
                            this.value = this.options[0 <= a ? a : 0].value
                        }
                        this.dropDown && (k.toggle(this.selectNode, "dojoxCheckedMultiSelectHidden"),
                        this.dropDownMenu = new A({
                            id: this.id + "_menu",
                            style: "display: none;",
                            multiple: this.multiple,
                            onChange: p.hitch(this, "_updateSelection")
                        }))
                    },
                    startup: function() {
                        this.dropDown && (this.dropDownButton = new u({
                            label: this.labelText,
                            dropDown: this.dropDownMenu,
                            baseClass: "dojoxCheckedMultiSelectButton",
                            maxHeight: this.maxHeight
                        },this.comboButtonNode));
                        this.inherited(arguments)
                    },
                    _onMouseDown: function(a) {
                        a.preventDefault()
                    },
                    validator: function() {
                        return this.required ? n.some(this.getOptions(), function(a) {
                            return a.selected && null != a.value && 0 != a.value.toString().length
                        }) : !0
                    },
                    validate: function(a) {
                        r.hide(this.domNode);
                        (a = this.isValid(a)) || this.displayMessage(this.invalidMessage);
                        return a
                    },
                    isValid: function(a) {
                        return this.validator()
                    },
                    getErrorMessage: function(a) {
                        return this.invalidMessage
                    },
                    displayMessage: function(a) {
                        r.hide(this.domNode);
                        a && r.show(a, this.domNode, this.tooltipPosition)
                    },
                    onAfterAddOptionItem: function(a, b) {},
                    _addOptionItem: function(a) {
                        var b;
                        this.dropDown ? (b = new B({
                            option: a,
                            parent: this.dropDownMenu
                        }),
                        this.dropDownMenu.addChild(b)) : (b = new v({
                            option: a,
                            parent: this,
                            disabled: this.disabled,
                            readOnly: this.readOnly
                        }),
                        this.wrapperDiv.appendChild(b.domNode));
                        this.onAfterAddOptionItem(b, a)
                    },
                    _refreshState: function() {
                        this.validate(this.focused)
                    },
                    onChange: function(a) {
                        this._refreshState()
                    },
                    reset: function() {
                        this.inherited(arguments);
                        r.hide(this.domNode)
                    },
                    _updateSelection: function() {
                        this.inherited(arguments);
                        this._handleOnChange(this.value);
                        n.forEach(this._getChildren(), function(a) {
                            a._updateBox()
                        });
                        g.empty(this.containerNode);
                        var a = this;
                        n.forEach(this.value, function(b) {
                            b = g.create("option", {
                                value: b,
                                label: b,
                                selected: "selected"
                            });
                            g.place(b, a.containerNode)
                        });
                        if (this.dropDown && this.dropDownButton) {
                            var b = 0
                              , c = "";
                            n.forEach(this.options, function(a) {
                                a.selected && (b++,
                                c = a.label)
                            });
                            this.dropDownButton.set("label", this.multiple ? p.replace(this._nlsResources.multiSelectLabelText, {
                                num: b
                            }) : c)
                        }
                    },
                    _getChildren: function() {
                        return this.dropDown ? this.dropDownMenu.getChildren() : n.map(this.wrapperDiv.childNodes, function(a) {
                            return b.byNode(a)
                        })
                    },
                    invertSelection: function(a) {
                        this.multiple && (n.forEach(this.options, function(a) {
                            a.selected = !a.selected
                        }),
                        this._updateSelection())
                    },
                    _setDisabledAttr: function(a) {
                        this.inherited(arguments);
                        this.dropDown && this.dropDownButton.set("disabled", a);
                        n.forEach(this._getChildren(), function(b) {
                            b && b.set && b.set("disabled", a)
                        })
                    },
                    _setReadOnlyAttr: function(a) {
                        this.inherited(arguments);
                        "readOnly"in this.attributeMap && this[this.attributeMap.readOnly].setAttribute("readonly", a);
                        this.readOnly = a;
                        n.forEach(this._getChildren(), function(b) {
                            b && b.set && b.set("readOnly", a)
                        })
                    },
                    uninitialize: function() {
                        r.hide(this.domNode);
                        n.forEach(this._getChildren(), function(a) {
                            a.destroyRecursive()
                        });
                        this.inherited(arguments)
                    }
                })
            })
        },
        "dojox/form/nls/CheckedMultiSelect": function() {
            define({
                root: {
                    invalidMessage: "At least one item must be selected.",
                    multiSelectLabelText: "{num} item(s) selected"
                },
                bs: !0,
                mk: !0,
                sr: !0,
                zh: !0,
                "zh-tw": !0,
                uk: !0,
                tr: !0,
                th: !0,
                sv: !0,
                sl: !0,
                sk: !0,
                ru: !0,
                ro: !0,
                pt: !0,
                pl: !0,
                nl: !0,
                nb: !0,
                ko: !0,
                kk: !0,
                ja: !0,
                it: !0,
                id: !0,
                hu: !0,
                hr: !0,
                he: !0,
                fr: !0,
                fi: !0,
                es: !0,
                el: !0,
                eu: !0,
                de: !0,
                da: !0,
                cs: !0,
                ca: !0,
                bg: !0
            })
        },
        "dojox/form/nls/zh/CheckedMultiSelect": function() {
            define({
                invalidMessage: "\u5fc5\u987b\u81f3\u5c11\u9009\u62e9\u4e00\u9879\u3002",
                multiSelectLabelText: "\u9009\u62e9\u4e86 {num} \u4e2a\u9879"
            })
        },
        "dojox/form/Uploader": function() {
            define("dojo/_base/kernel dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/connect dojo/_base/window dojo/dom-style dojo/dom-class dojo/dom-geometry dojo/dom-attr dojo/dom-construct dojo/dom-form dijit dijit/form/Button ./uploader/_Base ./uploader/_HTML5 ./uploader/_IFrame ./uploader/_Flash dojo/i18n!./nls/Uploader dojo/text!./resources/Uploader.html".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z) {
                return p("dojox.form.Uploader", [r, h, t, u, x], {
                    uploadOnSelect: !1,
                    tabIndex: 0,
                    multiple: !1,
                    label: y.label,
                    url: "",
                    name: "uploadedfile",
                    flashFieldName: "",
                    force: "",
                    uploadType: "",
                    showInput: "",
                    focusedClass: "dijitButtonHover",
                    _nameIndex: 0,
                    templateString: z,
                    baseClass: "dijitUploader " + h.prototype.baseClass,
                    postMixInProperties: function() {
                        this._inputs = [];
                        this._cons = [];
                        this.force = this.force.toLowerCase();
                        this.supports("multiple") ? this.uploadType = "form" === this.force ? "form" : "html5" : this.uploadType = "flash" === this.force ? "flash" : "iframe";
                        this.inherited(arguments)
                    },
                    buildRendering: function() {
                        this.inherited(arguments);
                        g.set(this.domNode, {
                            overflow: "hidden",
                            position: "relative"
                        });
                        this._buildDisplay();
                        d.set(this.titleNode, "tabIndex", -1)
                    },
                    _buildDisplay: function() {
                        this.showInput && (this.displayInput = c.create("input", {
                            "class": "dijitUploadDisplayInput",
                            tabIndex: -1,
                            autocomplete: "off",
                            role: "presentation"
                        }, this.containerNode, this.showInput),
                        this._attachPoints.push("displayInput"),
                        this.connect(this, "onChange", function(a) {
                            for (var b = 0, c, h = []; c = a[b++]; )
                                c && c.name && h.push(c.name);
                            this.displayInput.value = h.join(", ")
                        }),
                        this.connect(this, "reset", function() {
                            this.displayInput.value = ""
                        }))
                    },
                    startup: function() {
                        this._buildInitialized || (this._buildInitialized = !0,
                        this._getButtonStyle(this.domNode),
                        this._setButtonStyle(),
                        this.inherited(arguments))
                    },
                    onChange: function(a) {},
                    onBegin: function(a) {},
                    onProgress: function(a) {},
                    onComplete: function(a) {
                        this.reset()
                    },
                    onCancel: function() {},
                    onAbort: function() {},
                    onError: function(a) {},
                    upload: function(a) {
                        a = a || {};
                        a.uploadType = this.uploadType;
                        this.inherited(arguments)
                    },
                    submit: function(a) {
                        a = a ? a.tagName ? a : this.getForm() : this.getForm();
                        a = b.toObject(a);
                        a.uploadType = this.uploadType;
                        this.upload(a)
                    },
                    reset: function() {
                        delete this._files;
                        this._disconnectButton();
                        m.forEach(this._inputs, c.destroy);
                        this._inputs = [];
                        this._nameIndex = 0;
                        this._createInput()
                    },
                    getFileList: function() {
                        var a = [];
                        this.supports("multiple") ? m.forEach(this._files, function(b, c) {
                            a.push({
                                index: c,
                                name: b.name,
                                size: b.size,
                                type: b.type
                            })
                        }, this) : m.forEach(this._inputs, function(b, c) {
                            b.value && a.push({
                                index: c,
                                name: b.value.substring(b.value.lastIndexOf("\\") + 1),
                                size: 0,
                                type: b.value.substring(b.value.lastIndexOf(".") + 1)
                            })
                        }, this);
                        return a
                    },
                    _getValueAttr: function() {
                        return this.getFileList()
                    },
                    _setValueAttr: function(a) {
                        console.error("Uploader value is read only")
                    },
                    _setDisabledAttr: function(a) {
                        this.disabled != a && this.inputNode && (this.inherited(arguments),
                        g.set(this.inputNode, "display", a ? "none" : ""))
                    },
                    _getButtonStyle: function(a) {
                        this.btnSize = {
                            w: g.get(a, "width"),
                            h: g.get(a, "height")
                        }
                    },
                    _setButtonStyle: function() {
                        this.inputNodeFontSize = Math.max(2, Math.max(Math.ceil(this.btnSize.w / 60), Math.ceil(this.btnSize.h / 15)));
                        this._createInput()
                    },
                    _getFileFieldName: function() {
                        return this.supports("multiple") && this.multiple ? this.name + "s[]" : this.name + (this.multiple ? this._nameIndex : "")
                    },
                    _createInput: function() {
                        this._inputs.length && (g.set(this.inputNode, {
                            top: "500px"
                        }),
                        this._disconnectButton(),
                        this._nameIndex++);
                        var a = this._getFileFieldName();
                        this.focusNode = this.inputNode = c.create("input", {
                            type: "file",
                            name: a,
                            "aria-labelledby": this.id + "_label"
                        }, this.domNode, "first");
                        this.supports("multiple") && this.multiple && d.set(this.inputNode, "multiple", !0);
                        this._inputs.push(this.inputNode);
                        g.set(this.inputNode, {
                            position: "absolute",
                            fontSize: this.inputNodeFontSize + "em",
                            top: "-3px",
                            right: "-3px",
                            opacity: 0
                        });
                        this._connectButton()
                    },
                    _connectButton: function() {
                        this._cons.push(l.connect(this.inputNode, "change", this, function(a) {
                            this._files = this.inputNode.files;
                            this.onChange(this.getFileList(a));
                            !this.supports("multiple") && this.multiple && this._createInput()
                        }));
                        -1 < this.tabIndex && (this.inputNode.tabIndex = this.tabIndex,
                        this._cons.push(l.connect(this.inputNode, "focus", this, function() {
                            f.add(this.domNode, this.focusedClass)
                        })),
                        this._cons.push(l.connect(this.inputNode, "blur", this, function() {
                            f.remove(this.domNode, this.focusedClass)
                        })))
                    },
                    _disconnectButton: function() {
                        m.forEach(this._cons, l.disconnect);
                        this._cons.splice(0, this._cons.length)
                    }
                })
            })
        },
        "dojox/form/uploader/_Base": function() {
            define("dojo/dom-form dojo/dom-style dojo/dom-construct dojo/dom-attr dojo/has dojo/_base/declare dojo/_base/event dijit/_Widget dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                l.add("FormData", function() {
                    return !!window.FormData
                });
                l.add("xhr-sendAsBinary", function() {
                    var c = window.XMLHttpRequest && new window.XMLHttpRequest;
                    return c && !!c.sendAsBinary
                });
                l.add("file-multiple", function() {
                    return !!{
                        "true": 1,
                        "false": 1
                    }[m.get(document.createElement("input", {
                        type: "file"
                    }), "multiple")]
                });
                return k("dojox.form.uploader._Base", [f, e, d], {
                    getForm: function() {
                        if (!this.form)
                            for (var c = this.domNode; c && c.tagName && c !== document.body; ) {
                                if ("form" == c.tagName.toLowerCase()) {
                                    this.form = c;
                                    break
                                }
                                c = c.parentNode
                            }
                        return this.form
                    },
                    getUrl: function() {
                        this.uploadUrl && (this.url = this.uploadUrl);
                        if (this.url)
                            return this.url;
                        this.getForm() && (this.url = this.form.action);
                        return this.url
                    },
                    connectForm: function() {
                        this.url = this.getUrl();
                        !this._fcon && this.getForm() && (this._fcon = !0,
                        this.connect(this.form, "onsubmit", function(c) {
                            g.stop(c);
                            this.submit(this.form)
                        }))
                    },
                    supports: function(c) {
                        switch (c) {
                        case "multiple":
                            if ("flash" == this.force || "iframe" == this.force)
                                break;
                            return l("file-multiple");
                        case "FormData":
                            return l(c);
                        case "sendAsBinary":
                            return l("xhr-sendAsBinary")
                        }
                        return !1
                    },
                    getMimeType: function() {
                        return "application/octet-stream"
                    },
                    getFileType: function(c) {
                        return c.substring(c.lastIndexOf(".") + 1).toUpperCase()
                    },
                    convertBytes: function(c) {
                        var b = Math.round(c / 1024 * 1E5) / 1E5
                          , a = Math.round(c / 1048576 * 1E5) / 1E5
                          , h = Math.round(c / 1073741824 * 1E5) / 1E5
                          , d = c;
                        1 < b && (d = b.toFixed(1) + " kb");
                        1 < a && (d = a.toFixed(1) + " mb");
                        1 < h && (d = h.toFixed(1) + " gb");
                        return {
                            kb: b,
                            mb: a,
                            gb: h,
                            bytes: c,
                            value: d
                        }
                    }
                })
            })
        },
        "dojox/form/uploader/_HTML5": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo dojo/request dojo/request/xhr dojo/has".split(" "), function(q, p, n, m, l, k, g) {
                function f() {}
                g("native-xhr2") && (k._create = function(e) {
                    return function() {
                        var d = e();
                        d.upload.addEventListener("progress", f, !1);
                        return d
                    }
                }(k._create));
                return q("dojox.form.uploader._HTML5", [], {
                    errMsg: "Error uploading files. Try checking permissions",
                    uploadType: "html5",
                    postMixInProperties: function() {
                        this.inherited(arguments)
                    },
                    postCreate: function() {
                        this.connectForm();
                        this.inherited(arguments);
                        this.uploadOnSelect && this.connect(this, "onChange", function(e) {
                            this.upload(e[0])
                        })
                    },
                    _drop: function(e) {
                        m.stopEvent(e);
                        this._files = e.dataTransfer.files;
                        this.onChange(this.getFileList())
                    },
                    upload: function(e) {
                        this.onBegin(this.getFileList());
                        this.uploadWithFormData(e)
                    },
                    addDropTarget: function(e, d) {
                        d || (this.connect(e, "dragenter", m.stopEvent),
                        this.connect(e, "dragover", m.stopEvent),
                        this.connect(e, "dragleave", m.stopEvent));
                        this.connect(e, "drop", "_drop")
                    },
                    uploadWithFormData: function(e) {
                        function d(a) {
                            h._xhrProgress(a);
                            "load" === a.type && (h.onComplete(r.response.data),
                            r.response.xhr.removeEventListener("load", d, !1),
                            r.response.xhr.upload.removeEventListener("progress", d, !1),
                            r.response.xhr.upload.removeEventListener("progress", f, !1),
                            r = null)
                        }
                        if (this.getUrl()) {
                            var c = new FormData
                              , b = this._getFileFieldName();
                            n.forEach(this._files, function(a, h) {
                                c.append(b, a)
                            }, this);
                            if (e) {
                                e.uploadType = this.uploadType;
                                for (var a in e)
                                    c.append(a, e[a])
                            }
                            var h = this
                              , r = l(this.getUrl(), {
                                method: "POST",
                                data: c,
                                handleAs: "json",
                                headers: {
                                    Accept: "application/json"
                                }
                            }, !0);
                            r.promise.response.otherwise(function(a) {
                                console.error(a);
                                console.error(a.response.text);
                                h.onError(a)
                            });
                            g("native-xhr2") ? (r.response.xhr.addEventListener("load", d, !1),
                            r.response.xhr.upload.addEventListener("progress", d, !1)) : r.promise.then(function(a) {
                                h.onComplete(a)
                            })
                        } else
                            console.error("No upload url found.", this)
                    },
                    _xhrProgress: function(e) {
                        if (e.lengthComputable) {
                            var d = {
                                bytesLoaded: e.loaded,
                                bytesTotal: e.total,
                                type: e.type,
                                timeStamp: e.timeStamp
                            };
                            "load" == e.type ? (d.percent = "100%",
                            d.decimal = 1) : (d.decimal = e.loaded / e.total,
                            d.percent = Math.ceil(e.loaded / e.total * 100) + "%");
                            this.onProgress(d)
                        }
                    }
                })
            })
        },
        "dojox/form/uploader/_IFrame": function() {
            define("dojo/query dojo/dom-construct dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/dom-form dojo/request/iframe".split(" "), function(q, p, n, m, l, k, g) {
                return n("dojox.form.uploader._IFrame", [], {
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        "iframe" === this.uploadType && (this.uploadType = "iframe",
                        this.upload = this.uploadIFrame)
                    },
                    uploadIFrame: function(f) {
                        var e = {}, d;
                        this.getForm();
                        var c = this.getUrl()
                          , b = this;
                        f = f || {};
                        f.uploadType = this.uploadType;
                        d = p.place('\x3cform enctype\x3d"multipart/form-data" method\x3d"post"\x3e\x3c/form\x3e', this.domNode);
                        l.forEach(this._inputs, function(a, b) {
                            "" !== a.value && (d.appendChild(a),
                            e[a.name] = a.value)
                        }, this);
                        if (f)
                            for (nm in f)
                                void 0 === e[nm] && p.create("input", {
                                    name: nm,
                                    value: f[nm],
                                    type: "hidden"
                                }, d);
                        g.post(c, {
                            form: d,
                            handleAs: "json",
                            content: f
                        }).then(function(a) {
                            p.destroy(d);
                            if (a.ERROR || a.error)
                                b.onError(a);
                            else
                                b.onComplete(a)
                        }, function(a) {
                            console.error("error parsing server result", a);
                            p.destroy(d);
                            b.onError(a)
                        })
                    }
                })
            })
        },
        "dojox/form/uploader/_Flash": function() {
            define("dojo/dom-form dojo/dom-style dojo/dom-construct dojo/dom-attr dojo/_base/declare dojo/_base/config dojo/_base/connect dojo/_base/lang dojo/_base/array dojox/embed/Flash".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                return l("dojox.form.uploader._Flash", [], {
                    swfPath: k.uploaderPath || require.toUrl("dojox/form/resources/uploader.swf"),
                    preventCache: !0,
                    skipServerCheck: !0,
                    serverTimeout: 2E3,
                    isDebug: !1,
                    devMode: !1,
                    deferredUploading: 0,
                    postMixInProperties: function() {
                        "flash" === this.uploadType && (this._files = [],
                        this._fileMap = {},
                        this._createInput = this._createFlashUploader,
                        this.getFileList = this.getFlashFileList,
                        this.reset = this.flashReset,
                        this.upload = this.uploadFlash,
                        this.fieldname = "flashUploadFiles");
                        this.inherited(arguments)
                    },
                    onReady: function(c) {},
                    onLoad: function(c) {},
                    onFileChange: function(c) {},
                    onFileProgress: function(c) {},
                    getFlashFileList: function() {
                        return this._files
                    },
                    flashReset: function() {
                        this.flashMovie.reset();
                        this._files = [];
                        this._fileMap = {}
                    },
                    uploadFlash: function(c) {
                        this.onBegin(this.getFileList());
                        c = c || {};
                        c.returnType = "F";
                        c.uploadType = this.uploadType;
                        this.flashMovie.doUpload(c)
                    },
                    _change: function(c) {
                        this._files = this._files.concat(c);
                        e.forEach(c, function(b) {
                            b.bytesLoaded = 0;
                            b.bytesTotal = b.size;
                            this._fileMap[b.name + "_" + b.size] = b
                        }, this);
                        this.onChange(this._files);
                        this.onFileChange(c)
                    },
                    _complete: function(c) {
                        this._getCustomEvent().type = "load";
                        this.onComplete(c)
                    },
                    _progress: function(c) {
                        this._fileMap[c.name + "_" + c.bytesTotal].bytesLoaded = c.bytesLoaded;
                        var b = this._getCustomEvent();
                        this.onFileProgress(c);
                        this.onProgress(b)
                    },
                    _error: function(c) {
                        this.onError(c)
                    },
                    _onFlashBlur: function(c) {},
                    _getCustomEvent: function() {
                        var c = {
                            bytesLoaded: 0,
                            bytesTotal: 0,
                            type: "progress",
                            timeStamp: (new Date).getTime()
                        }, b;
                        for (b in this._fileMap)
                            c.bytesTotal += this._fileMap[b].bytesTotal,
                            c.bytesLoaded += this._fileMap[b].bytesLoaded;
                        c.decimal = c.bytesLoaded / c.bytesTotal;
                        c.percent = Math.ceil(c.bytesLoaded / c.bytesTotal * 100) + "%";
                        return c
                    },
                    _connectFlash: function() {
                        this._subs = [];
                        this._cons = [];
                        var c = f.hitch(this, function(b, a) {
                            this._subs.push(g.subscribe(this.id + b, this, a))
                        });
                        c("/filesSelected", "_change");
                        c("/filesUploaded", "_complete");
                        c("/filesProgress", "_progress");
                        c("/filesError", "_error");
                        c("/filesCanceled", "onCancel");
                        c("/stageBlur", "_onFlashBlur");
                        this.connect(this.domNode, "focus", function() {
                            this.flashMovie.focus();
                            this.flashMovie.doFocus()
                        });
                        0 <= this.tabIndex && m.set(this.domNode, "tabIndex", this.tabIndex)
                    },
                    _createFlashUploader: function() {
                        var c = this.btnSize.w
                          , b = this.btnSize.h;
                        if (c) {
                            var a = this.getUrl();
                            if (a) {
                                if (0 > a.toLowerCase().indexOf("http") && 0 != a.indexOf("/")) {
                                    var h = window.location.href.split("/");
                                    h.pop();
                                    h = h.join("/") + "/";
                                    a = h + a
                                }
                            } else
                                console.warn("Warning: no uploadUrl provided.");
                            this.inputNode = n.create("div", {
                                className: "dojoxFlashNode"
                            }, this.domNode, "first");
                            p.set(this.inputNode, {
                                position: "absolute",
                                top: "-2px",
                                width: c + "px",
                                height: b + "px",
                                opacity: 0
                            });
                            c = {
                                expressInstall: !0,
                                path: (this.swfPath.uri || this.swfPath) + (this.preventCache ? "?cb_" + (new Date).getTime() : ""),
                                width: c,
                                height: b,
                                allowScriptAccess: "always",
                                allowNetworking: "all",
                                vars: {
                                    uploadDataFieldName: this.flashFieldName || this.name + "Flash",
                                    uploadUrl: a,
                                    uploadOnSelect: this.uploadOnSelect,
                                    deferredUploading: this.deferredUploading || 0,
                                    selectMultipleFiles: this.multiple,
                                    id: this.id,
                                    isDebug: this.isDebug,
                                    noReturnCheck: this.skipServerCheck,
                                    serverTimeout: this.serverTimeout
                                },
                                params: {
                                    scale: "noscale",
                                    wmode: "opaque",
                                    allowScriptAccess: "always",
                                    allowNetworking: "all"
                                }
                            };
                            this.flashObject = new d(c,this.inputNode);
                            this.flashObject.onError = f.hitch(function(a) {
                                console.error("Flash Error: " + a)
                            });
                            this.flashObject.onReady = f.hitch(this, function() {
                                this.onReady(this)
                            });
                            this.flashObject.onLoad = f.hitch(this, function(a) {
                                this.flashMovie = a;
                                this.flashReady = !0;
                                this.onLoad(this)
                            });
                            this._connectFlash()
                        } else
                            setTimeout(dojo.hitch(this, function() {
                                this._getButtonStyle(this.domNode);
                                this._createFlashUploader()
                            }), 200)
                    }
                })
            })
        },
        "dojox/form/nls/Uploader": function() {
            define({
                root: {
                    label: "Select Files..."
                },
                bs: !0,
                mk: !0,
                sr: !0,
                zh: !0,
                "zh-tw": !0,
                uk: !0,
                tr: !0,
                th: !0,
                sv: !0,
                sl: !0,
                sk: !0,
                ru: !0,
                ro: !0,
                pt: !0,
                pl: !0,
                nl: !0,
                nb: !0,
                ko: !0,
                kk: !0,
                ja: !0,
                it: !0,
                id: !0,
                hu: !0,
                hr: !0,
                he: !0,
                fr: !0,
                fi: !0,
                es: !0,
                el: !0,
                eu: !0,
                de: !0,
                da: !0,
                cs: !0,
                ca: !0,
                bg: !0
            })
        },
        "dojox/form/nls/zh/Uploader": function() {
            define({
                label: "\u9009\u62e9\u6587\u4ef6..."
            })
        },
        "dojox/form/nls/zh/CheckedMultiSelect": function() {
            define({
                invalidMessage: "\u5fc5\u987b\u81f3\u5c11\u9009\u62e9\u4e00\u9879\u3002",
                multiSelectLabelText: "\u9009\u62e9\u4e86 {num} \u4e2a\u9879"
            })
        },
        "dojox/form/nls/zh/Uploader": function() {
            define({
                label: "\u9009\u62e9\u6587\u4ef6..."
            })
        },
        "dojox/gesture/Base": function() {
            define("dojo/_base/kernel dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/dom dojo/on dojo/touch dojo/has ../main".split(" "), function(q, p, n, m, l, k, g, f, e) {
                q.experimental("dojox.gesture.Base");
                m.getObject("gesture", !0, e);
                return p(null, {
                    defaultEvent: " ",
                    subEvents: [],
                    touchOnly: !1,
                    _elements: null,
                    constructor: function(d) {
                        m.mixin(this, d);
                        this.init()
                    },
                    init: function() {
                        this._elements = [];
                        if (!f("touch") && this.touchOnly)
                            console.warn("Gestures:[", this.defaultEvent, "] is only supported on touch devices!");
                        else {
                            var d = this.defaultEvent;
                            this.call = this._handle(d);
                            this._events = [d];
                            n.forEach(this.subEvents, function(c) {
                                this[c] = this._handle(d + "." + c);
                                this._events.push(d + "." + c)
                            }, this)
                        }
                    },
                    _handle: function(d) {
                        var c = this;
                        return function(b, a) {
                            var h = arguments;
                            2 < h.length && (b = h[1],
                            a = h[2]);
                            if (b && (b.nodeType || b.attachEvent || b.addEventListener)) {
                                var e = c._add(b, d, a);
                                return {
                                    remove: function() {
                                        e.remove();
                                        c._remove(b, d)
                                    }
                                }
                            }
                            return k(b, d, a)
                        }
                    },
                    _add: function(d, c, b) {
                        var a = this._getGestureElement(d);
                        if (!a) {
                            var a = {
                                target: d,
                                data: {},
                                handles: {}
                            }
                              , h = m.hitch(this, "_process", a, "press")
                              , e = m.hitch(this, "_process", a, "move")
                              , t = m.hitch(this, "_process", a, "release")
                              , f = m.hitch(this, "_process", a, "cancel")
                              , l = a.handles;
                            this.touchOnly ? (l.press = k(d, "touchstart", h),
                            l.move = k(d, "touchmove", e),
                            l.release = k(d, "touchend", t),
                            l.cancel = k(d, "touchcancel", f)) : (l.press = g.press(d, h),
                            l.move = g.move(d, e),
                            l.release = g.release(d, t),
                            l.cancel = g.cancel(d, f));
                            this._elements.push(a)
                        }
                        a.handles[c] = a.handles[c] ? ++a.handles[c] : 1;
                        return k(d, c, b)
                    },
                    _getGestureElement: function(d) {
                        for (var c = 0, b; c < this._elements.length; c++)
                            if (b = this._elements[c],
                            b.target === d)
                                return b
                    },
                    _process: function(d, c, b) {
                        b._locking = b._locking || {};
                        b._locking[this.defaultEvent] || this.isLocked(b.currentTarget) || ("INPUT" == b.target.tagName && "radio" != b.target.type && "checkbox" != b.target.type || "TEXTAREA" == b.target.tagName || b.preventDefault(),
                        b._locking[this.defaultEvent] = !0,
                        this[c](d.data, b))
                    },
                    press: function(d, c) {},
                    move: function(d, c) {},
                    release: function(d, c) {},
                    cancel: function(d, c) {},
                    fire: function(d, c) {
                        d && c && (c.bubbles = !0,
                        c.cancelable = !0,
                        k.emit(d, c.type, c))
                    },
                    _remove: function(d, c) {
                        var b = this._getGestureElement(d);
                        if (b && b.handles) {
                            b.handles[c]--;
                            var a = b.handles;
                            n.some(this._events, function(b) {
                                return 0 < a[b]
                            }) || (this._cleanHandles(a),
                            b = n.indexOf(this._elements, b),
                            0 <= b && this._elements.splice(b, 1))
                        }
                    },
                    _cleanHandles: function(d) {
                        for (var c in d)
                            d[c].remove && d[c].remove(),
                            delete d[c]
                    },
                    lock: function(d) {
                        this._lock = d
                    },
                    unLock: function() {
                        this._lock = null
                    },
                    isLocked: function(d) {
                        return this._lock && d ? this._lock !== d && l.isDescendant(d, this._lock) : !1
                    },
                    destroy: function() {
                        n.forEach(this._elements, function(d) {
                            this._cleanHandles(d.handles)
                        }, this);
                        this._elements = null
                    }
                })
            })
        },
        "dojox/main": function() {
            define(["dojo/_base/kernel"], function(q) {
                return q.dojox
            })
        },
        "dojox/gesture/tap": function() {
            define(["dojo/_base/kernel", "dojo/_base/declare", "dojo/_base/lang", "./Base", "../main"], function(q, p, n, m, l) {
                q.experimental("dojox.gesture.tap");
                q = p(m, {
                    defaultEvent: "tap",
                    subEvents: ["hold", "doubletap"],
                    holdThreshold: 500,
                    doubleTapTimeout: 250,
                    tapRadius: 10,
                    press: function(k, g) {
                        if (g.touches && 2 <= g.touches.length)
                            clearTimeout(k.tapTimeOut),
                            delete k.context;
                        else {
                            var f = g.target;
                            this._initTap(k, g);
                            k.tapTimeOut = setTimeout(n.hitch(this, function() {
                                this._isTap(k, g) && this.fire(f, {
                                    type: "tap.hold"
                                });
                                delete k.context
                            }), this.holdThreshold)
                        }
                    },
                    release: function(k, g) {
                        if (k.context && this._isTap(k, g))
                            switch (k.context.c) {
                            case 1:
                                this.fire(g.target, {
                                    type: "tap"
                                });
                                break;
                            case 2:
                                this.fire(g.target, {
                                    type: "tap.doubletap"
                                })
                            }
                        clearTimeout(k.tapTimeOut)
                    },
                    _initTap: function(k, g) {
                        k.context || (k.context = {
                            x: 0,
                            y: 0,
                            t: 0,
                            c: 0
                        });
                        var f = (new Date).getTime();
                        f - k.context.t <= this.doubleTapTimeout ? k.context.c++ : (k.context.c = 1,
                        k.context.x = g.screenX,
                        k.context.y = g.screenY);
                        k.context.t = f
                    },
                    _isTap: function(k, g) {
                        if (!k.context)
                            return !1;
                        var f = Math.abs(k.context.y - g.screenY);
                        return Math.abs(k.context.x - g.screenX) <= this.tapRadius && f <= this.tapRadius
                    }
                });
                l.gesture.tap = new q;
                l.gesture.tap.Tap = q;
                return l.gesture.tap
            })
        },
        "dojox/html/ellipsis": function() {
            define("dojox/html/ellipsis", ["dojo/_base/kernel", "dojo/_base/lang", "dojo/_base/array", "dojo/_base/Color", "dojo/colors"], function(q) {
                if (7 > q.isFF) {
                    var p = 1;
                    "dojoxFFEllipsisDelay"in q.config && (p = Number(q.config.dojoxFFEllipsisDelay),
                    isNaN(p) && (p = 1));
                    try {
                        var n = function() {
                            var a = document.createElementNS("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul", "window")
                              , b = document.createElementNS("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul", "description");
                            b.setAttribute("crop", "end");
                            a.appendChild(b);
                            return function(b) {
                                var c = a.cloneNode(!0);
                                c.firstChild.setAttribute("value", b.textContent);
                                b.innerHTML = "";
                                b.appendChild(c)
                            }
                        }()
                    } catch (r) {}
                    var m = q.create, l = q.doc, k = q.place, g = m("iframe", {
                        className: "dojoxEllipsisIFrame",
                        src: "javascript:'\x3chtml\x3e\x3chead\x3e\x3cscript\x3eif(\"loadFirebugConsole\" in window){window.loadFirebugConsole();}\x3c/script\x3e\x3c/head\x3e\x3cbody\x3e\x3c/body\x3e\x3c/html\x3e'",
                        style: {
                            display: "none"
                        }
                    }), f = function(a, b) {
                        if (!a.collapsed)
                            if (0 < b) {
                                do
                                    f(a),
                                    b--;
                                while (b)
                            } else if (3 == a.endContainer.nodeType && 0 < a.endOffset)
                                a.setEnd(a.endContainer, a.endOffset - 1);
                            else if (3 == a.endContainer.nodeType)
                                a.setEndBefore(a.endContainer),
                                f(a);
                            else if (a.endOffset && a.endContainer.childNodes.length >= a.endOffset) {
                                var c = a.endContainer.childNodes[a.endOffset - 1];
                                3 == c.nodeType ? a.setEnd(c, c.length - 1) : (c.childNodes.length ? a.setEnd(c, c.childNodes.length) : a.setEndBefore(c),
                                f(a))
                            } else
                                a.setEndBefore(a.endContainer),
                                f(a)
                    }, e = function(a) {
                        var b = m("div", {
                            className: "dojoxEllipsisContainer"
                        })
                          , c = m("div", {
                            className: "dojoxEllipsisShown",
                            style: {
                                display: "none"
                            }
                        });
                        a.parentNode.replaceChild(b, a);
                        b.appendChild(a);
                        b.appendChild(c);
                        var h = g.cloneNode(!0)
                          , d = a.style
                          , e = c.style
                          , r = function() {
                            d.display = "";
                            e.display = "none";
                            if (!(a.scrollWidth <= a.offsetWidth)) {
                                var b = l.createRange();
                                b.selectNodeContents(a);
                                d.display = "none";
                                e.display = "";
                                var h = !1;
                                do {
                                    var r = 1;
                                    k(b.cloneContents(), c, "only");
                                    var t = c.scrollWidth
                                      , g = c.offsetWidth
                                      , h = t <= g
                                      , t = 1 - 1 * g / t;
                                    0 < t && (r = Math.max(Math.round(c.textContent.length * t) - 1, 1));
                                    f(b, r)
                                } while (!b.collapsed && !h)
                            }
                        };
                        h.onload = function() {
                            h.contentWindow.onresize = r;
                            r()
                        }
                        ;
                        b.appendChild(h)
                    }, d = q.hasClass, c = q.doc, b, a, h;
                    c.querySelectorAll ? (b = c,
                    a = "querySelectorAll",
                    h = ".dojoxEllipsis") : c.getElementsByClassName ? (b = c,
                    a = "getElementsByClassName",
                    h = "dojoxEllipsis") : (b = q,
                    a = "query",
                    h = ".dojoxEllipsis");
                    fx = function() {
                        q.forEach(b[a].apply(b, [h]), function(a) {
                            a && !a._djx_ellipsis_done && (a._djx_ellipsis_done = !0,
                            n && a.textContent == a.innerHTML && !d(a, "dojoxEllipsisSelectable") ? n(a) : e(a))
                        })
                    }
                    ;
                    q.addOnLoad(function() {
                        var a = null
                          , b = null
                          , c = function() {
                            b && (q.disconnect(b),
                            b = null);
                            a && clearTimeout(a);
                            a = setTimeout(function() {
                                a = null;
                                fx();
                                b = q.connect(q.body(), "DOMSubtreeModified", c)
                            }, p)
                        };
                        c()
                    })
                }
            })
        },
        "dojox/html/entities": function() {
            define(["dojo/_base/lang"], function(q) {
                var p = q.getObject("dojox.html.entities", !0)
                  , n = function(l, k) {
                    var g, f;
                    if (k._encCache && k._encCache.regexp && k._encCache.mapper && k.length == k._encCache.length)
                        g = k._encCache.mapper,
                        f = k._encCache.regexp;
                    else {
                        g = {};
                        f = ["["];
                        var e;
                        for (e = 0; e < k.length; e++)
                            g[k[e][0]] = "\x26" + k[e][1] + ";",
                            f.push(k[e][0]);
                        f.push("]");
                        f = new RegExp(f.join(""),"g");
                        k._encCache = {
                            mapper: g,
                            regexp: f,
                            length: k.length
                        }
                    }
                    return l = l.replace(f, function(d) {
                        return g[d]
                    })
                }
                  , m = function(l, k) {
                    var g, f;
                    if (k._decCache && k._decCache.regexp && k._decCache.mapper && k.length == k._decCache.length)
                        g = k._decCache.mapper,
                        f = k._decCache.regexp;
                    else {
                        g = {};
                        f = ["("];
                        var e;
                        for (e = 0; e < k.length; e++) {
                            var d = "\x26" + k[e][1] + ";";
                            e && f.push("|");
                            g[d] = k[e][0];
                            f.push(d)
                        }
                        f.push(")");
                        f = new RegExp(f.join(""),"g");
                        k._decCache = {
                            mapper: g,
                            regexp: f,
                            length: k.length
                        }
                    }
                    return l = l.replace(f, function(c) {
                        return g[c]
                    })
                };
                p.html = [["\x26", "amp"], ['"', "quot"], ["\x3c", "lt"], ["\x3e", "gt"], ["\u00a0", "nbsp"]];
                p.latin = [["\u00a1", "iexcl"], ["\u00a2", "cent"], ["\u00a3", "pound"], ["\u20ac", "euro"], ["\u00a4", "curren"], ["\u00a5", "yen"], ["\u00a6", "brvbar"], ["\u00a7", "sect"], ["\u00a8", "uml"], ["\u00a9", "copy"], ["\u00aa", "ordf"], ["\u00ab", "laquo"], ["\u00ac", "not"], ["\u00ad", "shy"], ["\u00ae", "reg"], ["\u00af", "macr"], ["\u00b0", "deg"], ["\u00b1", "plusmn"], ["\u00b2", "sup2"], ["\u00b3", "sup3"], ["\u00b4", "acute"], ["\u00b5", "micro"], ["\u00b6", "para"], ["\u00b7", "middot"], ["\u00b8", "cedil"], ["\u00b9", "sup1"], ["\u00ba", "ordm"], ["\u00bb", "raquo"], ["\u00bc", "frac14"], ["\u00bd", "frac12"], ["\u00be", "frac34"], ["\u00bf", "iquest"], ["\u00c0", "Agrave"], ["\u00c1", "Aacute"], ["\u00c2", "Acirc"], ["\u00c3", "Atilde"], ["\u00c4", "Auml"], ["\u00c5", "Aring"], ["\u00c6", "AElig"], ["\u00c7", "Ccedil"], ["\u00c8", "Egrave"], ["\u00c9", "Eacute"], ["\u00ca", "Ecirc"], ["\u00cb", "Euml"], ["\u00cc", "Igrave"], ["\u00cd", "Iacute"], ["\u00ce", "Icirc"], ["\u00cf", "Iuml"], ["\u00d0", "ETH"], ["\u00d1", "Ntilde"], ["\u00d2", "Ograve"], ["\u00d3", "Oacute"], ["\u00d4", "Ocirc"], ["\u00d5", "Otilde"], ["\u00d6", "Ouml"], ["\u00d7", "times"], ["\u00d8", "Oslash"], ["\u00d9", "Ugrave"], ["\u00da", "Uacute"], ["\u00db", "Ucirc"], ["\u00dc", "Uuml"], ["\u00dd", "Yacute"], ["\u00de", "THORN"], ["\u00df", "szlig"], ["\u00e0", "agrave"], ["\u00e1", "aacute"], ["\u00e2", "acirc"], ["\u00e3", "atilde"], ["\u00e4", "auml"], ["\u00e5", "aring"], ["\u00e6", "aelig"], ["\u00e7", "ccedil"], ["\u00e8", "egrave"], ["\u00e9", "eacute"], ["\u00ea", "ecirc"], ["\u00eb", "euml"], ["\u00ec", "igrave"], ["\u00ed", "iacute"], ["\u00ee", "icirc"], ["\u00ef", "iuml"], ["\u00f0", "eth"], ["\u00f1", "ntilde"], ["\u00f2", "ograve"], ["\u00f3", "oacute"], ["\u00f4", "ocirc"], ["\u00f5", "otilde"], ["\u00f6", "ouml"], ["\u00f7", "divide"], ["\u00f8", "oslash"], ["\u00f9", "ugrave"], ["\u00fa", "uacute"], ["\u00fb", "ucirc"], ["\u00fc", "uuml"], ["\u00fd", "yacute"], ["\u00fe", "thorn"], ["\u00ff", "yuml"], ["\u0192", "fnof"], ["\u0391", "Alpha"], ["\u0392", "Beta"], ["\u0393", "Gamma"], ["\u0394", "Delta"], ["\u0395", "Epsilon"], ["\u0396", "Zeta"], ["\u0397", "Eta"], ["\u0398", "Theta"], ["\u0399", "Iota"], ["\u039a", "Kappa"], ["\u039b", "Lambda"], ["\u039c", "Mu"], ["\u039d", "Nu"], ["\u039e", "Xi"], ["\u039f", "Omicron"], ["\u03a0", "Pi"], ["\u03a1", "Rho"], ["\u03a3", "Sigma"], ["\u03a4", "Tau"], ["\u03a5", "Upsilon"], ["\u03a6", "Phi"], ["\u03a7", "Chi"], ["\u03a8", "Psi"], ["\u03a9", "Omega"], ["\u03b1", "alpha"], ["\u03b2", "beta"], ["\u03b3", "gamma"], ["\u03b4", "delta"], ["\u03b5", "epsilon"], ["\u03b6", "zeta"], ["\u03b7", "eta"], ["\u03b8", "theta"], ["\u03b9", "iota"], ["\u03ba", "kappa"], ["\u03bb", "lambda"], ["\u03bc", "mu"], ["\u03bd", "nu"], ["\u03be", "xi"], ["\u03bf", "omicron"], ["\u03c0", "pi"], ["\u03c1", "rho"], ["\u03c2", "sigmaf"], ["\u03c3", "sigma"], ["\u03c4", "tau"], ["\u03c5", "upsilon"], ["\u03c6", "phi"], ["\u03c7", "chi"], ["\u03c8", "psi"], ["\u03c9", "omega"], ["\u03d1", "thetasym"], ["\u03d2", "upsih"], ["\u03d6", "piv"], ["\u2022", "bull"], ["\u2026", "hellip"], ["\u2032", "prime"], ["\u2033", "Prime"], ["\u203e", "oline"], ["\u2044", "frasl"], ["\u2118", "weierp"], ["\u2111", "image"], ["\u211c", "real"], ["\u2122", "trade"], ["\u2135", "alefsym"], ["\u2190", "larr"], ["\u2191", "uarr"], ["\u2192", "rarr"], ["\u2193", "darr"], ["\u2194", "harr"], ["\u21b5", "crarr"], ["\u21d0", "lArr"], ["\u21d1", "uArr"], ["\u21d2", "rArr"], ["\u21d3", "dArr"], ["\u21d4", "hArr"], ["\u2200", "forall"], ["\u2202", "part"], ["\u2203", "exist"], ["\u2205", "empty"], ["\u2207", "nabla"], ["\u2208", "isin"], ["\u2209", "notin"], ["\u220b", "ni"], ["\u220f", "prod"], ["\u2211", "sum"], ["\u2212", "minus"], ["\u2217", "lowast"], ["\u221a", "radic"], ["\u221d", "prop"], ["\u221e", "infin"], ["\u2220", "ang"], ["\u2227", "and"], ["\u2228", "or"], ["\u2229", "cap"], ["\u222a", "cup"], ["\u222b", "int"], ["\u2234", "there4"], ["\u223c", "sim"], ["\u2245", "cong"], ["\u2248", "asymp"], ["\u2260", "ne"], ["\u2261", "equiv"], ["\u2264", "le"], ["\u2265", "ge"], ["\u2282", "sub"], ["\u2283", "sup"], ["\u2284", "nsub"], ["\u2286", "sube"], ["\u2287", "supe"], ["\u2295", "oplus"], ["\u2297", "otimes"], ["\u22a5", "perp"], ["\u22c5", "sdot"], ["\u2308", "lceil"], ["\u2309", "rceil"], ["\u230a", "lfloor"], ["\u230b", "rfloor"], ["\u2329", "lang"], ["\u232a", "rang"], ["\u25ca", "loz"], ["\u2660", "spades"], ["\u2663", "clubs"], ["\u2665", "hearts"], ["\u2666", "diams"], ["\u0152", "OElig"], ["\u0153", "oelig"], ["\u0160", "Scaron"], ["\u0161", "scaron"], ["\u0178", "Yuml"], ["\u02c6", "circ"], ["\u02dc", "tilde"], ["\u2002", "ensp"], ["\u2003", "emsp"], ["\u2009", "thinsp"], ["\u200c", "zwnj"], ["\u200d", "zwj"], ["\u200e", "lrm"], ["\u200f", "rlm"], ["\u2013", "ndash"], ["\u2014", "mdash"], ["\u2018", "lsquo"], ["\u2019", "rsquo"], ["\u201a", "sbquo"], ["\u201c", "ldquo"], ["\u201d", "rdquo"], ["\u201e", "bdquo"], ["\u2020", "dagger"], ["\u2021", "Dagger"], ["\u2030", "permil"], ["\u2039", "lsaquo"], ["\u203a", "rsaquo"]];
                p.encode = function(l, k) {
                    l && (k ? l = n(l, k) : (l = n(l, p.html),
                    l = n(l, p.latin)));
                    return l
                }
                ;
                p.decode = function(l, k) {
                    l && (k ? l = m(l, k) : (l = m(l, p.html),
                    l = m(l, p.latin)));
                    return l
                }
                ;
                return p
            })
        },
        "dojox/html/metrics": function() {
            define("dojo/_base/kernel dojo/_base/lang dojo/_base/sniff dojo/ready dojo/_base/unload dojo/_base/window dojo/dom-geometry".split(" "), function(q, p, n, m, l, k, g) {
                var f = p.getObject("dojox.html.metrics", !0)
                  , e = p.getObject("dojox");
                f.getFontMeasurements = function() {
                    var a = {
                        "1em": 0,
                        "1ex": 0,
                        "100%": 0,
                        "12pt": 0,
                        "16px": 0,
                        "xx-small": 0,
                        "x-small": 0,
                        small: 0,
                        medium: 0,
                        large: 0,
                        "x-large": 0,
                        "xx-large": 0
                    }, b;
                    n("ie") && (b = k.doc.documentElement.style.fontSize || "",
                    b || (k.doc.documentElement.style.fontSize = "100%"));
                    var c = k.doc.createElement("div")
                      , h = c.style;
                    h.position = "absolute";
                    h.left = "-100px";
                    h.top = "0";
                    h.width = "30px";
                    h.height = "1000em";
                    h.borderWidth = "0";
                    h.margin = "0";
                    h.padding = "0";
                    h.outline = "0";
                    h.lineHeight = "1";
                    h.overflow = "hidden";
                    k.body().appendChild(c);
                    for (var d in a)
                        h.fontSize = d,
                        a[d] = 16 * Math.round(12 * c.offsetHeight / 16) / 12 / 1E3;
                    n("ie") && (k.doc.documentElement.style.fontSize = b);
                    k.body().removeChild(c);
                    c = null;
                    return a
                }
                ;
                var d = null;
                f.getCachedFontMeasurements = function(a) {
                    if (a || !d)
                        d = f.getFontMeasurements();
                    return d
                }
                ;
                var c = null
                  , b = {};
                f.getTextBox = function(a, h, d) {
                    var e, r;
                    if (c)
                        e = c;
                    else {
                        e = c = k.doc.createElement("div");
                        var t = k.doc.createElement("div");
                        t.appendChild(e);
                        r = t.style;
                        r.overflow = "scroll";
                        r.position = "absolute";
                        r.left = "0px";
                        r.top = "-10000px";
                        r.width = "1px";
                        r.height = "1px";
                        r.visibility = "hidden";
                        r.borderWidth = "0";
                        r.margin = "0";
                        r.padding = "0";
                        r.outline = "0";
                        k.body().appendChild(t)
                    }
                    e.className = "";
                    r = e.style;
                    r.borderWidth = "0";
                    r.margin = "0";
                    r.padding = "0";
                    r.outline = "0";
                    if (1 < arguments.length && h)
                        for (var f in h)
                            f in b || (r[f] = h[f]);
                    2 < arguments.length && d && (e.className = d);
                    e.innerHTML = a;
                    r = g.position(e);
                    r.w = e.parentNode.scrollWidth;
                    return r
                }
                ;
                var a = 16
                  , h = 16;
                f.getScrollbar = function() {
                    return {
                        w: a,
                        h: h
                    }
                }
                ;
                f._fontResizeNode = null;
                f.initOnFontResize = function(a) {
                    var b = f._fontResizeNode = k.doc.createElement("iframe");
                    a = b.style;
                    a.position = "absolute";
                    a.width = "5em";
                    a.height = "10em";
                    a.top = "-10000px";
                    a.display = "none";
                    n("ie") ? b.onreadystatechange = function() {
                        "complete" == b.contentWindow.document.readyState && (b.onresize = b.contentWindow.parent[e._scopeName].html.metrics._fontresize)
                    }
                    : b.onload = function() {
                        b.contentWindow.onresize = b.contentWindow.parent[e._scopeName].html.metrics._fontresize
                    }
                    ;
                    b.setAttribute("src", "javascript:'\x3chtml\x3e\x3chead\x3e\x3cscript\x3eif(\"loadFirebugConsole\" in window){window.loadFirebugConsole();}\x3c/script\x3e\x3c/head\x3e\x3cbody\x3e\x3c/body\x3e\x3c/html\x3e'");
                    k.body().appendChild(b);
                    f.initOnFontResize = function() {}
                }
                ;
                f.onFontResize = function() {}
                ;
                f._fontresize = function() {
                    f.onFontResize()
                }
                ;
                l.addOnUnload(function() {
                    var a = f._fontResizeNode;
                    a && (n("ie") && a.onresize ? a.onresize = null : a.contentWindow && a.contentWindow.onresize && (a.contentWindow.onresize = null),
                    f._fontResizeNode = null)
                });
                m(function() {
                    try {
                        var b = k.doc.createElement("div");
                        b.style.cssText = "top:0;left:0;width:100px;height:100px;overflow:scroll;position:absolute;visibility:hidden;";
                        k.body().appendChild(b);
                        a = b.offsetWidth - b.clientWidth;
                        h = b.offsetHeight - b.clientHeight;
                        k.body().removeChild(b);
                        delete b
                    } catch (t) {}
                    "fontSizeWatch"in q.config && q.config.fontSizeWatch && f.initOnFontResize()
                });
                return f
            })
        },
        "dojox/image/LightboxNano": function() {
            define("dojo/_base/lang dojo/_base/declare dojo/_base/array dojo/_base/fx dojo/dom dojo/dom-construct dojo/dom-geometry dojo/dom-style dojo/dom-class dojo/on dojo/query dojo/fx".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                getViewport = function() {
                    var a = "BackCompat" == document.compatMode ? document.body : document.documentElement
                      , b = g.docScroll();
                    return {
                        w: a.clientWidth,
                        h: a.clientHeight,
                        l: b.x,
                        t: b.y
                    }
                }
                ;
                return p("dojox.image.LightboxNano", null, {
                    href: "",
                    duration: 500,
                    preloadDelay: 5E3,
                    constructor: function(a, b) {
                        var c = this, h;
                        q.mixin(c, a);
                        if (b = c._node = l.byId(b))
                            /a/i.test(b.tagName) || (h = k.create("a", {
                                href: c.href,
                                "class": b.className
                            }, b, "after"),
                            b.className = "",
                            h.appendChild(b),
                            b = h),
                            f.set(b, "position", "relative"),
                            k.create("div", {
                                "class": "nano-enlarge",
                                style: {
                                    position: "absolute",
                                    display: "none"
                                }
                            }, b),
                            l.setSelectable(b, !1),
                            c._onClickEvt = d(b, "click", q.hitch(c, "_load"));
                        c.href && setTimeout(function() {
                            (new Image).src = c.href;
                            c._hideLoading()
                        }, c.preloadDelay)
                    },
                    destroy: function() {
                        var a = this._connects || [];
                        a.push(this._onClickEvt);
                        n.forEach(a, function(a) {
                            a.remove()
                        });
                        k.destroy(this._node)
                    },
                    _load: function(a) {
                        a && a.preventDefault();
                        if (!this._loading) {
                            this._loading = !0;
                            this._reset();
                            a = this._img = k.create("img", {
                                "class": "nano-image nano-image-hidden"
                            }, document.body);
                            var b, e = this._loadingNode;
                            b = c("img", this._node)[0] || this._node;
                            var t = g.position(b, !0)
                              , u = g.getContentBox(b)
                              , l = g.getBorderExtents(b);
                            null == e && (this._loadingNode = e = k.create("div", {
                                "class": "nano-loading",
                                style: {
                                    position: "absolute",
                                    display: ""
                                }
                            }, this._node, "after"),
                            b = g.getMarginBox(e),
                            f.set(e, {
                                left: parseInt((u.w - b.w) / 2) + "px",
                                top: parseInt((u.h - b.h) / 2) + "px"
                            }));
                            u.x = t.x - 10 + l.l;
                            u.y = t.y - 10 + l.t;
                            this._start = u;
                            this._connects = [d(a, "load", q.hitch(this, "_show"))];
                            a.src = this.href
                        }
                    },
                    _hideLoading: function() {
                        this._loadingNode && f.set(this._loadingNode, "display", "none");
                        this._loadingNode = !1
                    },
                    _show: function() {
                        var a = getViewport()
                          , c = this._img.width
                          , r = this._img.height
                          , t = parseInt(.9 * (a.w - 20))
                          , g = parseInt(.9 * (a.h - 20))
                          , l = this._bg = k.create("div", {
                            "class": "nano-background",
                            style: {
                                opacity: 0
                            }
                        }, document.body);
                        this._loadingNode && this._hideLoading();
                        e.remove(this._img, "nano-image-hidden");
                        f.set(this._node, "visibility", "hidden");
                        this._loading = !1;
                        this._connects = this._connects.concat([d(document, "mousedown", q.hitch(this, "_hide")), d(document, "keypress", q.hitch(this, "_key")), d(window, "resize", q.hitch(this, "_sizeBg"))]);
                        c > t && (r = r * t / c,
                        c = t);
                        r > g && (c = c * g / r,
                        r = g);
                        this._end = {
                            x: (a.w - 20 - c) / 2 + a.l,
                            y: (a.h - 20 - r) / 2 + a.t,
                            w: c,
                            h: r
                        };
                        this._sizeBg();
                        b.combine([this._anim(this._img, this._coords(this._start, this._end)), this._anim(l, {
                            opacity: .5
                        })]).play()
                    },
                    _sizeBg: function() {
                        var a = document.documentElement;
                        f.set(this._bg, {
                            top: 0,
                            left: 0,
                            width: a.scrollWidth + "px",
                            height: a.scrollHeight + "px"
                        })
                    },
                    _key: function(a) {
                        a.preventDefault();
                        this._hide()
                    },
                    _coords: function(a, b) {
                        return {
                            left: {
                                start: a.x,
                                end: b.x
                            },
                            top: {
                                start: a.y,
                                end: b.y
                            },
                            width: {
                                start: a.w,
                                end: b.w
                            },
                            height: {
                                start: a.h,
                                end: b.h
                            }
                        }
                    },
                    _hide: function() {
                        n.forEach(this._connects, function(a) {
                            a.remove()
                        });
                        this._connects = [];
                        b.combine([this._anim(this._img, this._coords(this._end, this._start), "_reset"), this._anim(this._bg, {
                            opacity: 0
                        })]).play()
                    },
                    _reset: function() {
                        f.set(this._node, "visibility", "visible");
                        k.destroy(this._img);
                        k.destroy(this._bg);
                        this._img = this._bg = null;
                        this._node.focus()
                    },
                    _anim: function(a, b, c) {
                        return m.animateProperty({
                            node: a,
                            duration: this.duration,
                            properties: b,
                            onEnd: c ? q.hitch(this, c) : null
                        })
                    },
                    show: function(a) {
                        a = a || {};
                        this.href = a.href || this.href;
                        a = l.byId(a.origin);
                        var b = getViewport();
                        this._node = a || k.create("div", {
                            style: {
                                position: "absolute",
                                width: 0,
                                hieght: 0,
                                left: b.l + b.w / 2 + "px",
                                top: b.t + b.h / 2 + "px"
                            }
                        }, document.body);
                        this._load();
                        a || k.destroy(this._node)
                    }
                })
            })
        },
        "dojox/mobile/_css3": function() {
            define(["dojo/_base/window", "dojo/_base/array", "dojo/has"], function(q, p, n) {
                var m = []
                  , l = []
                  , k = q.doc.createElement("div").style
                  , g = ["webkit"];
                n.add("css3-animations", function(e, d, c) {
                    var b = c.style;
                    return void 0 !== b.animation && void 0 !== b.transition || p.some(g, function(a) {
                        return void 0 !== b[a + "Animation"] && void 0 !== b[a + "Transition"]
                    })
                });
                n.add("t17164", function(e, d, c) {
                    return void 0 !== c.style.transition && !("TransitionEvent"in window)
                });
                var f = {
                    name: function(e, d) {
                        var c = (d ? l : m)[e];
                        if (!c) {
                            if (/End|Start/.test(e))
                                var b = e.length - (e.match(/End/) ? 3 : 5)
                                  , a = e.substr(0, b)
                                  , h = this.name(a)
                                  , c = h == a ? e.toLowerCase() : h + e.substr(b);
                            else if ("keyframes" == e)
                                b = this.name("animation", d),
                                c = "animation" == b ? e : d ? b.replace(/animation/, "keyframes") : b.replace(/Animation/, "Keyframes");
                            else {
                                var r = d ? e.replace(/-(.)/g, function(a, b) {
                                    return b.toUpperCase()
                                }) : e;
                                void 0 === k[r] || n("t17164") ? (r = r.charAt(0).toUpperCase() + r.slice(1),
                                p.some(g, function(a) {
                                    void 0 !== k[a + r] && (c = d ? "-" + a + "-" + e : a + r)
                                })) : c = e
                            }
                            c || (c = e);
                            (d ? l : m)[e] = c
                        }
                        return c
                    },
                    add: function(e, d) {
                        for (var c in d)
                            d.hasOwnProperty(c) && (e[f.name(c)] = d[c]);
                        return e
                    }
                };
                return f
            })
        },
        "dojox/mobile/_maskUtils": function() {
            define(["dojo/_base/window", "dojo/dom-style", "./sniff"], function(q, p, n) {
                n.add("mask-image-css", function(l, k, g) {
                    return "function" === typeof k.getCSSCanvasContext && "undefined" !== typeof g.style.webkitMaskImage
                });
                n.add("mask-image", function() {
                    return n("mask-image-css") || n("svg")
                });
                var m = {};
                return {
                    createRoundMask: function(l, k, g, f, e, d, c, b, a, h) {
                        f = k + d + f;
                        var r = g + c + e;
                        if (n("mask-image-css"))
                            e = ("DojoMobileMask" + k + g + d + c + b + a).replace(/\./g, "_"),
                            m[e] || (m[e] = 1,
                            f = q.doc.getCSSCanvasContext("2d", e, f, r),
                            f.beginPath(),
                            b == a ? 2 == b && 5 == d ? (f.fillStyle = "rgba(0,0,0,0.5)",
                            f.fillRect(1, 0, 3, 2),
                            f.fillRect(0, 1, 5, 1),
                            f.fillRect(0, c - 2, 5, 1),
                            f.fillRect(1, c - 1, 3, 2),
                            f.fillStyle = "rgb(0,0,0)",
                            f.fillRect(0, 2, 5, c - 4)) : 2 == b && 5 == c ? (f.fillStyle = "rgba(0,0,0,0.5)",
                            f.fillRect(0, 1, 2, 3),
                            f.fillRect(1, 0, 1, 5),
                            f.fillRect(d - 2, 0, 1, 5),
                            f.fillRect(d - 1, 1, 2, 3),
                            f.fillStyle = "rgb(0,0,0)",
                            f.fillRect(2, 0, d - 4, 5)) : (f.fillStyle = "#000000",
                            f.moveTo(k + b, g),
                            f.arcTo(k, g, k, g + b, b),
                            f.lineTo(k, g + c - b),
                            f.arcTo(k, g + c, k + b, g + c, b),
                            f.lineTo(k + d - b, g + c),
                            f.arcTo(k + d, g + c, k + d, g + b, b),
                            f.lineTo(k + d, g + b),
                            f.arcTo(k + d, g, k + d - b, g, b)) : (c = Math.PI,
                            f.scale(1, a / b),
                            f.moveTo(k + b, g),
                            f.arc(k + b, g + b, b, 1.5 * c, .5 * c, !0),
                            f.lineTo(k + d - b, g + 2 * b),
                            f.arc(k + d - b, g + b, b, .5 * c, 1.5 * c, !0)),
                            f.closePath(),
                            f.fill()),
                            l.style.webkitMaskImage = "-webkit-canvas(" + e + ")";
                        else if (n("svg")) {
                            l._svgMask && l.removeChild(l._svgMask);
                            for (var t = null, u = l.parentNode; u && (!(t = p.getComputedStyle(u).backgroundColor) || "transparent" == t || t.match(/rgba\(.*,\s*0\s*\)/)); u = u.parentNode)
                                ;
                            u = q.doc.createElementNS("http://www.w3.org/2000/svg", "svg");
                            u.setAttribute("width", f);
                            u.setAttribute("height", r);
                            u.style.position = "absolute";
                            u.style.pointerEvents = "none";
                            u.style.opacity = "1";
                            u.style.zIndex = "2147483647";
                            r = q.doc.createElementNS("http://www.w3.org/2000/svg", "path");
                            h = h || 0;
                            b += h;
                            a += h;
                            k = " M" + (k + b - h) + "," + (g - h) + " a" + b + "," + a + " 0 0,0 " + -b + "," + a + " v" + -a + " h" + b + " Z M" + (k - h) + "," + (g + c - a + h) + " a" + b + "," + a + " 0 0,0 " + b + "," + a + " h" + -b + " v" + -a + " z M" + (k + d - b + h) + "," + (g + c + h) + " a" + b + "," + a + " 0 0,0 " + b + "," + -a + " v" + a + " h" + -b + " z M" + (k + d + h) + "," + (g + a - h) + " a" + b + "," + a + " 0 0,0 " + -b + "," + -a + " h" + b + " v" + a + " z";
                            0 < g && (k += " M0,0 h" + f + " v" + g + " h" + -f + " z");
                            0 < e && (k += " M0," + (g + c) + " h" + f + " v" + e + " h" + -f + " z");
                            r.setAttribute("d", k);
                            r.setAttribute("fill", t);
                            r.setAttribute("stroke", t);
                            r.style.opacity = "1";
                            u.appendChild(r);
                            l._svgMask = u;
                            l.appendChild(u)
                        }
                    }
                }
            })
        },
        "dojox/mobile/sniff": function() {
            define(["dojo/_base/kernel", "dojo/sniff"], function(q, p) {
                q.deprecated("dojox/mobile/sniff", "Use dojo/sniff instead", "2.0");
                p.add("iphone", p("ios"));
                return p
            })
        },
        "dojox/mobile/scrollable": function() {
            define("dojo/_base/kernel dojo/_base/connect dojo/_base/event dojo/_base/lang dojo/_base/window dojo/dom-class dojo/dom-construct dojo/dom-style dojo/dom-geometry dojo/touch dijit/registry dijit/form/_TextBoxMixin ./sniff ./_css3 ./_maskUtils ./common dojo/_base/declare dojo/has!dojo-bidi?dojox/mobile/bidi/Scrollable".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x) {
                var y = m.getObject("dojox.mobile", !0);
                a.add("translate3d", function() {
                    if (a("css3-animations")) {
                        var b = l.doc.createElement("div");
                        b.style[h.name("transform")] = "translate3d(0px,1px,0px)";
                        l.doc.documentElement.appendChild(b);
                        var c = l.doc.defaultView.getComputedStyle(b, "")[h.name("transform", !0)]
                          , c = c && 0 === c.indexOf("matrix");
                        l.doc.documentElement.removeChild(b);
                        return c
                    }
                });
                var z = function() {};
                m.extend(z, {
                    fixedHeaderHeight: 0,
                    fixedFooterHeight: 0,
                    isLocalFooter: !1,
                    scrollBar: !0,
                    scrollDir: "v",
                    weight: .6,
                    fadeScrollBar: !0,
                    disableFlashScrollBar: !1,
                    threshold: 4,
                    constraint: !0,
                    touchNode: null,
                    propagatable: !0,
                    dirLock: !1,
                    height: "",
                    scrollType: 0,
                    _parentPadBorderExtentsBottom: 0,
                    _moved: !1,
                    init: function(b) {
                        if (b)
                            for (var c in b)
                                b.hasOwnProperty(c) && (this[c] = "domNode" != c && "containerNode" != c || "string" != typeof b[c] ? b[c] : l.doc.getElementById(b[c]));
                        t._setTouchAction(this.domNode, "none");
                        this.touchNode = this.touchNode || this.containerNode;
                        this._v = -1 != this.scrollDir.indexOf("v");
                        this._h = -1 != this.scrollDir.indexOf("h");
                        this._f = "f" == this.scrollDir;
                        this._ch = [];
                        this._ch.push(p.connect(this.touchNode, d.press, this, "onTouchStart"));
                        if (a("css3-animations"))
                            if (this._useTopLeft = this.scrollType ? 2 === this.scrollType : !1,
                            this._useTopLeft || (this._useTransformTransition = this.scrollType ? 3 === this.scrollType : 6 <= a("ios") || a("android") || a("bb")),
                            this._useTopLeft)
                                this._ch.push(p.connect(this.containerNode, h.name("transitionEnd"), this, "onFlickAnimationEnd"));
                            else {
                                if (this._useTransformTransition)
                                    this._ch.push(p.connect(this.containerNode, h.name("transitionEnd"), this, "onFlickAnimationEnd"));
                                else
                                    for (this._ch.push(p.connect(this.containerNode, h.name("animationEnd"), this, "onFlickAnimationEnd")),
                                    this._ch.push(p.connect(this.containerNode, h.name("animationStart"), this, "onFlickAnimationStart")),
                                    b = 0; 3 > b; b++)
                                        this.setKeyframes(null, null, b);
                                a("translate3d") && f.set(this.containerNode, h.name("transform"), "translate3d(0,0,0)")
                            }
                        this._speed = {
                            x: 0,
                            y: 0
                        };
                        this._appFooterHeight = 0;
                        this.isTopLevel() && !this.noResize && this.resize();
                        var e = this;
                        setTimeout(function() {
                            e.flashScrollBar()
                        }, 600);
                        l.global.addEventListener && (this._onScroll = function(a) {
                            if (e.domNode && "none" !== e.domNode.style.display) {
                                a = e.domNode.scrollTop;
                                var b = e.domNode.scrollLeft, c;
                                if (0 < a || 0 < b)
                                    c = e.getPos(),
                                    e.domNode.scrollLeft = 0,
                                    e.domNode.scrollTop = 0,
                                    e.scrollTo({
                                        x: c.x - b,
                                        y: c.y - a
                                    })
                            }
                        }
                        ,
                        l.global.addEventListener("scroll", this._onScroll, !0));
                        !this.disableTouchScroll && this.domNode.addEventListener && (this._onFocusScroll = function(a) {
                            if (e.domNode && "none" !== e.domNode.style.display) {
                                a = l.doc.activeElement;
                                var b, c;
                                a && (b = a.getBoundingClientRect(),
                                c = e.domNode.getBoundingClientRect(),
                                b.height < e.getDim().d.h && (b.top < c.top + e.fixedHeaderHeight ? e.scrollIntoView(a, !0) : b.top + b.height > c.top + c.height - e.fixedFooterHeight && e.scrollIntoView(a, !1)))
                            }
                        }
                        ,
                        this.domNode.addEventListener("focus", this._onFocusScroll, !0))
                    },
                    isTopLevel: function() {
                        return !0
                    },
                    cleanup: function() {
                        if (this._ch) {
                            for (var a = 0; a < this._ch.length; a++)
                                p.disconnect(this._ch[a]);
                            this._ch = null
                        }
                        this._onScroll && l.global.removeEventListener && (l.global.removeEventListener("scroll", this._onScroll, !0),
                        this._onScroll = null);
                        this._onFocusScroll && this.domNode.removeEventListener && (this.domNode.removeEventListener("focus", this._onFocusScroll, !0),
                        this._onFocusScroll = null)
                    },
                    findDisp: function(a) {
                        if (!a.parentNode)
                            return null;
                        if (1 === a.nodeType && k.contains(a, "mblSwapView") && "none" !== a.style.display)
                            return a;
                        for (var b = a.parentNode.childNodes, c = 0; c < b.length; c++) {
                            var h = b[c];
                            if (1 === h.nodeType && k.contains(h, "mblView") && "none" !== h.style.display)
                                return h
                        }
                        return a
                    },
                    getScreenSize: function() {
                        return {
                            h: l.global.innerHeight || l.doc.documentElement.clientHeight || l.doc.documentElement.offsetHeight,
                            w: l.global.innerWidth || l.doc.documentElement.clientWidth || l.doc.documentElement.offsetWidth
                        }
                    },
                    resize: function(a) {
                        this._appFooterHeight = this._fixedAppFooter ? this._fixedAppFooter.offsetHeight : 0;
                        this.isLocalHeader && (this.containerNode.style.marginTop = this.fixedHeaderHeight + "px");
                        var b = 0;
                        for (a = this.domNode; a && "BODY" != a.tagName; a = a.offsetParent) {
                            a = this.findDisp(a);
                            if (!a)
                                break;
                            b += a.offsetTop + e.getBorderExtents(a).h
                        }
                        var c;
                        a = this.getScreenSize().h;
                        b = a - b - this._appFooterHeight;
                        if ("inherit" === this.height)
                            this.domNode.offsetParent && (c = e.getContentBox(this.domNode.offsetParent).h - e.getBorderExtents(this.domNode).h + "px");
                        else if ("auto" === this.height) {
                            if (c = this.domNode.offsetParent) {
                                this.domNode.style.height = "0px";
                                c = c.getBoundingClientRect();
                                var b = this.domNode.getBoundingClientRect()
                                  , h = c.bottom - this._appFooterHeight - this._parentPadBorderExtentsBottom
                                  , b = b.bottom >= h ? a - (b.top - c.top) - this._appFooterHeight - this._parentPadBorderExtentsBottom : h - b.bottom
                            }
                            a = Math.max(this.domNode.scrollHeight, this.containerNode.scrollHeight);
                            c = (a ? Math.min(a, b) : b) + "px"
                        } else
                            this.height && (c = this.height);
                        c || (c = b + "px");
                        "-" !== c.charAt(0) && "default" !== c && (this.domNode.style.height = c);
                        if (!this._conn)
                            this.onTouchEnd()
                    },
                    onFlickAnimationStart: function(a) {
                        a && n.stop(a)
                    },
                    onFlickAnimationEnd: function(b) {
                        a("ios") && this._keepInputCaretInActiveElement();
                        if (b) {
                            var c = b.animationName;
                            if (c && -1 === c.indexOf("scrollableViewScroll2")) {
                                -1 !== c.indexOf("scrollableViewScroll0") ? this._scrollBarNodeV && k.remove(this._scrollBarNodeV, "mblScrollableScrollTo0") : -1 !== c.indexOf("scrollableViewScroll1") ? this._scrollBarNodeH && k.remove(this._scrollBarNodeH, "mblScrollableScrollTo1") : (this._scrollBarNodeV && (this._scrollBarNodeV.className = ""),
                                this._scrollBarNodeH && (this._scrollBarNodeH.className = ""));
                                return
                            }
                            if (this._useTransformTransition || this._useTopLeft)
                                if (c = b.target,
                                c === this._scrollBarV || c === this._scrollBarH) {
                                    b = "mblScrollableScrollTo" + (c === this._scrollBarV ? "0" : "1");
                                    k.contains(c, b) ? k.remove(c, b) : c.className = "";
                                    return
                                }
                            b.srcElement && n.stop(b)
                        }
                        this.stopAnimation();
                        if (this._bounce) {
                            var h = this
                              , d = h._bounce;
                            setTimeout(function() {
                                h.slideTo(d, .3, "ease-out")
                            }, 0);
                            h._bounce = void 0
                        } else
                            this.hideScrollBar(),
                            this.removeCover()
                    },
                    isFormElement: function(a) {
                        a && 1 !== a.nodeType && (a = a.parentNode);
                        if (!a || 1 !== a.nodeType)
                            return !1;
                        a = a.tagName;
                        return "SELECT" === a || "INPUT" === a || "TEXTAREA" === a || "BUTTON" === a
                    },
                    onTouchStart: function(a) {
                        this.disableTouchScroll || this._conn && 500 > (new Date).getTime() - this.startTime || (this._conn || (this._conn = [],
                        this._conn.push(p.connect(l.doc, d.move, this, "onTouchMove")),
                        this._conn.push(p.connect(l.doc, d.release, this, "onTouchEnd"))),
                        this._aborted = !1,
                        k.contains(this.containerNode, "mblScrollableScrollTo2") ? this.abort() : (this._scrollBarNodeV && (this._scrollBarNodeV.className = ""),
                        this._scrollBarNodeH && (this._scrollBarNodeH.className = "")),
                        this.touchStartX = a.touches ? a.touches[0].pageX : a.clientX,
                        this.touchStartY = a.touches ? a.touches[0].pageY : a.clientY,
                        this.startTime = (new Date).getTime(),
                        this.startPos = this.getPos(),
                        this._dim = this.getDim(),
                        this._time = [0],
                        this._posX = [this.touchStartX],
                        this._posY = [this.touchStartY],
                        this._moved = this._locked = !1,
                        this._preventDefaultInNextTouchMove = !0,
                        this.isFormElement(a.target) || (this.propagatable ? a.preventDefault() : n.stop(a),
                        this._preventDefaultInNextTouchMove = !1))
                    },
                    onTouchMove: function(a) {
                        if (!this._locked) {
                            if (this._preventDefaultInNextTouchMove) {
                                this._preventDefaultInNextTouchMove = !1;
                                var h = c.getEnclosingWidget((a.targetTouches && 1 === a.targetTouches.length ? a.targetTouches[0] : a).target);
                                h && h.isInstanceOf(b) && (this.propagatable ? a.preventDefault() : n.stop(a))
                            }
                            h = a.touches ? a.touches[0].pageX : a.clientX;
                            a = a.touches ? a.touches[0].pageY : a.clientY;
                            var d = h - this.touchStartX
                              , e = a - this.touchStartY
                              , r = {
                                x: this.startPos.x + d,
                                y: this.startPos.y + e
                            }
                              , t = this._dim
                              , d = Math.abs(d)
                              , e = Math.abs(e);
                            if (1 == this._time.length) {
                                if (this.dirLock && (this._v && !this._h && d >= this.threshold && d >= e || (this._h || this._f) && !this._v && e >= this.threshold && e >= d)) {
                                    this._locked = !0;
                                    return
                                }
                                if (this._v && this._h) {
                                    if (e < this.threshold && d < this.threshold)
                                        return
                                } else if (this._v && e < this.threshold || (this._h || this._f) && d < this.threshold)
                                    return;
                                this._moved = !0;
                                this.addCover();
                                this.showScrollBar()
                            }
                            d = this.weight;
                            this._v && this.constraint && (0 < r.y ? r.y = Math.round(r.y * d) : r.y < -t.o.h && (r.y = t.c.h < t.d.h ? Math.round(r.y * d) : -t.o.h - Math.round((-t.o.h - r.y) * d)));
                            (this._h || this._f) && this.constraint && (0 < r.x ? r.x = Math.round(r.x * d) : r.x < -t.o.w && (r.x = t.c.w < t.d.w ? Math.round(r.x * d) : -t.o.w - Math.round((-t.o.w - r.x) * d)));
                            this.scrollTo(r);
                            r = this._time.length;
                            if (2 <= r) {
                                this._moved = !0;
                                var f, g;
                                this._v && !this._h ? (f = this._posY[r - 1] - this._posY[r - 2],
                                g = a - this._posY[r - 1]) : !this._v && this._h && (f = this._posX[r - 1] - this._posX[r - 2],
                                g = h - this._posX[r - 1]);
                                0 > f * g && (this._time = [this._time[r - 1]],
                                this._posX = [this._posX[r - 1]],
                                this._posY = [this._posY[r - 1]],
                                r = 1)
                            }
                            10 == r && (this._time.shift(),
                            this._posX.shift(),
                            this._posY.shift());
                            this._time.push((new Date).getTime() - this.startTime);
                            this._posX.push(h);
                            this._posY.push(a)
                        }
                    },
                    _keepInputCaretInActiveElement: function() {
                        var a = l.doc.activeElement, b;
                        !a || "INPUT" != a.tagName && "TEXTAREA" != a.tagName || (b = a.value,
                        a.value = "number" == a.type || "week" == a.type ? b ? a.value + 1 : "week" == a.type ? "2013-W10" : 1 : a.value + " ",
                        a.value = b)
                    },
                    onTouchEnd: function(b) {
                        if (!this._locked) {
                            var c = this._speed = {
                                x: 0,
                                y: 0
                            }
                              , h = this._dim
                              , d = this.getPos()
                              , e = {};
                            if (b) {
                                if (!this._conn)
                                    return;
                                for (c = 0; c < this._conn.length; c++)
                                    p.disconnect(this._conn[c]);
                                this._conn = null;
                                c = !1;
                                this._aborted || this._moved || (c = !0);
                                if (c) {
                                    this.hideScrollBar();
                                    this.removeCover();
                                    if (a("touch") && a("clicks-prevented") && !this.isFormElement(b.target)) {
                                        var r = b.target;
                                        1 != r.nodeType && (r = r.parentNode);
                                        setTimeout(function() {
                                            y._sendClick(r, b)
                                        })
                                    }
                                    return
                                }
                                c = this._speed = this.getSpeed()
                            } else {
                                if (0 == d.x && 0 == d.y)
                                    return;
                                h = this.getDim()
                            }
                            this._v && (e.y = d.y + c.y);
                            if (this._h || this._f)
                                e.x = d.x + c.x;
                            if (!1 !== this.adjustDestination(e, d, h)) {
                                if (this.constraint) {
                                    if ("v" == this.scrollDir && h.c.h < h.d.h) {
                                        this.slideTo({
                                            y: 0
                                        }, .3, "ease-out");
                                        return
                                    }
                                    if ("h" == this.scrollDir && h.c.w < h.d.w) {
                                        this.slideTo({
                                            x: 0
                                        }, .3, "ease-out");
                                        return
                                    }
                                    if (this._v && this._h && h.c.h < h.d.h && h.c.w < h.d.w) {
                                        this.slideTo({
                                            x: 0,
                                            y: 0
                                        }, .3, "ease-out");
                                        return
                                    }
                                }
                                var t, f = "ease-out", g = {};
                                this._v && this.constraint && (0 < e.y ? 0 < d.y ? (t = .3,
                                e.y = 0) : (e.y = Math.min(e.y, 20),
                                f = "linear",
                                g.y = 0) : -c.y > h.o.h - -d.y && (d.y < -h.o.h ? (t = .3,
                                e.y = h.c.h <= h.d.h ? 0 : -h.o.h) : (e.y = Math.max(e.y, -h.o.h - 20),
                                f = "linear",
                                g.y = -h.o.h)));
                                (this._h || this._f) && this.constraint && (0 < e.x ? 0 < d.x ? (t = .3,
                                e.x = 0) : (e.x = Math.min(e.x, 20),
                                f = "linear",
                                g.x = 0) : -c.x > h.o.w - -d.x && (d.x < -h.o.w ? (t = .3,
                                e.x = h.c.w <= h.d.w ? 0 : -h.o.w) : (e.x = Math.max(e.x, -h.o.w - 20),
                                f = "linear",
                                g.x = -h.o.w)));
                                this._bounce = void 0 !== g.x || void 0 !== g.y ? g : void 0;
                                if (void 0 === t) {
                                    var u, k;
                                    this._v && this._h ? (k = Math.sqrt(c.x * c.x + c.y * c.y),
                                    u = Math.sqrt(Math.pow(e.y - d.y, 2) + Math.pow(e.x - d.x, 2))) : this._v ? (k = c.y,
                                    u = e.y - d.y) : this._h && (k = c.x,
                                    u = e.x - d.x);
                                    if (0 === u && !b)
                                        return;
                                    t = 0 !== k ? Math.abs(u / k) : .01
                                }
                                this.slideTo(e, t, f)
                            }
                        }
                    },
                    adjustDestination: function(a, b, c) {
                        return !0
                    },
                    abort: function() {
                        this._aborted = !0;
                        this.scrollTo(this.getPos());
                        this.stopAnimation()
                    },
                    stopAnimation: function() {
                        k.remove(this.containerNode, "mblScrollableScrollTo2");
                        this.containerNode.className = this.containerNode.className.replace(/mblScrollableScrollTo2-[^ ]+/, "");
                        this._scrollBarV && (this._scrollBarV.className = "");
                        this._scrollBarH && (this._scrollBarH.className = "");
                        if (this._useTransformTransition || this._useTopLeft)
                            this.containerNode.style[h.name("transition")] = "",
                            this._scrollBarV && (this._scrollBarV.style[h.name("transition")] = ""),
                            this._scrollBarH && (this._scrollBarH.style[h.name("transition")] = "")
                    },
                    scrollIntoView: function(a, b, c) {
                        if (this._v) {
                            for (var h = this.containerNode, d = this.getDim().d.h, e = 0, r = a; r !== h; r = r.offsetParent) {
                                if (!r || "BODY" === r.tagName)
                                    return;
                                e += r.offsetTop
                            }
                            a = b ? Math.max(d - h.offsetHeight, -e) : Math.min(0, d - e - a.offsetHeight);
                            c && "number" === typeof c ? this.slideTo({
                                y: a
                            }, c, "ease-out") : this.scrollTo({
                                y: a
                            })
                        }
                    },
                    getSpeed: function() {
                        var a = 0
                          , b = 0
                          , c = this._time.length;
                        if (2 <= c && 500 > (new Date).getTime() - this.startTime - this._time[c - 1])
                            var a = this._posX[c - (3 < c ? 2 : 1)] - this._posX[0 <= c - 6 ? c - 6 : 0]
                              , h = this._time[c - (3 < c ? 2 : 1)] - this._time[0 <= c - 6 ? c - 6 : 0]
                              , b = this.calcSpeed(this._posY[c - (3 < c ? 2 : 1)] - this._posY[0 <= c - 6 ? c - 6 : 0], h)
                              , a = this.calcSpeed(a, h);
                        return {
                            x: a,
                            y: b
                        }
                    },
                    calcSpeed: function(a, b) {
                        return 4 * Math.round(a / b * 100)
                    },
                    scrollTo: function(b, c, d) {
                        var e, r;
                        r = !0;
                        !this._aborted && this._conn && (this._dim || (this._dim = this.getDim()),
                        e = 0 < b.y ? b.y : 0,
                        r = 0 > this._dim.o.h + b.y ? -1 * (this._dim.o.h + b.y) : 0,
                        e = {
                            bubbles: !1,
                            cancelable: !1,
                            x: b.x,
                            y: b.y,
                            beforeTop: 0 < e,
                            beforeTopHeight: e,
                            afterBottom: 0 < r,
                            afterBottomHeight: r
                        },
                        r = this.onBeforeScroll(e));
                        if (r) {
                            d = (d || this.containerNode).style;
                            if (a("css3-animations"))
                                if (this._useTopLeft) {
                                    if (d[h.name("transition")] = "",
                                    this._v && (d.top = b.y + "px"),
                                    this._h || this._f)
                                        d.left = b.x + "px"
                                } else
                                    this._useTransformTransition && (d[h.name("transition")] = ""),
                                    d[h.name("transform")] = this.makeTranslateStr(b);
                            else if (this._v && (d.top = b.y + "px"),
                            this._h || this._f)
                                d.left = b.x + "px";
                            a("ios") && this._keepInputCaretInActiveElement();
                            c || this.scrollScrollBarTo(this.calcScrollBarPos(b));
                            if (e)
                                this.onAfterScroll(e)
                        }
                    },
                    onBeforeScroll: function(a) {
                        return !0
                    },
                    onAfterScroll: function(a) {},
                    slideTo: function(a, b, c) {
                        this._runSlideAnimation(this.getPos(), a, b, c, this.containerNode, 2);
                        this.slideScrollBarTo(a, b, c)
                    },
                    makeTranslateStr: function(b) {
                        var c = this._v && "number" == typeof b.y ? b.y + "px" : "0px";
                        b = (this._h || this._f) && "number" == typeof b.x ? b.x + "px" : "0px";
                        return a("translate3d") ? "translate3d(" + b + "," + c + ",0px)" : "translate(" + b + "," + c + ")"
                    },
                    getPos: function() {
                        if (a("css3-animations")) {
                            var b = l.doc.defaultView.getComputedStyle(this.containerNode, "");
                            if (this._useTopLeft)
                                return {
                                    x: parseInt(b.left) || 0,
                                    y: parseInt(b.top) || 0
                                };
                            var c = b[h.name("transform")];
                            return c && 0 === c.indexOf("matrix") ? (b = c.split(/[,\s\)]+/),
                            c = 0 === c.indexOf("matrix3d") ? 12 : 4,
                            {
                                y: b[c + 1] - 0,
                                x: b[c] - 0
                            }) : {
                                x: 0,
                                y: 0
                            }
                        }
                        return {
                            y: parseInt(this.containerNode.style.top) || 0,
                            x: this.containerNode.offsetLeft
                        }
                    },
                    getDim: function() {
                        var a = {};
                        a.c = {
                            h: this.containerNode.offsetHeight,
                            w: this.containerNode.offsetWidth
                        };
                        a.v = {
                            h: this.domNode.offsetHeight + this._appFooterHeight,
                            w: this.domNode.offsetWidth
                        };
                        a.d = {
                            h: a.v.h - this.fixedHeaderHeight - this.fixedFooterHeight - this._appFooterHeight,
                            w: a.v.w
                        };
                        a.o = {
                            h: a.c.h - a.v.h + this.fixedHeaderHeight + this.fixedFooterHeight + this._appFooterHeight,
                            w: a.c.w - a.v.w
                        };
                        return a
                    },
                    showScrollBar: function() {
                        if (this.scrollBar) {
                            var a = this._dim;
                            "v" == this.scrollDir && a.c.h <= a.d.h || "h" == this.scrollDir && a.c.w <= a.d.w || this._v && this._h && a.c.h <= a.d.h && a.c.w <= a.d.w || (a = function(a, b) {
                                var c = a["_scrollBarNode" + b];
                                if (!c) {
                                    var c = g.create("div", null, a.domNode)
                                      , d = {
                                        position: "absolute",
                                        overflow: "hidden"
                                    };
                                    "V" == b ? (d.right = "2px",
                                    d.width = "5px") : (d.bottom = (a.isLocalFooter ? a.fixedFooterHeight : 0) + 2 + "px",
                                    d.height = "5px");
                                    f.set(c, d);
                                    c.className = "mblScrollBarWrapper";
                                    a["_scrollBarWrapper" + b] = c;
                                    c = g.create("div", null, c);
                                    f.set(c, h.add({
                                        opacity: .6,
                                        position: "absolute",
                                        backgroundColor: "#606060",
                                        fontSize: "1px",
                                        MozBorderRadius: "2px",
                                        zIndex: 2147483647
                                    }, {
                                        borderRadius: "2px",
                                        transformOrigin: "0 0"
                                    }));
                                    f.set(c, "V" == b ? {
                                        width: "5px"
                                    } : {
                                        height: "5px"
                                    });
                                    a["_scrollBarNode" + b] = c
                                }
                                return c
                            }
                            ,
                            this._v && !this._scrollBarV && (this._scrollBarV = a(this, "V")),
                            this._h && !this._scrollBarH && (this._scrollBarH = a(this, "H")),
                            this.resetScrollBar())
                        }
                    },
                    hideScrollBar: function() {
                        if (this.fadeScrollBar && a("css3-animations") && !y._fadeRule) {
                            var b = g.create("style", null, l.doc.getElementsByTagName("head")[0]);
                            b.textContent = ".mblScrollableFadeScrollBar{  " + h.name("animation-duration", !0) + ": 1s;  " + h.name("animation-name", !0) + ": scrollableViewFadeScrollBar;}@" + h.name("keyframes", !0) + " scrollableViewFadeScrollBar{  from { opacity: 0.6; }  to { opacity: 0; }}";
                            y._fadeRule = b.sheet.cssRules[1]
                        }
                        this.scrollBar && (b = function(b, c) {
                            f.set(b, h.add({
                                opacity: 0
                            }, {
                                animationDuration: ""
                            }));
                            c._useTopLeft && a("android") || (b.className = "mblScrollableFadeScrollBar")
                        }
                        ,
                        this._scrollBarV && (b(this._scrollBarV, this),
                        this._scrollBarV = null),
                        this._scrollBarH && (b(this._scrollBarH, this),
                        this._scrollBarH = null))
                    },
                    calcScrollBarPos: function(a) {
                        var b = {}
                          , c = this._dim
                          , h = function(a, b, c, h, d) {
                            c = Math.round((h - b - 8) / (h - d) * c);
                            c < -b + 5 && (c = -b + 5);
                            c > a - 5 && (c = a - 5);
                            return c
                        };
                        "number" == typeof a.y && this._scrollBarV && (b.y = h(this._scrollBarWrapperV.offsetHeight, this._scrollBarV.offsetHeight, a.y, c.d.h, c.c.h));
                        "number" == typeof a.x && this._scrollBarH && (b.x = h(this._scrollBarWrapperH.offsetWidth, this._scrollBarH.offsetWidth, a.x, c.d.w, c.c.w));
                        return b
                    },
                    scrollScrollBarTo: function(b) {
                        this.scrollBar && (this._v && this._scrollBarV && "number" == typeof b.y && (a("css3-animations") ? this._useTopLeft ? f.set(this._scrollBarV, h.add({
                            top: b.y + "px"
                        }, {
                            transition: ""
                        })) : (this._useTransformTransition && (this._scrollBarV.style[h.name("transition")] = ""),
                        this._scrollBarV.style[h.name("transform")] = this.makeTranslateStr({
                            y: b.y
                        })) : this._scrollBarV.style.top = b.y + "px"),
                        this._h && this._scrollBarH && "number" == typeof b.x && (a("css3-animations") ? this._useTopLeft ? f.set(this._scrollBarH, h.add({
                            left: b.x + "px"
                        }, {
                            transition: ""
                        })) : (this._useTransformTransition && (this._scrollBarH.style[h.name("transition")] = ""),
                        this._scrollBarH.style[h.name("transform")] = this.makeTranslateStr({
                            x: b.x
                        })) : this._scrollBarH.style.left = b.x + "px"))
                    },
                    slideScrollBarTo: function(a, b, c) {
                        if (this.scrollBar) {
                            var h = this.calcScrollBarPos(this.getPos());
                            a = this.calcScrollBarPos(a);
                            this._v && this._scrollBarV && this._runSlideAnimation({
                                y: h.y
                            }, {
                                y: a.y
                            }, b, c, this._scrollBarV, 0);
                            this._h && this._scrollBarH && this._runSlideAnimation({
                                x: h.x
                            }, {
                                x: a.x
                            }, b, c, this._scrollBarH, 1)
                        }
                    },
                    _runSlideAnimation: function(b, c, d, e, r, t) {
                        if (a("css3-animations"))
                            if (!this._useTopLeft)
                                if (this._useTransformTransition)
                                    if (void 0 === c.x && (c.x = b.x),
                                    void 0 === c.y && (c.y = b.y),
                                    c.x !== b.x || c.y !== b.y) {
                                        this.onFlickAnimationStart();
                                        f.set(r, h.add({}, {
                                            transitionProperty: h.name("transform"),
                                            transitionDuration: d + "s",
                                            transitionTimingFunction: e
                                        }));
                                        var g = this.makeTranslateStr(c);
                                        setTimeout(function() {
                                            f.set(r, h.add({}, {
                                                transform: g
                                            }))
                                        }, 0);
                                        k.add(r, "mblScrollableScrollTo" + t)
                                    } else
                                        this.hideScrollBar(),
                                        this.removeCover();
                                else {
                                    var u = this.findDisp(this.domNode) === this.domNode;
                                    b = this.setKeyframes(b, c, t, u);
                                    f.set(r, h.add({}, {
                                        animationDuration: d + "s",
                                        animationTimingFunction: e
                                    }));
                                    k.add(r, b);
                                    k.add(r, "mblScrollableScrollTo" + t);
                                    2 == t ? this.scrollTo(c, !0, r) : this.scrollScrollBarTo(c)
                                }
                            else {
                                if (void 0 !== c.x || void 0 !== c.y)
                                    this.onFlickAnimationStart(),
                                    f.set(r, h.add({}, {
                                        transitionProperty: void 0 !== c.x && void 0 !== c.y ? "top, left" : void 0 !== c.y ? "top" : "left",
                                        transitionDuration: d + "s",
                                        transitionTimingFunction: e
                                    })),
                                    setTimeout(function() {
                                        var a = {};
                                        void 0 !== c.x && (a.left = c.x + "px");
                                        void 0 !== c.y && (a.top = c.y + "px");
                                        f.set(r, a)
                                    }, 0),
                                    k.add(r, "mblScrollableScrollTo" + t)
                            }
                        else if (q.fx && q.fx.easing && d) {
                            var l = this;
                            q.fx.slideTo({
                                node: r,
                                duration: 1E3 * d,
                                left: c.x,
                                top: c.y,
                                easing: "ease-out" == e ? q.fx.easing.quadOut : q.fx.easing.linear,
                                onBegin: function() {
                                    if (2 == t)
                                        l.onFlickAnimationStart()
                                },
                                onEnd: function() {
                                    if (2 == t)
                                        l.onFlickAnimationEnd()
                                }
                            }).play()
                        } else
                            2 == t ? (this.onFlickAnimationStart(),
                            this.scrollTo(c, !1, r),
                            this.onFlickAnimationEnd()) : this.scrollScrollBarTo(c)
                    },
                    resetScrollBar: function() {
                        var a = function(a, b, c, h, d, e) {
                            if (b) {
                                var r = {};
                                r[e ? "top" : "left"] = d + 4 + "px";
                                d = 0 >= c - 8 ? 1 : c - 8;
                                r[e ? "height" : "width"] = d + "px";
                                f.set(a, r);
                                a = Math.round(c * c / h);
                                a = Math.min(Math.max(a - 8, 5), d);
                                b.style[e ? "height" : "width"] = a + "px";
                                f.set(b, {
                                    opacity: .6
                                })
                            }
                        }
                          , b = this.getDim();
                        a(this._scrollBarWrapperV, this._scrollBarV, b.d.h, b.c.h, this.fixedHeaderHeight, !0);
                        a(this._scrollBarWrapperH, this._scrollBarH, b.d.w, b.c.w, 0);
                        this.createMask()
                    },
                    createMask: function() {
                        a("mask-image") && (this._scrollBarWrapperV && r.createRoundMask(this._scrollBarWrapperV, 0, 0, 0, 0, 5, this._scrollBarWrapperV.offsetHeight, 2, 2, .5),
                        this._scrollBarWrapperH && r.createRoundMask(this._scrollBarWrapperH, 0, 0, 0, 0, this._scrollBarWrapperH.offsetWidth, 5, 2, 2, .5))
                    },
                    flashScrollBar: function() {
                        if (!this.disableFlashScrollBar && this.domNode && (this._dim = this.getDim(),
                        !(0 >= this._dim.d.h))) {
                            this.showScrollBar();
                            var a = this;
                            setTimeout(function() {
                                a.hideScrollBar()
                            }, 300)
                        }
                    },
                    addCover: function() {
                        a("touch") || a("pointer-events") || a("MSPointer") || this.noCover || (y._cover ? y._cover.style.display = "" : (y._cover = g.create("div", null, l.doc.body),
                        y._cover.className = "mblScrollableCover",
                        f.set(y._cover, {
                            backgroundColor: "#ffff00",
                            opacity: 0,
                            position: "absolute",
                            top: "0px",
                            left: "0px",
                            width: "100%",
                            height: "100%",
                            zIndex: 2147483647
                        }),
                        this._ch.push(p.connect(y._cover, d.press, this, "onTouchEnd"))),
                        this.setSelectable(y._cover, !1),
                        this.setSelectable(this.domNode, !1))
                    },
                    removeCover: function() {
                        !a("touch") && y._cover && (y._cover.style.display = "none",
                        this.setSelectable(y._cover, !0),
                        this.setSelectable(this.domNode, !0))
                    },
                    setKeyframes: function(b, c, d, e) {
                        y._rule || (y._rule = []);
                        d += e ? "-in" : "-out";
                        y._rule[d] || (e = g.create("style", null, l.doc.getElementsByTagName("head")[0]),
                        e.textContent = ".mblScrollableScrollTo" + d + "{" + h.name("animation-name", !0) + ": scrollableViewScroll" + d + ";}@" + h.name("keyframes", !0) + " scrollableViewScroll" + d + "{}",
                        y._rule[d] = e.sheet.cssRules[1]);
                        if (e = y._rule[d])
                            b && (e.deleteRule(a("webkit") ? "from" : 0),
                            (e.insertRule || e.appendRule).call(e, "from { " + h.name("transform", !0) + ": " + this.makeTranslateStr(b) + "; }")),
                            c && (void 0 === c.x && (c.x = b.x),
                            void 0 === c.y && (c.y = b.y),
                            e.deleteRule(a("webkit") ? "to" : 1),
                            (e.insertRule || e.appendRule).call(e, "to { " + h.name("transform", !0) + ": " + this.makeTranslateStr(c) + "; }"));
                        return "mblScrollableScrollTo" + d
                    },
                    setSelectable: function(b, c) {
                        b.style.KhtmlUserSelect = c ? "auto" : "none";
                        b.style.MozUserSelect = c ? "" : "none";
                        b.onselectstart = c ? null : function() {
                            return !1
                        }
                        ;
                        if (a("ie")) {
                            b.unselectable = c ? "" : "on";
                            for (var h = b.getElementsByTagName("*"), d = 0; d < h.length; d++)
                                h[d].unselectable = c ? "" : "on"
                        }
                    }
                });
                z = a("dojo-bidi") ? u("dojox.mobile.Scrollable", [z, x]) : z;
                m.setObject("dojox.mobile.scrollable", z);
                return z
            })
        },
        "dojox/mobile/common": function() {
            define("dojo/_base/array dojo/_base/config dojo/_base/connect dojo/_base/lang dojo/_base/window dojo/_base/kernel dojo/dom dojo/dom-class dojo/dom-construct dojo/domReady dojo/ready dojo/touch dijit/registry ./sniff ./uacss".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h) {
                var r = m.getObject("dojox.mobile", !0);
                l.doc.dojoClick = !0;
                h("touch") && (h.add("clicks-prevented", !(4.1 <= h("android") || 10 === h("ie") || !h("ie") && 6 < h("trident"))),
                h("clicks-prevented") && (r._sendClick = function(a, b) {
                    for (var c = a; c; c = c.parentNode)
                        if (c.dojoClick)
                            return;
                    c = l.doc.createEvent("MouseEvents");
                    c.initMouseEvent("click", !0, !0, l.global, 1, b.screenX, b.screenY, b.clientX, b.clientY);
                    a.dispatchEvent(c)
                }
                ));
                r.getScreenSize = function() {
                    return {
                        h: l.global.innerHeight || l.doc.documentElement.clientHeight,
                        w: l.global.innerWidth || l.doc.documentElement.clientWidth
                    }
                }
                ;
                r.updateOrient = function() {
                    var a = r.getScreenSize();
                    f.replace(l.doc.documentElement, a.h > a.w ? "dj_portrait" : "dj_landscape", a.h > a.w ? "dj_landscape" : "dj_portrait")
                }
                ;
                r.updateOrient();
                r.tabletSize = 500;
                r.detectScreenSize = function(a) {
                    var b = r.getScreenSize(), c = Math.min(b.w, b.h), h, d;
                    c >= r.tabletSize && (a || !this._sz || this._sz < r.tabletSize) ? (h = "phone",
                    d = "tablet") : c < r.tabletSize && (a || !this._sz || this._sz >= r.tabletSize) && (h = "tablet",
                    d = "phone");
                    d && (f.replace(l.doc.documentElement, "dj_" + d, "dj_" + h),
                    n.publish("/dojox/mobile/screenSize/" + d, [b]));
                    this._sz = c
                }
                ;
                r.detectScreenSize();
                r.hideAddressBarWait = "number" === typeof p.mblHideAddressBarWait ? p.mblHideAddressBarWait : 1500;
                r.hide_1 = function() {
                    scrollTo(0, 1);
                    r._hidingTimer = 0 == r._hidingTimer ? 200 : 2 * r._hidingTimer;
                    setTimeout(function() {
                        r.isAddressBarHidden() || r._hidingTimer > r.hideAddressBarWait ? (r.resizeAll(),
                        r._hiding = !1) : setTimeout(r.hide_1, r._hidingTimer)
                    }, 50)
                }
                ;
                r.hideAddressBar = function(a) {
                    r.disableHideAddressBar || r._hiding || (r._hiding = !0,
                    r._hidingTimer = h("ios") ? 200 : 0,
                    a = screen.availHeight,
                    h("android") && (a = outerHeight / devicePixelRatio,
                    0 == a && (r._hiding = !1,
                    setTimeout(function() {
                        r.hideAddressBar()
                    }, 200)),
                    a <= innerHeight && (a = outerHeight),
                    3 > h("android") && (l.doc.documentElement.style.overflow = l.body().style.overflow = "visible")),
                    l.body().offsetHeight < a && (l.body().style.minHeight = a + "px",
                    r._resetMinHeight = !0),
                    setTimeout(r.hide_1, r._hidingTimer))
                }
                ;
                r.isAddressBarHidden = function() {
                    return 1 === pageYOffset
                }
                ;
                r.resizeAll = function(b, c) {
                    if (!r.disableResizeAll) {
                        n.publish("/dojox/mobile/resizeAll", [b, c]);
                        n.publish("/dojox/mobile/beforeResizeAll", [b, c]);
                        r._resetMinHeight && (l.body().style.minHeight = r.getScreenSize().h + "px");
                        r.updateOrient();
                        r.detectScreenSize();
                        var h = function(a) {
                            var b = a.getParent && a.getParent();
                            return !(b && b.resize || !a.resize)
                        }
                          , d = function(a) {
                            q.forEach(a.getChildren(), function(a) {
                                h(a) && a.resize();
                                d(a)
                            })
                        };
                        c ? (c.resize && c.resize(),
                        d(c)) : q.forEach(q.filter(a.toArray(), h), function(a) {
                            a.resize()
                        });
                        n.publish("/dojox/mobile/afterResizeAll", [b, c])
                    }
                }
                ;
                r.openWindow = function(a, b) {
                    l.global.open(a, b || "_blank")
                }
                ;
                r._detectWindowsTheme = function() {
                    navigator.userAgent.match(/IEMobile\/10\.0/) && e.create("style", {
                        innerHTML: "@-ms-viewport {width: auto !important}"
                    }, l.doc.head);
                    var a = function() {
                        f.add(l.doc.documentElement, "windows_theme");
                        k.experimental("Dojo Mobile Windows theme", "Behavior and appearance of the Windows theme are experimental.")
                    }
                      , b = h("windows-theme");
                    if (void 0 !== b)
                        b && a();
                    else {
                        for (var c, d = function(b) {
                            return b && -1 !== b.indexOf("/windows/") ? (h.add("windows-theme", !0),
                            a(),
                            !0) : !1
                        }, r = l.doc.styleSheets, b = 0; b < r.length; b++)
                            if (!r[b].href) {
                                var t = r[b].cssRules || r[b].imports;
                                if (t)
                                    for (c = 0; c < t.length; c++)
                                        if (d(t[c].href))
                                            return
                            }
                        c = l.doc.getElementsByTagName("link");
                        for (b = 0; b < c.length && !d(c[b].href); b++)
                            ;
                    }
                }
                ;
                !1 !== p.mblApplyPageStyles && f.add(l.doc.documentElement, "mobile");
                h("chrome") && f.add(l.doc.documentElement, "dj_chrome");
                if (l.global._no_dojo_dm) {
                    m = l.global._no_dojo_dm;
                    for (var t in m)
                        r[t] = m[t];
                    r.deviceTheme.setDm(r)
                }
                h.add("mblAndroidWorkaround", !1 !== p.mblAndroidWorkaround && 3 > h("android"), void 0, !0);
                h.add("mblAndroid3Workaround", !1 !== p.mblAndroid3Workaround && 3 <= h("android"), void 0, !0);
                r._detectWindowsTheme();
                r.setSelectable = function(a, b) {
                    var c, d;
                    a = g.byId(a);
                    if (9 >= h("ie"))
                        if (c = a.getElementsByTagName("*"),
                        d = c.length,
                        b)
                            for (a.removeAttribute("unselectable"); d--; )
                                c[d].removeAttribute("unselectable");
                        else
                            for (a.setAttribute("unselectable", "on"); d--; )
                                "INPUT" !== c[d].tagName && c[d].setAttribute("unselectable", "on");
                    else
                        f.toggle(a, "unselectable", !b)
                }
                ;
                var u = h("pointer-events") ? "touchAction" : h("MSPointer") ? "msTouchAction" : null;
                r._setTouchAction = u ? function(a, b) {
                    a.style[u] = b
                }
                : function() {}
                ;
                d(function() {
                    !1 !== p.mblApplyPageStyles && f.add(l.body(), "mblBackground")
                });
                c(function() {
                    r.detectScreenSize(!0);
                    !1 !== p.mblAndroidWorkaroundButtonStyle && h("android") && e.create("style", {
                        innerHTML: "BUTTON,INPUT[type\x3d'button'],INPUT[type\x3d'submit'],INPUT[type\x3d'reset'],INPUT[type\x3d'file']::-webkit-file-upload-button{-webkit-appearance:none;} audio::-webkit-media-controls-play-button,video::-webkit-media-controls-play-button{-webkit-appearance:media-play-button;} video::-webkit-media-controls-fullscreen-button{-webkit-appearance:media-fullscreen-button;}"
                    }, l.doc.head, "first");
                    h("mblAndroidWorkaround") && e.create("style", {
                        innerHTML: ".mblView.mblAndroidWorkaround{position:absolute;top:-9999px !important;left:-9999px !important;}"
                    }, l.doc.head, "last");
                    var a = r.resizeAll
                      , b = -1 != navigator.appVersion.indexOf("Mobile") && !(7 <= h("ios"));
                    if (!1 !== p.mblHideAddressBar && b || !0 === p.mblForceHideAddressBar)
                        r.hideAddressBar(),
                        !0 === p.mblAlwaysHideAddressBar && (a = r.hideAddressBar);
                    var c = 6 <= h("ios");
                    if ((h("android") || c) && void 0 !== l.global.onorientationchange) {
                        var d = a, t, f, g;
                        c ? (f = l.doc.documentElement.clientWidth,
                        g = l.doc.documentElement.clientHeight) : (a = function(a) {
                            var b = n.connect(null, "onresize", null, function(a) {
                                n.disconnect(b);
                                d(a)
                            })
                        }
                        ,
                        t = r.getScreenSize());
                        n.connect(null, "onresize", null, function(a) {
                            if (c) {
                                var b = l.doc.documentElement.clientWidth
                                  , h = l.doc.documentElement.clientHeight;
                                b == f && h != g && d(a);
                                f = b;
                                g = h
                            } else
                                b = r.getScreenSize(),
                                b.w == t.w && 100 <= Math.abs(b.h - t.h) && d(a),
                                t = b
                        })
                    }
                    n.connect(null, void 0 !== l.global.onorientationchange ? "onorientationchange" : "onresize", null, a);
                    l.body().style.visibility = "visible"
                });
                return r
            })
        },
        "dojox/mobile/uacss": function() {
            define(["dojo/_base/kernel", "dojo/_base/lang", "dojo/_base/window", "./sniff"], function(q, p, n, m) {
                n = n.doc.documentElement;
                n.className = p.trim(n.className + " " + [m("bb") ? "dj_bb" : "", m("android") ? "dj_android" : "", m("ios") ? "dj_ios" : "", 6 <= m("ios") ? "dj_ios6" : "", m("ios") ? "dj_iphone" : "", m("ipod") ? "dj_ipod" : "", m("ipad") ? "dj_ipad" : "", m("ie") ? "dj_ie" : ""].join(" ").replace(/ +/g, " "));
                return q
            })
        },
        "dojox/mvc/ModelRefController": function() {
            define(["dojo/_base/array", "dojo/_base/declare", "dojo/_base/lang", "dojo/Stateful", "./_Controller"], function(q, p, n, m, l) {
                return p("dojox.mvc.ModelRefController", l, {
                    ownProps: null,
                    _refModelProp: "model",
                    _refInModelProp: "model",
                    model: null,
                    postscript: function(k, g) {
                        this._relTargetProp = (k || {})._refModelProp || this._refModelProp;
                        this.inherited(arguments)
                    },
                    get: function(k) {
                        if (!this.hasControllerProperty(k)) {
                            var g = this[this._refModelProp];
                            return g ? g.get ? g.get(k) : g[k] : void 0
                        }
                        return this.inherited(arguments)
                    },
                    _set: function(k, g) {
                        if (!this.hasControllerProperty(k)) {
                            var f = this[this._refModelProp];
                            f && (f.set ? f.set(k, g) : f[k] = g);
                            return this
                        }
                        return this.inherited(arguments)
                    },
                    watch: function(k, g) {
                        function f(a) {
                            c && c.unwatch();
                            a && n.isFunction(a.set) && n.isFunction(a.watch) && (c = a.watch.apply(a, (k ? [k] : []).concat([function(a, c, h) {
                                g.call(b, a, c, h)
                            }
                            ])))
                        }
                        function e(a, c) {
                            var h = {};
                            k ? h[k] = 1 : q.forEach([a, c], function(a) {
                                var c = a && a.get("properties");
                                if (c)
                                    q.forEach(c, function(a) {
                                        b.hasControllerProperty(a) || (h[a] = 1)
                                    });
                                else
                                    for (var d in a)
                                        a.hasOwnProperty(d) && !b.hasControllerProperty(d) && (h[d] = 1)
                            });
                            for (var d in h)
                                g.call(b, d, a ? a.get ? a.get(d) : a[d] : void 0, c ? c.get ? c.get(d) : c[d] : void 0)
                        }
                        if (this.hasControllerProperty(k))
                            return this.inherited(arguments);
                        g || (g = k,
                        k = null);
                        var d = null
                          , c = null
                          , b = this
                          , d = m.prototype.watch.call(this, this._refModelProp, function(a, b, c) {
                            b !== c && (e(b, c),
                            f(c))
                        });
                        f(this.get(this._refModelProp));
                        var a = {};
                        a.unwatch = a.remove = function() {
                            c && (c.unwatch(),
                            c = null);
                            d && (d.unwatch(),
                            d = null)
                        }
                        ;
                        return a
                    },
                    hasControllerProperty: function(k) {
                        return "_watchCallbacks" == k || k == this._refModelProp || k == this._refInModelProp || k in (this.ownProps || {}) || k in this.constructor.prototype || /^dojoAttach(Point|Event)$/i.test(k)
                    }
                })
            })
        },
        "dojox/mvc/_Controller": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/Stateful", "./_atBindingMixin"], function(q, p, n, m) {
                return q("dojox.mvc._Controller", [n, m], {
                    postscript: function(l, k) {
                        if (this._applyAttributes)
                            return this.inherited(arguments);
                        this._dbpostscript(l, k);
                        if (l) {
                            this.params = l;
                            for (var g in l)
                                this.set(g, l[g])
                        }
                        var f;
                        try {
                            f = require("dijit/registry"),
                            this.id = this.id || (k || {}).id || f.getUniqueId(this.declaredClass.replace(/\./g, "_")),
                            f.add(this)
                        } catch (e) {}
                        k ? k.setAttribute("widgetId", this.id) : this.startup()
                    },
                    startup: function() {
                        this._applyAttributes || this._startAtWatchHandles();
                        this.inherited(arguments)
                    },
                    destroy: function() {
                        this._beingDestroyed = !0;
                        this._applyAttributes || this._stopAtWatchHandles();
                        this.inherited(arguments);
                        if (!this._applyAttributes)
                            try {
                                require("dijit/registry").remove(this.id)
                            } catch (l) {}
                        this._destroyed = !0
                    },
                    set: function(l, k) {
                        if ("object" === typeof l) {
                            for (var g in l)
                                l.hasOwnProperty(g) && this.set(g, l[g]);
                            return this
                        }
                        if (!this._applyAttributes) {
                            if ("dojox.mvc.at" == (k || {}).atsignature)
                                return this._setAtWatchHandle(l, k);
                            g = "_set" + l.replace(/^[a-z]/, function(f) {
                                return f.toUpperCase()
                            }) + "Attr";
                            if (this[g])
                                this[g](k);
                            else
                                this._set(l, k);
                            return this
                        }
                        return this.inherited(arguments)
                    },
                    _set: function(l, k) {
                        return this._applyAttributes ? this.inherited(arguments) : this._changeAttrValue(l, k)
                    }
                })
            })
        },
        "dojox/mvc/StatefulArray": function() {
            define(["dojo/_base/lang", "dojo/Stateful"], function(q, p) {
                function n(l) {
                    l._watchElementCallbacks && l._watchElementCallbacks(void 0, [], []);
                    return l
                }
                var m = function(l) {
                    l = q._toArray(l || []);
                    l.constructor = m;
                    return q.mixin(l, {
                        pop: function() {
                            return this.splice(this.get("length") - 1, 1)[0]
                        },
                        push: function() {
                            this.splice.apply(this, [this.get("length"), 0].concat(q._toArray(arguments)));
                            return this.get("length")
                        },
                        reverse: function() {
                            return n([].reverse.apply(this, q._toArray(arguments)))
                        },
                        shift: function() {
                            return this.splice(0, 1)[0]
                        },
                        sort: function() {
                            return n([].sort.apply(this, q._toArray(arguments)))
                        },
                        splice: function(k, g) {
                            var f = this.get("length");
                            k += 0 > k ? f : 0;
                            var e = Math.min(k, f)
                              , d = this.slice(k, k + g)
                              , c = q._toArray(arguments).slice(2);
                            [].splice.apply(this, [k, g].concat(Array(c.length)));
                            for (var b = 0; b < c.length; b++)
                                this[e + b] = c[b];
                            this._watchElementCallbacks && this._watchElementCallbacks(k, d, c);
                            this._watchCallbacks && this._watchCallbacks("length", f, f - d.length + c.length);
                            return d
                        },
                        unshift: function() {
                            this.splice.apply(this, [0, 0].concat(q._toArray(arguments)));
                            return this.get("length")
                        },
                        concat: function(k) {
                            return new m([].concat.apply(this, arguments))
                        },
                        join: function(k) {
                            for (var g = [], f = this.get("length"), e = 0; e < f; e++)
                                g.push(this.get(e));
                            return g.join(k)
                        },
                        slice: function(k, g) {
                            var f = this.get("length");
                            g = (void 0 === g ? f : g) + (0 > g ? f : 0);
                            for (var e = [], f = k + (0 > k ? f : 0) || 0; f < Math.min(g, this.get("length")); f++)
                                e.push(this.get(f));
                            return new m(e)
                        },
                        watchElements: function(k) {
                            var g = this._watchElementCallbacks
                              , f = this;
                            g || (g = this._watchElementCallbacks = function(d, c, b) {
                                for (var a = [].concat(g.list), h = 0; h < a.length; h++)
                                    a[h].call(f, d, c, b)
                            }
                            ,
                            g.list = []);
                            g.list.push(k);
                            var e = {};
                            e.unwatch = e.remove = function() {
                                for (var d = g.list, c = 0; c < d.length; c++)
                                    if (d[c] == k) {
                                        d.splice(c, 1);
                                        break
                                    }
                            }
                            ;
                            return e
                        }
                    }, p.prototype, {
                        set: function(k, g) {
                            if ("length" == k) {
                                var f = this.get("length");
                                f < g ? this.splice.apply(this, [f, 0].concat(Array(g - f))) : g < f && this.splice.apply(this, [g, f - g])
                            } else
                                f = this.length,
                                p.prototype.set.call(this, k, g),
                                f != this.length && p.prototype.set.call(this, "length", this.length);
                            return this
                        },
                        isInstanceOf: function(k) {
                            return p.prototype.isInstanceOf.apply(this, arguments) || k == m
                        }
                    })
                };
                m._meta = {
                    bases: [p]
                };
                return q.setObject("dojox.mvc.StatefulArray", m)
            })
        },
        "dojox/mvc/getStateful": function() {
            define(["dojo/_base/array", "dojo/_base/lang", "dojo/Stateful", "./StatefulArray"], function(q, p, n, m) {
                var l = function(k, g) {
                    return (g || l)["getStateful" + (g || l).getType(k).replace(/^[a-z]/, function(f) {
                        return f.toUpperCase()
                    })](k)
                };
                return p.setObject("dojox.mvc.getStateful", p.mixin(l, {
                    getType: function(k) {
                        return p.isArray(k) ? "array" : null != k && "[object Object]" == {}.toString.call(k) ? "object" : "value"
                    },
                    getStatefulArray: function(k) {
                        return new m(q.map(k, function(g) {
                            return l(g, this)
                        }, this))
                    },
                    getStatefulObject: function(k) {
                        var g = new n, f;
                        for (f in k)
                            g[f] = l(k[f], this);
                        return g
                    },
                    getStatefulValue: function(k) {
                        return k
                    }
                }))
            })
        },
        "gridx/Grid": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/sniff dojo/on dojo/i18n dojo/dom-class dojo/dom-geometry dojo/query dojo/store/Memory dojox/html/metrics dijit/_WidgetBase dijit/_FocusMixin dijit/_TemplatedMixin dojo/text!./templates/Grid.html ./core/Core ./core/model/extensions/Query ./core/_Module ./modules/Header ./modules/View ./modules/Body ./modules/VLayout ./modules/HLayout ./modules/VScroller ./modules/HScroller ./modules/ColumnWidth ./modules/Focus dijit/_BidiSupport dojo/i18n!./nls/gridx dojo/uacss dijit/hccss dojo/NodeList-dom dojo/NodeList-traverse".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A, B, C, E, I, H) {
                var F = function() {};
                return q("gridx.Grid", [c, a, b, r], {
                    templateString: h,
                    version: {
                        major: 1,
                        minor: 3,
                        patch: 7,
                        flag: "",
                        toString: function() {
                            return this.major + "." + this.minor + "." + this.patch + this.flag
                        }
                    },
                    isIE: n("ie") || n("trident"),
                    _setTextDirAttr: function(a) {
                        this.textDir != a && (this.textDir = a,
                        this.header.refresh(),
                        this.edit && this.edit._initAlwaysEdit(),
                        this.body.refresh())
                    },
                    getTextDir: function(a, b) {
                        var c = this._columnsById[a]
                          , c = c && c.textDir || this.textDir;
                        return c = "auto" === c ? I.prototype._checkContextual(b) : c
                    },
                    getTextDirStyle: function(a, b) {
                        var c = this.getTextDir(a, b);
                        return c ? " direction:" + c + ";" : ""
                    },
                    enforceTextDirWithUcc: function(a, b) {
                        var c = this.getTextDir(a, b);
                        return c ? ("rtl" === c ? "\u202b" : "\u202a") + b + "\u202c" : b
                    },
                    coreModules: [x, y, z, w, v, A, B, C, E],
                    coreExtensions: [t],
                    postCreate: function() {
                        var a = this;
                        a.inherited(arguments);
                        void 0 === a.touch && (a.touch = n("ios") || n("android"));
                        a.touch ? k.add(a.domNode, "gridxTouch") : k.add(a.domNode, "gridxDesktop");
                        a.isLeftToRight() || k.add(a.domNode, "gridxRtl");
                        a.summary && a.domNode.setAttribute("summary", a.summary);
                        a.nls = l.getLocalization("gridx", "gridx", a.lang) || H;
                        a._eventFlags = {};
                        a.modules = a.coreModules.concat(a.modules || []);
                        a.modelExtensions = a.coreExtensions.concat(a.modelExtensions || []);
                        a.lastFocusNode.setAttribute("tabIndex", a.domNode.getAttribute("tabIndex"));
                        a._initEvents(a._compNames, a._eventNames);
                        a._init();
                        a.connect(d, "onFontResize", function() {
                            a.resize()
                        })
                    },
                    startup: function() {
                        this._started || (this.inherited(arguments),
                        this._deferStartup.callback())
                    },
                    destroy: function() {
                        this._uninit();
                        this.inherited(arguments)
                    },
                    resize: function(a) {
                        var b = {};
                        a && (this.autoWidth && (a.w = void 0),
                        this.autoHeight && (a.h = void 0),
                        g.setMarginBox(this.domNode, a));
                        this._onResizeBegin(a, b);
                        this._onResizeEnd(a, b)
                    },
                    _onResizeBegin: function() {},
                    _onResizeEnd: function() {},
                    _escapeId: function(a) {
                        return String(a).replace(/\\/g, "\\\\").replace(/\"/g, '\\"').replace(/\'/g, "\\'")
                    },
                    _encodeHTML: function(a) {
                        return String(a).replace(/\"/g, "\x26quot;")
                    },
                    _compNames: ["Cell", "HeaderCell", "Row", "Header"],
                    _eventNames: "TouchStart TouchEnd Click DblClick MouseDown MouseUp MouseOver MouseOut MouseMove ContextMenu KeyDown KeyPress KeyUp".split(" "),
                    _initEvents: function(a, b) {
                        for (var c = 0, h, d, e; d = a[c++]; )
                            for (h = 0; e = b[h++]; )
                                e = "on" + d + e,
                                this[e] = this[e] || F
                    },
                    _connectEvents: function(a, b, c) {
                        for (var h = this.model, d, e = this._eventNames, r = e.length, t = 0; t < r; ++t)
                            d = e[t],
                            h._cnnts.push(m(a, d.toLowerCase(), p.hitch(c, b, d)))
                    },
                    _isConnected: function(a) {
                        return this[a] !== F
                    },
                    _isCtrlKey: function(a) {
                        return n("mac") ? a.metaKey : a.ctrlKey
                    }
                })
            })
        },
        "gridx/core/Core": function() {
            define("require dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/_base/Deferred dojo/DeferredList dojo/store/Memory ./model/cache/Async ./model/Model ./Row ./Column ./Cell ./_Module".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a) {
                function h(a) {
                    var b = {}, c, h, d;
                    if (m.isArray(a))
                        for (h = 0,
                        d = a.length; h < d; ++h)
                            c = a[h],
                            c.index = h,
                            c.id = c.id || String(h + 1),
                            b[c.id] = c;
                    return b
                }
                function r(a, b) {
                    if (b)
                        for (var c in b) {
                            var h = a[c]
                              , d = b[c];
                            h && m.isObject(h) && !B(h) ? r(h, d) : a[c] = d
                        }
                }
                function t(a) {
                    var b = a.modules, c = b.length, h = [], d, e;
                    for (d = 0; d < c; ++d) {
                        e = b[d];
                        if (C(e))
                            try {
                                e = q(e)
                            } catch (M) {
                                console.error(M)
                            }
                        m.isArray(e) ? h = h.concat(e) : h.push(e)
                    }
                    b = [];
                    c = h.length;
                    for (d = 0; d < c; ++d) {
                        e = h[d];
                        B(e) && (e = {
                            moduleClass: e
                        });
                        if (e) {
                            var r = e.moduleClass;
                            if (C(r))
                                try {
                                    r = e.moduleClass = q(r)
                                } catch (M) {
                                    console.error(M)
                                }
                            if (B(r)) {
                                b.push(e);
                                continue
                            }
                        }
                        console.error("The " + (d + 1 - a.coreModules.length) + "-th declared module can NOT be found, please require it before using it:", e)
                    }
                    a.modules = b
                }
                function u(b) {
                    var c = a._modules;
                    b = b.modules;
                    var h, d, e, r, t, f, g;
                    for (h = 0; h < b.length; ++h)
                        for (r = b[h].moduleClass.prototype,
                        t = (r.forced || []).concat(r.required || []),
                        d = 0; d < t.length; ++d) {
                            f = t[d];
                            for (e = b.length - 1; 0 <= e && b[e].moduleClass.prototype.name !== f; --e)
                                ;
                            0 > e && (c[f] ? b.push({
                                moduleClass: c[f]
                            }) : (g = 1,
                            console.error("Forced/Required dependent module '" + f + "' is NOT found for '" + r.name + "' module.")))
                        }
                    if (g)
                        throw Error("Some forced/required dependent modules are NOT found.");
                }
                function x(a) {
                    for (var b = 0, c, h = {}, d = []; c = a.modules[b]; ++b)
                        h[c.moduleClass.prototype.name] = c;
                    for (b in h)
                        d.push(h[b]);
                    a.modules = d
                }
                function y(a) {
                    var b = a.modules, c, h;
                    for (c = b.length - 1; 0 <= c; --c)
                        (h = b[c].moduleClass.prototype.modelExtensions) && [].push.apply(a.modelExtensions, h)
                }
                function z(a, b, c, h, d, e) {
                    var r = h || 0;
                    h = 0 <= d ? h + d : b;
                    for (d = []; r < h && r < b; ++r)
                        d.push(a[c](r, 0, e));
                    return d
                }
                function w(a, b, c) {
                    var h, d = a._modules;
                    for (h in d)
                        h = d[h].mod,
                        a = h[c + "Mixin"],
                        B(a) && (a = a.apply(h)),
                        m.mixin(b, a || {});
                    return b
                }
                function v(a, b, c) {
                    var h = a._modules
                      , d = h[c]
                      , e = d.mod
                      , r = e.loaded;
                    d.done || (d.done = 1,
                    (new k(n.map(n.filter(d.deps, function(a) {
                        return h[a]
                    }), E(a, v, a, b)),0,1)).then(function() {
                        e.load ? e.load(d.args, b) : 0 > r.fired && r.callback()
                    }));
                    return r
                }
                var A = m.delegate
                  , B = m.isFunction
                  , C = m.isString
                  , E = m.hitch;
                return p([], {
                    setStore: function(a) {
                        this.store !== a && (this.store = a,
                        this.model.setStore(a))
                    },
                    setData: function(a, b) {
                        var c;
                        this.model.setData(a);
                        b || (c = this.model._parseStructure(a),
                        this.setColumns(c))
                    },
                    setColumns: function(a) {
                        this.structure = a;
                        this._columns = n.map(a, function(a) {
                            return m.mixin({}, a)
                        });
                        this._columnsById = h(this._columns);
                        this.edit && this.edit._init();
                        if (this.model)
                            this.model._cache.onSetColumns(this._columnsById)
                    },
                    row: function(a, b, c) {
                        "number" !== typeof a || b || (a = this.model.indexToId(a, c));
                        return this.model.byId(a) ? (this._rowObj = this._rowObj || w(this, new d(this), "row"),
                        A(this._rowObj, {
                            id: a
                        })) : null
                    },
                    column: function(a, b) {
                        var h, d, e = {};
                        "number" !== typeof a || b || (a = (h = this._columns[a]) && h.id);
                        if (h = this._columnsById[a]) {
                            this._colObj = this._colObj || w(this, new c(this), "column");
                            for (d in h)
                                void 0 === this._colObj[d] && (e[d] = h[d]);
                            return A(this._colObj, e)
                        }
                        return null
                    },
                    cell: function(a, h, e, r) {
                        if (a = a instanceof d ? a : this.row(a, e, r))
                            if (h = h instanceof c ? h : this.column(h, e))
                                return this._cellObj = this._cellObj || w(this, new b(this), "cell"),
                                A(this._cellObj, {
                                    row: a,
                                    column: h
                                });
                        return null
                    },
                    columnCount: function() {
                        return this._columns.length
                    },
                    rowCount: function(a) {
                        return this.model.size(a)
                    },
                    columns: function(a, b) {
                        return z(this, this._columns.length, "column", a, b)
                    },
                    rows: function(a, b, c) {
                        return z(this, this.rowCount(c), "row", a, b, c)
                    },
                    onModulesLoaded: function() {},
                    _init: function() {
                        var a = this, b, c = a._deferStartup = new l;
                        a.modules = a.modules || [];
                        a.modelExtensions = a.modelExtensions || [];
                        a.touch ? a.touchModules && (a.modules = a.modules.concat(a.touchModules)) : a.desktopModules && (a.modules = a.modules.concat(a.desktopModules));
                        b = a.store ? a.store : a._parseData(a.data);
                        l.when(b, function() {
                            a.setColumns(a.structure);
                            t(a);
                            u(a);
                            x(a);
                            y(a);
                            a.model = new e(a);
                            a.when = E(a.model, a.model.when);
                            a._create();
                            a._preload();
                            a._load(c).then(function() {
                                a.onModulesLoaded()
                            })
                        })
                    },
                    _uninit: function() {
                        var a = this._modules, b;
                        for (b in a)
                            a[b].mod.destroy();
                        this.model && this.model.destroy()
                    },
                    _create: function() {
                        for (var a = 0, b, c = this._modules = {}; b = this.modules[a]; ++a) {
                            var h;
                            h = b.moduleClass;
                            var d = h.prototype.name;
                            if (!c[d]) {
                                var e = b
                                  , t = h = new h(this,b);
                                b = b.moduleClass.prototype;
                                b = (b.forced || []).concat(b.optional || []);
                                c[d] = {
                                    args: e,
                                    mod: t,
                                    deps: b
                                };
                                h.getAPIPath && r(this, h.getAPIPath())
                            }
                        }
                    },
                    _preload: function() {
                        var a, b = this._modules;
                        for (a in b)
                            a = b[a],
                            a.mod.preload && a.mod.preload(a.args)
                    },
                    _load: function(a) {
                        var b = [], c;
                        for (c in this._modules)
                            b.push(v(this, a, c));
                        return new k(b,0,1)
                    },
                    _defaultData: [{
                        id: 1,
                        name: "Dojo"
                    }, {
                        id: 2,
                        name: "jQuery"
                    }, {
                        id: 3,
                        name: "ExtJS"
                    }, {
                        id: 4,
                        name: "YUI"
                    }],
                    _parseData: function(a) {
                        this.store = "object" === typeof a && a.constructor === Array ? new g({
                            data: a
                        }) : new g({
                            data: this._defaultData
                        });
                        this.structure || (this.structure = this._parseStructure(a));
                        return 1
                    },
                    _parseStructure: function(a) {
                        if (!a || "object" !== typeof a)
                            return [{
                                id: 1,
                                name: "id",
                                field: "id"
                            }, {
                                id: 2,
                                name: "name",
                                field: "name"
                            }];
                        var b = {}, c = a.length, h, d, e, r, t, f = [];
                        for (d = 0; d < c; d++)
                            for (h = Object.keys(a[d]),
                            r = h.length,
                            e = 0; e < r; e++)
                                b[h[e]] = 1;
                        for (t in b)
                            f.push({
                                id: t,
                                name: t,
                                field: t
                            });
                        return f
                    }
                })
            })
        },
        "gridx/core/model/cache/Async": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/_base/Deferred dojo/DeferredList ./Sync".split(" "), function(q, p, n, m, l, k) {
                function g(b, c, h, d) {
                    var e, f, g, u = c.range, k = b.store.getChildren;
                    c.pids = {};
                    c.pids[b.layerId()] = c.range;
                    if (k && u && u.length)
                        for (e = u.length - 1; 0 <= e; --e)
                            f = u[e],
                            g = f.parentId,
                            b.model.isId(g) || (g = b.layerId()),
                            b.model.isId(g) && (c.id.push(g),
                            c.pids[g] = c.pids[g] || [],
                            c.pids[g].push(f),
                            u.splice(e, 1));
                    e = a(b, c.id);
                    var l = [];
                    e.length ? (p.forEach(e, function(a) {
                        var c = b.idToIndex(a);
                        0 <= c && !b.treePath(a).pop() ? u.push({
                            start: c,
                            count: 1
                        }) : l.push(a)
                    }),
                    r(b, l, function(a) {
                        a.length && k ? t(b, a, function(a) {
                            a.length && console.warn("Requested row ids are not found: ", a);
                            h(c)
                        }, d) : h(c)
                    }, d)) : h(c)
                }
                function f(a, d, r, t) {
                    var f = [], g = [], u = function(a, b) {
                        0 < b.count && a < b.start + b.count && (b.count = a - b.start);
                        return b.start < a
                    }, k;
                    for (k in d.pids) {
                        var m = a._size[k]
                          , x = d.pids[k] = b(a, e(a, k, g, h(a, k, c(d.pids[k]))));
                        0 < m && (x = p.filter(x, n.partial(u, m)));
                        for (m = 0; m < x.length; ++m)
                            x[m].parentId = k;
                        [].push.apply(f, x)
                    }
                    d._req = g.length && new l(g,0,1);
                    a._requests.push(d);
                    f.length ? (new l(p.map(f, function(b) {
                        return a._storeFetch(b)
                    }),0,1)).then(r, t) : r(d)
                }
                function e(a, b, c, h) {
                    var e, r = a._requests;
                    for (a = r.length - 1; 0 <= a; --a)
                        e = r[a],
                        h = d(h, e.pids[b]),
                        h._overlap && 0 > p.indexOf(c, e._def) && c.push(e._def);
                    return h
                }
                function d(a, b) {
                    if (!b || !b.length || !a.length)
                        return a;
                    var c = [], h = 0, d, e = [];
                    d = function(a, b) {
                        var h, d;
                        for (h = a.length - 1; 0 <= h; --h) {
                            d = a[h];
                            var e = d.start
                              , r = b;
                            c[e] = c[e] || 0;
                            c[e] += r;
                            d.count && (d = d.start + d.count,
                            e = -b,
                            c[d] = c[d] || 0,
                            c[d] += e)
                        }
                    }
                    ;
                    d(a, 1);
                    d(b, 2);
                    for (var r = 0, t = c.length; r < t; ++r)
                        c[r] && (h += c[r],
                        1 === h ? e.push({
                            start: r
                        }) : (3 === h && (e._overlap = !0),
                        (d = e[e.length - 1]) && !d.count && (d.count = r - d.start)));
                    return e
                }
                function c(a) {
                    for (var b = [], c, h, d, e, r, t; 0 < a.length; ) {
                        r = d = a.pop();
                        t = 0;
                        for (c = a.length - 1; 0 <= c; --c) {
                            e = a[c];
                            d.start < e.start && (h = e,
                            e = d,
                            d = h);
                            if (e.count)
                                if (d.start <= e.start + e.count)
                                    d.count && d.start + d.count > e.start + e.count ? e.count = d.start + d.count - e.start : d.count || (e.count = null);
                                else {
                                    d = r;
                                    continue
                                }
                            a[c] = e;
                            t = 1;
                            break
                        }
                        t || b.push(r)
                    }
                    return b
                }
                function b(a, b) {
                    var c = [], h, d, e = a.pageSize;
                    for (b.sort(function(a, b) {
                        return a.start - b.start
                    }); b.length; ) {
                        h = b.shift();
                        if (b.length)
                            if (d = b[0],
                            d.count && d.count + d.start - h.start <= e) {
                                d.count = d.count + d.start - h.start;
                                d.start = h.start;
                                continue
                            } else if (!d.count && d.start - h.start < e) {
                                d.start = h.start;
                                continue
                            }
                        c.push(h)
                    }
                    1 == c.length && c[0].count < e && (c[0].count = e);
                    return c
                }
                function a(a, b) {
                    var c = a._cache;
                    return p.filter(b, function(a) {
                        return !c[a]
                    })
                }
                function h(a, b, c) {
                    var h, d, e, r, t, f = [], g = a._struct[b] || [], u = a._size[b];
                    for (h = c.length - 1; 0 <= h; --h) {
                        e = c[h];
                        r = e.count ? e.start + e.count : g.length - 1;
                        t = 1;
                        for (d = e.start; d < r; ++d) {
                            var k = g[d + 1];
                            k && a._cache[k] ? t = 1 : (t ? f.push({
                                parentId: b,
                                start: d,
                                count: 1
                            }) : ++f[f.length - 1].count,
                            t = 0)
                        }
                        e.count || (t ? (0 > u || d < u) && f.push({
                            parentId: b,
                            start: d
                        }) : delete f[f.length - 1].count)
                    }
                    return f
                }
                function r(b, c, h, d) {
                    var e = b._struct[""], r = [], t, f;
                    if (c.length) {
                        for (var g = 1, u = e.length; g < u; ++g)
                            e[g] || (f ? t.count++ : (f = 1,
                            r.push(t = {
                                start: g - 1,
                                count: 1
                            })));
                        r.push({
                            start: 2 > e.length ? 0 : e.length - 2
                        })
                    }
                    var k = function(c) {
                        c.length && r.length ? b._storeFetch(r.shift()).then(function() {
                            k(a(b, c))
                        }, d) : h(c)
                    };
                    k(c)
                }
                function t(b, c, h, d) {
                    var e = b._struct
                      , r = e[""].slice(1)
                      , t = function(c) {
                        if (c.length && r.length) {
                            var f = r.shift();
                            b._storeFetch({
                                parentId: f
                            }).then(function() {
                                [].push.apply(r, e[f].slice(1));
                                t(a(b, c))
                            }, d)
                        } else
                            h(c)
                    };
                    t(c)
                }
                var u = n.hitch;
                return q(k, {
                    isAsync: !0,
                    constructor: function(a, b) {
                        var c = parseInt(b.cacheSize, 10)
                          , h = parseInt(b.pageSize, 10);
                        this.cacheSize = 0 <= c ? c : -1;
                        this.pageSize = 0 < h ? h : 100
                    },
                    when: function(a, b) {
                        var c = this
                          , h = a._def = new m
                          , d = u(h, h.errback)
                          , e = function(a) {
                            c._requests.pop();
                            d(a)
                        };
                        g(c, a, function(a) {
                            f(c, a, function(a) {
                                m.when(a._req, function() {
                                    var a;
                                    if (b)
                                        try {
                                            b()
                                        } catch (I) {
                                            a = I
                                        }
                                    c._requests.shift();
                                    a ? h.errback(a) : h.callback()
                                }, e)
                            }, e)
                        }, d);
                        return h
                    },
                    keep: function(a, b) {
                        var c = this._kept;
                        this._cache[a] && this._struct[a] && !c[a] && (c[a] = 1,
                        ++this._keptSize);
                        c[a] && !this._lock[a] && b && (this._lock[a] = 1,
                        ++this._lockSize)
                    },
                    free: function(a, b) {
                        this.model.isId(a) ? this._kept[a] && (this._lock[a] ? b && (delete this._lock[a],
                        --this._lockSize) : (delete this._kept[a],
                        --this._keptSize)) : (this._kept = n.clone(this._lock),
                        this._keptSize = this._lockSize)
                    },
                    clear: function() {
                        this._requests && this._requests.length ? this._clearLock = 1 : (this.inherited(arguments),
                        this._requests = [],
                        this._priority = [],
                        this._kept = {},
                        this._lock = {},
                        this._lockSize = this._keptSize = 0)
                    },
                    _init: function() {},
                    _checkSize: function() {
                        var a, b = this.cacheSize, c = this._priority;
                        if (this._clearLock)
                            this._clearLock = 0,
                            this.clear();
                        else if (0 <= b)
                            for (b += this._keptSize; c.length > b; )
                                a = c.shift(),
                                this._kept[a] ? c.push(a) : delete this._cache[a]
                    }
                })
            })
        },
        "gridx/core/model/cache/Sync": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/_base/Deferred dojox/html/entities ../_Extension".split(" "), function(q, p, n, m, l, k) {
                function g(c) {
                    for (var b = c._struct, a = b[""].slice(1), h, d = function(c) {
                        [].push.apply(a, b[c].slice(1))
                    }; a.length; )
                        h = a.shift(),
                        c._storeFetch({
                            parentId: h
                        }).then(n.partial(d, h))
                }
                var f = n.hitch
                  , e = n.mixin
                  , d = p.indexOf;
                return q(k, {
                    constructor: function(c, b) {
                        this.setStore(b.store);
                        this.columns = n.mixin({}, b.columnsById || b._columnsById);
                        this._mixinAPI("byIndex", "byId", "indexToId", "idToIndex", "size", "treePath", "rootId", "parentId", "hasChildren", "children", "keep", "free", "layerId", "setLayer", "layerUp")
                    },
                    destroy: function() {
                        this.inherited(arguments);
                        this._layer = "";
                        this.clear()
                    },
                    setStore: function(c) {
                        var b = this
                          , a = c.fetch;
                        b.destroy();
                        b._cnnts = [];
                        b.store = c;
                        !a && c.notify ? b.aspect(c, "notify", function(a, c) {
                            void 0 === a ? b._onDelete(c) : void 0 === c ? b._onNew(a) : b._onSet(a)
                        }) : (b.aspect(c, a ? "onSet" : "put", "_onSet"),
                        b.aspect(c, a ? "onNew" : "add", "_onNew"),
                        b.aspect(c, a ? "onDelete" : "remove", "_onDelete"))
                    },
                    when: function(c, b) {
                        var a = new m;
                        try {
                            b && b(),
                            a.callback()
                        } catch (h) {
                            a.errback(h)
                        }
                        return a
                    },
                    clear: function() {
                        this._filled = 0;
                        this._priority = [];
                        this._struct = {};
                        this._cache = {};
                        this._size = {};
                        this._struct[""] = [];
                        this._size[""] = -1;
                        this.totalSize = void 0
                    },
                    layerId: function() {
                        return this._layer
                    },
                    setLayer: function(c) {
                        this._layer = c;
                        this.model._msg("storeChange");
                        this.model._onSizeChange()
                    },
                    layerUp: function() {
                        var c = this.parentId(this._layer);
                        this.setLayer(c)
                    },
                    byIndex: function(c, b) {
                        this._init();
                        return this._cache[this.indexToId(c, b)]
                    },
                    byId: function(c) {
                        this._init();
                        var b = this._cache[c];
                        b && !b.data && "function" === typeof b._data && (b.data = b._data());
                        return this._cache[c]
                    },
                    indexToId: function(c, b) {
                        this._init();
                        var a = this._struct[this.model.isId(b) ? b : this.layerId()];
                        return "number" === typeof c && 0 <= c ? a && a[c + 1] : void 0
                    },
                    idToIndex: function(c) {
                        this._init();
                        var b = this._struct;
                        c = d(b[b[c] && b[c][0]] || [], c);
                        return 0 < c ? c - 1 : -1
                    },
                    treePath: function(c) {
                        this._init();
                        for (var b = this._struct, a = []; void 0 !== c; )
                            a.unshift(c),
                            c = b[c] && b[c][0];
                        "" !== a[0] ? a = [] : a.pop();
                        return a
                    },
                    rootId: function(c) {
                        var b = this.treePath(c);
                        return 1 < b.length ? b[1] : b.length ? c : null
                    },
                    parentId: function(c) {
                        return this.treePath(c).pop()
                    },
                    hasChildren: function(c) {
                        var b = this.store, a;
                        this._init();
                        a = this.byId(c);
                        return b.hasChildren && b.hasChildren(c, a && a.item) && b.getChildren
                    },
                    children: function(c) {
                        this._init();
                        c = this.model.isId(c) ? c : "";
                        for (var b = this._size[c], a = [], h = 0; h < b; ++h)
                            a.push(this.indexToId(h, c));
                        return a
                    },
                    size: function(c) {
                        this._init();
                        c = this._size[this.model.isId(c) ? c : this.layerId()];
                        return 0 <= c ? c : -1
                    },
                    keep: function() {},
                    free: function() {},
                    onBeforeFetch: function() {},
                    onAfterFetch: function() {},
                    onLoadRow: function() {},
                    onSetColumns: function(c) {
                        var b, a, h, d;
                        this.columns = n.mixin({}, c);
                        for (b in this._cache)
                            for (h in a = this._cache[b],
                            c)
                                d = c[h],
                                a.data = a._data(),
                                a.data[h] = this._formatCell(a.rawData, b, d.id)
                    },
                    _init: function() {
                        this._filled || (this._storeFetch({
                            start: 0
                        }),
                        this.store.getChildren && g(this),
                        this.model._onSizeChange())
                    },
                    _itemToObject: function(c) {
                        var b = this.store
                          , a = {};
                        return b.fetch ? (p.forEach(b.getAttributes(c), function(h) {
                            a[h] = b.getValue(c, h)
                        }),
                        a) : c
                    },
                    _formatCell: function(c, b, a) {
                        var h = this.columns[a];
                        c = h.formatter ? h.formatter(c, b) : c[h.field || a];
                        return this.columns[a] && !0 === this.columns[a].encode && "string" === typeof c ? l.encode(c) : c
                    },
                    _formatRow: function(c, b) {
                        var a = this.columns, h = {}, d;
                        for (d in a)
                            h[d] = this._formatCell(c, b, d);
                        return h
                    },
                    _addRow: function(c, b, a, h, e) {
                        var r = this._struct
                          , g = this._priority;
                        e = this.model.isId(e) ? e : "";
                        var k = r[e];
                        if (!k)
                            throw Error("Fatal error of _Cache._addRow: parent item " + e + " of " + c + " is not loaded");
                        var l = k[b + 1];
                        this.model.isId(l) && l !== c && console.error("Error of _Cache._addRow: different row id " + c + " and " + k[b + 1] + " for same row index " + b);
                        k[b + 1] = c;
                        r[c] = r[c] || [e];
                        "" === e && (b = d(g, c),
                        0 <= b && g.splice(b, 1),
                        g.push(c));
                        this._cache[c] = {
                            _data: f(this, this._formatRow, a, c),
                            rawData: a,
                            item: h
                        };
                        this.onLoadRow(c)
                    },
                    _storeFetch: function(c, b) {
                        function a(a) {
                            d._size[k] = parseInt(a, 10)
                        }
                        function h(a) {
                            if (a.ioArgs && a.ioArgs.xhr) {
                                var b = p.ioArgs.xhr.getResponseHeader("Content-Range");
                                b && (b = b.match(/(.+)\//)) ? d.totalSize = +b[1] : d.totalSize = void 0
                            }
                            try {
                                for (var h = c.start || 0, b = 0, e; e = a[b]; ++b)
                                    d._addRow(t.getIdentity(e), h + b, d._itemToObject(e), e, k);
                                g.callback()
                            } catch (E) {
                                g.errback(E)
                            }
                        }
                        var d = this, t = d.store, g = new m, k = d.model.isId(c.parentId) ? c.parentId : "", l = e({}, d.options || {}, c), n = f(g, g.errback), p;
                        d._filled = 1;
                        d.onBeforeFetch(l);
                        "" === k ? t.fetch ? t.fetch(e(l, {
                            onBegin: a,
                            onComplete: h,
                            onError: n
                        })) : (p = t.query(l.query || {}, l),
                        m.when(p.total, a),
                        m.when(p, h, n)) : d.hasChildren(k) ? (p = t.getChildren(d.byId(k).item, l),
                        "total"in p ? m.when(p.total, a) : m.when(p, function(b) {
                            a(b.length)
                        }),
                        m.when(p, h, n)) : g.callback();
                        g.then(function() {
                            d.onAfterFetch()
                        });
                        return g
                    },
                    _onSet: function(c, b) {
                        var a = this.store.getIdentity(c)
                          , h = this.idToIndex(a)
                          , d = this.treePath(a)
                          , e = this._cache[a];
                        d.length && this._addRow(a, h, this._itemToObject(c), c, d.pop());
                        if (!b || !1 !== b.overwrite)
                            this.onSet(a, h, this._cache[a], e)
                    },
                    _onNew: function(c, b) {
                        var a = this.store
                          , h = this._itemToObject(c)
                          , d = b && b[a.fetch ? "item" : "parent"];
                        d && a.getIdentity(d);
                        var a = a.getIdentity(c)
                          , e = this._size[""];
                        this.clear();
                        this.onNew(a, 0, {
                            _data: f(this, this._formatRow, h, a),
                            rawData: h,
                            item: c
                        });
                        !d && 0 <= e && (this._size[""] = e + 1,
                        0 <= this.totalSize && (this.totalSize = e + 1),
                        this.model._onSizeChange())
                    },
                    _onDelete: function(c) {
                        var b = this.store
                          , a = this._struct;
                        c = b.fetch ? b.getIdentity(c) : c;
                        b = this.treePath(c);
                        if (b.length) {
                            var h, e, t, f = [c], g = b[b.length - 1], k = this._size, l = k[""], m = d(a[g], c);
                            a[g].splice(m, 1);
                            --k[g];
                            for (e = 0; e < f.length; ++e)
                                if (h = a[f[e]])
                                    for (t = h.length - 1; 0 < t; --t)
                                        f.push(h[t]);
                            for (e = f.length - 1; 0 <= e; --e)
                                if (t = f[e],
                                delete this._cache[t],
                                delete a[t],
                                delete k[t],
                                e !== f.length - 1)
                                    this.onDelete(t, void 0, this.treePath(t));
                            e = d(this._priority, c);
                            0 <= e && this._priority.splice(e, 1);
                            this.onDelete(c, m - 1, b);
                            !g && 0 <= l && (k[""] = l - 1,
                            0 <= this.totalSize && (this.totalSize = l - 1),
                            this.model._onSizeChange())
                        } else
                            this.clear(),
                            this.onDelete(c)
                    }
                })
            })
        },
        "gridx/core/model/_Extension": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/aspect"], function(q, p, n) {
                return q([], {
                    constructor: function(m) {
                        var l = this.inner = m._model;
                        this._cnnts = [];
                        this.model = m;
                        m._model = this;
                        l && (this.aspect(l, "onDelete", "_onDelete"),
                        this.aspect(l, "onNew", "_onNew"),
                        this.aspect(l, "onSet", "_onSet"))
                    },
                    destroy: function() {
                        for (var m = 0, l = this._cnnts.length; m < l; ++m)
                            this._cnnts[m].remove()
                    },
                    aspect: function(m, l, k, g, f) {
                        m = n[f || "after"](m, l, p.hitch(g || this, k), 1);
                        this._cnnts.push(m);
                        return m
                    },
                    _onNew: function() {
                        this.onNew.apply(this, arguments)
                    },
                    _onSet: function() {
                        this.onSet.apply(this, arguments)
                    },
                    _onDelete: function() {
                        this.onDelete.apply(this, arguments)
                    },
                    onNew: function() {},
                    onDelete: function() {},
                    onSet: function() {},
                    _call: function(m, l) {
                        var k = this[m]
                          , g = this.inner;
                        return k ? k.apply(this, l || []) : g && g._call(m, l)
                    },
                    _mixinAPI: function() {
                        var m, l = this.model, k = arguments, g = function(f) {
                            return function() {
                                return l._model._call(f, arguments)
                            }
                        };
                        for (m = k.length - 1; 0 <= m; --m)
                            l[k[m]] = g(k[m])
                    }
                })
            })
        },
        "gridx/core/model/Model": function() {
            define("require dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/_base/Deferred dojo/DeferredList dojo/aspect dojo/store/Memory dojo/store/JsonRest ./cache/Sync ./cache/Async".split(" "), function(q, p, n, m, l, k, g, f, e, d, c) {
                function b(a) {
                    return a || 0 === a
                }
                function a(a) {
                    return "number" == typeof a && 0 <= a
                }
                function h(c, h) {
                    var d, e = [], f = [], g = {
                        range: e,
                        id: f
                    }, k = function(b) {
                        if (b && a(b.start))
                            e.push(b);
                        else if (a(b))
                            e.push({
                                start: b,
                                count: 1
                            });
                        else if (r(b))
                            for (d = b.length - 1; 0 <= d; --d)
                                if (a(b[d]))
                                    e.push({
                                        start: b[d],
                                        count: 1
                                    });
                                else {
                                    var c = b[d];
                                    c && a(c.start) ? e.push(b[d]) : t(b) && f.push(b[d])
                                }
                        else
                            t(b) && f.push(b)
                    };
                    if (h && (h.index || h.range || h.id))
                        if (k(h.index),
                        k(h.range),
                        r(h.id))
                            for (d = h.id.length - 1; 0 <= d; --d)
                                f.push(h.id[d]);
                        else
                            b(h.id) && f.push(h.id);
                    else
                        k(h);
                    !e.length && !f.length && 0 > c.size() && e.push({
                        start: 0,
                        count: c._cache.pageSize || 1
                    });
                    return g
                }
                var r = m.isArrayLike
                  , t = m.isString;
                return p([], {
                    constructor: function(a) {
                        var b = a.cacheClass || d
                          , b = "string" == typeof b ? q(b) : b;
                        this.store = a.store;
                        this._exts = {};
                        this._cmdQueue = [];
                        this._model = this._cache = new b(this,a);
                        this._createExts(a.modelExtensions || [], a);
                        a = this._model;
                        this._cnnts = [g.after(a, "onDelete", m.hitch(this, "onDelete"), 1), g.after(a, "onNew", m.hitch(this, "onNew"), 1), g.after(a, "onSet", m.hitch(this, "onSet"), 1)]
                    },
                    destroy: function() {
                        n.forEach(this._cnnts, function(a) {
                            a.remove()
                        });
                        for (var a in this._exts)
                            this._exts[a].destroy();
                        this._cache.destroy()
                    },
                    clearCache: function() {
                        this._cache.clear()
                    },
                    isId: b,
                    setStore: function(a) {
                        this.store = a;
                        this._cache.setStore(a)
                    },
                    when: function(a, b, c) {
                        this._oldSize = this.size();
                        this._addCmd({
                            name: "_cmdRequest",
                            scope: this,
                            args: arguments,
                            async: 1
                        });
                        return this._exec()
                    },
                    scan: function(a, b) {
                        var c = new l
                          , h = a.start || 0
                          , d = a.pageSize || this._cache.pageSize || 1
                          , e = a.count
                          , r = 0 < e ? h + e : Infinity
                          , t = a.whenScope || this
                          , f = a.whenFunc || t.when
                          , g = function(a) {
                            c.progress(a / (0 < e ? a + e : t.size()));
                            f.call(t, {
                                id: [],
                                range: [{
                                    start: a,
                                    count: d
                                }]
                            }, function() {
                                var c, h, e = [];
                                for (c = a; c < a + d && c < r; ++c)
                                    if (h = t.byIndex(c))
                                        e.push(h);
                                    else {
                                        r = -1;
                                        break
                                    }
                                if (b(e, a) || c == r)
                                    r = -1
                            }).then(function() {
                                -1 == r ? c.callback() : g(a + d)
                            })
                        };
                        g(h);
                        return c
                    },
                    _sizeAll: function(a) {
                        var b = this.size(a), c, h, d, b = -1 === b ? 0 : b;
                        c = 0 + b;
                        for (h = 0; h < b; h++)
                            d = this.indexToId(h, a),
                            c += this._sizeAll(d);
                        return c
                    },
                    onDelete: function() {},
                    onNew: function() {},
                    onSet: function() {},
                    onSizeChange: function() {},
                    _msg: function() {},
                    _addCmd: function(a) {
                        var b = this._cmdQueue
                          , c = b[b.length - 1];
                        c && c.name == a.name && c.scope == a.scope ? c.args.push(a.args || []) : (a.args = [a.args || []],
                        b.push(a))
                    },
                    _onSizeChange: function() {
                        var a = this._oldSize
                          , b = this._oldSize = this.size();
                        if (a != b)
                            this.onSizeChange(b, a)
                    },
                    _cmdRequest: function() {
                        var a = this;
                        return new k(n.map(arguments, function(b) {
                            var c = b[0]
                              , d = function() {
                                a._onSizeChange();
                                b[1] && b[1].call(b[2])
                            };
                            return null !== c && b.length ? a._model._call("when", [h(a, c), d]) : (c = new l,
                            d(),
                            c.callback(),
                            c)
                        }),0,1)
                    },
                    _exec: function() {
                        var a = this
                          , b = a._cache
                          , c = new l
                          , h = a._cmdQueue
                          , d = function(c, h) {
                            a._busy = 0;
                            b._checkSize && b._checkSize();
                            h ? c.errback(h) : c.callback()
                        }
                          , e = function() {
                            if (n.some(h, function(a) {
                                return "_cmdRequest" == a.name
                            }))
                                try {
                                    for (; h.length; ) {
                                        var a = h.shift()
                                          , b = a.scope[a.name].apply(a.scope, a.args);
                                        if (a.async) {
                                            l.when(b, e, m.partial(d, c));
                                            return
                                        }
                                    }
                                } catch (C) {
                                    d(c, C);
                                    return
                                }
                            d(c)
                        };
                        if (a._busy)
                            return a._busy;
                        a._busy = c;
                        e();
                        return c
                    },
                    _createExts: function(a, b) {
                        a = n.filter(n.map(a, function(a) {
                            return "string" == typeof a ? q(a) : a
                        }), function(a) {
                            return a && a.prototype
                        });
                        a.sort(function(a, b) {
                            return a.prototype.priority - b.prototype.priority
                        });
                        for (var c = 0, h = a.length; c < h; ++c)
                            if (c == a.length - 1 || a[c] != a[c + 1]) {
                                var d = new a[c](this,b);
                                this._exts[d.name] = d
                            }
                    }
                })
            })
        },
        "gridx/core/Row": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/_base/Deferred"], function(q, p, n) {
                return q([], {
                    constructor: function(m, l) {
                        this.grid = m;
                        this.model = m.model;
                        this.id = l
                    },
                    index: function() {
                        return this.model.idToIndex(this.id)
                    },
                    parent: function() {
                        return this.grid.row(this.model.parentId(this.id), 1)
                    },
                    cell: function(m, l) {
                        return this.grid.cell(this, m, l)
                    },
                    cells: function(m, l) {
                        for (var k = this.grid, g = [], f = k._columns, e = f.length, d = m || 0, c = 0 <= l ? m + l : e; d < c && d < e; ++d)
                            g.push(k.cell(this.id, f[d].id, 1));
                        return g
                    },
                    data: function() {
                        return this.model.byId(this.id).data
                    },
                    rawData: function() {
                        return this.model.byId(this.id).rawData
                    },
                    item: function() {
                        return this.model.byId(this.id).item
                    },
                    setRawData: function(m) {
                        var l = this.grid.store, k = this.item(), g, f;
                        if (l.setValue) {
                            f = new n;
                            try {
                                for (g in m)
                                    l.setValue(k, g, m[g]);
                                l.save({
                                    onComplete: p.hitch(f, f.callback),
                                    onError: p.hitch(f, f.errback)
                                })
                            } catch (e) {
                                f.errback(e)
                            }
                        }
                        return f || n.when(l.put(p.mixin(p.clone(k), m)))
                    }
                })
            })
        },
        "gridx/core/Column": function() {
            define(["dojo/_base/declare"], function(q) {
                return q([], {
                    constructor: function(p, n) {
                        this.grid = p;
                        this.model = p.model;
                        this.id = n
                    },
                    index: function() {
                        var p = this.def();
                        return p ? p.index : -1
                    },
                    def: function() {
                        return this.grid._columnsById[this.id]
                    },
                    cell: function(p, n, m) {
                        return this.grid.cell(p, this, n, m)
                    },
                    cells: function(p, n, m) {
                        var l = this.grid
                          , k = []
                          , g = l.rowCount(m)
                          , f = p || 0;
                        for (p = 0 <= n ? p + n : g; f < p && f < g; ++f)
                            k.push(l.cell(f, this, 0, m));
                        return k
                    },
                    name: function() {
                        return this.def().name || ""
                    },
                    setName: function(p) {
                        this.def().name = p;
                        return this
                    },
                    field: function() {
                        return this.def().field || null
                    },
                    getWidth: function() {
                        return this.def().width
                    }
                })
            })
        },
        "gridx/core/Cell": function() {
            define(["dojo/_base/declare"], function(q) {
                return q([], {
                    constructor: function(p, n, m) {
                        this.grid = p;
                        this.model = p.model;
                        this.row = n;
                        this.column = m
                    },
                    data: function() {
                        return this.model.byId(this.row.id).data[this.column.id]
                    },
                    rawData: function() {
                        var p = this.column.field();
                        return p && this.model.byId(this.row.id).rawData[p]
                    },
                    setRawData: function(p) {
                        var n = {}
                          , m = this.column.field();
                        if (m)
                            return n[m] = p,
                            this.row.setRawData(n)
                    }
                })
            })
        },
        "gridx/core/_Module": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/Deferred dojo/_base/connect dojo/aspect".split(" "), function(q, p, n, m, l, k) {
                var g = p.isFunction;
                q = q([], {
                    constructor: function(e, d) {
                        this.grid = e;
                        this.model = e.model;
                        this.loaded = new m;
                        this._cnnts = [];
                        this._sbscs = [];
                        p.mixin(this, d)
                    },
                    destroy: function() {
                        var e = n.forEach;
                        e(this._cnnts, l.disconnect);
                        e(this._sbscs, l.unsubscribe)
                    },
                    getAPIPath: function() {
                        var e = {};
                        e[this.name] = this;
                        return e
                    },
                    arg: function(e, d, c) {
                        2 == arguments.length && g(d) && (c = d,
                        d = void 0);
                        var b = this.grid
                          , a = this[e];
                        if (!this.hasOwnProperty(e)) {
                            var h = this.name + e.substring(0, 1).toUpperCase() + e.substring(1);
                            void 0 === b[h] ? void 0 !== d && (a = d) : a = b[h]
                        }
                        this[e] = c && !c(a) ? d : a;
                        return a
                    },
                    aspect: function(e, d, c, b, a) {
                        e = k[a || "after"](e, d, p.hitch(b || this, c), 1);
                        this._cnnts.push(e);
                        return e
                    },
                    connect: function(e, d, c, b, a) {
                        var h = this.grid
                          , r = b || this;
                        e = e === h && "string" == typeof d ? l.connect(e, d, function() {
                            var b = arguments;
                            h._eventFlags[d] === a && (g(c) ? c.apply(r, b) : g(r[c]) && r[c].apply(r, b))
                        }) : l.connect(e, d, r, c);
                        this._cnnts.push(e);
                        return e
                    },
                    batchConnect: function() {
                        for (var e = 0, d = arguments, c = d.length; e < c; ++e)
                            p.isArrayLike(d[e]) && this.connect.apply(this, d[e])
                    },
                    subscribe: function(e, d, c) {
                        e = l.subscribe(e, c || this, d);
                        this._sbscs.push(e);
                        return e
                    }
                });
                var f = q._modules = {};
                q.register = function(e) {
                    var d = e.prototype;
                    return f[d.name || d.declaredClass] = e
                }
                ;
                return q
            })
        },
        "gridx/core/model/extensions/Query": function() {
            define(["dojo/_base/declare", "../_Extension"], function(q, p) {
                return q(p, {
                    name: "query",
                    priority: 40,
                    constructor: function(n, m) {
                        this._mixinAPI("query");
                        this._cmdQuery(0, 0, [m.query, m.queryOptions])
                    },
                    query: function() {
                        this.model._addCmd({
                            name: "_cmdQuery",
                            scope: this,
                            args: arguments
                        })
                    },
                    _cmdQuery: function() {
                        var n = arguments
                          , n = n[n.length - 1]
                          , m = this.model
                          , l = m._cache
                          , k = l.options = l.options || {};
                        k.query = n[0];
                        k.queryOptions = n[1];
                        m._msg("storeChange");
                        l.clear()
                    }
                })
            })
        },
        "gridx/modules/Header": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/dom-construct dojo/dom-class dojo/dom-geometry dojo/query dojo/_base/sniff dojo/on dojo/keys ../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e, d, c) {
                return q(c, {
                    name: "header",
                    constructor: function() {
                        var b = this.domNode = m.create("div", {
                            "class": "gridxHeaderRow",
                            role: "presentation"
                        });
                        this.innerNode = m.create("div", {
                            "class": "gridxHeaderRowInner",
                            role: "row"
                        });
                        this.grid._connectEvents(b, "_onEvent", this)
                    },
                    preload: function(b) {
                        var a = this
                          , c = a.grid;
                        a.domNode.appendChild(a.innerNode);
                        a._build();
                        c.headerNode.appendChild(a.domNode);
                        c.vLayout.register(a, "domNode", "headerNode");
                        a.aspect(c, "onHScroll", "_onHScroll");
                        f("ff") && a.aspect(c, "onModulesLoaded", function() {
                            a._onHScroll(a._scrollLeft)
                        });
                        c.columnResizer && a.aspect(c.columnResizer, "onResize", function() {
                            "none" == c.hScrollerNode.style.display && a._onHScroll(0)
                        });
                        a.aspect(c, "onHeaderCellMouseOver", function() {
                            c.vLayout.reLayout()
                        });
                        a.aspect(c, "onHeaderCellMouseOut", function() {
                            c.vLayout.reLayout();
                            setTimeout(function() {
                                c.vLayout.reLayout()
                            }, 0)
                        });
                        a._initFocus()
                    },
                    destroy: function() {
                        this.inherited(arguments);
                        m.destroy(this.domNode)
                    },
                    columnMixin: {
                        headerNode: function() {
                            return this.grid.header.getHeaderNode(this.id)
                        }
                    },
                    hidden: !1,
                    getHeaderNode: function(b) {
                        return g("[colid\x3d'" + this.grid._escapeId(b) + "']", this.domNode)[0]
                    },
                    refresh: function() {
                        this._build();
                        this._onHScroll(this._scrollLeft);
                        this.grid.vLayout.reLayout();
                        this.onRender()
                    },
                    onRender: function() {},
                    onMoveToHeaderCell: function() {},
                    _scrollLeft: 0,
                    _build: function() {
                        var b = this
                          , a = b.grid
                          , c = a.focus
                          , d = ['\x3ctable role\x3d"presentation" border\x3d"0" cellpadding\x3d"0" cellspacing\x3d"0"\x3e\x3ctr\x3e'];
                        n.forEach(a._columns, function(h) {
                            h._domId = (a.id + "-" + h.id).replace(/\s+/, "");
                            d.push('\x3ctd id\x3d"', h._domId, '" role\x3d"columnheader" aria-readonly\x3d"true" tabindex\x3d"-1" colid\x3d"', h.id, '" class\x3d"gridxCell ', c && "header" == c.currentArea() && h.id == b._focusHeaderId ? b._focusClass : "", (p.isFunction(h.headerClass) ? h.headerClass(h) : h.headerClass) || "", '" style\x3d"width:', h.width, ";min-width:", h.width, ";", a.getTextDirStyle(h.id, h.name), (p.isFunction(h.headerStyle) ? h.headerStyle(h) : h.headerStyle) || "", '"\x3e\x3cdiv class\x3d"gridxSortNode"\x3e', (p.isFunction(h.headerFormatter) ? h.headerFormatter(h) : h.name) || "", "\x3c/div\x3e\x3c/td\x3e")
                        });
                        d.push("\x3c/tr\x3e\x3c/table\x3e");
                        b.innerNode.innerHTML = d.join("");
                        l.toggle(b.domNode, "gridxHeaderRowHidden", b.arg("hidden"))
                    },
                    _onHScroll: function(b) {
                        (f("webkit") || 8 > f("ie")) && !this.grid.isLeftToRight() && (b = this.innerNode.scrollWidth - this.innerNode.offsetWidth - b);
                        this.innerNode.scrollLeft = this._scrollLeft = b
                    },
                    _onEvent: function(b, a) {
                        var c = this.grid
                          , d = "onHeaderCell" + b
                          , t = "onHeader" + b;
                        this._decorateEvent(a);
                        0 <= a.columnIndex && (c[d](a),
                        e.emit(a.target, "headerCell" + b, a));
                        c[t](a);
                        e.emit(a.target, "header" + b, a)
                    },
                    _decorateEvent: function(b) {
                        var a = g(b.target).closest(".gridxCell", this.domNode)[0]
                          , c = a && this.grid._columnsById[a.getAttribute("colid")];
                        c && (b.headerCellNode = a,
                        b.columnId = c.id,
                        b.columnIndex = c.index)
                    },
                    _focusHeaderId: null,
                    _focusClass: "gridxHeaderCellFocus",
                    _initFocus: function() {
                        var b = this
                          , a = b.grid;
                        a.focus && a.focus.registerArea({
                            name: "header",
                            priority: 0,
                            focusNode: b.innerNode,
                            scope: b,
                            doFocus: b._doFocus,
                            doBlur: b._blurNode,
                            onBlur: b._blurNode,
                            connects: a.touch ? [b.aspect(a, "onHeaderCellTouchStart", function(a) {
                                l.add(a.headerCellNode, b._focusClass)
                            }), b.aspect(a, "onHeaderCellTouchEnd", function(a) {
                                l.remove(a.headerCellNode, b._focusClass)
                            })] : [b.aspect(a, "onHeaderCellKeyDown", "_onKeyDown"), b.connect(a, "onHeaderCellMouseDown", function(a) {
                                b._focusNode(b.getHeaderNode(a.columnId))
                            })]
                        })
                    },
                    _doFocus: function(b, a) {
                        if (!this.hidden) {
                            var c = this._focusHeaderId && this.getHeaderNode(this._focusHeaderId)
                              , c = this._focusNode(c || g(".gridxCell", this.domNode)[0]);
                            this.grid.focus.stopEvent(c && b);
                            return c
                        }
                        return !1
                    },
                    _focusNode: function(b) {
                        if (b) {
                            var a = this
                              , c = a.grid
                              , d = a._focusHeaderId = b.getAttribute("colid");
                            if (d)
                                return a._blurNode(),
                                c.body._focusCellCol = c._columnsById[d].index,
                                l.add(b, a._focusClass),
                                setTimeout(function() {
                                    f("webkit") && l.add(b, a._focusClass);
                                    b.focus();
                                    8 > f("ie") && (a.innerNode.scrollLeft = a._scrollLeft);
                                    c.hScroller && c.hScroller.scrollToColumn(d, a.innerNode)
                                }, 0),
                                !0
                        }
                        return !1
                    },
                    _blurNode: function() {
                        var b = g("." + this._focusClass, this.innerNode)[0];
                        b && l.remove(b, this._focusClass);
                        return !0
                    },
                    _onKeyDown: function(b) {
                        var a = this.grid, c;
                        c = a.isLeftToRight() ? 1 : -1;
                        var e = b.keyCode == d.LEFT_ARROW ? -c : c;
                        this._focusHeaderId && !a._isCtrlKey(b) && !b.altKey && (b.keyCode == d.LEFT_ARROW || b.keyCode == d.RIGHT_ARROW) && (a.focus.stopEvent(b),
                        c = a._columnsById[this._focusHeaderId],
                        c = a._columns[c.index + e]) && (this._focusNode(this.getHeaderNode(c.id)),
                        this.onMoveToHeaderCell(c.id, b))
                    }
                })
            })
        },
        "gridx/modules/View": function() {
            define(["dojo/_base/declare", "dojo/_base/array", "dojo/_base/lang", "dojo/_base/Deferred", "../core/_Module"], function(q, p, n, m, l) {
                return q(l, {
                    name: "view",
                    load: function(k) {
                        var g = this
                          , f = g.model;
                        k = g.grid;
                        var e = k.persist ? k.persist.registerAndLoad("tree", function() {
                            return g._openInfo
                        }) : {};
                        g._clear();
                        g.aspect(f, "onSizeChange", "_onSizeChange");
                        g.aspect(f, "onDelete", "_onDelete");
                        g.aspect(f, "setStore", function() {
                            g.arg("clearOnSetStore") && g._clear()
                        }, g, "before");
                        g.aspect(f, "_msg", "_receiveMsg");
                        g._loadLevels(e).then(function() {
                            var d = g._openInfo[""].count = f.size();
                            g.rootCount = g.rootCount || d - g.rootStart;
                            g.rootStart + g.rootCount > d && (g.rootCount = d - g.rootStart);
                            for (var c in e)
                                g._expand(c);
                            g._updateVC();
                            g.loaded.callback()
                        }, function(d) {
                            g._err = d;
                            g.loaded.callback()
                        })
                    },
                    rowMixin: {
                        visualIndex: function() {
                            return this.grid.view.getRowInfo({
                                rowId: this.id
                            }).visualIndex
                        }
                    },
                    clearOnSetStore: !0,
                    rootStart: 0,
                    rootCount: 0,
                    visualCount: 0,
                    getRowInfo: function(k) {
                        var g = this.model
                          , f = k.rowId;
                        g.isId(f) && (k.rowIndex = g.idToIndex(f),
                        k.parentId = g.parentId(f));
                        if ("number" == typeof k.rowIndex && 0 <= k.rowIndex)
                            g.isId(k.parentId) || (k.parentId = ""),
                            k.visualIndex = this._getVisualIndex(k.parentId, k.rowIndex);
                        else if ("number" == typeof k.visualIndex && 0 <= k.visualIndex) {
                            var e = g.layerId();
                            if (g.isId(e))
                                k.rowIndex = k.visualIndex,
                                k.parentId = e;
                            else {
                                for (var d = this._openInfo[""].openned, e = this.rootStart + k.visualIndex, c = 0; c < d.length; ++c) {
                                    var b = this._openInfo[d[c]];
                                    if (g.idToIndex(b.id) < this.rootStart)
                                        e += b.count;
                                    else
                                        break
                                }
                                for (d = {
                                    parentId: "",
                                    preCount: 0
                                }; !d.found; )
                                    d = this._getChild(e, d);
                                k.rowIndex = d.rowIndex;
                                k.parentId = d.parentId
                            }
                        } else
                            return k;
                        k.rowId = g.isId(f) ? f : g.indexToId(k.rowIndex, k.parentId);
                        return k
                    },
                    logicExpand: function(k) {
                        var g = this
                          , f = new m;
                        g.model.when({
                            parentId: k,
                            start: 0,
                            count: 1
                        }, function() {
                            g._expand(k) && g._updateVC()
                        }).then(function() {
                            f.callback()
                        }, function(e) {
                            f.errback(e)
                        });
                        return f
                    },
                    logicCollapse: function(k) {
                        var g = this._openInfo
                          , f = g[k];
                        if (f) {
                            var e = this.model.parentId(k)
                              , d = this._parentOpenInfo[e]
                              , c = f.count;
                            d.splice(p.indexOf(d, k), 1);
                            for (f = g[e]; f; )
                                f.count -= c,
                                f = g[f.parentId];
                            delete g[k];
                            this.model.free(k, 1);
                            this._updateVC()
                        }
                    },
                    updateRootRange: function(k, g, f) {
                        var e = this;
                        e.rootStart = k;
                        e.rootCount = g;
                        return e.updateVisualCount().then(function() {
                            if (!f)
                                e.onUpdate()
                        })
                    },
                    updateVisualCount: function() {
                        var k = this;
                        return k._loadLevels().then(function() {
                            k._updateVC()
                        })
                    },
                    onUpdate: function() {},
                    _parentOpenInfo: null,
                    _openInfo: null,
                    _clear: function() {
                        var k = [];
                        this._openInfo = {
                            "": {
                                id: "",
                                parentId: null,
                                path: [],
                                count: 0,
                                openned: k
                            }
                        };
                        this._parentOpenInfo = {
                            "": k
                        }
                    },
                    _expand: function(k) {
                        var g = this.model;
                        if (g.hasChildren(k)) {
                            var f = g.parentId(k)
                              , e = this._openInfo
                              , d = this._parentOpenInfo
                              , c = d[f] = d[f] || [];
                            d[k] = d[k] || [];
                            if (!e[k] && 0 <= g.idToIndex(k)) {
                                g.keep(k, 1);
                                0 > p.indexOf(c, k) && c.push(k);
                                for (var c = g.size(k), b = d[k].length - 1; 0 <= b; --b)
                                    c += e[d[k][b]].count;
                                e[k] = {
                                    id: k,
                                    parentId: f,
                                    path: g.treePath(k).slice(1).concat([k]),
                                    count: c,
                                    openned: d[k]
                                };
                                for (k = e[f]; k; )
                                    k.count += c,
                                    k = e[k.parentId];
                                return 1
                            }
                        }
                    },
                    _getVisualIndex: function(k, g) {
                        var f = this.model
                          , e = this._openInfo
                          , d = e[k]
                          , c = 0
                          , b = "" === k ? g : f.idToIndex(f.rootId(k));
                        if (d && b >= this.rootStart && b < this.rootStart + this.rootCount) {
                            for (; d; ) {
                                c += g;
                                for (b = 0; b < d.openned.length; ++b) {
                                    var a = e[d.openned[b]]
                                      , h = f.idToIndex(a.id);
                                    h < g && ("" !== d.id || h >= this.rootStart) && (c += a.count)
                                }
                                d.openned.sort(function(a, b) {
                                    return f.idToIndex(a) - f.idToIndex(b)
                                });
                                g = f.idToIndex(d.id);
                                f.isId(d.id) && c++;
                                d = e[d.parentId]
                            }
                            return c - this.rootStart
                        }
                        return null
                    },
                    _getChild: function(k, g) {
                        var f = this.model
                          , e = this._openInfo[g.parentId]
                          , d = g.preCount + f.idToIndex(e.id) + 1
                          , c = {
                            found: !0,
                            visualIndex: k
                        };
                        e.openned.sort(function(a, b) {
                            return f.idToIndex(a) - f.idToIndex(b)
                        });
                        for (var b = 0, a = e.openned.length; b < a; ++b) {
                            var h = e.openned[b]
                              , r = this._openInfo[h]
                              , t = f.idToIndex(h)
                              , u = t + d;
                            if (u === k)
                                return n.mixin({
                                    parentId: e.id,
                                    rowIndex: t
                                }, c);
                            if (u < k && u + r.count >= k)
                                return {
                                    parentId: h,
                                    preCount: d
                                };
                            u + r.count < k && (d += r.count)
                        }
                        return n.mixin({
                            parentId: e.id,
                            rowIndex: k - d
                        }, c)
                    },
                    _loadLevels: function(k) {
                        k = k || this._openInfo;
                        var g = this.model, f = new m, e, d = [];
                        for (e in k)
                            if (g.isId(e)) {
                                var c, b = k[e].path;
                                for (c = 0; c < b.length; ++c)
                                    d[c] = d[c] || [],
                                    d[c].push({
                                        parentId: b[c],
                                        start: 0,
                                        count: 1
                                    })
                            }
                        var a = function(b) {
                            b < d.length ? g.when(d[b], function() {
                                p.forEach(d[b], function(a) {
                                    g.keep(a.parentId, 1)
                                });
                                a(b + 1)
                            }).then(null, function(a) {
                                f.errback(a)
                            }) : g.when({}).then(function() {
                                f.callback()
                            }, function(a) {
                                f.errback(a)
                            })
                        };
                        a(0);
                        return f
                    },
                    _updateVC: function() {
                        var k = this.model, g = this._openInfo, f = g[""], e = f.openned.length, d = k.size(), c, b, a;
                        d < this.rootStart + this.rootCount && (d > this.rootStart ? this.rootCount = d - this.rootStart : (this.rootStart = 0,
                        this.rootCount = d));
                        d = this.rootCount;
                        for (c = 0; c < e; ++c)
                            b = g[f.openned[c]],
                            a = k.idToIndex(b.id),
                            a >= this.rootStart && a < this.rootStart + this.rootCount && (d += b.count);
                        this.visualCount = d
                    },
                    _onSizeChange: function(k, g) {
                        !this.paging && 0 === this.rootStart && (this.rootCount === g || 0 > g) && this.updateRootRange(0, k)
                    },
                    _receiveMsg: function(k) {
                        "filter" === k ? (this.__openInfo = this._openInfo,
                        this.__parentOpenInfo = this._parentOpenInfo,
                        this._clear()) : "clearFilter" === k && (this._openInfo = this.__openInfo || this._openInfo,
                        this._parentOpenInfo = this.__parentOpenInfo || this._parentOpenInfo)
                    },
                    _onDelete: function(k, g, f) {
                        if (f) {
                            var e = this._openInfo
                              , d = this._parentOpenInfo
                              , c = e[k]
                              , b = this.model
                              , a = f.pop();
                            f = 1;
                            var h = function(a, c) {
                                var r = e[a];
                                p.forEach(d[a] || [], function(a) {
                                    h(a)
                                });
                                delete d[a];
                                if (r)
                                    delete e[a],
                                    c = r.parentId;
                                else if (!b.isId(c))
                                    return;
                                var r = d[c]
                                  , t = p.indexOf(r, a);
                                0 <= t && r.splice(t, 1)
                            };
                            c ? (f += c.count,
                            c = e[c.parentId]) : b.isId(a) && (c = e[a]);
                            for (h(k, a); c; )
                                c.count -= f,
                                c = e[c.parentId];
                            String(a) == String(b.layerId()) && g >= this.rootStart && g < this.rootStart + this.rootCount && this.rootCount--;
                            k = b.idToIndex(b.rootId(k));
                            k >= this.rootStart && k < this.rootStart + this.rootCount && (this.visualCount -= f)
                        } else
                            this._clear();
                        this.grid.body.lazyRefresh()
                    }
                })
            })
        },
        "gridx/modules/Body": function() {
            define("dojo/_base/declare ../support/query dojo/_base/array dojo/_base/lang dojo/_base/json dojo/dom-construct dojo/dom-class dojo/_base/Deferred dojo/_base/sniff dojo/on dojo/keys ../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                return q(b, {
                    name: "body",
                    forced: ["view"],
                    constructor: function() {
                        var a = this
                          , b = a.grid
                          , c = a.domNode = b.bodyNode;
                        a._cellCls = {};
                        a.renderedIds = {};
                        a.arg("rowHoverEffect") && g.add(c, "gridxBodyRowHoverEffect");
                        b.emptyNode.innerHTML = a.arg("loadingInfo", b.nls.loadingInfo);
                        b._connectEvents(c, "_onEvent", a);
                        a.aspect(a.model, "onDelete", "_onDelete");
                        a.aspect(a.model, "onSet", "_onSet");
                        b.touch || (a.aspect(b, "onRowMouseOver", "_onRowMouseOver"),
                        a.connect(b.mainNode, "onmouseleave", function() {
                            p("\x3e .gridxRowOver", a.domNode).removeClass("gridxRowOver")
                        }),
                        a.connect(b.mainNode, "onmouseover", function(c) {
                            c.target == b.bodyNode && p("\x3e .gridxRowOver", a.domNode).removeClass("gridxRowOver")
                        }));
                        a.aspect(b.model, "setStore", function() {
                            a.refresh()
                        })
                    },
                    preload: function() {
                        this._initFocus()
                    },
                    load: function(a) {
                        a = this.grid.view;
                        this.aspect(a, "onUpdate", "lazyRefresh");
                        a._err && this._loadFail(a._err);
                        this.loaded.callback()
                    },
                    destroy: function() {
                        this.inherited(arguments);
                        this.domNode.innerHTML = "";
                        this._destroyed = !0
                    },
                    rowMixin: {
                        node: function() {
                            return this.grid.body.getRowNode({
                                rowId: this.id
                            })
                        }
                    },
                    cellMixin: {
                        node: function() {
                            return this.grid.body.getCellNode({
                                rowId: this.row.id,
                                colId: this.column.id
                            })
                        },
                        contentNode: function() {
                            var a = this.node();
                            return a && p(".gridxCellContent", a)[0] || a
                        }
                    },
                    rowHoverEffect: !0,
                    stuffEmptyCell: !0,
                    renderWholeRowOnSet: !1,
                    renderStart: 0,
                    renderCount: 0,
                    autoUpdate: !0,
                    renderedIds: {},
                    compareOnSet: function(a, b) {
                        return "object" == typeof a && "object" == typeof b ? l.toJson(a) == l.toJson(b) : a === b
                    },
                    addClass: function(a, b, c) {
                        var h = this._cellCls
                          , h = h[a] = h[a] || {}
                          , h = h[b] = h[b] || [];
                        0 > n.indexOf(h, c) && (h.push(c),
                        g.add(this.getCellNode({
                            rowId: a,
                            colId: b
                        }), c))
                    },
                    removeClass: function(a, b, c) {
                        var h = this._cellCls[a]
                          , d = (h = h && h[b]) && n.indexOf(h, c);
                        0 <= d && (h.splice(d, 1),
                        g.remove(this.getCellNode({
                            rowId: a,
                            colId: b
                        }), c))
                    },
                    getRowNode: function(a) {
                        return this.model.isId(a.rowId) && (e("ie") || e("trident")) ? this._getRowNode(a.rowId) : (a = this._getRowNodeQuery(a)) && p("\x3e " + a, this.domNode)[0] || null
                    },
                    getCellNode: function(a) {
                        var b = a.colId
                          , c = this.grid._columns
                          , d = this._getRowNodeQuery(a);
                        return d ? (!b && c[a.colIndex] && (b = c[a.colIndex].id),
                        b = " [colid\x3d'" + b + "'].gridxCell",
                        this.model.isId(a.rowId) && (e("ie") || e("trident")) ? (a = this._getRowNode(a.rowId)) && p(b, a)[0] || null : p(d + b, this.domNode)[0] || null) : null
                    },
                    refresh: function(a) {
                        var b = this
                          , c = new f;
                        delete b._err;
                        clearTimeout(b._sizeChangeHandler);
                        g.toggle(b.domNode, "gridxBodyRowHoverEffect", b.arg("rowHoverEffect"));
                        b._showLoadingMask();
                        b.grid.view.updateVisualCount().then(function() {
                            try {
                                var h = b.renderStart
                                  , d = b.renderCount
                                  , e = b.grid.view.visualCount;
                                h + d > e && (d < e ? h = b.renderStart = e - d : (h = b.renderStart = 0,
                                d = e));
                                if ("number" == typeof a && 0 <= a) {
                                    a = h > a ? h : a;
                                    var r = h + d - a
                                      , g = p('\x3e [visualindex\x3d"' + a + '"]', b.domNode)[0]
                                      , h = []
                                      , d = [];
                                    if (g) {
                                        var l = b._buildRows(a, r, h, d);
                                        l && k.place(l, g, "before")
                                    }
                                    var m = {};
                                    for (n.forEach(d, function(a) {
                                        m[a.id] = 1
                                    }); g; ) {
                                        var q = g.nextSibling
                                          , B = g.getAttribute("rowid");
                                        m[B] || (b.onUnrender(B, "refresh"),
                                        b.renderedIds[B] = void 0);
                                        k.destroy(g);
                                        g = q
                                    }
                                    n.forEach(d, b.onAfterRow, b);
                                    f.when(b._buildUncachedRows(h), function() {
                                        b.onRender(a, r);
                                        b.onForcedScroll();
                                        b._hideLoadingMask();
                                        c.callback()
                                    })
                                } else
                                    b.renderRows(h, d, 0, 1),
                                    b.onForcedScroll(),
                                    c.callback()
                            } catch (C) {
                                b._loadFail(C),
                                b._hideLoadingMask(),
                                c.errback(C)
                            }
                        }, function(a) {
                            b._loadFail(a);
                            b._hideLoadingMask();
                            c.errback(a)
                        });
                        return c
                    },
                    refreshCell: function(a, b) {
                        var c = new f
                          , h = this
                          , d = h.model
                          , e = h.grid
                          , g = e._columns[b]
                          , k = g && h.getCellNode({
                            visualIndex: a,
                            colId: g.id
                        });
                        if (k) {
                            var l, m = e.view.getRowInfo({
                                visualIndex: a
                            }), n = m.rowIndex, p = m.parentId;
                            d.when({
                                start: n,
                                count: 1,
                                parentId: p
                            }, function() {
                                if (l = d.byIndex(n, p)) {
                                    m.rowId = d.indexToId(n, p);
                                    var b = e.cell(m.rowId, g.id, 1)
                                      , c = e.tree && e.tree.isPaddingCell(m.rowId, g.id);
                                    k.innerHTML = h._buildCellContent(g, m.rowId, b, a, c);
                                    h.onAfterCell(b)
                                }
                            }).then(function() {
                                c.callback(!!l)
                            });
                            return c
                        }
                        c.callback(!1);
                        return c
                    },
                    lazyRefresh: function() {
                        var a = this;
                        clearTimeout(a._sizeChangeHandler);
                        a._sizeChangeHandler = setTimeout(function() {
                            a._destroyed || a.refresh()
                        }, 10)
                    },
                    renderRows: function(a, b, c, d) {
                        var h = this
                          , e = h.grid
                          , r = ""
                          , t = []
                          , g = []
                          , l = h.domNode
                          , m = e.emptyNode
                          , p = h.arg("emptyInfo", e.nls.emptyInfo)
                          , q = "";
                        if (!h._err)
                            if (0 < b) {
                                "top" != c && "bottom" != c && h.model.free();
                                if ("top" == c)
                                    r = h._buildRows(a, b, t, g),
                                    h.renderCount += h.renderStart - a,
                                    h.renderStart = a,
                                    k.place(r, l, "first"),
                                    e.cellWidget && e.vScroller._updateRowHeight && (r = h.renderStart + h.renderCount,
                                    e = e.vScroller._updateRowHeight("post"),
                                    r - e < a + b && (b = r - e - a));
                                else if ("bottom" == c)
                                    r = h._buildRows(a, b, t, g),
                                    h.renderCount = a + b - h.renderStart,
                                    k.place(r, l, "last"),
                                    e.cellWidget && e.vScroller._updateRowHeight && (e.vScroller._updateRowHeight("pre"),
                                    h.renderStart > a && (a = h.renderStart,
                                    b = h.renderCount));
                                else {
                                    h.renderStart = a;
                                    h.renderCount = b;
                                    c = d ? l.scrollTop : 0;
                                    if (!h._skipUnrender)
                                        h.onUnrender();
                                    h.renderedIds = {};
                                    r = h._buildRows(a, b, t, g);
                                    l.innerHTML = r;
                                    l.scrollTop = c;
                                    l.scrollLeft = e.hScrollerNode.scrollLeft;
                                    q = r ? "" : p;
                                    r || (m.style.zIndex = 1)
                                }
                                n.forEach(g, h.onAfterRow, h);
                                f.when(h._buildUncachedRows(t), function() {
                                    h._err || (m.innerHTML = q);
                                    h._hideLoadingMask();
                                    h.onRender(a, b)
                                })
                            } else if (!{
                                top: 1,
                                bottom: 1
                            }[c]) {
                                l.scrollTop = 0;
                                if (!h._skipUnrender)
                                    h.onUnrender();
                                for (; l.firstChild; )
                                    l.firstChild.getAttribute("rowid"),
                                    l.removeChild(l.firstChild);
                                h.renderedIds = {};
                                m.innerHTML = p;
                                m.style.zIndex = 1;
                                h._hideLoadingMask();
                                h.onEmpty();
                                h.model.free()
                            }
                    },
                    unrenderRows: function(a, b) {
                        if (0 < a) {
                            var c = this.model, h = 0, d, e = this.domNode;
                            if ("post" == b)
                                for (; h < a && e.lastChild; ++h) {
                                    d = e.lastChild.getAttribute("rowid");
                                    if (c.isId(d))
                                        c.free(d),
                                        this.onUnrender(d);
                                    else
                                        this.onUnrender(d, void 0, "post");
                                    k.destroy(e.lastChild);
                                    this.renderedIds[d] = void 0
                                }
                            else {
                                for (var f = e.scrollTop; h < a && e.firstChild; ++h) {
                                    d = e.firstChild.getAttribute("rowid");
                                    var g = e.firstChild.getAttribute("data-rowHeight")
                                      , f = f - (g ? parseInt(g, 10) : e.firstChild.offsetHeight);
                                    if (c.isId(d))
                                        c.free(d),
                                        this.onUnrender(d);
                                    else
                                        this.onUnrender(d, void 0, "pre");
                                    k.destroy(e.firstChild);
                                    this.renderedIds[d] = void 0
                                }
                                this.renderStart += h;
                                e.scrollTop = 0 < f ? f : 0
                            }
                            this.renderCount -= h;
                            c.when()
                        }
                    },
                    onAfterRow: function() {},
                    onRowHeightChange: function() {},
                    onAfterCell: function() {},
                    onRender: function() {
                        var a = this.domNode;
                        9 > e("ie") && a.childNodes.length && (p("\x3e gridxLastRow", a).removeClass("gridxLastRow"),
                        g.add(a.lastChild, "gridxLastRow"))
                    },
                    onUnrender: function() {},
                    onDelete: function() {},
                    onSet: function() {},
                    onMoveToCell: function() {},
                    onEmpty: function() {},
                    onLoadFail: function() {},
                    onForcedScroll: function() {},
                    collectCellWrapper: function() {},
                    _showLoadingMask: function() {
                        var a = this.grid
                          , b = a.emptyNode;
                        g.add(a.loadingNode, "gridxLoading");
                        b.innerHTML = a.nls.loadingInfo;
                        b.style.zIndex = 1
                    },
                    _hideLoadingMask: function() {
                        var a = this.grid
                          , b = a.emptyNode;
                        g.remove(a.loadingNode, "gridxLoading");
                        b.style.zIndex = ""
                    },
                    _getRowNodeQuery: function(a) {
                        var b, c = this.model, d = this.grid._escapeId;
                        c.isId(a.rowId) ? b = "[rowid\x3d'" + d(a.rowId) + "']" : "number" == typeof a.rowIndex && 0 <= a.rowIndex ? b = "[rowindex\x3d'" + a.rowIndex + "']" + (c.isId(a.parentId) ? "[parentid\x3d'" + d(a.parentId) + "']" : "") : "number" == typeof a.visualIndex && 0 <= a.visualIndex && (b = "[visualindex\x3d'" + a.visualIndex + "']");
                        return b && b + ".gridxRow"
                    },
                    _getRowNode: function(a) {
                        for (var b = 0, c = this.domNode.childNodes, d; d = c[b]; ++b)
                            if (d.getAttribute("rowid") == a)
                                return d;
                        return null
                    },
                    _loadFail: function(a) {
                        console.error(a);
                        var b = this.grid.emptyNode;
                        b.innerHTML = this.arg("loadFailInfo", this.grid.nls.loadFailInfo);
                        b.style.zIndex = 1;
                        this.domNode.innerHTML = "";
                        this._err = a;
                        this.onEmpty();
                        this.onLoadFail(a)
                    },
                    _buildRows: function(a, b, c, d) {
                        b = a + b;
                        for (var h = [], e = this.grid, r = this.domNode.scrollWidth, f = e.columns(), t = this.grid._encodeHTML; a < b; ++a) {
                            var g = e.view.getRowInfo({
                                visualIndex: a
                            })
                              , k = e.row(g.rowId, 1);
                            h.push('\x3cdiv class\x3d"gridxRow ', a % 2 ? "gridxRowOdd" : "", '" role\x3d"row" visualindex\x3d"', a);
                            this.renderedIds[g.rowId] = 1;
                            k ? (this.model.keep(k.id),
                            h.push('" rowid\x3d"', t(k.id), '" rowindex\x3d"', g.rowIndex, '" parentid\x3d"', t(g.parentId), '"\x3e', this._buildCells(k, a, f), "\x3c/div\x3e"),
                            d.push(k)) : (h.push('"\x3e\x3cdiv class\x3d"gridxRowDummy" style\x3d"width:', r, 'px;"\x3e\x3c/div\x3e\x3c/div\x3e'),
                            g.start = g.rowIndex,
                            g.count = 1,
                            c.push(g))
                        }
                        return h.join("")
                    },
                    _buildUncachedRows: function(a) {
                        var b = this;
                        return a.length && b.model.when(a, function() {
                            try {
                                n.forEach(a, b._buildRowContent, b)
                            } catch (r) {
                                b._loadFail(r)
                            }
                        }).then(null, function(a) {
                            b._loadFail(a)
                        })
                    },
                    _buildRowContent: function(a) {
                        var b = p('\x3e [visualindex\x3d"' + a.visualIndex + '"]', this.domNode)[0];
                        if (b) {
                            var c = this.grid.row(a.rowIndex, 0, a.parentId);
                            c ? (this.model.keep(c.id),
                            b.setAttribute("rowid", c.id),
                            b.setAttribute("rowindex", a.rowIndex),
                            b.setAttribute("parentid", a.parentId || ""),
                            b.innerHTML = this._buildCells(c, a.visualIndex),
                            this.renderedIds[c.id] = 1,
                            this.onAfterRow(c)) : console.error("Error in Body._buildRowContent: Row is not in cache: " + a.rowIndex)
                        }
                    },
                    onCheckCustomRow: function(a, b) {},
                    onBuildCustomRow: function(a, b) {},
                    _buildCells: function(a, b, c) {
                        var h = a.id
                          , d = ['\x3ctable class\x3d"gridxRowTable" role\x3d"presentation" border\x3d"0" cellpadding\x3d"0" cellspacing\x3d"0"\x3e\x3ctr\x3e']
                          , e = {};
                        this.onCheckCustomRow(a, e);
                        if (e[h])
                            e = {},
                            this.onBuildCustomRow(a, e),
                            d.push('\x3ctd class\x3d"gridxCustomRow" aria-readonly\x3d"true" role\x3d"gridcell" tabindex\x3d"-1"\x3e', this._wrapCellData(e[h], h), "\x3c/td\x3e");
                        else
                            for (var e = this.grid, r = "body" == e.focus.currentArea() && this._focusCellRow === b, f = this.model.byId(h).data, g = e._columns, l = this._cellCls[h] || {}, n = 0, p = g.length; n < p; ++n) {
                                var q = g[n], E = q.id, I = q.width, H = e.tree && e.tree.isPaddingCell(h, E), F = q["class"], G = f[E], J = F && m.isFunction(F), O = q.style && m.isFunction(q.style), D = (J || O || !H && q.decorator) && e.cell(a, c && c[n] || E, 1), M = this._buildCellContent(q, h, D, b, H, G), L = k.create("div", {
                                    innerHTML: M
                                }), K;
                                K = L.innerText;
                                L = void 0 !== K && null !== K ? K : L.textContent;
                                L = L.trim ? L.trim() : L.replace(/\s/g, "");
                                K = "\x26nbsp;" === L || !L;
                                L = "";
                                d.push('\x3ctd aria-readonly\x3d"true" role\x3d"gridcell" tabindex\x3d"-1" aria-describedby\x3d"', q._domId, '" colid\x3d"', E, '" class\x3d"gridxCell ', r && this._focusCellCol === n ? "gridxCellFocus " : "", H ? "gridxPaddingCell " : "", q._class || "", " ", (J ? F(D) : F) || "", " ", l[E] ? l[E].join(" ") : "", ' " style\x3d"width:', I, ";min-width:", I, ";max-width:", I, ";", e.getTextDirStyle(E, G), (O ? q.style(D) : q.style) || "", K ? '" aria-label\x3d"empty cell' : "", '"\x3e', M, "\x3c/td\x3e")
                            }
                        d.push("\x3c/tr\x3e\x3c/table\x3e");
                        return d.join("")
                    },
                    _buildCellContent: function(a, b, c, d, f, g) {
                        var h = "";
                        g = void 0 === g && c ? c.data() : g;
                        f || (c = a.decorator ? a.decorator(g, b, d, c) : g,
                        h = this._wrapCellData(c, b, a.id));
                        return "" !== h && null !== h && void 0 !== h || !(8 > e("ie") || this.arg("stuffEmptyCell")) ? h : "\x26nbsp;"
                    },
                    _wrapCellData: function(a, b, c) {
                        var h = [];
                        this.collectCellWrapper(h, b, c);
                        var d = h.length - 1;
                        for (0 < d && h.sort(function(a, b) {
                            return (a.priority || 0) - (b.priority || 0)
                        }); 0 <= d; --d)
                            a = h[d].wrap(a, b, c);
                        return a
                    },
                    _onEvent: function(a, b) {
                        var c = this.grid
                          , h = "onCell" + a
                          , e = "onRow" + a;
                        this._decorateEvent(b);
                        b.rowId && (b.columnId && (c[h](b),
                        d.emit(b.target, "cell" + a, b)),
                        c[e](b),
                        d.emit(b.target, "row" + a, b))
                    },
                    _decorateEvent: function(a) {
                        n.forEach("rowId columnId rowIndex visualIndex columnIndex parentId cellNode".split(" "), function(b) {
                            b in a && delete a[b]
                        });
                        for (var b = a.target || a.originalTarget, c = this.grid, d; b && b != c.bodyNode; b = b.parentNode) {
                            d = b.tagName && b.tagName.toLowerCase();
                            if ("td" == d && g.contains(b, "gridxCell") && b.parentNode.parentNode.parentNode.parentNode.parentNode === c.bodyNode) {
                                var e = c._columnsById[b.getAttribute("colid")];
                                a.cellNode = b;
                                a.columnId = e.id;
                                a.columnIndex = e.index
                            }
                            "div" == d && g.contains(b, "gridxRow") && b.parentNode === c.bodyNode && (a.rowId = b.getAttribute("rowid"),
                            a.parentId = b.getAttribute("parentid"),
                            a.rowIndex = parseInt(b.getAttribute("rowindex"), 10),
                            a.visualIndex = parseInt(b.getAttribute("visualindex"), 10));
                            if ("table" == d && g.contains(b, "gridxRowTable") && b.parentNode.parentNode === c.bodyNode) {
                                b = b.parentNode;
                                a.rowId = b.getAttribute("rowid");
                                a.parentId = b.getAttribute("parentid");
                                a.rowIndex = parseInt(b.getAttribute("rowindex"), 10);
                                a.visualIndex = parseInt(b.getAttribute("visualindex"), 10);
                                break
                            }
                        }
                    },
                    _onDelete: function(a, b, c) {
                        c && 1 < c.length && this.lazyRefresh()
                    },
                    _onSet: function(a, b, c, d) {
                        var h = this;
                        if (h.autoUpdate && c) {
                            var e = h.grid
                              , r = e.row(a, 1)
                              , f = r && r.node();
                            if (f) {
                                var t = c.data || c._data()
                                  , g = d.data || d._data();
                                c = e._columns;
                                d = h.arg("renderWholeRowOnSet");
                                var k = h.arg("compareOnSet");
                                d ? (f.innerHTML = h._buildCells(r, r.visualIndex()),
                                h.onAfterRow(r),
                                h.onSet(r),
                                h.onRender(b, 1)) : n.forEach(c, function(b) {
                                    if (!k(t[b.id], g[b.id])) {
                                        var c = e.tree && e.tree.isPaddingCell(a, b.id)
                                          , d = r.cell(b.id, 1);
                                        if ("auto" === (b.textDir || e.textDir)) {
                                            var f = e.getTextDir(b.id, d.node().innerHTML);
                                            f && (d.node().style.direction = f)
                                        }
                                        d.node().innerHTML = h._buildCellContent(b, a, d, r.visualIndex(), c);
                                        h.onAfterCell(d)
                                    }
                                })
                            }
                        }
                    },
                    _onRowMouseOver: function(a) {
                        var b = p("\x3e div.gridxRowOver", this.domNode)[0];
                        a = this.getRowNode({
                            rowId: a.rowId
                        });
                        b != a && (b && g.remove(b, "gridxRowOver"),
                        a && g.add(a, "gridxRowOver"))
                    },
                    _isDescendantRowNode: function(a) {
                        return a.parentNode === this.grid.bodyNode
                    },
                    _isDescendantCellNode: function(a) {
                        return a.parentNode.parentNode.parentNode.parentNode.parentNode === this.grid.bodyNode
                    },
                    _focusCellCol: 0,
                    _focusCellRow: 0,
                    _initFocus: function() {
                        var a = this
                          , b = a.grid
                          , d = b.focus;
                        d.registerArea({
                            name: "body",
                            priority: 1,
                            focusNode: a.domNode,
                            scope: a,
                            doFocus: a._doFocus,
                            doBlur: a._blurCell,
                            onFocus: a._onFocus,
                            onBlur: a._blurCell
                        });
                        a.connect(b.mainNode, "onkeydown", function(h) {
                            if (d.arg("enabled") && "body" == d.currentArea()) {
                                var e = b._isCtrlKey(h);
                                if (h.keyCode == c.HOME && !e)
                                    a._focusCellCol = 0,
                                    a._focusCell(),
                                    d.stopEvent(h);
                                else if (h.keyCode == c.END && !e)
                                    a._focusCellCol = b._columns.length - 1,
                                    a._focusCell(),
                                    d.stopEvent(h);
                                else if (!b.tree || !e) {
                                    d._noBlur = 1;
                                    var e = {}
                                      , r = b.isLeftToRight() ? 1 : -1;
                                    e[c.LEFT_ARROW] = [0, -r, h];
                                    e[c.RIGHT_ARROW] = [0, r, h];
                                    e[c.UP_ARROW] = [-1, 0, h];
                                    e[c.DOWN_ARROW] = [1, 0, h];
                                    a._moveFocus.apply(a, e[h.keyCode] || []);
                                    d._noBlur = 0
                                }
                            }
                        });
                        a.aspect(b, "onCellClick", function(b) {
                            a._focusCellRow = b.visualIndex;
                            a._focusCellCol = b.columnIndex
                        });
                        a.aspect(a, "onRender", function(b, c) {
                            var h = d.currentArea();
                            d.arg("enabled") && ("body" == h ? a._focusCellRow >= b && a._focusCellRow < b + c && a._focusCell() : d.focusArea(h, 1))
                        });
                        a.connect(b.emptyNode, "onfocus", function() {
                            d.focusArea("body")
                        })
                    },
                    _doFocus: function(a) {
                        return this._focusCell(a) || this._focusCell(0, -1, -1)
                    },
                    _focusCell: function(a, b, c) {
                        var h = this.grid;
                        h.focus.stopEvent(a);
                        c = 0 <= c ? c : this._focusCellCol;
                        b = 0 <= b ? b : this._focusCellRow;
                        a = h._columns[c] ? h._columns[c].id : void 0;
                        var d = this.getCellNode({
                            visualIndex: b,
                            colId: a
                        });
                        if (d)
                            this._blurCell(),
                            g.add(d, "gridxCellFocus"),
                            this._focusCellRow = b,
                            this._focusCellCol = c,
                            h.header._focusHeaderId = a,
                            8 > e("ie") ? (b = h.bodyNode.scrollLeft,
                            d.focus(),
                            h.bodyNode.scrollLeft = b) : d.focus(),
                            h.hScroller.scrollToColumn(a, d.parentNode.parentNode.parentNode.parentNode);
                        else if (!h.rowCount())
                            return h.emptyNode.focus(),
                            !0;
                        return d
                    },
                    _moveFocus: function(a, b, c) {
                        if (a || b) {
                            var h, d, r = this, f = r.grid, g = f._columns.length, k = f.view.visualCount, l = 9 > e("ie") ? m.mixin({}, c) : c;
                            f.focus.stopEvent(c);
                            h = r._focusCellRow + a;
                            h = 0 > h ? 0 : h >= k ? k - 1 : h;
                            d = r._focusCellCol + b;
                            d = 0 > d ? 0 : d >= g ? g - 1 : d;
                            f.vScroller.scrollToRow(h).then(function() {
                                r._focusCell(0, h, d);
                                r.onMoveToCell(h, d, l)
                            })
                        }
                    },
                    _nextCell: function(a, b, c, d) {
                        var h = new f
                          , e = this.grid
                          , r = e._columns.length
                          , t = e.view.visualCount;
                        do
                            if (b += c,
                            0 > b || b >= r)
                                a += c,
                                b = 0 > b ? r - 1 : 0,
                                0 > a ? (a = t - 1,
                                b = r - 1) : a >= t && (b = a = 0);
                        while (!d(a, b));e.vScroller.scrollToRow(a).then(function() {
                            e.hScroller.scrollToColumn(e._columns[b].id);
                            h.callback({
                                r: a,
                                c: b
                            })
                        });
                        return h
                    },
                    _blurCell: function() {
                        return !!p(".gridxCellFocus", this.domNode).removeClass("gridxCellFocus")
                    },
                    _onFocus: function(a) {
                        var b = this.domNode
                          , c = p(a.target).closest(".gridxCell", b);
                        return c[0] && this._isDescendantCellNode(c[0]) ? (a = this.grid._columnsById[c[0].getAttribute("colid")].index,
                        b = parseInt(c.closest(".gridxRow", b)[0].getAttribute("visualindex"), 10),
                        this._focusCell(0, b, a)) : !1
                    }
                })
            })
        },
        "gridx/support/query": function() {
            define(["dojo/query", "dojo/_base/array", "dojo/_base/lang", "dojo/dom-class"], function(q, p, n, m) {
                var l = function(k, g) {
                    var f = q.apply(null, arguments);
                    if (!g || "object" === typeof k || "string" === typeof k && /^[^>]*>\s*[^>\s]*$/.test(k))
                        return f;
                    var e = q(g).closest(".gridx")[0];
                    if (e) {
                        var d = e.getAttribute("id")
                          , c = e.childNodes[2].childNodes[1];
                        if (!l.isGridInGrid[d] || !q(".gridx", e).length || !c.contains(g) && !g.contains(c))
                            return f
                    } else
                        return f;
                    return f.filter(function(b) {
                        m.contains(b, "gridx") && (b = b.parentNode ? b.parentNode : null);
                        return q(b).closest(".gridx")[0] === e
                    })
                };
                l.isGridInGrid = {};
                n.mixin(l, q);
                return l
            })
        },
        "gridx/modules/VLayout": function() {
            define(["dojo/_base/declare", "dojo/DeferredList", "../core/_Module"], function(q, p, n) {
                return q(n, {
                    name: "vLayout",
                    preload: function() {
                        var m = this
                          , l = m.grid;
                        m.connect(l, "_onResizeEnd", function(k, g) {
                            var f, e = [];
                            for (f in g)
                                e.push(g[f]);
                            (new p(e)).then(function() {
                                m.reLayout()
                            })
                        });
                        l.autoHeight ? (m.connect(l.body, "onRender", "reLayout"),
                        m.connect(l.body, "onEmpty", "reLayout")) : m.connect(l, "setColumns", function() {
                            setTimeout(function() {
                                m.reLayout()
                            }, 0)
                        })
                    },
                    load: function(m, l) {
                        var k = this;
                        l.then(function() {
                            k._defs && k._mods ? (new p(k._defs)).then(function() {
                                k._layout();
                                k.loaded.callback()
                            }) : k.loaded.callback()
                        })
                    },
                    register: function(m, l, k, g, f) {
                        this._defs = this._defs || [];
                        this._mods = this._mods || {};
                        this._mods[k] = this._mods[k] || [];
                        this._defs.push(f || m.loaded);
                        this._mods[k].push({
                            p: g || 0,
                            mod: m,
                            nodeName: l
                        })
                    },
                    reLayout: function() {
                        var m = 0, l, k;
                        for (l in this._mods)
                            (k = this.grid[l]) && (m += k.offsetHeight);
                        this._updateHeight(m)
                    },
                    _layout: function() {
                        var m = 0, l = this._mods, k, g, f, e, d, c;
                        for (k in l)
                            if (g = this.grid[k]) {
                                e = l[k];
                                e.sort(function(b, a) {
                                    return b.p - a.p
                                });
                                for (f = 0; f < e.length; ++f)
                                    d = e[f].mod,
                                    c = e[f].nodeName,
                                    d && d[c] && g.appendChild(d[c]);
                                m += g.offsetHeight
                            }
                        this._updateHeight(m)
                    },
                    _updateHeight: function(m) {
                        var l = this.grid
                          , k = l.domNode
                          , g = l.mainNode.style;
                        if (l.autoHeight) {
                            var f = function() {
                                var e = l.bodyNode.lastChild
                                  , e = e ? e.offsetTop + e.offsetHeight : l.emptyNode.offsetHeight;
                                k.style.height = e + m + "px";
                                g.height = e + "px"
                            };
                            f();
                            l.vScroller.loaded.then(f)
                        } else
                            k.clientHeight > m && (g.height = k.clientHeight - m + "px")
                    }
                })
            })
        },
        "gridx/modules/HLayout": function() {
            define("dojo/_base/declare dojo/_base/Deferred dojo/_base/array dojo/dom-style dojo/DeferredList ../core/_Module".split(" "), function(q, p, n, m, l, k) {
                return q(k, {
                    name: "hLayout",
                    load: function(g, f) {
                        var e = this;
                        e.connect(e.grid, "_onResizeEnd", function(d, c) {
                            var b, a = [];
                            for (b in c)
                                a.push(c[b]);
                            (new l(a)).then(function() {
                                e.reLayout()
                            })
                        });
                        f.then(function() {
                            e._layout()
                        })
                    },
                    lead: 0,
                    tail: 0,
                    register: function(g, f, e) {
                        var d = this._regs = this._regs || [];
                        g || (g = new p,
                        g.callback());
                        d.push([g, f, e])
                    },
                    reLayout: function() {
                        var g = this._regs
                          , f = 0
                          , e = 0;
                        g && (n.forEach(g, function(d) {
                            var c = d[1].offsetWidth || m.get(d[1], "width");
                            d[2] ? e += c : f += c
                        }),
                        this.lead = f,
                        this.tail = e,
                        this.onUpdateWidth(f, e))
                    },
                    onUpdateWidth: function() {},
                    _layout: function() {
                        var g = this
                          , f = g._regs;
                        if (f) {
                            var e = 0
                              , d = 0
                              , c = n.map(f, function(b) {
                                return b[0]
                            });
                            (new l(c)).then(function() {
                                n.forEach(f, function(b) {
                                    var a = b[1].offsetWidth || m.get(b[1], "width");
                                    b[2] ? d += a : e += a
                                });
                                g.lead = e;
                                g.tail = d;
                                g.loaded.callback()
                            })
                        } else
                            g.loaded.callback()
                    }
                })
            })
        },
        "gridx/modules/VScroller": function() {
            define("dojo/_base/declare dojo/_base/Deferred dojo/_base/event dojo/_base/sniff dojo/query dojo/dom-geometry dojo/dom-class dojo/dom-style dojo/keys dojox/html/metrics ../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e, d, c) {
                return q(c, {
                    name: "vScroller",
                    forced: ["view", "body", "vLayout", "columnWidth"],
                    optional: ["pagination"],
                    constructor: function() {
                        var b = this.grid
                          , a = this.domNode = b.vScrollerNode;
                        this.stubNode = a.firstChild;
                        if (b.autoHeight)
                            a.style.display = "none",
                            8 > m("ie") && (a.style.width = "0px");
                        else if (m("mac"))
                            g.add(b.domNode, "gridxMac");
                        else {
                            var c = d.getScrollbar().w
                              , b = b.isLeftToRight();
                            a.style.width = c + "px";
                            a.style[b ? "right" : "left"] = -c + "px";
                            8 > m("ie") && (this.stubNode.style.width = c + 1 + "px")
                        }
                    },
                    preload: function(b) {
                        this.grid.hLayout.register(null, this.domNode, 1)
                    },
                    load: function(b, a) {
                        var c = this
                          , d = c.grid
                          , e = d.body
                          , f = c.domNode
                          , g = d.bodyNode;
                        c.batchConnect([c.domNode, "onscroll", "_doScroll"], [g, "onmousewheel", "_onMouseWheel"], [d.mainNode, "onkeypress", "_onKeyScroll"], m("ff") && [g, "DOMMouseScroll", "_onMouseWheel"]);
                        c.aspect(d, "_onResizeEnd", "_onBodyChange");
                        c.aspect(e, "onForcedScroll", "_onForcedScroll");
                        c.aspect(e, "onRender", "_onBodyChange");
                        c.aspect(d.header, "onRender", "_onBodyChange");
                        d.autoHeight || c.aspect(e, "onEmpty", function() {
                            var a = f.style;
                            a.display = "none";
                            a.width = "";
                            8 > m("ie") && (a.width = c.stubNode.style.width = "0px");
                            d.hLayout.reLayout();
                            d.hScroller.refresh()
                        });
                        a.then(function() {
                            c._updatePos();
                            p.when(c._init(b), function() {
                                c.domNode.style.width = "";
                                c.loaded.callback()
                            })
                        })
                    },
                    scrollToRow: function(b, a) {
                        var c = new p
                          , d = this.grid.bodyNode
                          , e = this.domNode
                          , f = 0
                          , g = l('[visualindex\x3d"' + b + '"]', d)[0]
                          , k = function(a) {
                            setTimeout(function() {
                                c.callback(a)
                            }, 5)
                        };
                        if (g) {
                            var f = g.offsetTop
                              , m = d.scrollTop;
                            if (a)
                                return e.scrollTop = f,
                                k(!0),
                                c;
                            if (f <= m)
                                f -= m;
                            else if (f + g.offsetHeight > m + d.clientHeight)
                                f = f + g.offsetHeight - m - d.clientHeight;
                            else
                                return k(!0),
                                c;
                            e.scrollTop += f
                        }
                        k(!!g);
                        return c
                    },
                    scroll: function(b) {
                        this.domNode.scrollTop = b
                    },
                    position: function() {
                        return this.domNode.scrollTop
                    },
                    _init: function() {
                        return this._onForcedScroll()
                    },
                    _update: function() {
                        var b = this.grid
                          , a = this.domNode
                          , c = b.bodyNode;
                        if (b.autoHeight)
                            "none" !== f.get(a, "display") && (a.style.display = "none",
                            b.hLayout.reLayout());
                        else {
                            var a = b.body
                              , a = c.scrollHeight > c.clientHeight || c.scrollHeight == c.clientHeight && a.renderCount < b.view.visualCount
                              , c = this.domNode.style
                              , e = d.getScrollbar().w + (m("webkit") ? 1 : 0);
                            8 > m("ie") ? (e = a ? e + 2 + "px" : "0px",
                            this.stubNode.style.width = e,
                            c.width = e) : c.width = "";
                            a = a ? "block" : "none";
                            e = a != (f.get(this.domNode, "display") || "block");
                            c.display = a;
                            (this._updatePos() || e) && b.hLayout.reLayout()
                        }
                    },
                    _updatePos: function() {
                        var b = this.grid
                          , a = this.domNode
                          , c = a.style
                          , d = b.isLeftToRight()
                          , b = k.getBorderExtents(b.mainNode)
                          , e = d ? "right" : "left"
                          , f = c[e];
                        c[e] = -(a.offsetWidth + (d ? b.r : b.l)) + "px";
                        return f != c[e]
                    },
                    _doScroll: function() {
                        this.grid.bodyNode.scrollTop = this.domNode.scrollTop
                    },
                    _onMouseWheel: function(b) {
                        "none" != this.grid.vScrollerNode.style.display && (this.domNode.scrollTop -= "number" === typeof b.wheelDelta ? b.wheelDelta / 3 : -40 * b.detail,
                        n.stop(b))
                    },
                    _onBodyChange: function() {
                        var b = this
                          , a = b.grid;
                        b._update();
                        setTimeout(function() {
                            a.bodyNode && (b.stubNode.style.height = a.bodyNode.scrollHeight + "px",
                            b._doScroll(),
                            a.vScrollerNode.scrollTop = a.vScrollerNode.scrollTop || 0)
                        }, 0)
                    },
                    _onForcedScroll: function() {
                        var b = this.grid.view
                          , a = this.grid.body;
                        return this.model.when({
                            start: b.rootStart,
                            count: b.rootCount
                        }, function() {
                            a.renderRows(0, b.visualCount)
                        })
                    },
                    _onKeyScroll: function(b) {
                        var a = this.grid, c = a.body, d = a.bodyNode, f = a.focus, g = this.domNode, l = a._isCtrlKey(b), m;
                        if (d.childNodes.length && (!f || "body" == f.currentArea())) {
                            if (b.keyCode == e.HOME && l)
                                g.scrollTop = 0,
                                m = d.firstChild,
                                c._focusCellCol = 0;
                            else if (b.keyCode == e.END && l)
                                g.scrollTop = g.scrollHeight - g.offsetHeight,
                                m = d.lastChild,
                                c._focusCellCol = a._columns.length - 1;
                            else if (b.keyCode == e.PAGE_UP)
                                g.scrollTop ? g.scrollTop -= g.offsetHeight : m = d.firstChild;
                            else if (b.keyCode == e.PAGE_DOWN)
                                g.scrollTop >= g.scrollHeight - g.offsetHeight ? m = d.lastChild : g.scrollTop += g.offsetHeight;
                            else
                                return;
                            f && (m ? (c._focusCellRow = parseInt(m.getAttribute("visualindex"), 10),
                            f.focusArea("body", 1)) : setTimeout(function() {
                                for (var a = d.childNodes, h = 0, r = a.length - 1, t = k.position(d), g, l, u = function(c) {
                                    var h = a[c];
                                    c = k.position(h);
                                    if (b.keyCode == e.PAGE_DOWN)
                                        return h = h.previousSibling,
                                        !h && c.y >= t.y || c.y == t.y ? 0 : h ? (c = k.position(h),
                                        c.y < t.y && c.y + c.h >= t.y ? 0 : c.y > t.y ? 1 : -1) : -1;
                                    h = h.nextSibling;
                                    return !h && c.y + c.h <= t.y + t.h || c.y + c.h == t.y + t.h ? 0 : h ? (c = k.position(h),
                                    c.y <= t.y + t.h && c.y + c.h > t.y + t.h ? 0 : c.y > t.y + t.h ? 1 : -1) : 1
                                }; h <= r; )
                                    if (g = Math.floor((h + r) / 2),
                                    l = u(g),
                                    0 > l)
                                        h = g + 1;
                                    else if (0 < l)
                                        r = g - 1;
                                    else {
                                        m = a[g];
                                        break
                                    }
                                m && (c._focusCellRow = parseInt(m.getAttribute("visualindex"), 10),
                                f.focusArea("body", 1))
                            }, 0));
                            n.stop(b)
                        }
                    }
                })
            })
        },
        "gridx/modules/HScroller": function() {
            define("dojo/_base/declare dojo/dom-style dojo/_base/sniff dojo/_base/Deferred dojo/query dojox/html/metrics ../core/_Module".split(" "), function(q, p, n, m, l, k, g) {
                return q(g, {
                    name: "hScroller",
                    constructor: function() {
                        var f = this.grid
                          , e = this.domNode = f.hScrollerNode;
                        f._initEvents(["H"], ["Scroll"]);
                        this.container = e.parentNode;
                        this.stubNode = e.firstChild
                    },
                    preload: function() {
                        var f = this
                          , e = f.grid
                          , d = e.hScrollerNode;
                        !e.autoWidth && (e.vLayout.register(f, "container", "footerNode", 0),
                        d.style.display = "block",
                        f.aspect(e.columnWidth, "onUpdate", "refresh"),
                        f.connect(d, "onscroll", "_onScroll"),
                        e.dod && f.connect(e.bodyNode, "onscroll", function() {
                            f.domNode.scrollLeft = e.bodyNode.scrollLeft
                        }),
                        n("ie") || n("trident")) && (d.style.height = k.getScrollbar().h + 2 + "px")
                    },
                    scroll: function(f) {
                        var e = this.domNode;
                        (n("webkit") || 8 > n("ie")) && !this.grid.isLeftToRight() && (f = e.scrollWidth - e.offsetWidth - f);
                        n("ff") && !this.grid.isLeftToRight() && 0 < f && (f = -f);
                        e.scrollLeft = f
                    },
                    scrollToColumn: function(f, e) {
                        var d = this.grid.header.innerNode
                          , c = l(".gridxCell", d)
                          , b = 0
                          , a = 0
                          , h = this.grid.isLeftToRight()
                          , r = this.domNode.scrollLeft;
                        !h && (n("webkit") || 8 > n("ie")) && (r = this.domNode.scrollWidth - r - d.offsetWidth);
                        if (e && this.grid.columnLock && this.grid.columnLock.count && (r = e.scrollLeft,
                        r != this.domNode.scrollLeft)) {
                            this.scroll(r);
                            return
                        }
                        for (var r = Math.abs(r), t = 0; t < c.length && (b = c[t].offsetLeft,
                        a = b + c[t].offsetWidth,
                        c[t].getAttribute("colid") != f); t++)
                            ;
                        h && b < r ? this.scroll(b) : h && a > r + d.offsetWidth ? this.scroll(a - d.offsetWidth) : !h && a > d.scrollWidth - r ? this.scroll(a - d.scrollWidth) : !h && b + r < d.scrollWidth - d.offsetWidth && this.scroll(d.scrollWidth - d.offsetWidth - b)
                    },
                    refresh: function() {
                        var f = this.grid
                          , e = f.isLeftToRight()
                          , d = f.hLayout.lead
                          , c = f.hLayout.tail
                          , b = (f.domNode.clientWidth || p.get(f.domNode, "width")) - d - c
                          , a = f.header.innerNode
                          , h = p.get(a, e ? "paddingLeft" : "paddingRight") || 0
                          , r = this.domNode.style
                          , a = a.firstChild.offsetWidth + h
                          , t = r.display
                          , g = a <= b ? "none" : "block";
                        r[e ? "marginLeft" : "marginRight"] = d + h + "px";
                        r[e ? "marginRight" : "marginLeft"] = c + "px";
                        r.width = (0 > b - h ? 0 : b - h) + "px";
                        this.stubNode.style.width = (0 > a - h ? 0 : a - h) + "px";
                        r.display = g;
                        t != g && f.vLayout.reLayout()
                    },
                    _lastLeft: 0,
                    _onScroll: function(f) {
                        f = this.domNode.scrollLeft;
                        (n("webkit") || 8 > n("ie")) && !this.grid.isLeftToRight() && (f = this.domNode.scrollWidth - this.domNode.offsetWidth - f);
                        this._lastLeft != f && (this._lastLeft = f,
                        this._doScroll())
                    },
                    _doScroll: function(f) {
                        f = this.grid;
                        f.bodyNode.scrollLeft = this.domNode.scrollLeft;
                        f.onHScroll(this._lastLeft)
                    }
                })
            })
        },
        "gridx/modules/ColumnWidth": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/Deferred ../support/query dojo/_base/sniff dojo/dom-geometry dojo/dom-class dojo/dom-style dojo/keys ../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                function c(a, b, c) {
                    a.sort(function(a, b) {
                        return (a.minWidth || 0) - (b.minWidth || 0)
                    });
                    for (var h = a.length - 1, d; 0 <= h; --h)
                        if (d = a[h],
                        d.minWidth && (d.minWidth + c) * (h + 1) > b)
                            d.width = d.minWidth + "px",
                            b -= d.minWidth + c;
                        else
                            break;
                    var e = h + 1;
                    if (e) {
                        var r = Math.floor(b / e - c);
                        b = b - (r + c) * (e - 1) - c;
                        0 > r && (r = 0);
                        0 > b && (b = 0);
                        for (h = 0; h < e; ++h)
                            d = a[h],
                            d.width = (h ? r : b) + "px"
                    }
                }
                var b = 6 > l("safari") || !l("safari") && l("webkit") && l("ios");
                return q(d, {
                    name: "columnWidth",
                    forced: ["hLayout"],
                    constructor: function() {
                        this._init()
                    },
                    load: function() {
                        var a = this.grid;
                        this.aspect(a.hLayout, "onUpdateWidth", "_onUpdateWidth");
                        this.aspect(a, "setColumns", "_onSetColumns");
                        this._adaptWidth();
                        this.loaded.callback()
                    },
                    "default": 60,
                    autoResize: !1,
                    onUpdate: function() {},
                    _init: function() {
                        var a = this
                          , b = a.grid
                          , c = a.arg("autoResize")
                          , d = a.arg("default") + "px";
                        p.forEach(b._columns, function(h) {
                            h.hasOwnProperty("declaredWidth") || (h.declaredWidth = h.width = h.width || "auto");
                            b.autoWidth && ("auto" == h.declaredWidth || /%$/.test(h.declaredWidth)) ? h.width = a["default"] < h.minWidth ? h.minWidth + "px" : d : c && !/%$/.test(h.declaredWidth) && (h.width = "auto")
                        });
                        c && g.add(b.domNode, "gridxPercentColumnWidth")
                    },
                    _onUpdateWidth: function() {
                        var a = this.grid;
                        if (a.autoWidth)
                            this._adaptWidth();
                        else {
                            var b = "none" == a.hScrollerNode.style.display
                              , c = this.autoResize;
                            this._adaptWidth(!b, 1);
                            !c && b && m(".gridxCell", a.bodyNode).forEach(function(b) {
                                var h = a._columnsById[b.getAttribute("colId")]
                                  , d = h.declaredWidth;
                                if (c || !d || "auto" == d || /%$/.test(d))
                                    b = b.style,
                                    h = h.width,
                                    b.width = h,
                                    b.minWidth = h,
                                    b.maxWidth = h
                            });
                            this.onUpdate()
                        }
                    },
                    _adaptWidth: function(a, h) {
                        var d = this.grid
                          , e = d.domNode
                          , g = d.header
                          , l = this.arg("autoResize")
                          , n = d.isLeftToRight()
                          , q = n ? "marginLeft" : "marginRight"
                          , n = n ? "marginRight" : "marginLeft"
                          , w = d.hLayout.lead
                          , v = d.hLayout.tail
                          , A = g.innerNode
                          , B = d.bodyNode.style
                          , C = A.style
                          , E = k.getBorderExtents(g.domNode).w
                          , I = E
                          , H = 0
                          , F = (e.clientWidth || f.get(e, "width")) - w - v - E
                          , G = (E = m(".gridxCell", A)[0]) ? k.getMarginBox(E).w - k.getContentBox(E).w : 0
                          , J = d.header.arg("groups")
                          , O = !e.offsetHeight;
                        this._padBorder = G;
                        0 === I ? I = 1 : H = 2;
                        C[q] = w + "px";
                        C[n] = (v > I ? v - I : 0) + "px";
                        d.mainNode.style[q] = w + "px";
                        d.mainNode.style[n] = v + "px";
                        F = 0 > F ? 0 : F;
                        if (a)
                            this.onUpdate();
                        else {
                            l && b && m(".gridxCell", A).forEach(function(a) {
                                var b = d._columnsById[a.getAttribute("colid")];
                                if (/px$/.test(b.declaredWidth)) {
                                    var c = parseInt(b.declaredWidth, 10) + G
                                      , c = b.width = c + "px";
                                    a.style.width = c;
                                    a.style.minWidth = c;
                                    a.style.maxWidth = c
                                }
                            });
                            if (d.autoWidth) {
                                var D = 0;
                                m(".gridxCell", A).forEach(function(a) {
                                    var c = d._columnsById[a.getAttribute("colid")]
                                      , h = f.get(a, "width");
                                    !J && b && O || (h += G);
                                    h < c.minWidth && (h = c.minWidth);
                                    D += h;
                                    if ("auto" == c.width || /%$/.test(c.width))
                                        a.style.width = c.width = h + "px",
                                        a.style.minWidth = c.width,
                                        a.style.maxWidth = c.width
                                });
                                B.width = D + "px";
                                e.style.width = w + v + D + H + "px"
                            } else if (l)
                                C.borderWidth = "none" == d.vScrollerNode.style.display ? 0 : "";
                            else {
                                var M = []
                                  , e = d._columns
                                  , L = 0;
                                !J && b && (G = 0);
                                p.forEach(e, function(a) {
                                    if ("auto" == a.declaredWidth)
                                        M.push(a);
                                    else if (/%$/.test(a.declaredWidth)) {
                                        var b = parseFloat(F * parseFloat(a.declaredWidth, 10) / 100 - G, 10);
                                        0 > b && (b = 0);
                                        "number" == typeof a.minWidth && b < a.minWidth && (b = a.minWidth);
                                        var c = g.getHeaderNode(a.id);
                                        c.style.width = a.width = b + "px";
                                        c.style.minWidth = a.width;
                                        c.style.maxWidth = a.width
                                    }
                                });
                                p.forEach(e, function(a) {
                                    if ("auto" != a.declaredWidth) {
                                        var c = g.getHeaderNode(a.id)
                                          , c = !J && b ? parseFloat(c.style.width, 10) : f.get(c, "width") + G;
                                        /%$/.test(a.declaredWidth) && (a.width = (c > G ? c - G : 0) + "px");
                                        L += c
                                    }
                                });
                                if (M.length) {
                                    e = F - L;
                                    if (0 < e)
                                        c(M, e, G);
                                    else {
                                        var K = this.arg("default");
                                        p.forEach(M, function(a, b) {
                                            var c = K;
                                            "number" == typeof a.minWidth && c < a.minWidth && (c = a.minWidth);
                                            a.width = c + "px"
                                        })
                                    }
                                    p.forEach(M, function(a, b) {
                                        var c = g.getHeaderNode(a.id);
                                        c.style.width = a.width;
                                        c.style.minWidth = a.width;
                                        c.style.maxWidth = a.width
                                    })
                                }
                            }
                            J && (m(".gridxCell", g.innerNode).forEach(function(a) {
                                var b = d._columnsById[a.getAttribute("colid")];
                                if (/px$/.test(b.width)) {
                                    var c = a.clientWidth - k.getPadExtents(a).w;
                                    parseInt(b.width, 10) != c && (b.width = c += "px",
                                    a.style.width = c,
                                    a.style.minWidth = c,
                                    a.style.maxWidth = c)
                                }
                            }),
                            d.autoWidth && m(".gridxCell", d.bodyNode).forEach(function(a) {
                                var b = d._columnsById[a.getAttribute("colId")]
                                  , b = b && b.width;
                                a = a.style;
                                b && (a.width = b,
                                a.minWidth = b,
                                a.maxWidth = b)
                            }));
                            d.hScroller.scroll(0);
                            g._onHScroll(0);
                            d.vLayout.reLayout();
                            if (!h)
                                this.onUpdate()
                        }
                    },
                    _onSetColumns: function() {
                        var a = this.grid;
                        this._init();
                        a.header._build();
                        this._adaptWidth();
                        a.cellWidget && (a.cellWidget._init(),
                        a.edit && a.edit._init());
                        a.tree && a.tree._initExpandLevel();
                        a.body.refresh();
                        a.header.onRender()
                    }
                })
            })
        },
        "gridx/modules/Focus": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/connect dojo/_base/lang dojo/_base/sniff dojo/_base/window dojo/_base/event dojo/keys ../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e) {
                function d(c, b) {
                    var a = 0, h = c.length, d;
                    for (d = Math.floor((a + h) / 2); a + 1 < h; d = Math.floor((a + h) / 2))
                        0 < b(c[d]) ? h = d : a = d;
                    return c.length && 0 <= b(c[a]) ? a : h
                }
                return q(e, {
                    name: "focus",
                    constructor: function() {
                        var c = this
                          , b = c.grid;
                        c._areas = {};
                        c._tabQueue = [];
                        c._focusNodes = [];
                        c._onDocFocus = function(a) {
                            if (!c._noBlur) {
                                if (l("ie") || l("trident"))
                                    a.target = a.srcElement;
                                c._onFocus(a)
                            }
                        }
                        ;
                        c.arg("enabled", !b.touch);
                        c.batchConnect([b.domNode, "onkeydown", "_onTabDown"], [b.domNode, "onfocus", "_focus"], [b.lastFocusNode, "onfocus", "_focus"], [b, "onBlur", "_doBlur"]);
                        9 > l("ie") ? k.doc.attachEvent("onfocusin", c._onDocFocus) : (k.doc.addEventListener("focus", c._onDocFocus, !0),
                        b.bodyNode.addEventListener("focus", m.hitch(c, c._focusBody), !0))
                    },
                    destroy: function() {
                        this._areaQueue = this._areas = null;
                        this._focusNodes = [];
                        this._queueIdx = -1;
                        9 > l("ie") ? k.doc.detachEvent("onfocusin", this._onDocFocus) : k.doc.removeEventListener("focus", this._onDocFocus, !0);
                        this.inherited(arguments)
                    },
                    registerArea: function(c) {
                        if (c && c.name && "number" == typeof c.priority) {
                            var b = this._tabQueue
                              , a = function(a) {
                                c[a] = c[a] ? m.hitch(c.scope || c, c[a]) : function() {
                                    return !0
                                }
                            };
                            this._areas[c.name] && this.removeArea(c.name);
                            a("doFocus");
                            a("doBlur");
                            a("onFocus");
                            a("onBlur");
                            c.connects = c.connects || [];
                            this._areas[c.name] = c;
                            a = d(b, function(a) {
                                return a.p - c.priority
                            });
                            b[a] && b[a].p === c.priority ? (b[a].stack.unshift(c.name),
                            this._focusNodes[a] = c.focusNode || this._focusNodes[a]) : (b.splice(a, 0, {
                                p: c.priority,
                                stack: [c.name]
                            }),
                            this._focusNodes.splice(a, 0, c.focusNode))
                        }
                    },
                    focusArea: function(c, b) {
                        var a = this._areas[c];
                        if (a && this.arg("enabled")) {
                            var h = this._areas[this.currentArea()];
                            if (h && h.name === c)
                                return b && h.doFocus(null, null, b),
                                !0;
                            if (!h || h.doBlur()) {
                                if (h)
                                    this.onBlurArea(h.name);
                                if (a.doFocus())
                                    return this.onFocusArea(a.name),
                                    this._updateCurrentArea(a),
                                    !0;
                                this._updateCurrentArea()
                            }
                        }
                        return !1
                    },
                    blur: function() {
                        var c = this._areas[this.currentArea()];
                        c && c.doBlur();
                        this._queueIdx = -1;
                        this._stackIdx = 0
                    },
                    currentArea: function() {
                        var c = this._tabQueue[this._queueIdx];
                        return c ? c.stack[this._stackIdx] : ""
                    },
                    tab: function(c, b) {
                        var a = this._areas
                          , h = a[this.currentArea()];
                        if (!c)
                            return h ? h.name : "";
                        var d = this._queueIdx + c
                          , e = 0 < c ? 1 : -1
                          , f = this._tabQueue;
                        if (h) {
                            var g = h.doBlur(b, c)
                              , k = a[g];
                            if (g)
                                this.onBlurArea(h.name);
                            if (k && k.doFocus(b, c))
                                return this.onFocusArea(k.name),
                                this._updateCurrentArea(k),
                                k.name;
                            if (!g)
                                return h.name
                        }
                        for (; 0 <= d && d < f.length; d += e)
                            for (g = f[d].stack,
                            h = 0; h < g.length; ++h)
                                if (k = g[h],
                                a[k].doFocus(b, c))
                                    return this.onFocusArea(k),
                                    this._queueIdx = d,
                                    this._stackIdx = h,
                                    k;
                        this._tabingOut = 1;
                        0 > c ? (this._queueIdx = -1,
                        this.grid.domNode.focus()) : (this._queueIdx = f.length,
                        this.grid.lastFocusNode.focus());
                        return ""
                    },
                    removeArea: function(c) {
                        var b = this._areas[c];
                        if (b) {
                            this.currentArea() === c && this._updateCurrentArea();
                            var a = d(this._tabQueue, function(a) {
                                return a.p - b.priority
                            }), h, e = this._tabQueue[a].stack;
                            for (h = e.length - 1; 0 <= h; --h)
                                if (e[h] === b.name) {
                                    e.splice(h, 1);
                                    break
                                }
                            e.length || (this._tabQueue.splice(a, 1),
                            this._focusNodes.splice(a, 1));
                            p.forEach(b.connects, n.disconnect);
                            delete this._areas[c];
                            return !0
                        }
                        return !1
                    },
                    stopEvent: function(c) {
                        c && g.stop(c)
                    },
                    onFocusArea: function() {},
                    onBlurArea: function() {},
                    _queueIdx: -1,
                    _stackIdx: 0,
                    _onTabDown: function(c) {
                        this.arg("enabled") && c.keyCode === f.TAB && this.tab(c.shiftKey ? -1 : 1, c)
                    },
                    _onFocus: function(c) {
                        var b, a, h, d;
                        a = this.grid.domNode;
                        h = c.target;
                        var e = this._areas[this.currentArea()];
                        if (this.arg("enabled")) {
                            for (; h && h !== a; ) {
                                b = p.indexOf(this._focusNodes, h);
                                if (0 <= b) {
                                    h = this._tabQueue[b].stack;
                                    for (a = 0; a < h.length; ++a)
                                        if (d = this._areas[h[a]],
                                        d.onFocus(c)) {
                                            e && e.name !== d.name && (e.onBlur(c),
                                            this.onBlurArea(e.name));
                                            this.onFocusArea(d.name);
                                            this._queueIdx = b;
                                            this._stackIdx = a;
                                            break
                                        }
                                    return
                                }
                                h = h.parentNode
                            }
                            h == a && e && this._doBlur(c, e)
                        }
                    },
                    _focus: function(c) {
                        this.arg("enabled") && (this._tabingOut ? this._tabingOut = 0 : c.target == this.grid.domNode ? (this._queueIdx = -1,
                        this.tab(1)) : c.target === this.grid.lastFocusNode && (this._queueIdx = this._tabQueue.length,
                        this.tab(-1)))
                    },
                    _focusBody: function(c) {
                        this.stopEvent(c);
                        c.target === this.grid.bodyNode && this.focusArea("body", !0)
                    },
                    _doBlur: function(c, b) {
                        this.arg("enabled") && (!b && this.currentArea() && (b = this._areas[this.currentArea()]),
                        b && (b.onBlur(c),
                        this.onBlurArea(b.name),
                        this._updateCurrentArea()))
                    },
                    _updateCurrentArea: function(c) {
                        var b = this._tabQueue;
                        if (c) {
                            var a = this._queueIdx = d(b, function(a) {
                                return a.p - c.priority
                            });
                            this._stackIdx = p.indexOf(b[a].stack, c.name)
                        } else
                            this._queueIdx = null,
                            this._stackIdx = 0
                    }
                })
            })
        },
        "gridx/nls/gridx": function() {
            define({
                root: {
                    loadingInfo: "Loading...",
                    emptyInfo: "No items to display",
                    loadFailInfo: "Failed to load data!",
                    loadMore: "Load More",
                    loadMoreLoading: "Loading...",
                    loadPrevious: "Load Previous",
                    loadPreviousLoading: "Loading...",
                    day: "days",
                    month: "months",
                    year: "years",
                    hour: "hours",
                    clearFilterDialogTitle: "Clear Filter",
                    filterDefDialogTitle: "Filter",
                    defaultRuleTitle: "Rule",
                    ruleTitleTemplate: "Rule ${ruleNumber}",
                    noFilterApplied: "No filter applied.",
                    defineFilter: "Define filter",
                    defineFilterAriaLabel: "Define filter: Opens a filter dialog for configuring complex filter rules. Each filter rule is made up of a combination of column, condition and value. When the dialog opens, the value field has keyboard focus.",
                    conditionEqual: "equal",
                    conditionNotEqual: "does not equal",
                    conditionLess: "is less than",
                    conditionLessEqual: "less than or equal",
                    conditionGreater: "is greater than",
                    conditionGreaterEqual: "greater than or equal",
                    conditionContain: "contains",
                    conditionIs: "is",
                    conditionStartWith: "starts with",
                    conditionEndWith: "ends with",
                    conditionNotContain: "does not contain",
                    conditionIsNot: "is not",
                    conditionNotStartWith: "does not start with",
                    conditionNotEndWith: "does not end with",
                    conditionBefore: "before",
                    conditionAfter: "after",
                    conditionRange: "range",
                    conditionIsEmpty: "is empty",
                    conditionIsNotEmpty: "is not empty",
                    conditionPast: "past",
                    all: "all",
                    any: "any",
                    relationAll: "all rules",
                    waiRelAll: "Match all of the following rules:",
                    relationAny: "any rule",
                    matchCase: "match case",
                    waiRelAny: "Match any of the following rules:",
                    relationMsgFront: "Match",
                    relationMsgTail: "",
                    and: "and",
                    or: "or",
                    addRuleButton: "Add Rule",
                    waiAddRuleButton: "Add a new rule",
                    removeRuleButton: "Remove Rule",
                    waiRemoveRuleButtonTemplate: "Remove rule ${0}",
                    addRuleButton: "Add Filter Rule",
                    cancelButton: "Cancel",
                    waiCancelButton: "Cancel this dialog",
                    clearButton: "Clear",
                    waiClearButton: "Clear the filter",
                    filterButton: "Filter",
                    restoreFilterButton: "Restore",
                    waiFilterButton: "Submit the filter",
                    columnSelectLabel: "Column:",
                    columnSelectAriaLabel: "Column: condition part ${0} of ${1}",
                    waiColumnSelectTemplate: "Column for rule ${0}",
                    conditionSelectLabel: "Condition:",
                    conditionSelectAriaLabel: "Operator: condition part ${0} of ${1}",
                    waiConditionSelectTemplate: "Condition for rule ${0}",
                    valueBoxLabel: "Value:",
                    valueBoxAriaLabel: "Value: condition part ${0} of ${1}",
                    waiValueBoxTemplate: "Enter value to filter for rule ${0}",
                    rangeTo: "to",
                    rangeTemplate: "from ${0} to ${1}",
                    pastHoursConditionTemplate: "${0} hours",
                    pastDaysConditionTemplate: "${0} days",
                    pastMonthsConditionTemplate: "${0} months",
                    pastYearsConditionTemplate: "${0} years",
                    statusTipHeaderColumn: "Column",
                    statusTipHeaderCondition: "Rules",
                    statusTipTitle: "Filter Bar",
                    statusTipMsg: "Click the filter bar here to filter on values in ${0}.",
                    anycolumn: "any column",
                    statusTipTitleNoFilter: "Filter Bar",
                    statusTipTitleHasFilter: "Filter",
                    statusTipRelPre: "Match",
                    statusTipRelPost: "rules.",
                    statusTipHeaderAll: "Match all rules.",
                    statusTipHeaderAny: "Match any rules.",
                    defaultItemsName: "items",
                    filterBarMsgHasFilterTemplate: "${0} of ${1} ${2} shown.",
                    filterBarMsgNoFilterTemplate: "No filter applied",
                    filterBarDefButton: "Define filter",
                    waiFilterBarDefButton: "Filter the table",
                    a11yFilterBarDefButton: "Filter...",
                    filterBarClearButton: "Clear filter",
                    waiFilterBarClearButton: "Clear the filter",
                    closeFilterBarBtn: "Close filter bar",
                    clearFilterMsg: "This will remove the filter and show all available records.",
                    anyColumnOption: "Any Column",
                    trueLabel: "True",
                    falseLabel: "False",
                    radioTrueLabel: "Value True",
                    radioFalseLabel: "Value False",
                    beginTimeRangeLabel: "Time Range Value Start",
                    endTimeRangeLabel: "Time Range Value End",
                    beginDateRangeLabel: "Date Range Value Start",
                    endDateRangeLabel: "Date Range Value End",
                    datePastLabel: "Past several days",
                    beginNumberRangeLabel: "Number Value Start",
                    endNumberRangeLabel: "Number Value End",
                    startsWithExpr: "${0}*",
                    singleSort: "Single Sort",
                    nestedSort: "Nested Sort",
                    ascending: "Click to sort Ascending",
                    descending: "Click to sort Descending",
                    sortingState: "${0} - ${1}",
                    unsorted: "Do not sort this column",
                    waiSingleSortLabel: "${0} - is sorted by ${1}. Choose to sort by ${2}",
                    waiNestedSortLabel: "${0} - is nested sorted by ${1}. Choose to nested sort by ${2}",
                    pagerWai: "Pager",
                    pageIndex: "${0}",
                    pageIndexTitle: "Page ${0}",
                    firstPageTitle: "First page",
                    prevPageTitle: "Previous page",
                    nextPageTitle: "Next page",
                    lastPageTitle: "Last page",
                    pageSize: "${0}",
                    pageSizeTitle: "${0} items per page",
                    pageSizeAll: "All",
                    pageSizeAllTitle: "All items",
                    description: "${0} - ${1} of ${2} items.",
                    descriptionEmpty: "Grid is empty.",
                    summary: "Total: ${0}",
                    summaryWithSelection: "Total: ${0} Selected: ${1}",
                    gotoBtnTitle: "Go to a specific page",
                    gotoDialogTitle: "Go to Page",
                    gotoDialogMainMsg: "Specify the page number:",
                    gotoDialogPageCount: "(${0} pages)",
                    gotoDialogOKBtn: "Go",
                    gotoDialogCancelBtn: "Cancel",
                    pageLabel: "Page",
                    pageSizeLabel: "Rows",
                    filterLabel: "Filter",
                    clearButtonTitle: "Clear Filter",
                    buildFilterMenuLabel: "Build Filter...",
                    apply: "Apply Filter",
                    helpMsg: "${0} - Click to sort or control-click to add to sort",
                    singleHelpMsg: "${0} - Click to sort",
                    priorityOrder: "sort priority ${0}",
                    summaryTotal: "Total: ${0}",
                    summarySelected: "Selected: ${0}",
                    summaryRange: "Range: ${0}-${1}",
                    indirectSelectAll: "Press SPACE to select all.",
                    indirectDeselectAll: "Press SPACE to deselect all.",
                    treeExpanded: "Control + left arrow key to collapse this row.",
                    treeCollapsed: "Control + right arrow key to expand this row."
                },
                ar: !0,
                bg: !0,
                ca: !0,
                cs: !0,
                da: !0,
                de: !0,
                el: !0,
                es: !0,
                fi: !0,
                fr: !0,
                he: !0,
                hr: !0,
                hu: !0,
                id: !0,
                it: !0,
                ja: !0,
                kk: !0,
                ko: !0,
                nb: !0,
                nl: !0,
                pl: !0,
                pt: !0,
                "pt-pt": !0,
                ro: !0,
                ru: !0,
                sk: !0,
                sl: !0,
                sv: !0,
                th: !0,
                tr: !0,
                uk: !0,
                zh: !0,
                "zh-tw": !0,
                vi: !0
            })
        },
        "gridx/nls/zh/gridx": function() {
            define({
                loadingInfo: "\u6b63\u5728\u88c5\u5165...",
                emptyInfo: "\u6ca1\u6709\u8981\u663e\u793a\u7684\u9879\u76ee",
                loadFailInfo: "\u672a\u80fd\u88c5\u5165\u6570\u636e\uff01",
                loadMore: "\u88c5\u5165\u66f4\u591a",
                loadMoreLoading: "\u6b63\u5728\u88c5\u5165...",
                loadPrevious: "\u88c5\u5165\u524d\u4e00\u9879",
                loadPreviousLoading: "\u6b63\u5728\u88c5\u5165...",
                clearFilterDialogTitle: "\u6e05\u9664\u8fc7\u6ee4\u5668",
                filterDefDialogTitle: "\u8fc7\u6ee4",
                defaultRuleTitle: "\u89c4\u5219",
                ruleTitleTemplate: "\u89c4\u5219 ${ruleNumber}",
                noFilterApplied: "\u672a\u5e94\u7528\u8fc7\u6ee4\u5668\u3002",
                defineFilter: "\u5b9a\u4e49\u8fc7\u6ee4\u5668",
                defineFilterAriaLabel: "\u5b9a\u4e49\u8fc7\u6ee4\u5668\uff1a\u6253\u5f00\u8fc7\u6ee4\u5668\u5bf9\u8bdd\u6846\u4ee5\u914d\u7f6e\u590d\u6742\u7684\u8fc7\u6ee4\u89c4\u5219\u3002\u6bcf\u4e2a\u8fc7\u6ee4\u89c4\u5219\u7531\u5217\u3001\u6761\u4ef6\u548c\u503c\u7684\u7ec4\u5408\u6784\u6210\u3002\u8be5\u5bf9\u8bdd\u6846\u6253\u5f00\u65f6\uff0c\u503c\u5b57\u6bb5\u62e5\u6709\u952e\u76d8\u7126\u70b9\u3002",
                conditionEqual: "\u7b49\u4e8e",
                conditionNotEqual: "\u4e0d\u7b49\u4e8e",
                conditionLess: "\u5c0f\u4e8e",
                conditionLessEqual: "\u5c0f\u4e8e\u6216\u7b49\u4e8e",
                conditionGreater: "\u5927\u4e8e",
                conditionGreaterEqual: "\u5927\u4e8e\u6216\u7b49\u4e8e",
                conditionContain: "\u5305\u542b",
                conditionIs: "\u4e3a",
                conditionStartWith: "\u5f00\u59cb\u5185\u5bb9\u4e3a",
                conditionEndWith: "\u7ed3\u675f\u5185\u5bb9\u4e3a",
                conditionNotContain: "\u4e0d\u5305\u542b",
                conditionIsNot: "\u4e0d\u662f",
                conditionNotStartWith: "\u5f00\u59cb\u5185\u5bb9\u4e0d\u4e3a",
                conditionNotEndWith: "\u7ed3\u675f\u5185\u5bb9\u4e0d\u4e3a",
                conditionBefore: "\u4e4b\u524d",
                conditionAfter: "\u4e4b\u540e",
                conditionRange: "\u8303\u56f4",
                conditionIsEmpty: "\u4e3a\u7a7a",
                conditionIsNotEmpty: "\u975e\u7a7a",
                all: "\u6240\u6709",
                any: "\u4efb\u4f55",
                relationAll: "\u6240\u6709\u89c4\u5219",
                waiRelAll: "\u4e0e\u4ee5\u4e0b\u6240\u6709\u89c4\u5219\u76f8\u5339\u914d\uff1a",
                relationAny: "\u4efb\u4f55\u89c4\u5219",
                waiRelAny: "\u4e0e\u4ee5\u4e0b\u4efb\u4f55\u89c4\u5219\u76f8\u5339\u914d\uff1a",
                relationMsgFront: "\u5339\u914d",
                relationMsgTail: "",
                and: "\u548c",
                or: "\u6216\u8005",
                addRuleButton: "\u6dfb\u52a0\u89c4\u5219",
                waiAddRuleButton: "\u6dfb\u52a0\u65b0\u89c4\u5219",
                removeRuleButton: "\u9664\u53bb\u89c4\u5219",
                waiRemoveRuleButtonTemplate: "\u9664\u53bb\u89c4\u5219 ${0}",
                addRuleButton: "\u6dfb\u52a0\u8fc7\u6ee4\u89c4\u5219",
                cancelButton: "\u53d6\u6d88",
                waiCancelButton: "\u53d6\u6d88\u6b64\u5bf9\u8bdd\u6846",
                clearButton: "\u6e05\u9664",
                waiClearButton: "\u6e05\u9664\u8fc7\u6ee4\u5668",
                filterButton: "\u8fc7\u6ee4",
                waiFilterButton: "\u63d0\u4ea4\u8fc7\u6ee4\u5668",
                columnSelectLabel: "\u5217\uff1a",
                columnSelectAriaLabel: "\u5217\uff1a${1} \u7684\u6761\u4ef6\u90e8\u5206 ${0}",
                waiColumnSelectTemplate: "\u89c4\u5219 ${0} \u7684\u5217",
                conditionSelectLabel: "\u6761\u4ef6\uff1a",
                conditionSelectAriaLabel: "\u8fd0\u7b97\u7b26\uff1a${1} \u7684\u6761\u4ef6\u90e8\u5206 ${0}",
                waiConditionSelectTemplate: "\u89c4\u5219 ${0} \u7684\u6761\u4ef6",
                valueBoxLabel: "\u503c\uff1a",
                valueBoxAriaLabel: "\u503c\uff1a${1} \u7684\u6761\u4ef6\u90e8\u5206 ${0}",
                waiValueBoxTemplate: "\u8f93\u5165\u6309\u89c4\u5219 ${0} \u8fdb\u884c\u8fc7\u6ee4\u7684\u503c",
                rangeTo: "\u5230",
                rangeTemplate: "\u4ece ${0} \u5230 ${1}",
                statusTipHeaderColumn: "\u5217",
                statusTipHeaderCondition: "\u89c4\u5219",
                statusTipTitle: "\u8fc7\u6ee4\u5668\u680f",
                statusTipMsg: "\u5355\u51fb\u6b64\u5904\u7684\u8fc7\u6ee4\u5668\u680f\u4ee5\u8fc7\u6ee4 ${0} \u4e2d\u7684\u503c\u3002",
                anycolumn: "\u4efb\u4f55\u5217",
                statusTipTitleNoFilter: "\u8fc7\u6ee4\u5668\u680f",
                statusTipTitleHasFilter: "\u8fc7\u6ee4",
                statusTipRelPre: "\u5339\u914d",
                statusTipRelPost: "\u89c4\u5219\u3002",
                statusTipHeaderAll: "\u4e0e\u6240\u6709\u89c4\u5219\u5339\u914d\u3002",
                statusTipHeaderAny: "\u4e0e\u4efb\u4f55\u89c4\u5219\u5339\u914d\u3002",
                defaultItemsName: "\u9879",
                filterBarMsgHasFilterTemplate: "\u5df2\u663e\u793a\u7684 ${1} ${2} \u9879\u4e2d\u7684\u7b2c ${0} \u9879\u3002",
                filterBarMsgNoFilterTemplate: "\u672a\u5e94\u7528\u8fc7\u6ee4\u5668",
                filterBarDefButton: "\u5b9a\u4e49\u8fc7\u6ee4\u5668",
                waiFilterBarDefButton: "\u5bf9\u8868\u8fdb\u884c\u8fc7\u6ee4",
                a11yFilterBarDefButton: "\u8fc7\u6ee4\u5668...",
                filterBarClearButton: "\u6e05\u9664\u8fc7\u6ee4\u5668",
                waiFilterBarClearButton: "\u6e05\u9664\u8fc7\u6ee4\u5668",
                closeFilterBarBtn: "\u5173\u95ed\u8fc7\u6ee4\u5668\u680f",
                clearFilterMsg: "\u8fd9\u5c06\u9664\u53bb\u8fc7\u6ee4\u5668\u5e76\u663e\u793a\u6240\u6709\u53ef\u7528\u7684\u8bb0\u5f55\u3002",
                anyColumnOption: "\u4efb\u4f55\u5217",
                trueLabel: "True",
                falseLabel: "False",
                radioTrueLabel: "True \u503c",
                radioFalseLabel: "False \u503c",
                beginTimeRangeLabel: "\u65f6\u95f4\u8303\u56f4\u5f00\u59cb\u503c",
                endTimeRangeLabel: "\u65f6\u95f4\u8303\u56f4\u7ed3\u675f\u503c",
                beginDateRangeLabel: "\u65e5\u671f\u8303\u56f4\u5f00\u59cb\u503c",
                endDateRangeLabel: "\u65e5\u671f\u8303\u56f4\u7ed3\u675f\u503c",
                startsWithExpr: "${0}*",
                singleSort: "\u5355\u4e2a\u6392\u5e8f",
                nestedSort: "\u5d4c\u5957\u6392\u5e8f",
                ascending: "\u5355\u51fb\u4ee5\u5347\u5e8f\u6392\u5e8f",
                descending: "\u5355\u51fb\u4ee5\u964d\u5e8f\u6392\u5e8f",
                sortingState: "${0} - ${1}",
                unsorted: "\u4e0d\u5bf9\u6b64\u5217\u6392\u5e8f",
                waiSingleSortLabel: "${0} - \u5df2\u6309 ${1} \u6392\u5e8f\u3002\u9009\u62e9\u6309 ${2} \u6392\u5e8f",
                waiNestedSortLabel: "${0} - \u5df2\u6309 ${1} \u8fdb\u884c\u5d4c\u5957\u6392\u5e8f\u3002\u9009\u62e9\u6309 ${2} \u8fdb\u884c\u5d4c\u5957\u6392\u5e8f",
                pagerWai: "\u9875\u9762\u8c03\u5ea6\u7a0b\u5e8f",
                pageIndex: "${0}",
                pageIndexTitle: "\u9875 ${0}",
                firstPageTitle: "\u9996\u9875",
                prevPageTitle: "\u4e0a\u4e00\u9875",
                nextPageTitle: "\u4e0b\u4e00\u9875",
                lastPageTitle: "\u672b\u9875",
                pageSize: "${0}",
                pageSizeTitle: "\u6bcf\u9875 ${0} \u9879",
                pageSizeAll: "\u6240\u6709",
                pageSizeAllTitle: "\u6240\u6709\u9879",
                description: "${2} \u9879\u4e2d\u7684\u7b2c ${0} \u9879 - \u7b2c ${1} \u9879\u3002",
                descriptionEmpty: "\u7f51\u683c\u4e3a\u7a7a\u3002",
                summary: "\u603b\u8ba1\uff1a${0}",
                summaryWithSelection: "\u603b\u8ba1\uff1a${0} \u5df2\u9009\uff1a${1}",
                gotoBtnTitle: "\u8f6c\u81f3\u7279\u5b9a\u9875\u9762",
                gotoDialogTitle: "\u8f6c\u81f3\u9875\u9762",
                gotoDialogMainMsg: "\u6307\u5b9a\u9875\u6570\uff1a",
                gotoDialogPageCount: "\uff08${0} \u9875\uff09",
                gotoDialogOKBtn: "\u8f6c\u81f3",
                gotoDialogCancelBtn: "\u53d6\u6d88",
                pageLabel: "\u9875\u9762",
                pageSizeLabel: "\u884c",
                filterLabel: "\u8fc7\u6ee4",
                clearButtonTitle: "\u6e05\u9664\u8fc7\u6ee4\u5668",
                buildFilterMenuLabel: "\u6784\u5efa\u8fc7\u6ee4\u5668...",
                apply: "\u5e94\u7528\u8fc7\u6ee4\u5668",
                helpMsg: "${0} - \u5355\u51fb\u4ee5\u6392\u5e8f\uff0c\u6216\u8005\u6309 Ctrl \u952e\u5e76\u5355\u51fb\u4ee5\u6dfb\u52a0\u5230\u6392\u5e8f\u9879",
                singleHelpMsg: "${0} - \u5355\u51fb\u4ee5\u6392\u5e8f",
                priorityOrder: "\u6392\u5e8f\u4f18\u5148\u7ea7 ${0}",
                summaryTotal: "\u603b\u8ba1\uff1a${0}",
                summarySelected: "\u5df2\u9009\uff1a${0}",
                summaryRange: "\u8303\u56f4\uff1a${0}-${1}",
                indirectSelectAll: "\u6309\u7a7a\u683c\u952e\u4ee5\u5168\u90e8\u9009\u62e9\u3002",
                indirectDeselectAll: "\u6309\u7a7a\u683c\u952e\u4ee5\u5168\u90e8\u53d6\u6d88\u9009\u62e9\u3002",
                treeExpanded: "\u6309 Control + \u5de6\u65b9\u5411\u952e\u4ee5\u6298\u53e0\u6b64\u884c\u3002",
                treeCollapsed: "\u6309 Control + \u53f3\u65b9\u5411\u952e\u4ee5\u5c55\u5f00\u6b64\u884c\u3002"
            })
        },
        "gridx/allModules": function() {
            define("./modules/Focus ./modules/VScroller ./modules/ColumnResizer ./modules/VirtualVScroller ./modules/SingleSort ./modules/NestedSort ./modules/Sort ./modules/ColumnLock ./modules/select/Row ./modules/select/Column ./modules/select/Cell ./modules/extendedSelect/Row ./modules/extendedSelect/Column ./modules/extendedSelect/Cell ./modules/move/Row ./modules/move/Column ./modules/dnd/Row ./modules/dnd/Column ./modules/Pagination ./modules/pagination/PaginationBar ./modules/pagination/PaginationBarDD ./modules/Filter ./modules/filter/FilterBar ./modules/filter/QuickFilter ./modules/CellWidget ./modules/Edit ./modules/RowHeader ./modules/IndirectSelect ./modules/IndirectSelectColumn ./modules/Persist ./modules/Menu ./modules/Dod ./modules/Tree ./modules/RowLock ./modules/ToolBar ./modules/SummaryBar ./modules/Bar ./modules/NavigableCell ./modules/TouchScroll ./modules/TouchVScroller ./modules/HiddenColumns ./modules/GroupHeader ./modules/PagedBody ./modules/AutoPagedBody ./modules/HeaderMenu ./modules/HeaderRegions ./modules/SlantedHeader ./modules/ExpandableColumn ./modules/Layer ./modules/StructureSwitch".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A, B, C, E, I, H, F, G, J, O, D, M, L, K, N, P, R, S, U, ca, da, aa, V, ea, T, X, fa, W) {
                return {
                    Focus: q,
                    VScroller: p,
                    ColumnResizer: n,
                    VirtualVScroller: m,
                    SingleSort: l,
                    NestedSort: k,
                    Sort: g,
                    ColumnLock: f,
                    SelectRow: e,
                    SelectColumn: d,
                    SelectCell: c,
                    ExtendedSelectRow: b,
                    ExtendedSelectColumn: a,
                    ExtendedSelectCell: h,
                    MoveRow: r,
                    MoveColumn: t,
                    DndRow: u,
                    DndColumn: x,
                    Pagination: y,
                    PaginationBar: z,
                    PaginationBarDD: w,
                    Filter: v,
                    FilterBar: A,
                    QuickFilter: B,
                    CellWidget: C,
                    Edit: E,
                    RowHeader: I,
                    IndirectSelect: H,
                    IndirectSelectColumn: F,
                    Persist: G,
                    Menu: J,
                    Dod: O,
                    Tree: D,
                    RowLock: M,
                    ToolBar: L,
                    SummaryBar: K,
                    Bar: N,
                    NavigableCell: P,
                    TouchScroll: R,
                    TouchVScroller: S,
                    HiddenColumns: U,
                    GroupHeader: ca,
                    PagedBody: da,
                    AutoPagedBody: aa,
                    HeaderMenu: V,
                    HeaderRegions: ea,
                    SlantedHeader: T,
                    ExpandableColumn: X,
                    Layer: fa,
                    StructureSwitch: W
                }
            })
        },
        "gridx/modules/ColumnResizer": function() {
            define("dojo/_base/declare dojo/_base/window dojo/_base/event dojo/dom dojo/dom-style dojo/dom-class dojo/dom-construct dojo/dom-geometry dojo/keys ../support/query dojo/_base/sniff ../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                return q(b, {
                    name: "columnResizer",
                    load: function() {
                        var a = this.grid;
                        this.batchConnect([a.header.domNode, "onmousemove", "_mousemove"], [a, "onHeaderMouseOut", "_mouseout"], [a, "onHeaderMouseDown", "_mousedown", this, this.name], [a, "onHeaderKeyDown", "_keydown"], [p.doc, "onmousemove", "_updateResizer"], [p.doc, "onmouseup", "_mouseup"]);
                        this.loaded.callback()
                    },
                    columnMixin: {
                        setWidth: function(a) {
                            this.grid.columnResizer.setWidth(this.id, a)
                        }
                    },
                    minWidth: 20,
                    detectWidth: 5,
                    step: 2,
                    setWidth: function(a, b) {
                        var c = this.grid
                          , h = c._columnsById[a];
                        if (h) {
                            var e = c.header.getHeaderNode(a)
                              , g = e.style
                              , k = l.get(e, "width")
                              , m = this.arg("minWidth")
                              , n = f.getPadExtents(e)
                              , p = n.l + n.r
                              , n = c._columns;
                            b = parseInt(b, 10);
                            b < m && (b = m);
                            g.width = b + "px";
                            g.minWidth = b + "px";
                            g.maxWidth = b + "px";
                            b = e.clientWidth - p;
                            g.width = b + "px";
                            g.minWidth = b + "px";
                            g.maxWidth = b + "px";
                            h.width = b + "px";
                            h = 0;
                            for (e = n.length; h < e; ++h)
                                n[h].declaredWidth = n[h].width;
                            d('[colid\x3d"' + c._escapeId(a) + '"]', c.bodyNode).forEach(function(a) {
                                a = a.style;
                                a.width = b + "px";
                                a.minWidth = b + "px";
                                a.maxWidth = b + "px"
                            });
                            c.body.onRender();
                            c.hLayout.reLayout();
                            c.vLayout.reLayout();
                            this.onResize(a, b, k)
                        }
                    },
                    onResize: function() {},
                    _mousemove: function(a) {
                        var b = this;
                        if (!b._resizing && !b._ismousedown) {
                            var c = b.arg("detectWidth")
                              , e = b.grid
                              , g = e.isLeftToRight()
                              , l = p.body()
                              , m = e._eventFlags;
                            d(".gridxCell", e.header.innerNode).some(function(h) {
                                var r = f.position(h)
                                  , t = g ? r.x + r.w : r.x;
                                h.getAttribute("colid");
                                if (t - c <= a.clientX && t + c >= a.clientX) {
                                    var u = (t = d(a._target || a.target).closest("td", e.header.innerNode)[0]) && f.position(t);
                                    if (t && (a.clientX <= u.x + c || a.clientX >= u.x + u.w - c))
                                        return k.add(l, "gridxColumnResizing"),
                                        b._targetCell = h,
                                        b._cellPos = r,
                                        m.onHeaderMouseDown = b.name,
                                        b._readyToResize = 1
                                }
                            }) || (m.onHeaderMouseDown = void 0,
                            k.remove(l, "gridxColumnResizing"));
                            m.onHeaderCellMouseDown = m.onHeaderMouseDown
                        }
                    },
                    _mouseout: function(a) {
                        if (!this._resizing) {
                            var b = f.position(this.grid.header.domNode);
                            if (c("chrome"))
                                for (var d in b)
                                    b[d] = Math.floor(b[d]);
                            if (a.clientY <= b.y || a.clientY >= b.y + b.h || a.clientX <= b.x || a.clientX >= b.x + b.w)
                                this._readyToResize = 0,
                                k.remove(p.body(), "gridxColumnResizing")
                        }
                    },
                    _mousedown: function(a) {
                        if (this._readyToResize) {
                            this._resizing = 1;
                            var b = this.grid
                              , c = d(".gridxCell", b.header.innerNode)[0];
                            m.setSelectable(b.domNode, !1);
                            p.doc.onselectstart = function() {
                                return !1
                            }
                            ;
                            this._containerPos = f.position(b.domNode);
                            this._headerPos = f.position(b.header.domNode);
                            this._padBorder = f.getMarginBox(c).w - f.getContentBox(c).w;
                            this._initResizer();
                            this._updateResizer(a);
                            this._moving = 0;
                            setTimeout(function() {
                                b.focus.blur()
                            }, 0)
                        } else
                            this._ismousedown = 1
                    },
                    _initResizer: function() {
                        var a = this.grid
                          , b = a.hScroller
                          , c = b && b.container.offsetHeight ? b.container : a.bodyNode
                          , b = a.header.domNode.offsetTop
                          , c = c.parentNode.offsetTop + c.offsetHeight - a.header.domNode.offsetTop
                          , d = this._resizer;
                        d || (d = this._resizer = g.create("div", {
                            className: "gridxColumnResizer"
                        }, a.domNode, "last"),
                        this.connect(d, "mouseup", "_mouseup"));
                        a = d.style;
                        a.top = b + "px";
                        a.height = c + "px";
                        a.display = "block"
                    },
                    _updateResizer: function(a) {
                        if (this._resizing) {
                            var b = this.grid.isLeftToRight()
                              , c = this.arg("minWidth") + this._padBorder
                              , d = this._cellPos;
                            a = a.clientX;
                            c = b ? d.x + c : d.x + d.w - c;
                            if (b ? a < c : a > c)
                                a = c;
                            this._width = (b ? a - d.x : d.x + d.w - a) - this._padBorder;
                            this._resizer.style.left = a - this._containerPos.x - 2 + "px";
                            this._moving = 1
                        }
                    },
                    _mouseup: function(a) {
                        this._ismousedown = 0;
                        if (this._resizing) {
                            this._resizing = this._readyToResize = 0;
                            k.remove(p.body(), "gridxColumnResizing");
                            m.setSelectable(this.grid.domNode, !0);
                            p.doc.onselectstart = null;
                            this._moving && (this._moving = 0,
                            this.setWidth(this._targetCell.getAttribute("colid"), this._width + "px"));
                            this._resizer.style.display = "none";
                            var b = a.clientX
                              , c = a.clientY
                              , d = this._headerPos;
                            b >= d.x && b <= d.x + d.w && c >= d.y && c <= d.y + d.h && (a._target = this._targetCell,
                            this._mousemove(a))
                        }
                    },
                    _keydown: function(a) {
                        var b = this.grid;
                        if ((a.keyCode == e.LEFT_ARROW || a.keyCode == e.RIGHT_ARROW) && b._isCtrlKey(a) && a.shiftKey) {
                            var c = a.columnId
                              , f = d('[colid\x3d"' + b._escapeId(c) + '"].gridxCell', b.header.innerNode)[0]
                              , g = this.arg("step")
                              , g = a.keyCode == e.LEFT_ARROW ^ !!b.isLeftToRight() ? g : -g;
                            this.setWidth(c, l.get(f, "width") + g);
                            n.stop(a)
                        }
                    }
                })
            })
        },
        "gridx/modules/VirtualVScroller": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/sniff dojo/_base/event dojo/_base/Deferred ../support/query dojo/keys ./VScroller ../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                return q(e, {
                    constructor: function(c, b) {
                        c.autoHeight ? p.mixin(this, new e(c,b)) : this._scrolls = []
                    },
                    destroy: function() {
                        this.inherited(arguments);
                        clearTimeout(this._lazyScrollHandle);
                        clearTimeout(this._pVirtual)
                    },
                    buffSize: 5,
                    lazy: !1,
                    lazyTimeout: 50,
                    scrollToRow: function(c, b) {
                        var a = new k
                          , h = this
                          , d = h._scrolls
                          , e = function() {
                            h._subScrollToRow(c, a, b)
                        };
                        d.push(a);
                        h._lazy = h.arg("lazy");
                        h.lazy = !1;
                        1 < d.length ? d[d.length - 2].then(e) : e();
                        return a
                    },
                    _subScrollToRow: function(c, b, a) {
                        var h = this
                          , d = 0
                          , e = h._avgRowHeight
                          , f = h.grid.bodyNode
                          , k = h.domNode
                          , d = f.scrollTop
                          , l = k.scrollTop
                          , m = f.clientHeight
                          , p = g('[visualindex\x3d"' + c + '"]', f)[0]
                          , q = h.grid.focus
                          , A = function(d) {
                            d && !p.getAttribute("rowid") ? b.scrollContext = [c, b, a] : (h._scrolls.splice(n.indexOf(h._scrolls, b), 1),
                            q && "body" == q.currentArea() && q.focusArea("body", 1),
                            h.lazy = h._lazy,
                            b.callback(d))
                        };
                        if (p)
                            if (e = p.offsetTop,
                            p.offsetHeight >= m) {
                                if (e == d) {
                                    A(!0);
                                    return
                                }
                                d = e - d
                            } else if (e + p.offsetHeight > d + m)
                                d = e - d,
                                a || (d += p.offsetHeight - m);
                            else if (e < d || a && e > d)
                                d = e - d;
                            else {
                                A(!0);
                                return
                            }
                        else if (f.childNodes.length) {
                            for (var B = f.firstChild; B && B.offsetTop < d; )
                                B = B.nextSibling;
                            var C = B && B.getAttribute("visualindex");
                            if (B && c < C)
                                d = (c - C) * e;
                            else {
                                for (B = f.lastChild; B && B.offsetTop + B.offsetHeight > d + m && B != f.firstChild; )
                                    B = B.previousSibling;
                                C = B && B.getAttribute("visualindex");
                                if (B && c > C)
                                    d = (c - C) * e;
                                else {
                                    A(!1);
                                    return
                                }
                            }
                        } else {
                            A(!1);
                            return
                        }
                        m = 0 === l && 0 > d;
                        l = l >= k.scrollHeight - k.offsetHeight && 0 < d;
                        if (m || l)
                            h._doVirtualScroll(1);
                        else if (e = k.scrollTop,
                        d = e + (d > f.offsetHeight ? d / h._ratio : d),
                        d > k.scrollHeight && (d = k.scrollHeight),
                        k.scrollTop = d,
                        k.scrollTop == e) {
                            A(!1);
                            return
                        }
                        m && 0 == f.firstChild.getAttribute("visualindex") || l && f.lastChild.getAttribute("visualindex") == h.grid.view.visualCount - 1 ? A(!1) : setTimeout(function() {
                            h._subScrollToRow(c, b, a)
                        }, 5)
                    },
                    _init: function(c) {
                        var b = this;
                        b._avgRowHeight = b.grid.body.arg("defaultRowHeight") || 24;
                        b._rowHeight = {};
                        b._syncHeight();
                        b.connect(b.grid, "_onResizeEnd", function() {
                            b._doScroll(0, 1)
                        });
                        b._doScroll(0, 1, 1)
                    },
                    _doVirtualScroll: function(c) {
                        var b = this.domNode
                          , a = b.scrollTop
                          , h = a - (this._lastScrollTop || 0);
                        if (c || h) {
                            this._lastScrollTop = a;
                            var d = this.arg("buffSize");
                            c = b.scrollHeight - b.offsetHeight;
                            var e = this.grid.body, f = 0 + this.grid.view.visualCount, k = this.grid.bodyNode, l = k.firstChild, m = l && l.offsetTop - h, n = k.lastChild, p = n && n.offsetTop - h + n.offsetHeight, q = k.scrollTop, B = q + k.clientHeight, C = this._avgRowHeight, E = Math.ceil(b.offsetHeight / C) + 2 * d, I = this._ratio, b = 2 >= a, H = 2 >= Math.abs(a - c), F, G, J;
                            if (q == B && !B || n && 0 > n.offsetTop)
                                return;
                            l && m > q && m < B ? (G = e.renderStart,
                            J = Math.ceil((m - q) * I / C) + d,
                            F = b ? 0 : Math.max(G - J, 0),
                            J = "top") : n && p > q && p < B ? (F = e.renderStart + e.renderCount,
                            J = Math.ceil((B - p) * I / C) + d,
                            G = H && a ? f : Math.min(F + J, f),
                            J = "bottom",
                            0 === h && F == f && (G = e.renderStart,
                            J = Math.ceil((m - q) * I / C) + d,
                            F = b ? 0 : Math.max(G - J, 0),
                            J = "top")) : !l || m > B || !n || p < q ? (a <= c / 2 ? (F = b ? 0 : 0 + Math.max(Math.floor(a * I / C) - d, 0),
                            G = Math.min(F + E, f)) : (G = H ? f : f + Math.min(E - Math.floor((c - a) * I / C), 0),
                            F = Math.max(G - E, 0)),
                            J = "clear") : l && (b ? (f = e.renderStart,
                            0 < f && (F = 0,
                            G = f,
                            J = "top")) : H && (d = e.renderStart + e.renderCount - 1,
                            d < f - 1 && (F = d + 1,
                            G = f,
                            J = "bottom")));
                            "number" == typeof F && "number" == typeof G && (e.renderRows(F, G - F, J),
                            a && F < G && (F = g('[visualindex\x3d"' + G + '"]', k)[0]) && (h += F.offsetTop));
                            b ? k.scrollTop = 0 : H || a > c ? k.scrollTop = k.scrollHeight : "clear" != J && (k.scrollTop += h)
                        }
                        this._doVirtual()
                    },
                    _doScroll: function(c, b, a) {
                        if (!this._lock || b)
                            a || !this.arg("lazy") || b || this._byMouseWeel ? (this._doVirtualScroll(b),
                            this._byMouseWeel = !1) : (this._lazyScrollHandle && clearTimeout(this._lazyScrollHandle),
                            this._lazyScrollHandle = setTimeout(p.hitch(this, this._doVirtualScroll, b), this.arg("lazyTimeout")))
                    },
                    _onMouseWheel: function(c) {
                        "none" != this.grid.vScrollerNode.style.display && (this.domNode.scrollTop -= "number" === typeof c.wheelDelta ? c.wheelDelta / 3 : -40 * c.detail,
                        this._byMouseWeel = !0,
                        l.stop(c))
                    },
                    _onBodyChange: function() {
                        var c = this;
                        c._update();
                        c._doScroll(0, 1);
                        n.forEach(c._scrolls, function(b) {
                            if (b && b.scrollContext) {
                                var a = b.scrollContext;
                                delete b.scrollContext;
                                c._subScrollToRow.apply(c, a)
                            }
                        })
                    },
                    _onForcedScroll: function() {
                        this._rowHeight = {};
                        this._doScroll(0, 1)
                    },
                    _avgRowHeight: 24,
                    _rowHeight: null,
                    _ratio: 1,
                    _syncHeight: function() {
                        var c = this._avgRowHeight * this.grid.view.visualCount
                          , b = 1342177;
                        m("ff") ? b = 17895697 : m("webkit") && (b = 134217726);
                        c > b && (this._ratio = c / b,
                        c = b);
                        var b = this.domNode
                          , a = this.grid.bodyNode
                          , h = b.scrollTop
                          , d = h >= b.scrollHeight - b.offsetHeight;
                        this.stubNode.style.height = c + "px";
                        this._lastScrollTop && (b.scrollTop = d ? b.scrollHeight : h,
                        this._lastScrollTop = b.scrollTop);
                        b.scrollTop >= b.scrollHeight - b.offsetHeight ? a.scrollTop = a.scrollHeight : b.scrollTop || (a.scrollTop = 0)
                    },
                    _doVirtual: function() {
                        var c = this;
                        clearTimeout(c._pVirtual);
                        c._pVirtual = setTimeout(function() {
                            c._updateRowHeight()
                        }, 100)
                    },
                    _updateRowHeight: function(c) {
                        var b = 0
                          , a = 0
                          , h = this.grid
                          , d = h.body
                          , h = h.bodyNode
                          , e = this.buffSize * this._avgRowHeight
                          , f = h.scrollTop
                          , g = f - e
                          , k = f + h.clientHeight + e
                          , l = this._rowHeight
                          , e = 0;
                        n.forEach(h.childNodes, function(c) {
                            var h = c.offsetHeight;
                            l[c.getAttribute("rowid")] = h;
                            c.setAttribute("data-rowHeight", h);
                            c.offsetTop > k ? ++a : c.offsetTop + c.offsetHeight < g && ++b
                        });
                        "post" != c && (d.unrenderRows(b),
                        e = b);
                        "pre" != c && (d.unrenderRows(a, "post"),
                        e = a);
                        var m, d = c = 0;
                        for (m in l)
                            c += l[m],
                            ++d;
                        c && d && (this._avgRowHeight = c / d,
                        this._syncHeight());
                        return e
                    },
                    _onKeyScroll: function(c) {
                        var b = this.grid.body
                          , a = this.grid.view
                          , h = this.grid.focus
                          , d = this.domNode
                          , e = this.grid._isCtrlKey(c);
                        if (!h || "body" == h.currentArea()) {
                            if (c.keyCode == f.HOME && e)
                                b._focusCellCol = 0,
                                b._focusCellRow = 0,
                                d.scrollTop = 0,
                                b._focusCell();
                            else if (c.keyCode == f.END && e)
                                b._focusCellCol = this.grid._columns.length - 1,
                                b._focusCellRow = a.visualCount - 1,
                                d.scrollTop = this.stubNode.clientHeight - b.domNode.offsetHeight,
                                b._focusCell();
                            else if (c.keyCode == f.PAGE_UP)
                                b = b._focusCellRow = Math.max(b.renderStart - b.renderCount, 0),
                                this.scrollToRow(b);
                            else if (c.keyCode == f.PAGE_DOWN)
                                b = b._focusCellRow = Math.min(a.visualCount - 1, b.renderStart + b.renderCount),
                                this.scrollToRow(b, 1);
                            else
                                return;
                            l.stop(c)
                        }
                    }
                })
            })
        },
        "gridx/modules/SingleSort": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/dom-class dojo/keys ../core/model/extensions/Sort ../core/_Module".split(" "), function(q, p, n, m, l, k) {
                return q(k, {
                    name: "sort",
                    forced: ["header"],
                    modelExtensions: [l],
                    preload: function() {
                        var g = this, f = g.grid, e;
                        g.connect(f, "onHeaderCellClick", "_onClick");
                        g.connect(f, "onHeaderCellKeyDown", "_onKey");
                        f.persist && (e = f.persist.registerAndLoad("sort", function() {
                            return [{
                                colId: g._sortId,
                                descending: g._sortDescend
                            }]
                        }));
                        e = e || g.arg("initialOrder");
                        p.isArrayLike(e) && (e = e[0]);
                        e && e.colId && (g._sortId = e.colId,
                        g._sortDescend = e.descending,
                        g.model.sort([e]))
                    },
                    load: function() {
                        var g = this
                          , f = function() {
                            var e = g.grid._columnsById, d;
                            for (d in e)
                                g._initHeader(d);
                            g._sortId && e[g._sortId] && g._updateHeader(g._sortId, g._sortDescend)
                        };
                        g.connect(g.grid.header, "onRender", f);
                        f();
                        g.loaded.callback()
                    },
                    columnMixin: {
                        sort: function(g, f) {
                            this.grid.sort.sort(this.id, g, f);
                            return this
                        },
                        isSorted: function() {
                            return this.grid.sort.isSorted(this.id)
                        },
                        clearSort: function(g) {
                            this.isSorted() && this.grid.sort.clear(g);
                            return this
                        },
                        isSortable: function() {
                            var g = this.grid._columnsById[this.id];
                            return g.sortable || void 0 === g.sortable
                        },
                        setSortable: function(g) {
                            this.grid._columnsById[this.id].sortable = !!g;
                            return this
                        }
                    },
                    sort: function(g, f, e) {
                        var d = this.grid
                          , c = d._columnsById[g];
                        c && (c.sortable || void 0 === c.sortable) && (this._sortId == g && this._sortDescend != !f || this._updateHeader(g, f),
                        this.model.sort([{
                            colId: g,
                            descending: f
                        }]),
                        e || d.body.refresh())
                    },
                    isSorted: function(g) {
                        return g == this._sortId ? this._sortDescend ? -1 : 1 : 0
                    },
                    clear: function(g) {
                        if (null !== this._sortId) {
                            var f = this.grid.header.getHeaderNode(this._sortId);
                            f && (n.remove(f, "gridxCellSorted"),
                            n.remove(f, "gridxCellSortedAsc"),
                            n.remove(f, "gridxCellSortedDesc"));
                            this._sortId = this._sortDescend = null;
                            this.model.sort();
                            g || this.grid.body.refresh()
                        }
                    },
                    getSortData: function() {
                        return this._sortId ? [{
                            colId: this._sortId,
                            descending: this._sortDescend
                        }] : null
                    },
                    _sortId: null,
                    _sortDescend: null,
                    _initHeader: function(g) {
                        var f = this.grid
                          , e = f.header.getHeaderNode(g);
                        g = f.column(g, 1);
                        f = [];
                        g.isSortable() && (f.push("\x3cdiv role\x3d'presentation' class\x3d'gridxArrowButtonNode'\x3e", "\x3cdiv class\x3d'gridxArrowButtonCharAsc'\x3e\x26#9652;\x3c/div\x3e", "\x3cdiv class\x3d'gridxArrowButtonCharDesc'\x3e\x26#9662;\x3c/div\x3e", "\x3c/div\x3e"),
                        e.setAttribute("aria-sort", "none"));
                        f.push("\x3cdiv class\x3d'gridxSortNode'\x3e", g.name(), "\x3c/div\x3e");
                        e.innerHTML = f.join("")
                    },
                    _updateHeader: function(g, f) {
                        var e = this.grid, d;
                        this._sortId && this._sortId != g && (d = e.header.getHeaderNode(this._sortId)) && (n.remove(d, "gridxCellSorted"),
                        n.remove(d, "gridxCellSortedAsc"),
                        n.remove(d, "gridxCellSortedDesc"),
                        d.setAttribute("aria-sort", "none"));
                        this._sortId = g;
                        this._sortDescend = f = !!f;
                        d = e.header.getHeaderNode(g);
                        n.add(d, "gridxCellSorted");
                        n.toggle(d, "gridxCellSortedAsc", !f);
                        n.toggle(d, "gridxCellSortedDesc", f);
                        d.setAttribute("aria-sort", f ? "descending" : "ascending");
                        e.vLayout.reLayout()
                    },
                    _onClick: function(g) {
                        "columnResizer" !== this.grid._eventFlags.onHeaderCellMouseDown && this.sort(g.columnId, this._sortId != g.columnId ? 0 : !this._sortDescend)
                    },
                    _onKey: function(g) {
                        g.keyCode == m.ENTER && this._onClick(g)
                    }
                })
            })
        },
        "gridx/core/model/extensions/Sort": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/_base/json", "../_Extension"], function(q, p, n, m) {
                return q(m, {
                    name: "sort",
                    priority: 30,
                    constructor: function(l, k) {
                        var g = k.baseSort;
                        this._mixinAPI("sort");
                        g && g.length && (this._baseSort = g,
                        this._sort())
                    },
                    sort: function() {
                        this.model._addCmd({
                            name: "_cmdSort",
                            scope: this,
                            args: arguments
                        })
                    },
                    _cmdSort: function() {
                        var l = arguments;
                        this._sort.apply(this, l[l.length - 1])
                    },
                    _sort: function(l) {
                        var k = this.model, g = this._baseSort, f = k._cache, e = f.options = f.options || {}, d, c, b;
                        if (p.isArrayLike(l)) {
                            for (d = 0; d < l.length; ++d)
                                c = l[d],
                                c.colId ? c.attribute = f.columns ? f.columns[c.colId].field || c.colId : c.colId : c.colId = c.attribute;
                            g && (l = l.concat(g))
                        } else
                            l = g;
                        e.sort && e.sort.length ? n.toJson(e.sort) !== n.toJson(l) && (b = 1) : l && l.length && (b = 1);
                        e.sort = p.clone(l);
                        b && f.clear();
                        k._msg("storeChange")
                    }
                })
            })
        },
        "gridx/modules/NestedSort": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/_base/event dojo/query dojo/string dojo/dom-class dojo/dom-construct dojo/keys ../core/_Module ../core/model/extensions/Sort ./HeaderRegions".split(" "), function(q, p, n, m, l, k, g, f, e, d, c) {
                var b = p.filter
                  , a = p.indexOf
                  , h = g.remove
                  , r = g.add;
                return q(d, {
                    name: "sort",
                    required: ["headerRegions"],
                    modelExtensions: [c],
                    preload: function(a) {
                        var c = this;
                        a = c.grid;
                        c._sortData = c.arg("initialOrder", []);
                        if (a.persist) {
                            var h = a.persist.registerAndLoad("sort", function() {
                                return c._sortData
                            });
                            h && (c._sortData = h)
                        }
                        c._sortData = b(c._sortData, function(a) {
                            return c.isSortable(a.colId)
                        });
                        c._sortData.length && a.model.sort(c._sortData);
                        c.connect(a.headerRegions, "refresh", c._updateUI);
                        a.headerRegions.add(n.hitch(c, c._createBtn, 1), 10, 1);
                        a.headerRegions.add(n.hitch(c, c._createBtn, 0), 11, 1)
                    },
                    columnMixin: {
                        isSorted: function() {
                            return this.grid.sort.isSorted(this.id)
                        },
                        isSortable: function() {
                            return this.grid.sort.isSortable(this.id)
                        }
                    },
                    getSortData: function() {
                        return this._sortData
                    },
                    sort: function(a) {
                        var c = this;
                        c._sortData = b(a, function(a) {
                            return c.isSortable(a.colId)
                        });
                        c._doSort()
                    },
                    isSorted: function(a) {
                        var b = 0;
                        p.some(this._sortData, function(c) {
                            if (c.colId == a)
                                return b = c.descending ? -1 : 1,
                                1
                        });
                        return b
                    },
                    isSortable: function(a) {
                        return (a = this.grid._columnsById[a]) && (a.sortable || void 0 === a.sortable)
                    },
                    clear: function() {
                        this._sortData.length = 0;
                        this._doSort()
                    },
                    _createBtn: function(a, b) {
                        var c = this
                          , h = c.grid.nls;
                        if (c.isSortable(b.id)) {
                            var d = f.create("div", {
                                "class": "gridxSortBtn gridxSortBtn" + (a ? "Single" : "Nested"),
                                tabIndex: -1,
                                title: a ? h.singleSort + " - " + h.ascending : h.nestedSort + " - " + h.ascending,
                                innerHTML: a ? '\x3cspan class\x3d"gridxNestedSortBtnText"\x3e\x26#1784;\x3c/span\x3e\x26nbsp;' : c._sortData.length + 1 + '\x3cspan class\x3d"gridxNestedSortBtnText"\x3e\x26#1784;\x3c/span\x3e'
                            });
                            c.connect(d, "onmousedown", function() {
                                c._sort(b, d, a)
                            });
                            c.connect(d, "onkeydown", function(h) {
                                h.keyCode == e.ENTER && (m.stop(h),
                                c._sort(b, d, a))
                            });
                            return d
                        }
                    },
                    _sort: function(c, h, d) {
                        h = this._sortData;
                        d ? (1 < h.length && (h.length = 0),
                        d = b(h, function(a) {
                            return a.colId === c.id
                        })[0],
                        h.length = 0,
                        d && h.push(d)) : d = b(h, function(a) {
                            return a.colId === c.id
                        })[0];
                        d ? (d.descending && h.splice(a(h, d), 1),
                        d.descending = !d.descending) : (d = {
                            colId: c.id,
                            descending: !1
                        },
                        h.push(d));
                        this._doSort()
                    },
                    _doSort: function() {
                        var a = this.grid
                          , b = this._sortData;
                        this._updateUI();
                        a.model.sort(b.length ? b : null);
                        a.body.refresh()
                    },
                    _updateUI: function() {
                        var c = this
                          , d = c.grid
                          , e = d.nls
                          , f = d.domNode
                          , g = p.filter(c._sortData, function(a) {
                            return d._columnsById[a.colId]
                        });
                        h(f, "gridxSingleSorted");
                        h(f, "gridxNestedSorted");
                        1 == g.length ? r(f, "gridxSingleSorted") : 1 < g.length && r(f, "gridxNestedSorted");
                        l(".gridxCell", d.header.domNode).forEach(function(d) {
                            var f = d.getAttribute("colid");
                            if (c.isSortable(f)) {
                                p.forEach(["", "Desc", "Asc", "Main"], function(a) {
                                    h(d, "gridxCellSorted" + a)
                                });
                                var t = l(".gridxSortBtnSingle", d)[0]
                                  , k = l(".gridxSortBtnNested", d)[0];
                                t.title = e.singleSort + " - " + e.ascending;
                                k.title = e.nestedSort + " - " + e.ascending;
                                t.innerHTML = '\x3cspan class\x3d"gridxNestedSortBtnText"\x3e\x26#1784;\x3c/span\x3e\x26nbsp;';
                                k.innerHTML = g.length + 1 + '\x3cspan class\x3d"gridxNestedSortBtnText"\x3e\x26#1784;\x3c/span\x3e';
                                var m = b(g, function(a) {
                                    return a.colId === f
                                })[0];
                                c._setWaiState(d, f, m);
                                if (m) {
                                    k.innerHTML = a(g, m) + 1;
                                    r(d, "gridxCellSorted");
                                    m == g[0] && r(d, "gridxCellSortedMain");
                                    var u = g.length;
                                    m.descending ? (r(d, "gridxCellSortedDesc"),
                                    1 == u ? (t.title = e.singleSort + " - " + e.unsorted,
                                    t.innerHTML = '\x3cspan class\x3d"gridxNestedSortBtnText"\x3e\x26#9662;\x3c/span\x3e\x26nbsp;') : (k.title = e.nestedSort + " - " + e.unsorted,
                                    k.innerHTML += '\x3cspan class\x3d"gridxNestedSortBtnText"\x3e\x26#9662;\x3c/span\x3e')) : (r(d, "gridxCellSortedAsc"),
                                    1 == u ? (t.title = e.singleSort + ": " + e.descending,
                                    t.innerHTML = '\x3cspan class\x3d"gridxNestedSortBtnText"\x3e\x26#9652;\x3c/span\x3e\x26nbsp;') : (k.title = e.nestedSort + " - " + e.descending,
                                    k.innerHTML += '\x3cspan class\x3d"gridxNestedSortBtnText"\x3e\x26#9652;\x3c/span\x3e'))
                                }
                            }
                        })
                    },
                    _setWaiState: function(a, b, c) {
                        b = "Column " + this.grid.column(b).name();
                        var h = "none"
                          , d = "ascending";
                        c && (h = c.descending ? "descending" : "ascending",
                        d = c.descending ? "none" : "descending");
                        c = k.substitute(this.grid.nls.waiSingleSortLabel, [b, h, d]);
                        b = k.substitute(this.grid.nls.waiNestedSortLabel, [b, h, d]);
                        l(".gridxSortBtnSingle", a)[0].setAttribute("aria-label", c);
                        l(".gridxSortBtnNested", a)[0].setAttribute("aria-label", b)
                    }
                })
            })
        },
        "gridx/modules/HeaderRegions": function() {
            define("dojo/_base/declare dojo/_base/Deferred dojo/_base/array dojo/query dojo/dom-construct dojo/dom-class dojo/dom-style dojo/keys dojo/_base/event ../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                return d.register(q(d, {
                    name: "headerRegions",
                    forced: ["header"],
                    constructor: function() {
                        this._regions = []
                    },
                    load: function() {
                        this.refresh();
                        this._initFocus();
                        this.aspect(this.grid.header, "onRender", "refresh");
                        this.loaded.callback()
                    },
                    add: function(c, b, a, h) {
                        this._regions.push({
                            c: c,
                            p: b || 0,
                            f: !h,
                            n: {}
                        });
                        a || this.refresh()
                    },
                    refresh: function(c) {
                        var b = this
                          , a = b.grid
                          , h = b._regionNodes = []
                          , d = b._regions;
                        d.length && (n.forEach(b._regionCnnts || [], function(a) {
                            a.remove();
                            b._cnnts.splice(n.indexOf(b._cnnts, a), 1)
                        }),
                        b._regionCnnts = [],
                        d.sort(function(a, b) {
                            return b.p - a.p
                        }),
                        m(".gridxCell", a.header.domNode).forEach(function(e) {
                            k.remove(e, "gridxCellRegion");
                            var f = e.getAttribute("colid")
                              , r = a.column(f, 1)
                              , g = [];
                            n.forEach(d, function(a) {
                                var h = a.n[f];
                                if (!h || c)
                                    if (h && h.parentNode.removeChild(h),
                                    h = a.n[f] = a.c(r))
                                        k.add(h, "gridxHeaderRegion"),
                                        a.f && (k.add(h, "gridxHeaderRegionFocusable"),
                                        h.setAttribute("tabindex", -1),
                                        b.connect(h, "onblur", "_onRegionBlur"));
                                h && (l.place(h, e, "first"),
                                a.f && g.push(h))
                            });
                            if (g.length) {
                                var t = m(".gridxSortNode", e)[0];
                                h.push(t);
                                t.setAttribute("tabindex", -1);
                                b._regionCnnts.push(b.connect(t, "onblur", "_onRegionBlur"))
                            } else
                                h.push(e),
                                k.add(e, "gridxCellRegion"),
                                b._regionCnnts.push(b.connect(e, "onblur", "_onRegionBlur"));
                            h.push.apply(h, g)
                        }),
                        h[b._curRegionIdx] || (b._curRegionIdx = 0))
                    },
                    _onRegionBlur: function(c) {
                        c = this.grid.header.domNode;
                        m(".gridxHeaderRegionFocus", c).removeClass("gridxHeaderRegionFocus");
                        k.remove(c, "gridxHeaderFocus")
                    },
                    _initFocus: function() {
                        var c = this.grid;
                        c.focus.registerArea({
                            name: "header",
                            priority: 0,
                            focusNode: c.header.domNode,
                            scope: this,
                            doFocus: this._doFocus,
                            onFocus: this._onFocus,
                            connects: [this.aspect(c, "onHeaderKeyDown", "_onKey")]
                        })
                    },
                    _doFocus: function(c) {
                        this._focusRegion(this._regionNodes[this._curRegionIdx]);
                        return !0
                    },
                    _onFocus: function(c) {
                        c = c.target;
                        var b = this.grid.header.domNode
                          , a = 0 > n.indexOf(this._regionNodes, c) ? m(c, b).closest(".gridxSortNode")[0] : c
                          , a = a || m(c, b).closest(".gridxHeaderRegion")[0];
                        this._focusRegion(a);
                        return a
                    },
                    _focusRegion: function(c, b) {
                        var a = this
                          , h = a.grid;
                        if (c && !a._lock) {
                            a._lock = 1;
                            var d = h.header.domNode
                              , e = m(c).closest(".gridxCell", d)[0];
                            a._curRegionIdx = n.indexOf(a._regionNodes, c);
                            try {
                                c.focus()
                            } catch (u) {}
                            setTimeout(function() {
                                m(".gridxHeaderRegionFocus", d).removeClass("gridxHeaderRegionFocus");
                                k.add(e, "gridxHeaderRegionFocus");
                                k.add(d, "gridxHeaderFocus");
                                c.focus();
                                h.hScroller && h.hScroller.scrollToColumn(e.getAttribute("colid"));
                                a._lock = 0
                            }, 0)
                        }
                    },
                    _onKey: function(c) {
                        if (!this.grid._isCtrlKey(c) && !c.shiftKey && !c.altKey) {
                            var b = this.grid.isLeftToRight()
                              , a = b ? f.LEFT_ARROW : f.RIGHT_ARROW;
                            c.keyCode == (b ? f.RIGHT_ARROW : f.LEFT_ARROW) ? (this._moveFocus(1),
                            e.stop(c)) : c.keyCode == a && (this._moveFocus(-1),
                            e.stop(c))
                        }
                    },
                    _moveFocus: function(c) {
                        for (var b = this._curRegionIdx + c, a = this._regionNodes; a[b] && "none" == g.get(a[b], "display"); )
                            b += c;
                        a[b] && this._focusRegion(a[b], !0)
                    }
                }))
            })
        },
        "gridx/modules/Sort": function() {
            define("dojo/_base/declare dojo/_base/array dojo/query dojo/_base/event dojo/_base/sniff dojo/string dojo/keys dojo/dom dojo/dom-class ../core/model/extensions/Sort ../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e, d, c) {
                return c.register(q(c, {
                    name: "sort",
                    forced: ["header"],
                    modelExtensions: [d],
                    constructor: function() {
                        this._sortData = []
                    },
                    preload: function() {
                        var b = this, a = b.grid, c;
                        e.add(a.domNode, "gridxSort");
                        b.aspect(a, "onHeaderCellClick", "_onClick");
                        b.aspect(a, "onHeaderCellMouseOver", "reLayout", a.vLayout);
                        b.aspect(a, "onHeaderCellMouseOut", "reLayout", a.vLayout);
                        b.aspect(a.header, "onRender", "_update");
                        b.connect(a, "onHeaderCellTouchStart", function(b) {
                            n(".gridxHeaderCellTouch", a.header.domNode).removeClass("gridxHeaderCellTouch");
                            e.add(b.headerCellNode, "gridxHeaderCellTouch")
                        });
                        b.connect(a, "onHeaderCellTouchEnd", function(a) {
                            e.remove(a.headerCellNode, "gridxHeaderCellTouch")
                        });
                        a.persist && (c = a.persist.registerAndLoad("sort", function() {
                            return b._sortData
                        }));
                        (c = c || b.arg("initialOrder")) && c.length && (b._sortData = c,
                        b.model.sort(c))
                    },
                    load: function() {
                        var b = this.grid;
                        this._update();
                        l("ff") && f.setSelectable(b.header.domNode, !1);
                        this._initFocus();
                        this.loaded.callback()
                    },
                    columnMixin: {
                        sort: function(b, a) {
                            var c = this.grid.sort;
                            c._prepareSortData(this.id, a);
                            return c.sort(c._sortData)
                        },
                        isSorted: function() {
                            return this.grid.sort.isSorted(this.id)
                        },
                        clearSort: function() {
                            this.grid.sort.clear();
                            return this
                        },
                        isSortable: function() {
                            var b = this.grid._columnsById[this.id];
                            return b.sortable || void 0 === b.sortable
                        },
                        setSortable: function(b) {
                            this.grid._columnsById[this.id].sortable = b;
                            return this
                        }
                    },
                    nested: !0,
                    sort: function(b) {
                        this._sortData = b || [];
                        this.model.sort(b);
                        this._updateHeader();
                        return this.grid.body.refresh()
                    },
                    isSorted: function(b) {
                        for (var a = this._sortData.length - 1; 0 <= a; --a) {
                            var c = this._sortData[a];
                            if (c.colId === b)
                                return c.decending ? -1 : 1
                        }
                        return 0
                    },
                    clear: function() {
                        this.sort()
                    },
                    getSortData: function() {
                        return this._sortData
                    },
                    _sortData: null,
                    _onClick: function(b) {
                        m.stop(b);
                        this._sort(b.columnId, n(b.target).closest(".gridxArrowButtonNode", this.grid.header.domNode).length, this.grid._isCtrlKey(b))
                    },
                    _sort: function(b, a, c) {
                        var h = this.grid;
                        this._focusHeaderId = b;
                        this._focusSortArrow = a;
                        !h.column(b, 1).isSortable() || !a && h.select && h.select.column || (this._prepareSortData(b, c),
                        this.sort(this._sortData))
                    },
                    _prepareSortData: function(b, a) {
                        var c = !0
                          , d = !1
                          , e = this.grid._columnsById[b].sortable;
                        a = this.arg("nested") && a;
                        "descend" == e ? d = !0 : "ascend" != e && (c = !1);
                        for (var f, e = this._sortData.length - 1; 0 <= e; --e,
                        f = 0)
                            if (f = this._sortData[e],
                            f.colId === b) {
                                f.descending = c ? d : !f.descending;
                                break
                            }
                        f || (f = {
                            colId: b,
                            descending: c && d
                        },
                        this._sortData.push(f));
                        a || (this._sortData = [f])
                    },
                    _getSortModeCls: function(b) {
                        return {
                            ascend: "gridxSortAscendOnly",
                            descend: "gridxSortDescendOnly"
                        }[b.isSortable()] || ""
                    },
                    _initHeader: function(b) {
                        var a = b.headerNode();
                        a.innerHTML = ["\x3cdiv class\x3d'gridxSortNode'\x3e\x3cdiv role\x3d'presentation' tabindex\x3d'0' class\x3d'gridxArrowButtonNode ", this._getSortModeCls(b), "'\x3e\x3c/div\x3e\x3cdiv class\x3d'gridxColCaption'\x3e", b.name(), "\x3c/div\x3e\x3c/div\x3e"].join("");
                        a.removeAttribute("aria-sort");
                        this._setTitle(a, b)
                    },
                    _update: function() {
                        var b = this
                          , a = b.grid;
                        n(".gridxCell", a.header.domNode).forEach(function(c) {
                            var h = a.column(c.getAttribute("colid"), 1);
                            h.isSortable() && b._initHeader(h);
                            b._setTitle(c, h)
                        });
                        b._updateHeader()
                    },
                    _setTitle: function(b, a) {
                        a.isSortable() && b.setAttribute("title", k.substitute(this.arg("nested") ? this.grid.nls.helpMsg : this.grid.nls.singleHelpMsg, [a.def().tooltip || a.name()]))
                    },
                    _updateHeader: function() {
                        var b = this.grid;
                        n("[aria-sort]", b.header.domNode).forEach(function(a) {
                            this._initHeader(b.column(a.getAttribute("colid"), 1))
                        }, this);
                        for (var a = p.filter(this._sortData, function(a) {
                            return b._columnsById[a.colId]
                        }), c = 0, d = a.length; c < d; ++c) {
                            var e = a[c]
                              , f = b.column(e.colId, 1)
                              , g = f.headerNode();
                            g.innerHTML = ["\x3cdiv class\x3d'gridxSortNode ", e.descending ? "gridxSortDown" : "gridxSortUp", "'\x3e\x3cdiv role\x3d'presentation' tabindex\x3d'0' class\x3d'gridxArrowButtonNode ", this._getSortModeCls(f), "'\x3e\x3cdiv class\x3d'gridxArrowButtonChar'\x3e", e.descending ? "\x26#9662;" : "\x26#9652;", "\x3c/div\x3e\x3c/div\x3e\x3cdiv class\x3d'", 1 == d ? "gridxSortSingle" : "gridxSortNested", "'\x3e", c + 1, "\x3c/div\x3e\x3cdiv class\x3d'gridxColCaption'\x3e", f.name(), "\x3c/div\x3e\x3c/div\x3e"].join("");
                            g.setAttribute("aria-sort", e.descending ? "descending" : "ascending");
                            this.arg("nested") && (e = k.substitute(b.nls.priorityOrder, [c + 1]),
                            g.setAttribute("aria-label", (f.def().tooltip || f.name()) + ", " + e))
                        }
                        b.vLayout.reLayout();
                        b.focus && "header" == b.focus.currentArea() && this._focus(this._focusHeaderId)
                    },
                    _focusHeaderId: null,
                    _focusSortArrow: !1,
                    _initFocus: function() {
                        var b = this.grid
                          , a = b.focus;
                        a && (b.select && b.select.column ? a.registerArea({
                            name: "header",
                            priority: 0,
                            focusNode: b.header.domNode,
                            scope: this,
                            doFocus: this._doFocus,
                            onFocus: this._onFocus,
                            connects: [this.connect(b, "onHeaderCellKeyPress", "_onKeyPress")]
                        }) : this.connect(b, "onHeaderCellKeyDown", function(a) {
                            a.keyCode != g.ENTER && a.keyCode != g.SPACE || this._sort(a.columnId, !1, b._isCtrlKey(a))
                        }))
                    },
                    _doFocus: function(b) {
                        var a = this._focusHeaderId = this._focusHeaderId || this.grid._columns[0].id;
                        this._focus(a, b);
                        return !0
                    },
                    _onFocus: function(b) {
                        this._focusSortArrow = !1;
                        return !0
                    },
                    _onKeyPress: function(b) {
                        switch (b.keyCode) {
                        case g.RIGHT_ARROW:
                        case g.LEFT_ARROW:
                            this._moveFocus(b);
                            break;
                        case g.ENTER:
                        case g.SPACE:
                            this._sort(this._focusHeaderId, this._focusSortArrow, this.grid._isCtrlKey(b))
                        }
                    },
                    _moveFocus: function(b) {
                        if (this._focusHeaderId) {
                            var a, c = this.grid;
                            a = c.isLeftToRight() ? 1 : -1;
                            var d = b.keyCode == g.LEFT_ARROW ? -a : a
                              , e = this._focusSortArrow;
                            m.stop(b);
                            a = c.column(this._focusHeaderId, 1);
                            var f = a.isSortable();
                            if (!f || e ^ 0 > d)
                                a = c.column(a.index() + d);
                            a && (this._focusHeaderId = a.id,
                            this._focusSortArrow = a.isSortable() && (f || 0 > d) && !e,
                            this._focus(a.id, b))
                        }
                    },
                    _focus: function(b, a) {
                        var c = this.grid.header
                          , d = c.getHeaderNode(b);
                        c._focusNode(d);
                        if (a)
                            c.onMoveToHeaderCell(b, a);
                        this._focusArrow(b)
                    },
                    _focusArrow: function(b) {
                        var a = this.grid.header;
                        n(".gridxArrowButtonFocus", a.domNode).forEach(function(a) {
                            e.remove(a, "gridxArrowButtonFocus")
                        });
                        this._focusSortArrow && (b = n(".gridxArrowButtonNode", a.getHeaderNode(b))[0]) && (e.add(b, "gridxArrowButtonFocus"),
                        b.focus())
                    }
                }))
            })
        },
        "gridx/modules/ColumnLock": function() {
            define("dojo/dom-style dojo/dom-class dojo/dom-geometry dojo/_base/lang ../core/_Module dojo/_base/declare dojo/_base/array dojo/_base/window dojo/query dojo/_base/sniff".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                return k(l, {
                    name: "columnLock",
                    required: ["body"],
                    count: 0,
                    preload: function() {
                        var c = this;
                        c.grid.persist && (c.count = c.grid.persist.registerAndLoad("columnLock", function() {
                            return c.count
                        }))
                    },
                    load: function(c, b) {
                        this.count = this.arg("count");
                        var a = this
                          , h = this.grid;
                        f.body();
                        b.then(function() {
                            h.columnWidth && h.columnWidth.arg("autoResize") || (a.connect(h.body, "onAfterRow", function(b) {
                                a._lockColumns(b.node())
                            }),
                            a.connect(h.columnWidth, "onUpdate", "_updateHeader"),
                            a.connect(h.header, "onRender", "_updateHeader"),
                            a.connect(h.body, "onRender", "_updateBody"),
                            a.connect(h.body, "onAfterCell", "_updateBody"),
                            h.columnResizer && (a.connect(h.columnResizer, "onResize", "_updateHeader"),
                            a.connect(h.columnResizer, "onResize", "_updateBody")),
                            a.connect(h, "_onResizeEnd", "_updateHeader"),
                            a.connect(h, "_onResizeEnd", "_updateBody"),
                            a.connect(h.vScroller, "_onBodyChange", "_updateBody"),
                            a.connect(h, "resize", "_updateUI"),
                            h.header && (h.header.loaded.then(function() {
                                a._updateHeader()
                            }),
                            h.move && h.move.column && a.connect(h.move.column, "move", "_updateHeader")),
                            a._hackHScroller(),
                            a.count && a.lock(a.count));
                            h.rowLock && (a.connect(h.rowLock, "onLock", function() {
                                a.grid.hScroller && a.grid.hScroller._doScroll()
                            }),
                            a.connect(h.rowLock, "onUnlock", function(b) {
                                for (var c = a.grid.bodyNode.childNodes, h = 0; h < b; h++)
                                    a._lockColumns(c[h])
                            }));
                            a.loaded.callback()
                        })
                    },
                    lock: function(c) {
                        if (!this.grid.columnWidth || !this.grid.columnWidth.arg("autoResize"))
                            if (c >= this.grid._columns.length)
                                console.warn("Warning: lock count is larger than columns count, do nothing.");
                            else {
                                for (var b = 0, a = 0, b = 0; b < c; b++)
                                    a += 8 + parseInt(this.grid._columns[b].width, 10);
                                10 > this.grid.bodyNode.clientWidth - a ? console.warn("Warning: locked total columns width exceed grid width, do nothing.") : (this.unlock(),
                                c && p.add(this.grid.domNode, "gridxColumnLock"),
                                this.count = c,
                                this._updateUI())
                            }
                    },
                    unlock: function() {
                        if (!this.grid.columnWidth || !this.grid.columnWidth.arg("autoResize")) {
                            p.remove(this.grid.domNode, "gridxColumnLock");
                            var c = e(".gridxHeaderRowInner", this.grid.headerNode)[0];
                            this._unlockColumns(c);
                            g.forEach(this.grid.bodyNode.childNodes, this._unlockColumns, this);
                            this.count = 0;
                            this._updateUI()
                        }
                    },
                    _unlockColumns: function(c) {
                        for (var b = this.grid.isLeftToRight(), a = c.firstChild.rows[0], h = 0; h < this.count; h++) {
                            var d = a.cells[h];
                            p.remove(d, "gridxLockedCell");
                            q.set(d, {
                                height: "auto"
                            })
                        }
                        c.style[b ? "paddingLeft" : "paddingRight"] = "0px";
                        c.style.width = "auto";
                        c.firstChild.style.height = "auto"
                    },
                    _updateUI: function() {
                        this.grid.header && this._updateHeader();
                        this._updateBody();
                        this._updateScroller();
                        this.grid.header.onRender();
                        this.grid.hScroller && this.grid.hScroller._doScroll()
                    },
                    _lockColumns: function(c) {
                        if (this.count && !(this.count >= this.grid._columns.length)) {
                            var b = p.contains(c, "gridxHeaderRowInner"), a = this.grid.isLeftToRight(), h = c.firstChild.rows[0], e;
                            c.firstChild.style.height = "auto";
                            for (e = 0; e < this.count; e++)
                                q.set(h.cells[e], "height", "auto");
                            var f = n.getContentBox(h.cells[h.cells.length - 1]).h;
                            e = n.getMarginBox(h.cells[h.cells.length - 1]).h;
                            if (8 < d("ie") || 4 < d("trident")) {
                                var g = q.getComputedStyle(c.firstChild).height;
                                0 <= String(g).toString().indexOf(".") && (e++,
                                f++)
                            }
                            q.set(c.firstChild, "height", e + "px");
                            g = b = b ? this.grid.hLayout.lead : 0;
                            for (e = 0; e < this.count; e++) {
                                var k = h.cells[e], l;
                                p.add(k, "gridxLockedCell");
                                l = {
                                    height: f + "px"
                                };
                                l[a ? "left" : "right"] = g + "px";
                                q.set(k, l);
                                g += k.offsetWidth
                            }
                            c.style[a ? "paddingLeft" : "paddingRight"] = g - b + "px";
                            c.style.width = this.grid.bodyNode.offsetWidth - g + b + "px";
                            c.scrollLeft = this.grid.hScroller ? this.grid.hScroller.domNode.scrollLeft : 0;
                            p.contains(c, "gridxRow") && (c = c.getAttribute("rowid") + "",
                            this.grid.body.onRowHeightChange(c))
                        }
                    },
                    _updateHeader: function() {
                        var c = this.grid.header.innerNode
                          , b = c.scrollLeft;
                        this._lockColumns(c);
                        c.scrollLeft = b;
                        this._updateScroller()
                    },
                    _updateBody: function(c, b, a) {
                        a && !1 === a._updateBody || g.forEach(this.grid.bodyNode.childNodes, this._lockColumns, this)
                    },
                    _updateScroller: function() {
                        this.grid.hScroller && this.grid.hScroller.refresh()
                    },
                    _hackHScroller: function() {
                        var c = this;
                        m.mixin(this.grid.hScroller, {
                            _doScroll: function() {
                                var b = this.domNode.scrollLeft;
                                c.count ? g.forEach(this.grid.bodyNode.childNodes, function(a) {
                                    a.scrollLeft = b;
                                    if ("absolute" == a.style.position) {
                                        var c = 0;
                                        g.forEach(a.firstChild.rows[0].cells, function(a) {
                                            p.contains(a, "gridxLockedCell") && (a.style.left = b + c + "px",
                                            c += a.offsetWidth)
                                        })
                                    }
                                }) : this.grid.bodyNode.scrollLeft = b;
                                this.grid.onHScroll(this.grid.hScroller._lastLeft)
                            }
                        })
                    }
                })
            })
        },
        "gridx/modules/select/Row": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/sniff dojo/_base/event gridx/support/query dojo/_base/lang dojo/dom-class dojo/keys ./_RowCellBase ../../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                return q(e, {
                    name: "selectRow",
                    rowMixin: {
                        select: function() {
                            this.grid.select.row.selectById(this.id);
                            return this
                        },
                        deselect: function() {
                            this.grid.select.row.deselectById(this.id);
                            return this
                        },
                        isSelected: function() {
                            return this.grid.select.row.isSelected(this.id)
                        },
                        isSelectable: function() {
                            return this.grid.select.row._isSelectable(this.id)
                        },
                        setSelectable: function(c) {
                            this.grid.select.row.setSelectable(this.id, c)
                        }
                    },
                    treeMode: !0,
                    setSelectable: function(c, b) {
                        var a = this.model
                          , h = this.grid.body.getRowNode({
                            rowId: c
                        });
                        a.setMarkable(c, b);
                        this.unselectable[c] = !b;
                        h && (g.toggle(h, "gridxRowUnselectable", !b),
                        this.onHighlightChange({
                            row: parseInt(h.getAttribute("visualindex"), 10)
                        }, a.getMark(c)),
                        this.onSelectionChange())
                    },
                    getSelected: function() {
                        return this.model.getMarkedIds()
                    },
                    clear: function(c) {
                        if (this.arg("enabled")) {
                            var b = this.model;
                            p.forEach(b.getMarkedIds(), function(a) {
                                a !== c && b.markById(a, 0)
                            });
                            b.when()
                        }
                    },
                    _type: "row",
                    _isSelectable: function(c) {
                        var b = this.arg("unselectable");
                        return c in b ? !b[c] : !0
                    },
                    _getUnselectableRows: function() {
                        var c = [], b = this.arg("unselectable"), a;
                        for (a in b)
                            this.unselectable[a] && this.model.byId(a) && c.push(a);
                        return c
                    },
                    _init: function() {
                        function c(c) {
                            if (c.columnId) {
                                var h = a._columnsById[c.columnId];
                                return b.arg("triggerOnCell") ? !1 !== h.rowSelectable && !g.contains(c.target, "gridxTreeExpandoIcon") && !g.contains(c.target, "gridxTreeExpandoInner") : h.rowSelectable
                            }
                            return !c.columnId
                        }
                        var b = this
                          , a = b.grid
                          , h = b.arg("unselectable", {});
                        b.model.treeMarkMode("", b.arg("treeMode"));
                        for (var d in h)
                            b.model.setMarkable(d, !h[d]);
                        b.inherited(arguments);
                        b.model._spTypes.select = 1;
                        b.model.setMarkable(k.hitch(b, "_isSelectable"));
                        b.batchConnect([a, "onRowMouseDown", function(h) {
                            c(h) && b._select(h.rowId, a._isCtrlKey(h))
                        }
                        ], [a, "onRowTouchStart", function(h) {
                            c(h) && b._select(h.rowId, a._isCtrlKey(h) || "__indirectSelect__" === h.columnId)
                        }
                        ], [a.body, "onAfterRow", function(a) {
                            var b = !a.isSelectable();
                            g.toggle(a.node(), "gridxRowUnselectable", b)
                        }
                        ], [a, 4 > n("ff") ? "onRowKeyUp" : "onRowKeyDown", function(c) {
                            if (c.keyCode == f.SPACE && (!c.columnId || a._columnsById[c.columnId].rowSelectable || b.arg("triggerOnCell") && (!a.focus || "body" == a.focus.currentArea()))) {
                                var h = a.cell(c.rowId, c.columnId);
                                h && h.isEditing && h.isEditing() || (b._select(c.rowId, a._isCtrlKey(c)),
                                m.stop(c))
                            }
                        }
                        ], [a.model, "setStore", "_syncUnselectable"])
                    },
                    _onMark: function(c, b, a, h) {
                        "select" == h && (this._highlight(c, b),
                        this[b ? "onSelected" : "onDeselected"](this.grid.row(c, 1), c),
                        this._onSelectionChange())
                    },
                    _highlight: function(c, b) {
                        var a = l('[rowid\x3d"' + this.grid._escapeId(c) + '"]', this.grid.mainNode)
                          , h = b && "mixed" != b;
                        a.length && (a.forEach(function(a) {
                            g.toggle(a, "gridxRowSelected", h);
                            g.toggle(a, "gridxRowPartialSelected", "mixed" == b);
                            a.setAttribute("aria-selected", !!h)
                        }),
                        this.onHighlightChange({
                            row: parseInt(a[0].getAttribute("visualindex"), 10)
                        }, b))
                    },
                    _markById: function(c, b) {
                        var a = this.model;
                        this.grid.row(c);
                        a.treeMarkMode() && !a.getMark(c) && b && (b = "mixed");
                        a.markById(c, b);
                        a.when()
                    },
                    _onRender: function(c, b) {
                        var a = this.model, h = c + b, d, e;
                        for (d = c; d < h; ++d)
                            if (e = this.grid.body.getRowNode({
                                visualIndex: d
                            }))
                                e = e.getAttribute("rowid"),
                                this._highlight(e, a.getMark(e))
                    },
                    _syncUnselectable: function() {
                        var c = this.arg("unselectable"), b;
                        for (b in c)
                            this.model.setMarkable(b, !c[b])
                    }
                })
            })
        },
        "gridx/modules/select/_RowCellBase": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "./_Base", "../../core/model/extensions/Mark"], function(q, p, n, m) {
                return q(n, {
                    modelExtensions: [m],
                    selectById: function(l, k) {
                        var g = this.model
                          , f = this._getMarkType(k)
                          , e = "row" == this._type ? l : [l, k];
                        this.arg("enabled") && this._isSelectable(e) && (this.arg("multiple") || g.clearMark(f),
                        g.markById(l, 1, f),
                        g.when())
                    },
                    deselectById: function(l, k) {
                        var g = this.model
                          , f = "row" == this._type ? l : [l, k];
                        this.arg("enabled") && this._isSelectable(f) && (g.markById(l, 0, this._getMarkType(k)),
                        g.when())
                    },
                    isSelected: function(l, k) {
                        return !0 === this.model.getMark(l, this._getMarkType(k))
                    },
                    _init: function() {
                        this.connect(this.model, "onMarkChange", "_onMark")
                    }
                })
            })
        },
        "gridx/modules/select/_Base": function() {
            define(["dojo/_base/declare", "dojo/_base/connect", "../../core/_Module"], function(q, p, n) {
                return q(n, {
                    getAPIPath: function() {
                        var m = {
                            select: {}
                        };
                        m.select[this._type] = this;
                        return m
                    },
                    preload: function() {
                        var m = this.grid;
                        this._lastSelectedIds = [];
                        this.subscribe("gridClearSelection_" + m.id, function(l) {});
                        this.connect(m.body, "onRender", "_onRender");
                        this.arg("multiple") && m.domNode.setAttribute("aria-multiselectable", !0);
                        this._init()
                    },
                    enabled: !0,
                    multiple: !0,
                    holdingCtrl: !1,
                    onSelected: function() {},
                    onDeselected: function() {},
                    onHighlightChange: function() {},
                    onSelectionChange: function() {},
                    _getMarkType: function() {},
                    _isSelected: function() {
                        return this.isSelected.apply(this, arguments)
                    },
                    _isSelectable: function() {
                        return !0
                    },
                    _onSelectionChange: function() {
                        var m = this.getSelected();
                        this.onSelectionChange(m, this._lastSelectedIds);
                        this._lastSelectedIds = m
                    },
                    _select: function(m, l) {
                        var k = 1;
                        this.arg("enabled") && this._isSelectable(m) && (this.arg("multiple") && (l || this.arg("holdingCtrl")) ? k = !this._isSelected(m) : this.clear(m),
                        p.publish("gridClearSelection_" + this.grid.id, [this._type]),
                        this._markById(m, k))
                    }
                })
            })
        },
        "gridx/core/model/extensions/Mark": function() {
            define(["dojo/_base/declare", "dojo/_base/array", "../_Extension"], function(q, p, n) {
                return q(n, {
                    name: "mark",
                    priority: 5,
                    isZOS: !1,
                    constructor: function(m) {
                        this.mixed = "mixed";
                        this.states = {
                            0: !1,
                            1: this.mixed,
                            2: !0
                        };
                        this.clear();
                        this._tree = {};
                        this._mixinAPI("getMark", "getMarkedIds", "markById", "markByIndex", "clearMark", "treeMarkMode", "setMarkable");
                        this.aspect(m, "_msg", "_receiveMsg");
                        this.aspect(m._cache, "onLoadRow", "_onLoadRow");
                        this.aspect(m, "setStore", "clear");
                        m.onMarkChange = function() {}
                        ;
                        m._spTypes = {}
                    },
                    clear: function() {
                        this._byId = {};
                        this._last = {};
                        this._lazy = {};
                        this._unmarkable = {}
                    },
                    setMarkable: function(m, l, k) {
                        k = this._initMark(k);
                        var g = this.model._model
                          , f = this._unmarkable;
                        (f[k] = f[k] || {})[m] = !l;
                        l && (l = g._call("children", [m]),
                        g = l.length ? l[0] : g._call("parentId", [m]),
                        m = this._byId[this._initMark(k)][g] || 0,
                        this._doMark(g, k, m))
                    },
                    clearMark: function(m) {
                        this._byId[this._initMark(m)] = {}
                    },
                    getMarkedIds: function(m, l) {
                        var k = [], g, f = this._initMark(m);
                        if (f = this._byId[f])
                            for (g in f)
                                (l || 2 == f[g]) && k.push(g);
                        return k
                    },
                    isMarked: function(m, l) {
                        l = this._initMark(l);
                        return 2 == this._byId[l][m]
                    },
                    isPartialMarked: function(m, l) {
                        return 1 == this._byId[this._initMark(l)][m]
                    },
                    getMark: function(m, l) {
                        var k = this._byId[this._initMark(l)][m] || 0;
                        return {
                            0: !1,
                            1: this.mixed,
                            2: !0
                        }[k]
                    },
                    markById: function(m, l, k) {
                        this._cmd(m, l, k, 1)
                    },
                    markByIndex: function(m, l, k, g) {
                        0 <= m && Infinity > m && this._cmd(m, l, k, 0, g)
                    },
                    treeMarkMode: function(m, l) {
                        m = this._initMark(m);
                        var k = this._tree;
                        return void 0 === l ? k[m] : k[m] = l
                    },
                    _cmdMark: function() {
                        var m = this
                          , l = arguments
                          , k = []
                          , g = m.model._model;
                        p.forEach(l, function(f) {
                            f[3] || k.push({
                                start: f[0],
                                count: 1
                            })
                        });
                        return g._call("when", [{
                            id: [],
                            range: k
                        }, function() {
                            p.forEach(l, function(f) {
                                var e = f[3] ? f[0] : g._call("indexToId", [f[0], f[4]])
                                  , d = f[1];
                                f = m._initMark(f[2]);
                                d = d === m.mixed ? 1 : d ? 2 : 0;
                                m.model.isId(e) && m._isMarkable(f, e) && m._mark(e, d, f)
                            })
                        }
                        ])
                    },
                    _onDelete: function(m, l, k) {
                        var g, f = this._byId, e = this._last, d = this._lazy;
                        for (g in f)
                            g = this._initMark(g),
                            delete f[g][m],
                            delete e[g][m],
                            delete d[g][m],
                            k && this._updateParents(k, g);
                        this.onDelete.apply(this, arguments)
                    },
                    _initMark: function(m) {
                        var l = this._byId
                          , k = this._last
                          , g = this._lazy;
                        m = m || "select";
                        l[m] = l[m] || {};
                        g[m] = g[m] || {};
                        k[m] = k[m] || {};
                        return m
                    },
                    _cmd: function() {
                        this.model._addCmd({
                            name: "_cmdMark",
                            scope: this,
                            args: arguments,
                            async: 1
                        })
                    },
                    _receiveMsg: function(m, l) {
                        if ("filter" == m) {
                            var k, g, f = this.model._spTypes;
                            for (k in f)
                                if (f[k])
                                    for (g in this._byId[k])
                                        0 > p.indexOf(l, g) && this._doMark(g, k, 0, 0, 1)
                        }
                    },
                    _mark: function(m, l, k) {
                        k = this._initMark(k);
                        var g = this._byId[k][m] || 0;
                        this.model.isId(m) && g != l && this._doMark(m, k, l)
                    },
                    _onLoadRow: function(m) {
                        var l = this.model, k = l._model, g = this._lazy, f, e, d = k._call("treePath", [m]).pop();
                        if (l.isId(d))
                            for (f in g)
                                l = g[f],
                                e = l[d],
                                "number" == typeof e && (e = l[d] = {
                                    toMark: e,
                                    count: k._call("size", [d])
                                }),
                                e && (--e.count,
                                e.count || delete l[d],
                                this._doMark(m, f, e.toMark, 1))
                    },
                    _fireEvent: function(m, l, k, g) {
                        var f = this.model;
                        k != g && (k || delete this._byId[l][m],
                        f.onMarkChange(m, this.states[k || 0], this.states[g || 0], l))
                    },
                    _updateParents: function(m, l, k) {
                        for (var g = this.model._model, f = this._byId[l], e = this._last[l], d = m.length - 1; 0 < d; --d) {
                            var c = m[d]
                              , b = f[c]
                              , a = g._call("children", [c])
                              , h = p.filter(a, function(a) {
                                return e[a] = f[a]
                            }).length
                              , r = p.filter(a, function(a) {
                                return 2 == f[a]
                            }).length;
                            0 != r && r == a.length && 2 != b ? f[c] = 2 : !h && b ? delete f[c] : h && r < a.length && 1 != b && (f[c] = 1);
                            this.isZOS && r === a.length && 1 === a.length && (f[c] = 1);
                            k || this._fireEvent(c, l, f[c], b)
                        }
                    },
                    _doMark: function(m, l, k, g, f) {
                        var e, d, c, b = this.model._model, a = this._byId[l], h = this._last[l], r = this._lazy[l], t = a[m] || 0, u;
                        this._tree[l] && (d = b._call("children", [m]),
                        e = d.length,
                        1 === k && (1 < e ? p.every(d, function(a) {
                            return (h[a] || 0) == (h[d[0]] || 0)
                        }) && (k = 2) : k = 1 === e ? 1 === h[d[0]] ? 1 : 2 : 2));
                        a[m] = h[m] = k;
                        f || this._fireEvent(m, l, k, t);
                        if (this._tree[l]) {
                            for (e = [m]; e.length; )
                                c = e.shift(),
                                t = a[c] || 0,
                                u = a[c] = 1 == k ? h[c] || void 0 : k,
                                void 0 === u && (u = b._call("treePath", [c]),
                                u = a[u.pop()],
                                u = 1 === u ? 0 : u,
                                a[c] = u),
                                f || this._fireEvent(c, l, u, t),
                                b._call("hasChildren", [c]) && (d = b._call("children", [c]),
                                d.length ? e = e.concat(d) : r[c] = k);
                            g || (m = b._call("treePath", [m]),
                            this._updateParents(m, l, f))
                        }
                    },
                    _isMarkable: function(m, l) {
                        return this._unmarkable[m] ? !this._unmarkable[m][l] : !0
                    }
                })
            })
        },
        "gridx/modules/select/Column": function() {
            define("dojo/_base/declare dojo/query dojo/_base/array dojo/_base/sniff dojo/_base/event dojo/dom-class dojo/keys ./_Base ../../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e) {
                return q(f, {
                    name: "selectColumn",
                    columnMixin: {
                        select: function() {
                            this.grid.select.column.selectById(this.id);
                            return this
                        },
                        deselect: function() {
                            this.grid.select.column._markById(this.id, 0);
                            return this
                        },
                        isSelected: function() {
                            return this.grid.select.column.isSelected(this.id)
                        }
                    },
                    selectById: function(d) {
                        this.arg("multiple") || this.clear(d);
                        this._markById(d, 1)
                    },
                    deselectById: function(d) {
                        this._markById(d, 0)
                    },
                    isSelected: function(d) {
                        d = this.grid._columnsById[d];
                        return !(!d || !d._selected)
                    },
                    getSelected: function() {
                        var d = [], c, b, a = this.grid._columns, h = a.length;
                        for (c = 0; c < h; ++c)
                            b = a[c],
                            b._selected && d.push(b.id);
                        return d
                    },
                    clear: function(d) {
                        var c = this.grid._columns, b, a = c.length;
                        for (b = 0; b < a; ++b)
                            c[b].id !== d && this._markById(c[b].id, 0)
                    },
                    _type: "column",
                    _init: function() {
                        var d = this
                          , c = d.grid;
                        d.batchConnect([c, "onHeaderCellClick", function(b) {
                            "__indirectSelect__" !== b.columnId && (k.contains(b.target, "gridxArrowButtonNode") || d._select(b.columnId, c._isCtrlKey(b)))
                        }
                        ], [c, 4 > m("ff") ? "onHeaderCellKeyUp" : "onHeaderCellKeyDown", function(b) {
                            if (b.keyCode == g.SPACE || b.keyCode == g.ENTER)
                                d._select(b.columnId, c._isCtrlKey(b)),
                                l.stop(b)
                        }
                        ])
                    },
                    _markById: function(d, c) {
                        var b = this.grid._columnsById[d];
                        this.arg("enabled") && (c = !!c,
                        b && !b._selected == c && (b._selected = c,
                        this._highlight(d, c),
                        this[c ? "onSelected" : "onDeselected"](this.grid.column(d, 1), d),
                        this._onSelectionChange()))
                    },
                    _highlight: function(d, c) {
                        var b = this
                          , a = b.grid;
                        p("[colid\x3d'" + a._escapeId(d) + "']", a.bodyNode).forEach(function(h) {
                            k.toggle(h, "gridxColumnSelected", c);
                            b.onHighlightChange({
                                column: a._columnsById[d].index
                            }, c)
                        })
                    },
                    _onRender: function(d, c) {
                        var b, a, h, e = d + c, f = this.grid, g = f.bodyNode, l = n.filter(f._columns, function(a) {
                            return a._selected
                        });
                        for (b = l.length - 1; 0 <= b; --b)
                            for (a = d; a < e; ++a)
                                h = p(['[visualindex\x3d"', a, '"] [colid\x3d"', f._escapeId(l[b].id), '"]'].join(""), g)[0],
                                k.add(h, "gridxColumnSelected")
                    }
                })
            })
        },
        "gridx/modules/select/Cell": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/sniff dojo/_base/event dojo/dom-class dojo/keys ./_RowCellBase ../../core/_Module".split(" "), function(q, p, n, m, l, k, g, f) {
                return q(g, {
                    name: "selectCell",
                    cellMixin: {
                        select: function() {
                            this.grid.select.cell.selectById(this.row.id, this.column.id);
                            return this
                        },
                        deselect: function() {
                            this.grid.select.cell.deselectById(this.row.id, this.column.id);
                            return this
                        },
                        isSelected: function() {
                            return this.grid.select.cell.isSelected(this.row.id, this.column.id)
                        }
                    },
                    getSelected: function() {
                        var e = this
                          , d = [];
                        p.forEach(e.grid._columns, function(c) {
                            var b = e.model.getMarkedIds(e._getMarkType(c.id));
                            d.push.apply(d, p.map(b, function(a) {
                                return [a, c.id]
                            }))
                        });
                        return d
                    },
                    clear: function(e) {
                        var d = this
                          , c = d.model;
                        d.arg("enabled") && (p.forEach(d.grid._columns, function(b) {
                            var a = d._getMarkType(b.id), h = c.getMarkedIds(a), f = h.length, g;
                            for (g = 0; g < f; ++g)
                                e && e[1] === b.id && e[0] === h[g] || c.markById(h[g], 0, a)
                        }),
                        c.when())
                    },
                    _type: "cell",
                    _markTypePrefix: "select_",
                    _getMarkType: function(e) {
                        e = this._markTypePrefix + e;
                        this.model._spTypes[e] = 1;
                        return e
                    },
                    _init: function() {
                        var e = this
                          , d = e.grid;
                        e.inherited(arguments);
                        var c = function(b) {
                            d.select.row && d.select.row.arg("triggerOnCell") || l.contains(b.target, "gridxTreeExpandoIcon") || l.contains(b.target, "gridxTreeExpandoInner") || e._select([b.rowId, b.columnId], d._isCtrlKey(b))
                        };
                        e.batchConnect([d, "onCellClick", c], [d, "onCellTouchStart", c], [d, 4 > n("ff") ? "onCellKeyUp" : "onCellKeyDown", function(b) {
                            b.keyCode != k.SPACE || d.focus && "body" != d.focus.currentArea() || (e._select([b.rowId, b.columnId], d._isCtrlKey(b)),
                            m.stop(b))
                        }
                        ])
                    },
                    _isSelected: function(e) {
                        return this.isSelected(e[0], e[1])
                    },
                    _onMark: function(e, d, c, b) {
                        0 === b.indexOf(this._markTypePrefix) && (c = b.substr(this._markTypePrefix.length),
                        this.grid._columnsById[c] && (this._highlight(e, c, d),
                        this[d ? "onSelected" : "onDeselected"](this.grid.cell(e, c, 1), e, c),
                        this._onSelectionChange()))
                    },
                    _highlight: function(e, d, c) {
                        if (e = this.grid.body.getCellNode({
                            rowId: e,
                            colId: d
                        }))
                            l.toggle(e, "gridxCellSelected", c),
                            e.setAttribute("aria-selected", !!c),
                            this.onHighlightChange()
                    },
                    _markById: function(e, d) {
                        var c = this.model;
                        c.markById(e[0], d, this._getMarkType(e[1]));
                        c.when()
                    },
                    _onRender: function(e, d) {
                        var c = this.model, b = e + d, a, h, f, g, k = this.grid._columns;
                        for (a = e; a < b; ++a)
                            for (f = c.indexToId(a),
                            h = k.length - 1; 0 <= h; --h)
                                g = k[h].id,
                                c.getMark(f, this._getMarkType(g)) && this._highlight(f, g, 1)
                    }
                })
            })
        },
        "gridx/modules/extendedSelect/Row": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/event ../../support/query dojo/_base/lang dojo/_base/Deferred dojo/_base/sniff dojo/dom-class dojo/mouse dojo/keys ../../core/_Module ./_RowCellBase".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                return q(b, {
                    name: "selectRow",
                    allowRight: !1,
                    unselectable: {},
                    rowMixin: {
                        select: function() {
                            this.grid.select.row.selectById(this.id);
                            return this
                        },
                        deselect: function() {
                            this.grid.select.row.deselectById(this.id);
                            return this
                        },
                        isSelected: function() {
                            return !0 === this.model.getMark(this.id)
                        },
                        isSelectable: function() {
                            return this.grid.select.row._isSelectable(this.id)
                        },
                        setSelectable: function(a) {
                            this.grid.select.row.setSelectable(this.id, a)
                        }
                    },
                    treeMode: !0,
                    setSelectable: function(a, b) {
                        var c = this.model
                          , h = this.grid.body.getRowNode({
                            rowId: a
                        });
                        c.setMarkable(a, b);
                        this.unselectable[a] = !b;
                        h && (f.toggle(h, "gridxRowUnselectable", !b),
                        this.onHighlightChange({
                            row: parseInt(h.getAttribute("visualindex"), 10)
                        }, c.getMark(a)),
                        this.onSelectionChange())
                    },
                    getSelected: function() {
                        return this.model.getMarkedIds()
                    },
                    isSelected: function() {
                        return p.every(arguments, function(a) {
                            return !0 === this.model.getMark(a)
                        }, this)
                    },
                    clear: function(a) {
                        m(".gridxRowSelected", this.grid.mainNode).forEach(function(a) {
                            f.remove(a, "gridxRowSelected");
                            a.removeAttribute("aria-selected")
                        });
                        m(".gridxRowPartialSelected", this.grid.mainNode).forEach(function(a) {
                            f.remove(a, "gridxRowPartialSelected")
                        });
                        this._clear();
                        this.model.clearMark();
                        a || this._onSelectionChange()
                    },
                    onHighlightChange: function() {},
                    _type: "row",
                    _isSelectable: function(a) {
                        return !this.arg("unselectable", {})[a]
                    },
                    _getUnselectableRows: function() {
                        var a = [], b = this.arg("unselectable"), c;
                        for (c in b)
                            b[c] && this.model.byId(c) && a.push(c);
                        return a
                    },
                    _init: function() {
                        function a(a) {
                            if (a.columnId) {
                                var d = c._columnsById[a.columnId];
                                return b.arg("triggerOnCell") ? !1 !== d.rowSelectable && !f.contains(a.target, "gridxTreeExpandoIcon") && !f.contains(a.target, "gridxTreeExpandoInner") : d.rowSelectable
                            }
                            return !a.columnId
                        }
                        var b = this
                          , c = b.grid
                          , t = b.arg("unselectable", {});
                        b.model.treeMarkMode("", b.arg("treeMode") && c.tree);
                        for (var k in t)
                            b.model.setMarkable(k, !t[k]);
                        b.inherited(arguments);
                        b.model._spTypes.select = 1;
                        b.model.setMarkable(l.hitch(b, b._isSelectable));
                        b.batchConnect(c.rowHeader && [c.rowHeader, "onMoveToRowHeaderCell", "_onMoveToRowHeaderCell"], [c, "onRowMouseDown", function(d) {
                            (e.isLeft(d) || b.arg("allowRight")) && a(d) && (b._isOnCell = d.columnId,
                            b._isOnCell && (c.body._focusCellCol = d.columnIndex),
                            b._start({
                                row: d.visualIndex
                            }, c._isCtrlKey(d), d.shiftKey),
                            d.shiftKey || b.arg("canSwept") || b._end())
                        }
                        ], [c, "onRowTouchStart", function(d) {
                            a(d) && (b._isOnCell = d.columnId,
                            b._isOnCell && (c.body._focusCellCol = d.columnIndex),
                            b._start({
                                row: d.visualIndex
                            }, c._isCtrlKey(d) || "__indirectSelect__" === d.columnId, d.shiftKey),
                            d.shiftKey || b.arg("canSwept") || b._end())
                        }
                        ], [c, "onRowTouchEnd", "_end"], [c.body, "onAfterRow", function(a) {
                            var b = !a.isSelectable();
                            f.toggle(a.node(), "gridxRowUnselectable", b)
                        }
                        ], [c, "onRowMouseOver", function(a) {
                            b._selecting && b.arg("triggerOnCell") && a.columnId && (c.body._focusCellCol = a.columnIndex);
                            b._highlight({
                                row: a.visualIndex
                            })
                        }
                        ], [c, 4 > g("ff") ? "onRowKeyUp" : "onRowKeyDown", function(a) {
                            a.keyCode != d.SPACE || a.columnId && !c._columnsById[a.columnId].rowSelectable && (!b.arg("triggerOnCell") || c.focus && "body" != c.focus.currentArea()) || (n.stop(a),
                            b._isOnCell = a.columnId,
                            b._start({
                                row: a.visualIndex
                            }, c._isCtrlKey(a), a.shiftKey),
                            b._end())
                        }
                        ], [c.model, "setStore", "_syncUnselectable"])
                    },
                    _markById: function(a, b) {
                        var c = this.model;
                        p.forEach(a, function(a) {
                            c.markById(a, b)
                        });
                        c.when()
                    },
                    _markByIndex: function(a, b) {
                        var c = this.model, d = this.grid.view, h;
                        p.forEach(a, function(a) {
                            if (l.isArrayLike(a)) {
                                var e = a[0];
                                a = a[1];
                                var f;
                                if (0 <= e && Infinity > e)
                                    for (f = a >= e && Infinity > a ? a - e + 1 : d.visualCount - e,
                                    h = d.getRowInfo({
                                        visualIndex: e
                                    }),
                                    e = h.rowIndex,
                                    a = 0; a < f; ++a)
                                        c.markByIndex(a + e, b, "", h.parentId)
                            } else
                                0 <= a && Infinity > a && (h = d.getRowInfo({
                                    visualIndex: a
                                }),
                                c.markByIndex(h.rowIndex, b, "", h.parentId))
                        });
                        return c.when()
                    },
                    _onRender: function(a, b) {
                        var c, d = a + b;
                        for (c = a; c < d; ++c) {
                            var h = {
                                row: c
                            }
                              , e = this._isSelected(h) || this._selecting && this._toSelect && this._inRange(c, this._startItem.row, this._currentItem.row, 1);
                            e && this._doHighlight(h, e)
                        }
                    },
                    _onMark: function(a, b, c, d) {
                        "select" == d && this.grid.body.renderedIds[a] && (a = m('[rowid\x3d"' + this.grid._escapeId(a) + '"]', this.grid.mainNode),
                        a.length && (a.forEach(function(a) {
                            var c = b && "mixed" != b;
                            f.toggle(a, "gridxRowSelected", c);
                            f.toggle(a, "gridxRowPartialSelected", "mixed" == b);
                            a.setAttribute("aria-selected", !!c)
                        }),
                        this.onHighlightChange({
                            row: parseInt(a[0].getAttribute("visualindex"), 10)
                        }, b)))
                    },
                    _onMoveToCell: function(a, b, c) {
                        this.arg("triggerOnCell") && c.shiftKey && (c.keyCode == d.UP_ARROW || c.keyCode == d.DOWN_ARROW) && (this._start({
                            row: a
                        }, this.grid._isCtrlKey(c), 1),
                        this._end())
                    },
                    _onMoveToRowHeaderCell: function(a, b) {
                        b.shiftKey && (this._start({
                            row: a
                        }, this.grid._isCtrlKey(b), 1),
                        this._end())
                    },
                    _isSelected: function(a) {
                        a = this._getRowId(a.row);
                        return this._isRange ? 0 <= p.indexOf(this._refSelectedIds, a) : this.model.getMark(a)
                    },
                    _beginAutoScroll: function() {
                        this.grid.autoScroll.horizontal = !1
                    },
                    _endAutoScroll: function() {
                        this.grid.autoScroll.horizontal = !0
                    },
                    _doHighlight: function(a, b) {
                        m('[visualindex\x3d"' + a.row + '"]', this.grid.mainNode).forEach(function(a) {
                            var c = b && "mixed" != b;
                            f.toggle(a, "gridxRowSelected", c);
                            f.toggle(a, "gridxRowPartialSelected", "mixed" == b);
                            a.setAttribute("aria-selected", !!c)
                        });
                        this.onHighlightChange(a, b)
                    },
                    _end: function() {
                        this.inherited(arguments);
                        delete this._isOnCell
                    },
                    _focus: function(a) {
                        var b = this.grid
                          , c = b.focus;
                        c && (b.body._focusCellRow = a.row,
                        c.focusArea(this._isOnCell ? "body" : "rowHeader", !0))
                    },
                    _addToSelected: function(a, b, c) {
                        var d = this, h = d.grid.view, e = d.model, f = d._lastEndItem, r, g, l;
                        d._isRange || (d._refSelectedIds = e.getMarkedIds());
                        if (d._isRange && d._inRange(b.row, a.row, f.row))
                            return r = Math.min(b.row, f.row),
                            f = Math.max(b.row, f.row),
                            a = h.getRowInfo({
                                visualIndex: r
                            }).rowIndex + 1,
                            b = h.getRowInfo({
                                visualIndex: f
                            }).rowIndex,
                            l = new k,
                            e.when({
                                start: a,
                                count: b - a + 1
                            }, function() {
                                for (g = a; g <= b; ++g) {
                                    var c = e.indexToId(g)
                                      , h = 0 <= p.indexOf(d._refSelectedIds, c);
                                    e.markById(c, h)
                                }
                            }).then(function() {
                                e.when(null, function() {
                                    l.callback()
                                })
                            }),
                            l;
                        r = Math.min(a.row, b.row);
                        f = Math.max(a.row, b.row);
                        for (g = r; g <= f; ++g)
                            r = h.getRowInfo({
                                visualIndex: g
                            }),
                            e.markByIndex(r.rowIndex, c, "", r.parentId);
                        return e.when()
                    },
                    _highlightSingle: function(a, b) {
                        var c = this._getRowId(a.row);
                        b = this._isSelectable(c) ? b ? this._toSelect : this._isSelected(a) : this.model.getMark(c);
                        this._doHighlight(a, b)
                    },
                    _syncUnselectable: function() {
                        var a = this.arg("unselectable"), b;
                        for (b in a)
                            this.model.setMarkable(b, !a[b])
                    }
                })
            })
        },
        "gridx/modules/extendedSelect/_RowCellBase": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "../../support/query", "./_Base", "../../core/model/extensions/Mark"], function(q, p, n, m, l) {
                return q(m, {
                    modelExtensions: [l],
                    _getRowId: function(k) {
                        var g = n('[visualindex\x3d"' + k + '"]', this.grid.bodyNode)[0];
                        return g ? g.getAttribute("rowid") : this.grid.view.getRowInfo({
                            visualIndex: k
                        }).rowId
                    },
                    _init: function() {
                        var k = this.model;
                        this.batchConnect([this.grid.body, "onMoveToCell", "_onMoveToCell"], [k, "onMarkChange", "_onMark"], [k, "setStore", "clear"])
                    }
                })
            })
        },
        "gridx/modules/extendedSelect/_Base": function() {
            define("dojo/_base/declare dojo/query dojo/_base/connect dojo/_base/Deferred dojo/_base/sniff dojo/_base/window dojo/dom dojo/keys ../../core/_Module ../AutoScroll".split(" "), function(q, p, n, m, l, k, g, f, e) {
                return q(e, {
                    required: ["autoScroll"],
                    getAPIPath: function() {
                        var d = {
                            select: {}
                        };
                        d.select[this._type] = this;
                        return d
                    },
                    load: function() {
                        var d = this
                          , c = d.grid
                          , b = k.doc;
                        c.domNode.setAttribute("aria-multiselectable", !0);
                        d._refSelectedIds = [];
                        d.subscribe("gridClearSelection_" + c.id, function(a) {
                            a != d._type && d.clear()
                        });
                        d.batchConnect([c.body, "onRender", "_onRender"], [b, "onmouseup", "_end"], [b, "onkeydown", function(a) {
                            a.keyCode == f.SHIFT && g.setSelectable(9 < l("ie") || 5 < l("trident") ? b.body : c.domNode, !1)
                        }
                        ], [b, "onkeyup", function(a) {
                            a.keyCode == f.SHIFT && g.setSelectable(9 < l("ie") || 5 < l("trident") ? b.body : c.domNode, !0)
                        }
                        ]);
                        d._init();
                        d.loaded.callback()
                    },
                    enabled: !0,
                    canSwept: !0,
                    holdingCtrl: !1,
                    holdingShift: !1,
                    selectById: function() {
                        return this._subMark("_markById", arguments, !0)
                    },
                    deselectById: function() {
                        return this._subMark("_markById", arguments, !1)
                    },
                    selectByIndex: function() {
                        return this._subMark("_markByIndex", arguments, !0)
                    },
                    deselectByIndex: function() {
                        return this._subMark("_markByIndex", arguments, !1)
                    },
                    onSelectionChange: function() {},
                    _clear: function() {
                        delete this._lastToSelect;
                        delete this._lastStartItem;
                        delete this._lastEndItem
                    },
                    _subMark: function(d, c, b) {
                        var a = this;
                        if (a.arg("enabled"))
                            return b && n.publish("gridClearSelection_" + a.grid.id, [a._type]),
                            a._lastSelectedIds = a.getSelected(),
                            a._refSelectedIds = [],
                            m.when(a[d](c, b), function() {
                                a._onSelectionChange()
                            })
                    },
                    _start: function(d, c, b) {
                        var a = this.grid.model;
                        if (!this._selecting && !this._marking && this.arg("enabled")) {
                            g.setSelectable(this.grid.domNode, !1);
                            this._fixFF(1);
                            var h = !0 === this._isSelected(d);
                            (b = b || this.arg("holdingShift")) && this._lastStartItem ? (this._isRange = 1,
                            this._toSelect = this._lastToSelect,
                            this._startItem = this._lastStartItem,
                            this._currentItem = this._lastEndItem,
                            this._lastSelectedIds = this.getSelected()) : (this._startItem = d,
                            this._currentItem = null,
                            c || this.arg("holdingCtrl") ? (this._toSelect = !h,
                            "row" === this._type && a.treeMarkMode() && !this._isSelected(d) && this._toSelect && (this._toSelect = "mixed")) : (this._toSelect = 1,
                            "row" === this._type && a.treeMarkMode() && !this._isSelected(d) && this._toSelect && (this._toSelect = "mixed"),
                            this._lastSelectedIds = this.getSelected(),
                            this.clear(1)));
                            n.publish("gridClearSelection_" + this.grid.id, [this._type]);
                            this._beginAutoScroll();
                            this.grid.autoScroll.enabled = !0;
                            this._selecting = 1;
                            this._highlight(d)
                        }
                    },
                    _highlight: function(d) {
                        var c = this
                          , b = c.grid;
                        if (c._selecting && c._lastStartItem != d) {
                            var a = c._type
                              , h = c._startItem
                              , e = c._currentItem
                              , f = function(d, h, e) {
                                d = d[a];
                                h = h[a];
                                for (var f = d < h ? 1 : -1, g = b.body.renderStart, r = g + b.body.renderCount; d != h; d += f)
                                    if (!(d < g || d > r)) {
                                        var t = {};
                                        t[a] = d;
                                        c._highlightSingle(t, e)
                                    }
                            };
                            null === e ? c._highlightSingle(d, 1) : c._inRange(d[a], h[a], e[a]) ? f(e, d, 0) : (c._inRange(h[a], d[a], e[a]) && (f(e, h, 0),
                            e = h),
                            f(d, e, 1));
                            c._currentItem = d;
                            c._focus(d)
                        }
                    },
                    _end: function() {
                        var d = this
                          , c = d.grid;
                        if (d._selecting) {
                            d._fixFF();
                            d._endAutoScroll();
                            d._selecting = 0;
                            d._marking = 1;
                            c.autoScroll.enabled = !1;
                            var b = d._addToSelected(d._startItem, d._currentItem, d._toSelect);
                            d._lastToSelect = d._toSelect;
                            d._lastStartItem = d._startItem;
                            d._lastEndItem = d._currentItem;
                            d._startItem = d._currentItem = d._isRange = null;
                            m.when(b, function() {
                                g.setSelectable(c.domNode, !0);
                                d._marking = 0;
                                d._onSelectionChange()
                            })
                        }
                    },
                    _highlightSingle: function(d, c) {
                        c = c ? this._toSelect : this._isSelected(d);
                        this._doHighlight(d, c)
                    },
                    _onSelectionChange: function() {
                        var d = this.getSelected();
                        this.onSelectionChange(d, this._lastSelectedIds);
                        this._lastSelectedIds = d
                    },
                    _inRange: function(d, c, b, a) {
                        return (d >= c && d <= b || d >= b && d <= c) && (a || d != b)
                    },
                    _fixFF: function(d) {
                        l("ff") && p(".gridxSortNode", this.grid.headerNode).style("overflow", d ? "visible" : "")
                    }
                })
            })
        },
        "gridx/modules/AutoScroll": function() {
            define("dojo/_base/declare dojo/_base/Deferred dojo/_base/window dojo/query dojo/dom-geometry ../core/_Module".split(" "), function(q, p, n, m, l, k) {
                return k.register(q(k, {
                    name: "autoScroll",
                    constructor: function() {
                        this.connect(n.doc, "mousemove", "_onMouseMove")
                    },
                    enabled: !1,
                    vertical: !0,
                    horizontal: !0,
                    margin: 30,
                    rowStep: 1,
                    columnStep: 1,
                    _timeout: 300,
                    _onMouseMove: function(g) {
                        if (this.arg("enabled")) {
                            var f, e, d = this.grid, c = this.arg("margin"), b = l.position(d.bodyNode);
                            this.arg("vertical") && d.vScroller && (f = g.clientY - b.y - c,
                            e = f + 2 * c - b.h,
                            this._vdir = 0 > f ? f : 0 < e ? e : 0);
                            this.arg("horizontal") && d.hScroller && (f = g.clientX - b.x - c,
                            e = f + 2 * c - b.w,
                            this._hdir = 0 > f ? f : 0 < e ? e : 0);
                            this._handler || this._scroll()
                        }
                    },
                    _scroll: function() {
                        var g = this;
                        if (g.arg("enabled")) {
                            var f, e, d = g.grid, c = g._vdir, b = g._hdir;
                            g.arg("vertical") && c && (f = 0 < c ? 1 : -1,
                            c = g._findNode(d.bodyNode.childNodes, function(a) {
                                if (0 < f) {
                                    if (a.offsetTop >= d.bodyNode.scrollTop + d.bodyNode.offsetHeight)
                                        return -1;
                                    if (a.offsetTop + a.offsetHeight < d.bodyNode.scrollTop + d.bodyNode.offsetHeight)
                                        return 1
                                } else {
                                    if (a.offsetTop > d.bodyNode.scrollTop)
                                        return -1;
                                    if (a.offsetTop + a.offsetHeight <= d.bodyNode.scrollTop)
                                        return 1
                                }
                                return 0
                            })) && (e = parseInt(c.getAttribute("visualindex"), 10),
                            e = d.vScroller.scrollToRow(e + f * g.arg("rowStep")));
                            g.arg("horizontal") && b && (f = 0 < b ? 1 : -1,
                            b = g._findNode(m(".gridxCell", d.header.domNode), function(a) {
                                if (0 < f) {
                                    if (a.offsetLeft >= d.hScrollerNode.scrollLeft + d.hScrollerNode.offsetWidth)
                                        return -1;
                                    if (a.offsetLeft + a.offsetWidth < d.hScrollerNode.scrollLeft + d.hScrollerNode.offsetWidth)
                                        return 1
                                } else {
                                    if (a.offsetLeft > d.hScrollerNode.scrollLeft)
                                        return -1;
                                    if (a.offsetLeft + a.offsetHeight <= d.vScrollerNode.scrollLeft)
                                        return 1
                                }
                                return 0
                            })) && (b = d._columnsById[b.getAttribute("colid")].index + f * g.arg("columnStep"),
                            b >= d._columns.length ? b = d._columns.length - 1 : 0 > b && (b = 0),
                            d.hScroller.scrollToColumn(d._columns[b].id),
                            e = e || 1);
                            (g._handler = e) && p.when(e, function() {
                                g._handler = setTimeout(function() {
                                    g._scroll()
                                }, g._timeout)
                            })
                        } else
                            delete g._handler
                    },
                    _findNode: function(g, f) {
                        for (var e = 0, d = g.length, c = Math.floor((e + d) / 2); e < d && e != c; ) {
                            var b = f(g[c]);
                            if (0 > b)
                                d = c,
                                c = Math.floor((e + d) / 2);
                            else if (0 < b)
                                e = c,
                                c = Math.floor((e + d) / 2);
                            else
                                break
                        }
                        return g[c]
                    }
                }))
            })
        },
        "gridx/modules/extendedSelect/Column": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/event dojo/query dojo/_base/lang dojo/_base/sniff dojo/dom-class dojo/mouse dojo/keys ../../core/_Module ./_Base".split(" "), function(q, p, n, m, l, k, g, f, e, d, c) {
                return q(c, {
                    name: "selectColumn",
                    columnMixin: {
                        select: function() {
                            this.grid.select.column.selectById(this.id);
                            return this
                        },
                        deselect: function() {
                            this.grid.select.column.deselectById(this.id);
                            return this
                        },
                        isSelected: function() {
                            return !!this.grid._columnsById[this.id]._selected
                        }
                    },
                    getSelected: function() {
                        return p.map(p.filter(this.grid._columns, function(b) {
                            return b._selected
                        }), function(b) {
                            return b.id
                        })
                    },
                    clear: function(b) {
                        m(".gridxColumnSelected", this.grid.domNode).forEach(function(a) {
                            g.remove(a, "gridxColumnSelected");
                            a.removeAttribute("aria-selected")
                        });
                        p.forEach(this.grid._columns, function(a) {
                            a._selected = 0
                        });
                        this._clear();
                        b || this._onSelectionChange()
                    },
                    isSelected: function() {
                        var b = this.grid._columnsById;
                        return p.every(arguments, function(a) {
                            return (a = b[a]) && a._selected
                        })
                    },
                    _type: "column",
                    _markById: function(b, a) {
                        p.forEach(b, function(b) {
                            if (b = this.grid._columnsById[b])
                                b._selected = a,
                                this._doHighlight({
                                    column: b.index
                                }, a)
                        }, this)
                    },
                    _markByIndex: function(b, a) {
                        var c, d, e = this.grid._columns;
                        for (c = 0; c < b.length; ++c) {
                            var f = b[c];
                            if (l.isArrayLike(f)) {
                                var g = f[0]
                                  , f = f[1];
                                if (0 <= g && Infinity > g)
                                    for (f >= g && Infinity > f || (f = e.length - 1); g < f + 1; ++g)
                                        if (d = e[g])
                                            d._selected = a,
                                            this._doHighlight({
                                                column: d.index
                                            }, a)
                            } else
                                0 <= f && Infinity > f && (d = e[f]) && (d._selected = a,
                                this._doHighlight({
                                    column: f
                                }, a))
                        }
                    },
                    _init: function() {
                        var b = this
                          , a = b.grid;
                        b.batchConnect([a, "onHeaderCellMouseDown", function(c) {
                            f.isLeft(c) && !g.contains(c.target, "gridxArrowButtonNode") && (b._start({
                                column: c.columnIndex
                            }, a._isCtrlKey(c), c.shiftKey),
                            c.shiftKey || b.arg("canSwept") || b._end())
                        }
                        ], [a, "onHeaderCellMouseOver", function(a) {
                            b._highlight({
                                column: a.columnIndex
                            })
                        }
                        ], [a, "onCellMouseOver", function(a) {
                            b._highlight({
                                column: a.columnIndex
                            })
                        }
                        ], [a, 4 > k("ff") ? "onHeaderCellKeyUp" : "onHeaderCellKeyDown", function(c) {
                            c.keyCode != e.SPACE && c.keyCode != e.ENTER || g.contains(c.target, "gridxArrowButtonNode") || (n.stop(c),
                            b._start({
                                column: c.columnIndex
                            }, a._isCtrlKey(c), c.shiftKey),
                            b._end())
                        }
                        ], [a.header, "onMoveToHeaderCell", "_onMoveToHeaderCell"])
                    },
                    _onRender: function(b, a) {
                        var c, d, e = b + a, f = this.grid, k = f.bodyNode, l, n = p.filter(f._columns, function(a) {
                            return a._selected
                        });
                        for (c = n.length - 1; 0 <= c; --c)
                            for (d = b; d < e; ++d)
                                l = m(['[visualindex\x3d"', d, '"] [colid\x3d"', f._escapeId(n[c].id), '"]'].join(""), k)[0],
                                g.add(l, "gridxColumnSelected"),
                                l.setAttribute("aria-selected", !0)
                    },
                    _onMoveToHeaderCell: function(b, a) {
                        !a.shiftKey || a.keyCode != e.LEFT_ARROW && a.keyCode != e.RIGHT_ARROW || (this._start({
                            column: this.grid._columnsById[b].index
                        }, this.grid._isCtrlKey(a), 1),
                        this._end())
                    },
                    _isSelected: function(b) {
                        b = this.grid._columns[b.column];
                        var a = b.id;
                        return this._isRange ? 0 <= p.indexOf(this._refSelectedIds, a) : b._selected
                    },
                    _beginAutoScroll: function() {
                        this.grid.autoScroll.vertical = !1
                    },
                    _endAutoScroll: function() {
                        this.grid.autoScroll.vertical = !0
                    },
                    _doHighlight: function(b, a) {
                        m('[colid\x3d"' + this.grid._escapeId(this.grid._columns[b.column].id) + '"].gridxCell', this.grid.domNode).forEach(function(b) {
                            g.toggle(b, "gridxColumnSelected", a)
                        })
                    },
                    _focus: function(b) {
                        var a = this.grid;
                        a.focus && a.header._focusNode(m('[colid\x3d"' + a._escapeId(a._columns[b.column].id) + '"].gridxCell', a.header.domNode)[0])
                    },
                    _addToSelected: function(b, a, c) {
                        var d = this.grid, h;
                        this._isRange || (this._refSelectedIds = this.getSelected());
                        if (this._isRange && this._inRange(a.column, b.column, this._lastEndItem.column))
                            for (b = Math.min(a.column, this._lastEndItem.column),
                            a = Math.max(a.column, this._lastEndItem.column); b <= a; ++b)
                                d._columns[b]._selected = 0 <= p.indexOf(this._refSelectedIds, d._columns[b].id);
                        else
                            for (h = Math.min(b.column, a.column),
                            a = Math.max(b.column, a.column),
                            b = h; b <= a; ++b)
                                d._columns[b]._selected = c
                    }
                })
            })
        },
        "gridx/modules/extendedSelect/Cell": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/event dojo/query dojo/_base/lang dojo/_base/Deferred dojo/_base/sniff dojo/dom-class dojo/mouse dojo/keys ../../core/_Module ./_RowCellBase".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                var a = l.isArrayLike;
                return q(b, {
                    name: "selectCell",
                    cellMixin: {
                        select: function() {
                            this.grid.select.cell.selectByIndex(this.row.index(), this.column.index());
                            return this
                        },
                        deselect: function() {
                            this.grid.select.cell.deselectByIndex(this.row.index(), this.column.index());
                            return this
                        },
                        isSelected: function() {
                            return this.grid.select.cell.isSelected(this.row.id, this.column.id)
                        }
                    },
                    getSelected: function() {
                        var a = this
                          , b = [];
                        p.forEach(a.grid._columns, function(c) {
                            var d = a.model.getMarkedIds(a._getMarkType(c.id));
                            b.push.apply(b, p.map(d, function(a) {
                                return [a, c.id]
                            }))
                        });
                        return b
                    },
                    clear: function(a) {
                        var b = this;
                        m(".gridxCellSelected", b.grid.bodyNode).forEach(function(a) {
                            f.remove(a, "gridxCellSelected");
                            a.removeAttribute("aria-selected")
                        });
                        p.forEach(b.grid._columns, function(a) {
                            b.model.clearMark(b._getMarkType(a.id))
                        });
                        b._clear();
                        a || b._onSelectionChange()
                    },
                    isSelected: function(a, b) {
                        return this.model.getMark(a, this._getMarkType(b))
                    },
                    _type: "cell",
                    _markTypePrefix: "select_",
                    _getMarkType: function(a) {
                        a = this._markTypePrefix + a;
                        this.model._spTypes[a] = 1;
                        return a
                    },
                    _markById: function(b, c) {
                        a(b[0]) || (b = [b]);
                        var d = this
                          , h = d.grid._columnsById
                          , e = d.model;
                        p.forEach(b, function(a) {
                            var b = a[0];
                            a = a[1];
                            b && h[a] && e.markById(b, c, d._getMarkType(a))
                        });
                        e.when()
                    },
                    _markByIndex: function(b, c) {
                        a(b[0]) || (b = [b]);
                        b = p.filter(b, function(b) {
                            if (a(b) && 2 <= b.length && 0 <= b[0] && Infinity > b[0] && 0 <= b[1] && Infinity > b[1])
                                return 4 <= b.length && 0 <= b[2] && Infinity > b[2] && 0 <= b[3] && Infinity > b[3] && (b._range = 1),
                                !0
                        });
                        var d = this, h = d.model, e = d.grid, f = e._columns, g = e.view, r, k, l, m, n;
                        p.forEach(b, function(a) {
                            if (a._range) {
                                var b = Math.min(a[0], a[2])
                                  , e = Math.max(a[0], a[2]) - b + 1
                                  , t = Math.max(a[1], a[3]);
                                for (r = Math.min(a[1], a[3]); r <= t; ++r)
                                    if (l = f[r])
                                        for (n = g.getRowInfo({
                                            visualIndex: b
                                        }),
                                        b = n.rowIndex,
                                        m = d._getMarkType(l.id),
                                        k = 0; k < e; ++k)
                                            h.markByIndex(b + k, c, m, n.parentId)
                            } else if (l = f[a[1]])
                                n = g.getRowInfo({
                                    visualIndex: a[0]
                                }),
                                r = n.rowIndex,
                                h.markByIndex(r, c, d._getMarkType(l.id), n.parentId)
                        });
                        return h.when()
                    },
                    _init: function() {
                        var a = this
                          , b = a.grid;
                        a.inherited(arguments);
                        a.batchConnect([b, "onCellMouseDown", function(c) {
                            !e.isLeft(c) || b.select.row && b.select.row.arg("triggerOnCell") || f.contains(c.target, "gridxTreeExpandoIcon") || f.contains(c.target, "gridxTreeExpandoInner") || (a._start({
                                rid: c.rowId,
                                r: c.visualIndex,
                                cid: c.columnId,
                                c: c.columnIndex
                            }, b._isCtrlKey(c), c.shiftKey),
                            c.shiftKey || a.arg("canSwept") || a._end())
                        }
                        ], [b, "onCellMouseOver", function(b) {
                            a._highlight({
                                rid: b.rowId,
                                r: b.visualIndex,
                                cid: b.columnId,
                                c: b.columnIndex
                            })
                        }
                        ], [b, 4 > g("ff") ? "onCellKeyUp" : "onCellKeyDown", function(c) {
                            c.keyCode !== d.SPACE || b.focus && "body" != b.focus.currentArea() || (n.stop(c),
                            a._start({
                                rid: c.rowId,
                                r: c.visualIndex,
                                cid: c.columnId,
                                c: c.columnIndex
                            }, b._isCtrlKey(c), c.shiftKey),
                            a._end())
                        }
                        ])
                    },
                    _onRender: function(a, b) {
                        var c, d, h = this.model, e = this.grid, g = e._columns, r = a + b;
                        for (c = 0; c < g.length; ++c) {
                            var k = g[c].id
                              , l = this._getMarkType(k);
                            if (h.getMarkedIds(l).length)
                                for (d = a; d < r; ++d) {
                                    var n = this._getRowId(d);
                                    (h.getMark(n, l) || this._selecting && this._toSelect && this._inRange(c, this._startItem.c, this._currentItem.c, 1) && this._inRange(d, this._startItem.r, this._currentItem.r, 1)) && f.add(m('[visualindex\x3d"' + d + '"] [colid\x3d"' + e._escapeId(k) + '"]', e.bodyNode)[0], "gridxCellSelected")
                                }
                        }
                    },
                    _onMark: function(a, b, c, d) {
                        l.isString(d) && !this._marking && 0 === d.indexOf(this._markTypePrefix) && (c = this.grid._escapeId,
                        a = m('[rowid\x3d"' + c(a) + '"]', this.grid.bodyNode)[0]) && (d = d.substr(this._markTypePrefix.length),
                        (d = m('[colid\x3d"' + c(d) + '"]', a)[0]) && f.toggle(d, "gridxCellSelected", b))
                    },
                    _onMoveToCell: function(a, b, c) {
                        if (c.shiftKey) {
                            var d = this.grid
                              , h = this._getRowId(a);
                            this._start({
                                rid: h,
                                r: a,
                                cid: d._columns[b].id,
                                c: b
                            }, d._isCtrlKey(c), 1);
                            this._end()
                        }
                    },
                    _isSelected: function(a) {
                        a.rid || (a.rid = this._getRowId(a.r));
                        if (this._isRange) {
                            var b = this._refSelectedIds[a.cid];
                            return b && 0 <= p.indexOf(b, a.rid)
                        }
                        return this.model.getMark(a.rid, this._getMarkType(a.cid))
                    },
                    _highlight: function(a) {
                        var b = this
                          , c = b._currentItem;
                        if (b._selecting) {
                            if (null === c)
                                b._highlightSingle(a, 1),
                                (g("ie") || g("trident")) && b._focus(a);
                            else {
                                var d = b._startItem
                                  , h = function(a, c, d) {
                                    var h = c.c > a.c ? 1 : -1, e = c.r > a.r ? 1 : -1, f, g, r, k, t = {};
                                    if (!d)
                                        for (g = a.r,
                                        r = c.r + e; g != r; g += e)
                                            t[g] = b.model.indexToId(g);
                                    f = a.c;
                                    for (k = c.c + h; f != k; f += h) {
                                        var l = b.grid._columns[f].id;
                                        g = a.r;
                                        for (r = c.r + e; g != r; g += e)
                                            b._highlightSingle({
                                                rid: t[g],
                                                r: g,
                                                cid: l,
                                                c: f
                                            }, d)
                                    }
                                };
                                (b._inRange(a.r, d.r, c.r) || b._inRange(a.c, d.c, c.c) || b._inRange(d.r, a.r, c.r) || b._inRange(d.c, a.c, c.c)) && h(d, c, 0);
                                h(d, a, 1);
                                b._focus(a)
                            }
                            b._currentItem = a
                        }
                    },
                    _doHighlight: function(a, b) {
                        var c, d = this.grid.bodyNode.childNodes;
                        for (c = d.length - 1; 0 <= c; --c)
                            if (d[c].getAttribute("visualindex") == a.r) {
                                d = d[c].getElementsByTagName("td");
                                for (c = d.length - 1; 0 <= c; --c)
                                    if (d[c].getAttribute("colid") == a.cid) {
                                        f.toggle(d[c], "gridxCellSelected", b);
                                        d[c].setAttribute("aria-selected", !!b);
                                        break
                                    }
                                break
                            }
                    },
                    _focus: function(a) {
                        this.grid.focus && this.grid.body._focusCell(null, a.r, a.c)
                    },
                    _getSelectedIds: function() {
                        var a = this
                          , b = {};
                        p.forEach(a.grid._columns, function(c) {
                            var d = a.model.getMarkedIds(a._getMarkType(c.id));
                            d.length && (b[c.id] = d)
                        });
                        return b
                    },
                    _beginAutoScroll: function() {},
                    _endAutoScroll: function() {},
                    _addToSelected: function(a, b, c) {
                        var d = this, h = d.model, e = d.grid.view, f = new k, g = d._lastEndItem, r, t, l, m, n = [], p = function() {
                            h.when().then(function() {
                                f.callback()
                            })
                        };
                        d._isRange || (d._refSelectedIds = d._getSelectedIds());
                        d._isRange && (d._inRange(b.r, a.r, g.r) && (r = Math.min(b.r, g.r),
                        t = Math.max(b.r, g.r),
                        m = e.getRowInfo({
                            visualIndex: r + 1
                        }),
                        n.push({
                            start: m.rowIndex,
                            count: t - r,
                            columnStart: a.c,
                            columnEnd: g.c
                        })),
                        d._inRange(b.c, a.c, g.c) && (l = b.c < g.c ? 1 : -1,
                        r = Math.min(a.r, b.r),
                        t = Math.max(a.r, b.r),
                        m = e.getRowInfo({
                            visualIndex: r
                        }),
                        n.push({
                            start: m.rowIndex,
                            count: t - r + 1,
                            columnStart: b.c + l,
                            columnEnd: g.c
                        })));
                        l = a.c < b.c ? 1 : -1;
                        for (g = a.c; g != b.c + l; g += l) {
                            var q = d._getMarkType(d.grid._columns[g].id);
                            r = Math.min(a.r, b.r);
                            for (t = Math.max(a.r, b.r); r <= t; ++r)
                                m = e.getRowInfo({
                                    visualIndex: r
                                }),
                                h.markByIndex(m.rowIndex, c, q, m.parentId)
                        }
                        n.length ? h.when(n, function() {
                            var a, b, c, e;
                            for (a = 0; a < n.length; ++a) {
                                e = n[a];
                                var f = e.columnStart < e.columnEnd ? 1 : -1;
                                for (b = e.columnStart; b != e.columnEnd + f; b += f) {
                                    c = d.grid._columns[b].id;
                                    var g = d._getMarkType(c)
                                      , r = d._refSelectedIds[c];
                                    for (c = e.start; c < e.start + e.count; ++c) {
                                        var k = h.indexToId(c);
                                        h.markById(k, r && r[k], g)
                                    }
                                }
                            }
                        }).then(p) : p();
                        return f
                    }
                })
            })
        },
        "gridx/modules/move/Row": function() {
            define(["dojo/_base/declare", "dojo/_base/array", "dojo/keys", "../../core/_Module", "../../core/model/extensions/Move"], function(q, p, n, m, l) {
                return q(m, {
                    name: "moveRow",
                    modelExtensions: [l],
                    constructor: function() {
                        this.connect(this.model, "onMoved", "_onMoved")
                    },
                    getAPIPath: function() {
                        return {
                            move: {
                                row: this
                            }
                        }
                    },
                    preload: function() {
                        this.aspect(this.grid, "onRowKeyDown", "_onKeyDown")
                    },
                    rowMixin: {
                        moveTo: function(k, g) {
                            this.grid.move.row.move([this.index()], k, g);
                            return this
                        }
                    },
                    moveSelected: !0,
                    move: function(k, g, f) {
                        var e = this.model;
                        e.moveIndexes(k, g);
                        f || e.when()
                    },
                    moveRange: function(k, g, f, e) {
                        var d = this.model;
                        d.move(k, g, f);
                        e || d.when()
                    },
                    onMoved: function() {},
                    _onMoved: function() {
                        this.grid.body.refresh();
                        this.onMoved()
                    },
                    _onKeyDown: function(k) {
                        var g = this
                          , f = g.grid
                          , e = f.select && f.select.row;
                        if (f._isCtrlKey(k) && !k.shiftKey && !k.altKey && (k.keyCode == n.UP_ARROW || k.keyCode == n.DOWN_ARROW)) {
                            var d = k.rowIndex
                              , c = function(a) {
                                if (k.keyCode == n.UP_ARROW) {
                                    for (; 0 <= p.indexOf(a, d); )
                                        d--;
                                    d >= f.view.rootStart && g.move(a, d)
                                } else {
                                    for (; 0 <= p.indexOf(a, d); )
                                        d++;
                                    d < f.view.rootStart + f.view.rootCount && g.move(a, d + 1)
                                }
                            };
                            if (g.arg("moveSelected") && e && e.isSelected(k.rowId)) {
                                var b = e.getSelected();
                                f.model.when({
                                    id: b
                                }, function() {
                                    var a = p.map(b, function(a) {
                                        return f.model.idToIndex(a)
                                    });
                                    c(a)
                                })
                            } else
                                c([f.model.idToIndex(k.rowId)])
                        }
                    }
                })
            })
        },
        "gridx/core/model/extensions/Move": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/_base/Deferred", "dojo/DeferredList", "../_Extension"], function(q, p, n, m, l) {
                function k(e, d) {
                    var c, b, a = [], h = [], f, g = 1, k = 1, l = d, m = d, n;
                    c = 0;
                    for (b = e.length; c < b; ++c)
                        a[e[c]] = 1;
                    c = 0;
                    for (b = a.length; c < b; ++c)
                        a[c] ? c < d ? g ? (g = 0,
                        f = [c, 1],
                        n = h.length,
                        h.unshift(f)) : a[c - 1] && ++f[1] : k ? (k = 0,
                        f = [c, 1, m],
                        h.push(f),
                        ++m) : a[c - 1] && (++f[1],
                        ++m) : g = k = 1;
                    for (c = 0; c <= n; ++c)
                        f = h[c],
                        f[2] = l,
                        l -= f[1];
                    return h
                }
                function g(e, d, c, b) {
                    var a = {}, h, f, g = {};
                    if (c > e + d) {
                        for (f = 0; f < d; ++f)
                            a[e + f] = c + f - d;
                        for (f = 0; f < c - e - d; ++f)
                            a[e + d + f] = e + f
                    } else if (c < e) {
                        for (f = 0; f < d; ++f)
                            a[e + f] = c + f;
                        for (f = 0; f < e - c; ++f)
                            a[c + f] = c + f + d
                    } else
                        return;
                    for (h in b)
                        g[b[h]] = parseInt(h, 10);
                    for (h in a)
                        e = a[h],
                        g.hasOwnProperty(h) && (h = g[h]),
                        h == e ? delete b[h] : b[h] = e
                }
                var f = p.hitch;
                return q(l, {
                    name: "move",
                    priority: 10,
                    constructor: function(e, d) {
                        var c = e._cache.options = e._cache.options || {};
                        this._mixinAPI("move", "moveIndexes", "insert");
                        e.onMoved = function() {}
                        ;
                        d.updateStore && (this.updateStore = d.updateStore);
                        c.sort = d.moveSortInfo ? d.moveSortInfo : [{
                            attribute: this.moveField = d.moveField || "order",
                            descending: this.moveFieldDescending = d.moveFieldDescending || !1
                        }]
                    },
                    move: function(e, d, c) {
                        0 <= e && Infinity > e && 0 < d && Infinity > d && 0 <= c && Infinity > c && (c < e || c > e + d) && this.model._addCmd({
                            name: "_cmdMove",
                            scope: this,
                            args: [e, d, c],
                            async: 1
                        })
                    },
                    moveIndexes: function(e, d) {
                        this.model._addCmd({
                            name: "_cmdMove",
                            scope: this,
                            args: [e, d],
                            async: 1
                        })
                    },
                    insert: function(e, d, c) {
                        var b = new n, a = f(b, b.callback), h = f(b, b.errback), g = this.moveField, k = this.model.store, l, p = [];
                        l = function(a) {
                            return k.fetch ? k.getValue(a, g) : a[g]
                        }
                        ;
                        d = d ? l(d) : null;
                        var q = c ? l(c) : null;
                        for (c = 0; l = e[c]; ++c)
                            if (d = null === d && null === q ? Math.random() : null === d ? q - 1 : null === q ? d + 1 : (d + q) / 2,
                            l[g] = d,
                            k.fetch)
                                k.newItem(l);
                            else {
                                var z = new n;
                                n.when(k.add(l), f(z, z.callback), f(z, z.errback));
                                p.push(z)
                            }
                        k.fetch ? k.save({
                            onComplete: a,
                            onError: h
                        }) : (new m(p)).then(a, h);
                        return b
                    },
                    updateStore: function(e, d, c) {
                        var b = []
                          , a = []
                          , h = [];
                        d = [];
                        var g, k, l = {}, q, y = {}, z, w = 0, v = this.inner, A = this.model.store, B = this.moveField, C = [], E = function(c) {
                            for (; c < b.length; ++c) {
                                var d = b[c];
                                if (!a[d])
                                    return void 0 === d ? c : d
                            }
                            return c
                        }, I = function(a) {
                            return (a = v._call("byIndex", [a])) && a.item
                        }, H = function(a) {
                            return A.fetch ? A.getValue(a, B) : a[B]
                        }, F = function(b, c) {
                            var d = a[b];
                            return d ? d.value : 0 > b ? H(I(0)) - 1 : b < c ? H(I(b)) : H(I(c - 1)) + 1
                        }, G = function() {
                            A.fetch ? A.save({
                                onComplete: function() {
                                    e.callback()
                                },
                                onError: function(a) {
                                    e.errback(a)
                                }
                            }) : (new m(C)).then(function() {
                                e.callback()
                            }, function(a) {
                                e.errback(a)
                            })
                        }, J = Infinity;
                        for (g in c)
                            g = parseInt(g, 10),
                            k = c[g],
                            l[g] = k,
                            k < J && (J = k),
                            b[k] = g;
                        for (c = J; c < b.length; ++c)
                            void 0 === b[c] && (b[c] = c,
                            l[c] = c);
                        for (g in l)
                            g = parseInt(g, 10),
                            k = l[g],
                            q = k - g,
                            void 0 === y[q] ? y[q] = 1 : ++y[q];
                        for (q in y)
                            y[q] > w && (w = y[q],
                            z = q);
                        for (k = 0; k < b.length; ++k)
                            g = b[k],
                            void 0 !== g && k - g != z && (a[g] = {},
                            h.push(g));
                        for (c = 0; c < h.length; ++c)
                            g = h[c],
                            k = l[g],
                            q = a[g],
                            z = 0 < k ? void 0 === b[k - 1] ? k - 1 : b[k - 1] : -1,
                            q = q.before = z,
                            k = a[g].after = E(k),
                            d.push({
                                start: g,
                                count: 1
                            }, {
                                start: k,
                                count: 1
                            }),
                            0 <= q && d.push({
                                start: q,
                                count: 1
                            });
                        v._call("when", [{
                            id: [],
                            range: d
                        }, function() {
                            for (var b = v._call("size"), c = 0; c < h.length; ++c) {
                                g = h[c];
                                var d = I(g)
                                  , e = a[g]
                                  , r = F(e.before, b)
                                  , k = F(e.after, b)
                                  , r = (r + k) / 2
                                  , e = e.value = r;
                                A.fetch ? A.setValue(d, B, e) : (d = p.clone(d),
                                d[B] = e,
                                e = new n,
                                n.when(A.put(d, {
                                    overwrite: !0
                                }), f(e, e.callback)),
                                C.push(e))
                            }
                            G()
                        }
                        ])
                    },
                    _cmdMove: function() {
                        var e = new n, d = this.model, c, b, a = {}, h, f = [];
                        this.inner._call("size");
                        for (c = 0; b = arguments[c]; ++c)
                            d._msg("beforeMove", b),
                            2 == b.length ? f = f.concat(k(b[0], b[1])) : f.push(b);
                        for (c = 0; b = f[c]; ++c)
                            g(b[0], b[1], b[2], a);
                        for (c in a) {
                            h = 1;
                            break
                        }
                        h ? this.updateStore(e, f, a) : e.callback();
                        e.then(function() {
                            d._cache.clear();
                            d._msg("moved", a);
                            d.onMoved(f, a)
                        });
                        return e
                    }
                })
            })
        },
        "gridx/modules/move/Column": function() {
            define(["dojo/_base/declare", "dojo/query", "dojo/_base/array", "dojo/keys", "../../core/_Module"], function(q, p, n, m, l) {
                return q(l, {
                    name: "moveColumn",
                    getAPIPath: function() {
                        return {
                            move: {
                                column: this
                            }
                        }
                    },
                    preload: function() {
                        this.aspect(this.grid, "onHeaderCellKeyDown", "_onKeyDown")
                    },
                    columnMixin: {
                        moveTo: function(k) {
                            this.grid.move.column.moveRange(this.index(), 1, k);
                            return this
                        }
                    },
                    moveSelected: !0,
                    _isInConstraints: function(k, g) {
                        var f = this.arg("constraints", {}), e;
                        for (e in f)
                            if (k >= e && k <= f[e] && (g < e || g > f[e] + 1) || k >= e && k <= f[e] && (g < e || g > f[e] + 1))
                                return 0;
                        return 1
                    },
                    move: function(k, g) {
                        "number" === typeof k && (k = [k]);
                        var f = [], e, d, c = this.grid._columns, b, a = [];
                        e = 0;
                        for (d = k.length; e < d; ++e)
                            this._isInConstraints(k[e], g) && (f[k[e]] = !0);
                        for (e = f.length - 1; 0 <= e; --e)
                            f[e] && (a.unshift(c[e]),
                            c.splice(e, 1));
                        e = 0;
                        for (d = c.length; e < d; ++e)
                            if (c[e].index >= g) {
                                b = e;
                                break
                            }
                        void 0 === b && (b = c.length);
                        this._moveComplete(a, b)
                    },
                    moveRange: function(k, g, f) {
                        if (f < k || f > k + g) {
                            for (var e = [], d = 0; d < g; ++d)
                                this._isInConstraints(k + d, f) && e.push(k + d);
                            this.move(e, f)
                        }
                    },
                    onMoved: function() {},
                    _moveComplete: function(k, g) {
                        var f = this.grid, e = {}, d = f._columns, c, b = {}, a = g < d.length ? d[g].id : null, h = function(c) {
                            var h = p("\x3e .gridxCell", c).filter(function(a) {
                                return b[a.getAttribute("colid")]
                            });
                            if (null === a)
                                h.place(c);
                            else {
                                var e = p('\x3e [colid\x3d"' + f._escapeId(a) + '"]', c)[0];
                                e ? h.place(e, "before") : 0 < g && (c = p('\x3e [colid\x3d"' + f._escapeId(d[g - 1].id) + '"]', c)[0]) && h.place(c, "after")
                            }
                        };
                        for (c = k.length - 1; 0 <= c; --c)
                            e[k[c].index] = g + c,
                            b[k[c].id] = 1;
                        [].splice.apply(d, [g, 0].concat(k));
                        for (c = d.length - 1; 0 <= c; --c)
                            d[c].index = c;
                        p(".gridxHeaderRowInner \x3e table \x3e tbody \x3e tr", f.headerNode).forEach(h);
                        p(".gridxRow \x3e table \x3e tbody \x3e tr", f.bodyNode).forEach(h);
                        this.onMoved(e)
                    },
                    _onKeyDown: function(k) {
                        var g = this.grid
                          , f = this.arg("moveSelected") && g.select && g.select.column
                          , e = g.isLeftToRight()
                          , d = e ? m.LEFT_ARROW : m.RIGHT_ARROW
                          , e = e ? m.RIGHT_ARROW : m.LEFT_ARROW;
                        if (g._isCtrlKey(k) && !k.shiftKey && !k.altKey && (k.keyCode == d || k.keyCode == e)) {
                            var c = k.columnIndex
                              , f = f && f.isSelected(k.columnId) ? n.map(f.getSelected(), function(a) {
                                return g._columnsById[a].index
                            }) : [k.columnIndex]
                              , b = g.header.getHeaderNode(k.columnId);
                            if (k.keyCode == d) {
                                for (; 0 <= n.indexOf(f, c); )
                                    c--;
                                0 <= c && (this.move(f, c),
                                g.header._focusNode(b))
                            } else if (k.keyCode == e) {
                                for (; 0 <= n.indexOf(f, c); )
                                    c++;
                                c < g._columns.length && (this.move(f, c + 1),
                                g.header._focusNode(b))
                            }
                        }
                    }
                })
            })
        },
        "gridx/modules/dnd/Row": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/Deferred dojo/_base/lang dojo/dom-class dojo/dom-geometry dojo/_base/sniff ./_Base ../../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e) {
                function d(a, d) {
                    if (a.grid) {
                        var h = new n
                          , e = c(h, h.callback)
                          , f = c(h, h.errback)
                          , g = []
                          , k = a.grid
                          , l = k.dnd.row._selectedRowIds;
                        k.model.when({
                            id: l
                        }, function() {
                            b(l, function(a) {
                                k.model.idToIndex(a);
                                (a = k.model.byId(a)) && g.push(m.clone(a.rawData))
                            })
                        }).then(function() {
                            e(g)
                        }, f);
                        return h
                    }
                    return a.getGridDndRowData && a.getGridDndRowData(d) || []
                }
                var c = m.hitch
                  , b = p.forEach;
                return q(f, {
                    name: "dndRow",
                    required: ["_dnd", "moveRow"],
                    getAPIPath: function() {
                        return {
                            dnd: {
                                row: this
                            }
                        }
                    },
                    accept: ["grid/rows"],
                    provide: ["grid/rows"],
                    onDraggedOut: function(a) {
                        var c = [];
                        if (a.grid)
                            c = a.grid.dnd._dnd.profile.arg("accept");
                        else
                            for (var d in a.accept)
                                c.push(d);
                        if (!this.checkArg("copyWhenDragOut", c)) {
                            a = this.grid;
                            var e = a.model
                              , f = a.store
                              , g = this._selectedRowIds;
                            if (f.fetch) {
                                var k = [];
                                a.model.when({
                                    id: g
                                }, function() {
                                    b(g, function(a) {
                                        (a = e.byId(a)) && k.push(a.item)
                                    })
                                }).then(function() {
                                    b(k, f.deleteItem, f);
                                    f.save()
                                })
                            } else
                                b(g, f.remove, f)
                        }
                    },
                    _checkDndReady: function(a) {
                        var b = this.model;
                        return !b.getMark || b.getMark(a.rowId) ? (this.grid.dnd._dnd.profile = this,
                        this._selectedRowIds = b.getMarkedIds ? b.getMarkedIds() : [a.rowId],
                        !0) : !1
                    },
                    _cssName: "Row",
                    _onBeginDnd: function(a) {
                        a.delay = this.arg("delay")
                    },
                    _getDndCount: function() {
                        return this._selectedRowIds.length
                    },
                    _onEndDnd: function() {},
                    _buildDndNodes: function() {
                        var a = this.grid.id;
                        return p.map(this._selectedRowIds, function(b) {
                            return ["\x3cdiv id\x3d'", a, "_dndrow_", b, "' gridid\x3d'", a, "' rowid\x3d'", b, "'\x3e\x3c/div\x3e"].join("")
                        }).join("")
                    },
                    _onBeginAutoScroll: function() {
                        this.grid.autoScroll.horizontal = !1
                    },
                    _onEndAutoScroll: function() {
                        this.grid.autoScroll.horizontal = !0
                    },
                    _getItemData: function(a) {
                        return a.substring((this.grid.id + "_dndrow_").length)
                    },
                    _calcTargetAnchorPos: function(a, b) {
                        var c = this
                          , d = a.target
                          , h = c.grid.view
                          , e = {
                            width: b.w + "px",
                            height: "",
                            left: ""
                        }
                          , f = function(a) {
                            return c.model.getMark && c.model.getMark(a.getAttribute("rowid"))
                        }
                          , m = function(a) {
                            return parseInt(a.getAttribute("visualindex"), 10)
                        }
                          , n = function(d) {
                            var h = d
                              , g = h
                              , r = h;
                            if (f(h)) {
                                for (g = h.previousSibling; g && f(g); )
                                    h = g,
                                    g = g.previousSibling;
                                g = h;
                                h = d;
                                for (r = h.nextSibling; r && f(r); )
                                    h = r,
                                    r = r.nextSibling;
                                r = h
                            }
                            g && r ? (h = k.position(g),
                            d = k.position(r),
                            a.clientY < (h.y + d.y + d.h) / 2 ? (c._target = m(g),
                            e.top = h.y - b.y + "px") : (c._target = m(r) + 1,
                            e.top = d.y + d.h - b.y + "px")) : delete c._target;
                            return e
                        };
                        if (!g("ff"))
                            for (; d; ) {
                                if (l.contains(d, "gridxRow"))
                                    return n(d);
                                d = d.parentNode
                            }
                        var q = c.grid.bodyNode
                          , A = q.childNodes;
                        if (A.length) {
                            var d = q.firstChild
                              , B = m(d)
                              , C = k.position(d);
                            if (0 === B && a.clientY <= C.y + C.h)
                                e.top = C.y - b.y + "px",
                                c._target = 0;
                            else if (d = q.lastChild,
                            B = m(d),
                            C = k.position(d),
                            B === h.visualCount - 1 && a.clientY > C.y + C.h)
                                e.top = C.y + C.h - b.y + "px",
                                c._target = h.visualCount;
                            else
                                return p.some(A, function(b) {
                                    C = k.position(b);
                                    if (C.y <= a.clientY && C.y + C.h >= a.clientY)
                                        return d = b,
                                        !0
                                }) ? n(d) : null
                        } else
                            e.top = "0px",
                            c._target = 0;
                        return e
                    },
                    _onDropInternal: function(a, b) {
                        var c = this
                          , d = c.grid;
                        0 <= c._target && c.model.when({
                            id: c._selectedRowIds
                        }, function() {
                            var a = p.map(c._selectedRowIds, function(a) {
                                return c.model.idToIndex(a)
                            });
                            d.move.row.move(a, d.view.getRowInfo({
                                visualIndex: c._target
                            }).rowIndex)
                        })
                    },
                    _onDropExternal: function(a, b, e) {
                        e = new n;
                        var h = c(e, e.callback), f = c(e, e.errback), g = this.grid, r = this._target, k, l, m = d(a, b);
                        g.model.when([r - 1, r], function() {
                            k = g.model.byIndex(r);
                            l = g.model.byIndex(r - 1)
                        }).then(function() {
                            n.when(m, function(a) {
                                a && a.length && (a = g.model.insert(a, l && l.item, k && k.item),
                                n.when(a, h, f))
                            }, f)
                        }, f);
                        return e
                    }
                })
            })
        },
        "gridx/modules/dnd/_Base": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang ../../core/_Module ./Avatar ./_Dnd".split(" "), function(q, p, n, m, l) {
                return q(m, {
                    delay: 2,
                    enabled: !0,
                    canRearrange: !0,
                    copyWhenDragOut: !1,
                    avatar: l,
                    preload: function(k) {
                        k = this.grid.dnd._dnd;
                        k.register(this.name, this);
                        k.avatar = this.arg("avatar")
                    },
                    checkArg: function(k, g) {
                        var f = this.arg(k);
                        return f && n.isObject(f) ? p.some(g, function(e) {
                            return f[e]
                        }) : f
                    }
                })
            })
        },
        "gridx/modules/dnd/Avatar": function() {
            define(["dojo/_base/declare", "dojo/dom-class", "dojo/dom-construct", "dojo/_base/window", "dojo/dnd/Avatar"], function(q, p, n, m, l) {
                return q(l, {
                    construct: function() {
                        this.isA11y = p.contains(m.body(), "dijit_a11y");
                        this.node = n.toDom(["\x3ctable border\x3d'0' cellspacing\x3d'0' class\x3d'gridxDndAvatar' style\x3d'position: absolute; z-index: 1999; margin: 0'\x3e\x3ctbody\x3e\x3ctr style\x3d'opacity: 0.9;'\x3e\x3ctd class\x3d'gridxDnDIcon'\x3e", this.isA11y ? "\x3cspan id\x3d'a11yIcon'\x3e" + (this.manager.copy ? "+" : "\x3c") + "\x3c/span\x3e" : "", "\x3c/td\x3e\x3ctd class\x3d'gridxDnDItemIcon ", this._getIconClass(), "'\x3e\x3c/td\x3e\x3ctd\x3e\x3cspan class\x3d'gridxDnDItemCount'\x3e", this._generateText(), "\x3c/span\x3e\x3c/td\x3e\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"].join(""))
                    },
                    _getIconClass: function() {
                        var k = this.manager._dndInfo;
                        return ["gridxDnDIcon", k.cssName, 1 === k.count ? "Single" : "Multi"].join("")
                    },
                    _generateText: function() {
                        return "(" + this.manager._dndInfo.count + ")"
                    }
                })
            })
        },
        "gridx/modules/dnd/_Dnd": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/Deferred dojo/dom-construct dojo/dom-geometry dojo/dom-class dojo/dom-style dojo/dom dojo/_base/window dojo/_base/sniff dojo/dnd/Source dojo/dnd/Manager ../../core/_Module ../AutoScroll".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a) {
                var h = p.hitch;
                return a.register(q(a, {
                    name: "_dnd",
                    optional: ["selectRow", "selectColumn"],
                    constructor: function() {
                        var a = this
                          , b = a.grid
                          , c = e.doc;
                        a.accept = [];
                        a._profiles = {};
                        a._selectStatus = {};
                        a._node = m.create("div");
                        a.batchConnect([b, "onCellMouseOver", "_checkDndReady"], [b, "onCellMouseOut", "_dismissDndReady"], [b, "onCellMouseDown", "_beginDnd"], [c, "onmouseup", "_endDnd"], [c, "onmousemove", "_onMouseMove"], [b, "onCellMouseUp", function(b) {
                            setTimeout(function() {
                                a._checkDndReady(b)
                            }, 0)
                        }
                        ]);
                        a.subscribe("/dnd/cancel", "_endDnd")
                    },
                    load: function(a) {
                        a = this.arg("sourceNode", this.grid.mainNode);
                        this._source = new c(a,{
                            isSource: !1,
                            accept: this.accept,
                            getSelectedNodes: function() {
                                return [0]
                            },
                            getItem: h(this, "_getItem"),
                            onSelectStart: function() {
                                this.notSelectText && c.prototype.onSelectStart.apply(this, arguments)
                            },
                            checkAcceptance: h(this, "_checkAcceptance"),
                            onDraggingOver: h(this, "_onDraggingOver"),
                            onDraggingOut: h(this, "_onDraggingOut"),
                            onDropExternal: h(this, "_onDropExternal"),
                            onDropInternal: h(this, "_onDropInternal")
                        });
                        d("ff") && this._fixFF(this._source, a);
                        this._source.grid = this.grid;
                        this._saveSelectStatus();
                        this.loaded.callback()
                    },
                    destroy: function() {
                        this.inherited(arguments);
                        this._source.destroy();
                        m.destroy(this._node)
                    },
                    getAPIPath: function() {
                        return {
                            dnd: {
                                _dnd: this
                            }
                        }
                    },
                    profile: null,
                    register: function(a, b) {
                        this._profiles[a] = b;
                        [].push.apply(this.accept, b.arg("accept"))
                    },
                    _fixFF: function(a) {
                        return this.connect(e.doc, "onmousemove", function(b) {
                            var c = l.position(a.node)
                              , d = b.clientX
                              , h = b.clientY;
                            b = a._alreadyIn;
                            c = h >= c.y && h <= c.y + c.h && d >= c.x && d <= c.x + c.w;
                            !b && c ? (a._alreadyIn = 1,
                            a.onOverEvent()) : b && !c && (a._alreadyIn = 0,
                            a.onOutEvent())
                        })
                    },
                    _onMouseMove: function(a) {
                        this._alreadyIn && (this._dnding || this._extDnding) && this._markTargetAnchor(a)
                    },
                    _saveSelectStatus: function(a) {
                        var b, c, d = this.grid.select;
                        if (d)
                            for (b in d)
                                (c = d[b]) && p.isObject(c) && (this._selectStatus[b] = c.arg("enabled"),
                                void 0 !== a && (c.enabled = a))
                    },
                    _loadSelectStatus: function() {
                        var a, b, c = this.grid.select;
                        if (c)
                            for (a in c)
                                (b = c[a]) && p.isObject(b) && (b.enabled = this._selectStatus[a])
                    },
                    _checkDndReady: function(a) {
                        var b, c;
                        if (!this._dndReady && !this._dnding && !this._extDnding)
                            for (b in this._profiles)
                                if (c = this._profiles[b],
                                c.arg("enabled") && c._checkDndReady(a)) {
                                    this.profile = c;
                                    k.add(e.body(), "gridxDnDReadyCursor");
                                    this._dndReady = this._source.notSelectText = 1;
                                    break
                                }
                    },
                    _dismissDndReady: function() {
                        this._dndReady && !this._dndBegun && (this._loadSelectStatus(),
                        this._dndReady = 0,
                        k.remove(e.body(), "gridxDnDReadyCursor"))
                    },
                    _beginDnd: function(a) {
                        var c = this;
                        c._checkDndReady(a);
                        if (c._dndReady) {
                            var d = c.profile
                              , e = b.manager();
                            c._dndBegun = 1;
                            c._source.isSource = !0;
                            c._source.canNotDragOut = !d.arg("provide").length;
                            c._node.innerHTML = d._buildDndNodes();
                            c._oldStartDrag = e.startDrag;
                            e.startDrag = h(c, "_startDrag", a);
                            c.avatar && (c._oldMakeAvatar = e.makeAvatar,
                            e.makeAvatar = function() {
                                return new c.avatar(e)
                            }
                            );
                            e._dndInfo = {
                                grid: c.grid,
                                cssName: d._cssName,
                                count: d._getDndCount()
                            };
                            c.grid.vScrollerNode.focus();
                            d._onBeginDnd(c._source);
                            f.setSelectable(c.grid.domNode, !1);
                            c._saveSelectStatus(!1)
                        }
                    },
                    _endDnd: function() {
                        var a = b.manager();
                        this._source.isSource = !1;
                        this._dndBegun = this._alreadyIn = 0;
                        delete a._dndInfo;
                        this._oldStartDrag && (a.startDrag = this._oldStartDrag,
                        delete this._oldStartDrag);
                        this._oldMakeAvatar && (a.makeAvatar = this._oldMakeAvatar,
                        delete this._oldMakeAvatar);
                        if (this._dndReady || this._dnding || this._extDnding)
                            this._dnding = this._extDnding = 0,
                            this._destroyUI(),
                            f.setSelectable(this.grid.domNode, !0),
                            k.remove(e.body(), "gridxDnDReadyCursor"),
                            this.profile._onEndDnd(),
                            this._source.notSelectText = 0,
                            this._loadSelectStatus()
                    },
                    _createUI: function() {
                        k.add(e.body(), "gridxDnDCursor");
                        this.grid.autoScroll && (this.profile._onBeginAutoScroll(),
                        this.grid.autoScroll.enabled = !0)
                    },
                    _destroyUI: function() {
                        this._unmarkTargetAnchor();
                        k.remove(e.body(), "gridxDnDCursor");
                        this.grid.autoScroll && (this.profile._onEndAutoScroll(),
                        this.grid.autoScroll.enabled = !1)
                    },
                    _createTargetAnchor: function() {
                        return m.create("div", {
                            "class": "gridxDnDAnchor"
                        })
                    },
                    _markTargetAnchor: function(a) {
                        if (this._extDnding || this.profile.arg("canRearrange")) {
                            var b = this._targetAnchor
                              , c = l.position(this.grid.mainNode);
                            b || (b = this._targetAnchor = this._createTargetAnchor(),
                            b.style.display = "none",
                            this.grid.mainNode.appendChild(b));
                            k.add(b, "gridxDnDAnchor" + this.profile._cssName);
                            (a = this.profile._calcTargetAnchorPos(a, c)) ? (g.set(b, a),
                            b.style.display = "block") : b.style.display = "none"
                        }
                    },
                    _unmarkTargetAnchor: function() {
                        var a = this._targetAnchor;
                        a && (a.style.display = "none",
                        k.remove(a, "gridxDnDAnchor" + this.profile._cssName))
                    },
                    _startDrag: function(a, c, d, h) {
                        this._dndReady && c === this._source && (this._oldStartDrag.call(b.manager(), c, this._node.childNodes, h),
                        this._dndReady = 0,
                        this._dnding = this._alreadyIn = 1,
                        this._createUI(),
                        this._markTargetAnchor(a))
                    },
                    _getItem: function(a) {
                        return {
                            type: this.profile.arg("provide"),
                            data: this.profile._getItemData(a)
                        }
                    },
                    _checkAcceptance: function(a, b) {
                        var d = function(a) {
                            for (var b = {}, c = a.length - 1; 0 <= c; --c)
                                b[a[c]] = 1;
                            return b
                        }
                          , h = c.prototype.checkAcceptance;
                        if (h.apply(this._source, arguments)) {
                            if (a.grid === this.grid)
                                return this.profile.arg("canRearrange");
                            if (!a.canNotDragOut)
                                for (var e in this._profiles) {
                                    var f = this._profiles[e]
                                      , g = h.apply({
                                        accept: d(f.arg("accept"))
                                    }, arguments);
                                    if (f.arg("enabled") && g && (!f.checkAcceptance || f.checkAcceptance.apply(f, arguments)))
                                        return this.profile = f,
                                        this._extDnding = 1,
                                        !0
                                }
                        }
                        return !1
                    },
                    _onDraggingOver: function() {
                        if (this._dnding || this._extDnding)
                            this._alreadyIn = 1,
                            this._createUI()
                    },
                    _onDraggingOut: function() {
                        if (this._dnding || this._extDnding)
                            this._alreadyIn = 0,
                            this._destroyUI()
                    },
                    _onDropInternal: function(a, b) {
                        this.profile._onDropInternal(a, b);
                        this._endDnd()
                    },
                    _onDropExternal: function(a, b, c) {
                        var d = this;
                        b = d.profile._onDropExternal(a, b, c);
                        n.when(b, function() {
                            if (!c)
                                if (a.grid)
                                    a.grid.dnd._dnd.profile.onDraggedOut(d._source);
                                else
                                    a.deleteSelectedNodes()
                        })
                    }
                }))
            })
        },
        "gridx/modules/dnd/Column": function() {
            define("dojo/_base/declare dojo/_base/array dojo/dom-geometry dojo/dom-class dojo/query ./_Base ../../core/_Module".split(" "), function(q, p, n, m, l, k, g) {
                return q(k, {
                    name: "dndColumn",
                    required: ["_dnd", "selectColumn", "moveColumn"],
                    getAPIPath: function() {
                        return {
                            dnd: {
                                column: this
                            }
                        }
                    },
                    preload: function() {
                        var f = this.grid;
                        this.inherited(arguments);
                        this._selector = f.select.column;
                        this.connect(f.header, "onRender", "_initHeader")
                    },
                    load: function() {
                        this._initHeader();
                        this.loaded.callback()
                    },
                    accept: [],
                    provide: ["grid/columns"],
                    _checkDndReady: function(f) {
                        return this._selector.isSelected(f.columnId) ? (this._selectedColIds = this._selector.getSelected(),
                        this.grid.dnd._dnd.profile = this,
                        !0) : !1
                    },
                    onDraggedOut: function() {},
                    _cssName: "Column",
                    _initHeader: function() {
                        l(".gridxCell", this.grid.header.domNode).attr("aria-grabbed", "false")
                    },
                    _onBeginDnd: function(f) {
                        var e = this;
                        f.delay = e.arg("delay");
                        p.forEach(e._selectedColIds, function(d) {
                            l('[colid\x3d"' + e.grid._escapeId(d) + '"].gridxCell', e.grid.header.domNode).attr("aria-grabbed", "true")
                        })
                    },
                    _getDndCount: function() {
                        return this._selectedColIds.length
                    },
                    _onEndDnd: function() {
                        l('[aria-grabbed\x3d"true"].gridxCell', this.grid.header.domNode).attr("aria-grabbed", "false")
                    },
                    _buildDndNodes: function() {
                        var f = this.grid.id;
                        return p.map(this._selectedColIds, function(e) {
                            return ["\x3cdiv id\x3d'", f, "_dndcolumn_", e, "' gridid\x3d'", f, "' columnid\x3d'", e, "'\x3e\x3c/div\x3e"].join("")
                        }).join("")
                    },
                    _onBeginAutoScroll: function() {
                        this.grid.autoScroll.vertical = !1
                    },
                    _onEndAutoScroll: function() {
                        this.grid.autoScroll.vertical = !0
                    },
                    _getItemData: function(f) {
                        return f.substring((this.grid.id + "_dndcolumn_").length)
                    },
                    _calcTargetAnchorPos: function(f, e) {
                        for (var d = f.target, c = this, b = c.grid, a = b.isLeftToRight(), h = b._columns, g = {
                            height: e.h + "px",
                            width: "",
                            top: ""
                        }, k = b._escapeId, p = function(d) {
                            var r = d.getAttribute("colid")
                              , t = b._columnsById[r].index
                              , m = d
                              , p = d
                              , u = d = t;
                            if (c._selector.isSelected(r)) {
                                for (d = t; 0 < d && c._selector.isSelected(h[d - 1].id); )
                                    --d;
                                m = l(".gridxHeaderRow [colid\x3d'" + k(h[d].id) + "']", b.headerNode)[0];
                                for (u = t; u < h.length - 1 && c._selector.isSelected(h[u + 1].id); )
                                    ++u;
                                p = l(".gridxHeaderRow [colid\x3d'" + k(h[u].id) + "']", b.headerNode)[0]
                            }
                            m && p ? (r = n.position(m),
                            t = n.position(p),
                            m = f.clientX < (r.x + t.x + t.w) / 2,
                            g.left = m ? r.x - e.x - 1 + "px" : t.x + t.w - e.x - 1 + "px",
                            c._target = m ^ a ? u + 1 : d) : delete c._target;
                            return g
                        }; d; ) {
                            if (m.contains(d, "gridxCell"))
                                return p(d);
                            d = d.parentNode
                        }
                        var q = l(".gridxRow", b.bodyNode)[0]
                          , y = n.position(q.firstChild);
                        if (y.x + y.w <= f.clientX)
                            g.left = y.x + y.w - e.x - 1 + "px",
                            c._target = h.length;
                        else if (y.x >= f.clientX)
                            g.left = y.x - e.x - 1 + "px",
                            c._target = 0;
                        else if (l(".gridxCell", q).some(function(a) {
                            var b = n.position(a);
                            if (b.x <= f.clientX && b.x + b.w >= f.clientX)
                                return d = a,
                                !0
                        }))
                            return p(d);
                        return g
                    },
                    _onDropInternal: function(f, e) {
                        var d = this;
                        if (0 <= d._target) {
                            if (d.grid.columnLock && d._target < d.grid.columnLock.count)
                                return !1;
                            var c = p.map(d._selectedColIds, function(b) {
                                return d.grid._columnsById[b].index
                            });
                            if (d.grid.columnLock && p.some(c, function(b) {
                                return b < d.grid.columnLock.count
                            }))
                                return console.warn("can not move locked columns"),
                                !1;
                            d.grid.move.column.move(c, d._target)
                        }
                    },
                    _onDropExternal: function() {}
                })
            })
        },
        "gridx/modules/Pagination": function() {
            define(["dojo/_base/declare", "dojo/_base/array", "../core/_Module"], function(q, p, n) {
                return q(n, {
                    name: "pagination",
                    forced: ["view"],
                    rowMixin: {
                        getPage: function() {
                            return this.grid.pagination.pageOfIndex(this.index())
                        },
                        indexInPage: function() {
                            return this.grid.pagination.indexInPage(this.index())
                        }
                    },
                    preload: function() {
                        this.grid.view.paging = !0
                    },
                    load: function() {
                        var m = this
                          , l = function() {
                            m._updateBody(1);
                            m.connect(m.model, "onSizeChange", "_onSizeChange");
                            m.loaded.callback()
                        };
                        m._pageSize = m.arg("initialPageSize") || m._pageSize;
                        m._page = m.arg("initialPage", m._page, function(k) {
                            return 0 <= k
                        });
                        m.model.when({}).then(l, l)
                    },
                    pageSize: function() {
                        var m = this._pageSize;
                        return 0 < m ? m : this.model.size()
                    },
                    isAll: function() {
                        return 0 === this._pageSize
                    },
                    pageCount: function() {
                        return this.isAll() ? 1 : Math.max(Math.ceil(this.model.size() / this.pageSize()), 1)
                    },
                    currentPage: function() {
                        return this._page
                    },
                    firstIndexInPage: function(m) {
                        if (!m && 0 !== m)
                            m = this._page;
                        else if (!(0 <= m))
                            return -1;
                        m *= this.pageSize();
                        return m < this.model.size() ? m : -1
                    },
                    lastIndexInPage: function(m) {
                        m = this.firstIndexInPage(m);
                        if (0 <= m) {
                            m = m + parseInt(this.pageSize(), 10) - 1;
                            var l = this.model.size();
                            return m < l ? m : l - 1
                        }
                        return -1
                    },
                    pageOfIndex: function(m) {
                        return this.isAll() ? 0 : Math.floor(m / this.pageSize())
                    },
                    indexInPage: function(m) {
                        return this.isAll() ? m : m % this.pageSize()
                    },
                    filterIndexesInPage: function(m, l) {
                        var k = this.firstIndexInPage(l)
                          , g = this.lastIndexInPage(l);
                        return 0 > k ? [] : p.filter(m, function(f) {
                            return f >= k && f <= g
                        })
                    },
                    gotoPage: function(m) {
                        var l = this._page;
                        m != l && 0 <= this.firstIndexInPage(m) && (this._page = m,
                        this._updateBody(),
                        this.onSwitchPage(m, l))
                    },
                    setPageSize: function(m) {
                        var l = this._pageSize;
                        if (m != l && 0 <= m) {
                            var k = this.firstIndexInPage()
                              , g = -1;
                            this._pageSize = m;
                            this._page >= this.pageCount() && (g = this._page,
                            this._page = this.pageOfIndex(k));
                            this._updateBody();
                            this.onChangePageSize(m, l);
                            if (0 <= g)
                                this.onSwitchPage(this._page, g)
                        }
                    },
                    onSwitchPage: function() {},
                    onChangePageSize: function() {},
                    _page: 0,
                    _pageSize: 10,
                    _updateBody: function(m) {
                        var l = this.model.size()
                          , k = this.pageSize()
                          , g = this.firstIndexInPage();
                        0 === l || 0 > g ? k = g = 0 : l - g < k && (k = l - g);
                        this.grid.view.updateRootRange(g, k, 1);
                        m || this.grid.body.lazyRefresh()
                    },
                    _onSizeChange: function(m) {
                        0 === m ? (this._page = 0,
                        this.grid.view.updateRootRange(0, 0)) : (0 > this.firstIndexInPage() && 0 !== this._page && (m = this._page,
                        this._page = 0,
                        this.onSwitchPage(0, m)),
                        this._updateBody())
                    }
                })
            })
        },
        "gridx/modules/pagination/PaginationBar": function() {
            define("dojo/_base/declare dojo/dom-class ./_PaginationBarBase ../../support/LinkPager ../../support/LinkSizer ../../support/GotoPageButton".split(" "), function(q, p, n, m, l, k) {
                return q(n, {
                    visibleSteppers: 3,
                    sizeSeparator: "|",
                    gotoButton: !0,
                    _init: function(g) {
                        var f = k.prototype;
                        this._add(m, 1, g, "stepper", {
                            className: "gridxPagerStepperTD",
                            visibleSteppers: this.arg("visibleSteppers")
                        });
                        this._add(l, 2, g, "sizeSwitch", {
                            className: "gridxPagerSizeSwitchTD",
                            sizes: this.arg("sizes"),
                            sizeSeparator: this.arg("sizeSeparator")
                        });
                        this._add(k, 3, g, "gotoButton", {
                            className: "gridxPagerGoto",
                            dialogClass: this.arg("dialogClass") || f.dialogClass,
                            dialogProps: this.arg("dialogProps") || f.dialogProps,
                            buttonClass: this.arg("buttonClass") || f.buttonClass,
                            numberTextBoxClass: this.arg("numberTextBoxClass") || f.numberTextBoxClass
                        })
                    },
                    _refresh: function(g, f) {
                        p.toggle(g[1].domNode, "dijitHidden", !this._exist(f, "stepper"));
                        p.toggle(g[2].domNode, "dijitHidden", !this._exist(f, "sizeSwitch"));
                        p.toggle(g[3].domNode.parentNode, "dijitHidden", !this._exist(f, "gotoButton"));
                        g[1].visibleSteppers = this.arg("visibleSteppers");
                        g[2].sizes = this.arg("sizes");
                        g[2].sizeSeparator = this.arg("sizeSeparator")
                    }
                })
            })
        },
        "gridx/modules/pagination/_PaginationBarBase": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/dom-class ../../core/_Module ../../support/Summary ../Bar".split(" "), function(q, p, n, m, l) {
                return q(m, {
                    name: "paginationBar",
                    required: ["bar", "pagination"],
                    sizes: [10, 25, 50, 0],
                    position: "bottom",
                    description: !0,
                    stepper: !0,
                    sizeSwitch: !0,
                    showRange: !1,
                    showTotal: !0,
                    preload: function() {
                        for (var k = 0, g = ["top", "bottom"]; k < g.length; ++k) {
                            var f = g[k];
                            this._exist(f) && (this._add(l, 0, f, "description", {
                                className: "gridxPagerDescriptionTD",
                                message: this.arg("message")
                            }),
                            this._init(f))
                        }
                    },
                    refresh: function() {
                        var k = this
                          , g = k.grid.bar
                          , f = function(e, d) {
                            if (e) {
                                e = e[0];
                                n.toggle(e[0].domNode, "dijitHidden", !k._exist(d, "description"));
                                k._refresh(e, d);
                                for (var c = 0; c < e.length; ++c)
                                    e[c].refresh()
                            }
                        };
                        f(g.plugins.pagingtop, "top");
                        f(g.plugins.pagingbottom, "bottom")
                    },
                    _add: function(k, g, f, e, d) {
                        this.grid.bar.defs.push(p.mixin({
                            bar: "paging" + f,
                            priority: "top" == f ? -1 : 2,
                            container: "top" == f ? "headerNode" : "footerNode",
                            barClass: "gridxPaginationBar",
                            row: 0,
                            col: g,
                            "class": this._exist(f, e) ? "" : "dijitHidden",
                            pluginClass: k,
                            showRange: this.arg("showRange")
                        }, d))
                    },
                    _exist: function(k, g) {
                        var f = this.arg(g || "position");
                        return (f = f && String(f).toLowerCase()) && ("top" != f && "bottom" != f || f == k)
                    }
                })
            })
        },
        "gridx/support/Summary": function() {
            define(["dojo/_base/declare", "dojo/string", "dijit/_WidgetBase", "dijit/_TemplatedMixin"], function(q, p, n, m) {
                return q([n, m], {
                    templateString: '\x3cdiv class\x3d"gridxSummary"\x3e\x3c/div\x3e',
                    grid: null,
                    postCreate: function() {
                        var l = this.grid.model;
                        this.domNode.setAttribute("tabIndex", this.grid.domNode.getAttribute("tabIndex"));
                        this.connect(l, "onSizeChange", "refresh");
                        this.connect(l, "onMarkChange", "refresh");
                        this.grid.pagination && (this.connect(this.grid.pagination, "onSwitchPage", "refresh"),
                        this.connect(this.grid.pagination, "onChangePageSize", "refresh"));
                        this.refresh()
                    },
                    refresh: function() {
                        var l = this
                          , k = this.grid
                          , g = k.select && k.select.row
                          , f = k.pagination
                          , e = function() {
                            var d = k.model.size()
                              , c = g ? g.getSelected().length : 0
                              , b = l.message
                              , a = 0
                              , h = 0
                              , a = 0;
                            k.sizeHandler && "function" === typeof k.sizeHandler && (d = k.sizeHandler(k));
                            d = k.tree ? k.model._sizeAll() : d;
                            f && (a = f.currentPage(),
                            h = f.firstIndexInPage(a) + 1,
                            a = f.lastIndexInPage(a) + 1);
                            k.getSummaryMessage && (b = k.getSummaryMessage());
                            b || (b = [],
                            f && !0 === l.showRange && b.push(p.substitute(k.nls.summaryRange, [h, a])),
                            b.push(p.substitute(k.nls.summaryTotal, [0 <= d ? d : 0])),
                            g && b.push(p.substitute(k.nls.summarySelected, [c])),
                            b = b.join(" "));
                            d = p.substitute(b, [0 <= d ? d : 0, c, h, a]);
                            l.domNode.innerHTML = d
                        };
                        k.model.when({}).then(e, e)
                    }
                })
            })
        },
        "gridx/modules/Bar": function() {
            define("require dojo/_base/declare dojo/_base/lang dojo/_base/array dijit/registry dijit/a11y dojo/dom-construct ../core/_Module".split(" "), function(q, p, n, m, l, k, g, f) {
                return f.register(p(f, {
                    name: "bar",
                    constructor: function() {
                        this.defs = []
                    },
                    load: function(e, d) {
                        var c = this;
                        c._init();
                        c.loaded.callback();
                        d.then(function() {
                            c._forEachPlugin(function(b) {
                                b && b.startup && b.startup()
                            });
                            setTimeout(function() {
                                c.grid.vLayout.reLayout()
                            }, 10)
                        })
                    },
                    destroy: function() {
                        this.inherited(arguments);
                        this._forEachPlugin(function(e) {
                            e.destroy && e.destroy()
                        })
                    },
                    _init: function() {
                        var e, d = this._defDict = {}, c = function(a) {
                            a.sort(function(a, b) {
                                return a.col - b.col
                            })
                        }, b = function(a) {
                            n.isArray(a) && a.length && !n.isArray(a[0]) && (a = [a]);
                            return a
                        }, a = b(this.arg("top")), b = b(this.arg("bottom"));
                        m.forEach(this.defs, function(a) {
                            var b = d[a.bar] = d[a.bar] || [];
                            (b[a.row] = b[a.row] || []).push(a);
                            b.priority = "priority"in a ? a.priority : b.priority || -5;
                            b.container = a.container ? a.container : b.container || "headerNode";
                            b.barClass = a.barClass ? a.barClass : b.barClass || ""
                        });
                        for (e in d)
                            m.forEach(d[e], c);
                        a && (d.top = a.concat(d.top || []));
                        d.top && (d.top.priority = -5,
                        d.top.container = "headerNode");
                        b && (d.bottom = (d.bottom || []).concat(b));
                        d.bottom && (d.bottom.priority = 5,
                        d.bottom.container = "footerNode");
                        for (e in d)
                            c = d[e],
                            a = e + "Node",
                            b = this[a] = g.create("div", {
                                "class": "gridxBar " + c.barClass || "",
                                innerHTML: '\x3ctable border\x3d"0" cellspacing\x3d"0" role\x3d"presentation"\x3e\x3c/table\x3e'
                            }),
                            this.grid.vLayout.register(this, a, c.container, c.priority),
                            this._initFocus(e, c.priority),
                            this.plugins = this.plugins || {},
                            this.plugins[e] = this._parse(c, b.firstChild)
                    },
                    _parse: function(e, d) {
                        for (var c, b = [], a = g.create("tbody"), h = function(a, b, c, d) {
                            b[d] && (a.setAttribute(c || d, b[d]),
                            delete b[d])
                        }, f = 0, k = e.length; f < k; ++f) {
                            for (var p = [], q = e[f], y = g.create("tr"), z = 0, w = q.length; z < w; ++z) {
                                var v = this._normalizePlugin(q[z])
                                  , A = g.create("td");
                                m.forEach(["colSpan", "rowSpan", "style"], n.partial(h, A, v, 0));
                                h(A, v, "class", "className");
                                c = null;
                                try {
                                    if (v.plugin)
                                        c = l.byId(v.plugin),
                                        A.appendChild(c.domNode);
                                    else if (v.pluginClass) {
                                        var B = v.pluginClass;
                                        delete v.pluginClass;
                                        c = new B(v);
                                        A.appendChild(c.domNode)
                                    } else
                                        v.content && (A.innerHTML = v.content)
                                } catch (C) {
                                    console.error(C)
                                }
                                v.hookPoint && v.hookName && (v.hookPoint[v.hookName] = c || A);
                                p.push(c || A);
                                y.appendChild(A)
                            }
                            b.push(p);
                            a.appendChild(y)
                        }
                        d.appendChild(a);
                        return b
                    },
                    _normalizePlugin: function(e) {
                        e = e && n.isObject(e) && !n.isFunction(e) ? e.domNode ? {
                            plugin: e
                        } : n.mixin({}, e) : {
                            pluginClass: e
                        };
                        if (n.isString(e.pluginClass))
                            try {
                                e.pluginClass = q(e.pluginClass)
                            } catch (d) {
                                console.error(d)
                            }
                        n.isFunction(e.pluginClass) ? e.grid = this.grid : e.pluginClass = null;
                        return e
                    },
                    _forEachPlugin: function(e) {
                        var d = this.plugins, c;
                        for (c in d) {
                            var b = d[c];
                            if (b)
                                for (var a = 0, h = b.length; a < h; ++a)
                                    for (var f = b[a], g = 0, k = f.length; g < k; ++g)
                                        e(f[g])
                        }
                    },
                    _initFocus: function(e, d) {
                        var c = this.grid.focus
                          , b = this[e + "Node"];
                        c && b && c.registerArea({
                            name: e + "bar",
                            priority: d,
                            focusNode: b,
                            doFocus: n.hitch(this, this._doFocus, b),
                            doBlur: n.hitch(this, this._doBlur, b)
                        })
                    },
                    _doFocus: function(e, d, c, b) {
                        if (!b)
                            return this.grid.focus.stopEvent(d),
                            (e = k._getTabNavigable(e)[0 > c ? "last" : "first"]) && e.focus(),
                            !!e
                    },
                    _doBlur: function(e, d, c) {
                        e = k._getTabNavigable(e);
                        var b = e.first
                          , a = e.last;
                        if (!d || 0 < c && !a || 0 > c && !b)
                            return !0;
                        if (!(b = d.target == (0 > c ? e.first : e.last)))
                            if (d = d.target,
                            c = 0 > c ? e.first : e.last,
                            d && c) {
                                for (; d && d != c; )
                                    d = d.parentNode;
                                b = !!d
                            } else
                                b = !1;
                        return b
                    }
                }))
            })
        },
        "gridx/support/LinkPager": function() {
            define("dojo/_base/declare dojo/query dojo/_base/event dojo/string dojo/dom-class dojo/keys ./_LinkPageBase dojo/text!../templates/LinkPager.html".split(" "), function(q, p, n, m, l, k, g, f) {
                var e = l.contains;
                return q(g, {
                    templateString: f,
                    postMixInProperties: function() {
                        var d = this.grid.pagination;
                        this.inherited(arguments);
                        this.connect(d, "onSwitchPage", "refresh");
                        this.connect(d, "onChangePageSize", "refresh");
                        this.connect(this.grid.model, "onSizeChange", "refresh")
                    },
                    startup: function() {
                        this.inherited(arguments);
                        this.refresh()
                    },
                    visibleSteppers: 3,
                    refresh: function() {
                        var d = this
                          , c = d.grid.pagination
                          , b = c.pageCount()
                          , a = c.currentPage()
                          , h = d.visibleSteppers
                          , c = []
                          , e = d._tabIndex
                          , f = !1
                          , g = !1
                          , k = m.substitute
                          , n = function(b) {
                            return ['\x3cspan class\x3d"gridxPagerStepperBtn gridxPagerPage ', a == b ? "gridxPagerStepperBtnActive" : "", '" pageindex\x3d"', b, '" title\x3d"', k(d.pageIndexTitle, [b + 1]), '" aria-label\x3d"', k(d.pageIndexTitle, [b + 1]), '" tabindex\x3d"', e, '"\x3e', k(d.pageIndex, [b + 1]), "\x3c/span\x3e"].join("")
                        };
                        if ("number" != typeof h || 0 >= h)
                            h = 3;
                        if (b) {
                            var p = a - Math.floor((h - 1) / 2)
                              , q = p + h - 1;
                            1 > p ? (p = 1,
                            q = h - 1) : b > h && p >= b - h && (p = b - h);
                            q >= b - 1 && (q = b - 2);
                            c.push(n(0));
                            if (2 < b) {
                                1 < p && c.push('\x3cspan class\x3d"gridxPagerStepperEllipsis"\x3e\x26hellip;\x3c/span\x3e');
                                for (h = p; h <= q; ++h)
                                    c.push(n(h));
                                q < b - 2 && c.push('\x3cspan class\x3d"gridxPagerStepperEllipsis"\x3e\x26hellip;\x3c/span\x3e')
                            }
                            1 < b && c.push(n(b - 1))
                        }
                        d._pageBtnContainer.innerHTML = c.join("");
                        a && a !== b - 1 || (g = !a || 1 >= b,
                        f = a || 1 >= b);
                        l.toggle(d._nextPageBtn, "gridxPagerStepperBtnDisable gridxPagerNextPageDisable", f);
                        l.toggle(d._prevPageBtn, "gridxPagerStepperBtnDisable gridxPagerPrevPageDisable", g);
                        d.grid.vLayout.reLayout();
                        d.focused && d._focusNextBtn()
                    },
                    _onHover: function(d) {
                        this._toggleHover(d, "gridxPagerStepperBtn", "gridxPagerPages", "gridxPagerStepperBtnHover")
                    },
                    _prevPage: function() {
                        this._focusPageIndex = "prev";
                        var d = this.grid.pagination;
                        d.gotoPage(d.currentPage() - 1)
                    },
                    _nextPage: function() {
                        this._focusPageIndex = "next";
                        var d = this.grid.pagination;
                        d.gotoPage(d.currentPage() + 1)
                    },
                    _gotoPage: function(d) {
                        if (d = this._findNodeByEvent(d, "gridxPagerStepperBtn", "gridxPagerPages"))
                            d = this._focusPageIndex = d.getAttribute("pageindex"),
                            this.grid.pagination.gotoPage(parseInt(d, 10))
                    },
                    _onKey: function(d) {
                        var c = this.grid.pagination
                          , b = this.grid.isLeftToRight() ? k.LEFT_ARROW : k.RIGHT_ARROW;
                        if (d.keyCode == k.LEFT_ARROW || d.keyCode == k.RIGHT_ARROW)
                            n.stop(d),
                            this._focusNextBtn(!0, d.keyCode == b);
                        else if (d.keyCode == k.ENTER && e(d.target, "gridxPagerStepperBtn") && !e(d.target, "gridxPagerStepperBtnActive") && !e(d.target, "gridxPagerStepperBtnDisable"))
                            if (n.stop(d),
                            isNaN(parseInt(this._focusPageIndex, 10)))
                                this["_" + this._focusPageIndex + "Page"]();
                            else
                                c.gotoPage(parseInt(this._focusPageIndex, 10))
                    },
                    _focusNextBtn: function(d, c) {
                        var b = this.domNode
                          , a = p('[pageindex\x3d"' + this._focusPageIndex + '"]', b)[0];
                        if (a = this._focus(p(".gridxPagerStepperBtn", b), a, d, c, function(a) {
                            return !e(a, "gridxPagerStepperBtnActive") && !e(a, "gridxPagerStepperBtnDisable")
                        }))
                            this._focusPageIndex = a.getAttribute("pageindex");
                        return a
                    }
                })
            })
        },
        "gridx/support/_LinkPageBase": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/sniff dojo/dom-class dijit/_WidgetBase dijit/_FocusMixin dijit/_TemplatedMixin".split(" "), function(q, p, n, m, l, k, g, f) {
                return q([k, f, g], {
                    constructor: function(e) {
                        p.mixin(this, e.grid.nls);
                        if (m("ie") || m("trident"))
                            e = e.grid.domNode.getAttribute("tabindex"),
                            this._tabIndex = 0 < e ? e : 0
                    },
                    postCreate: function() {
                        var e = this;
                        e.domNode.setAttribute("tabIndex", e.grid.domNode.getAttribute("tabIndex"));
                        e.connect(e, "onFocus", "_onFocus");
                        e.connect(e.domNode, "onkeydown", "_onKey");
                        e.grid.pagination.loaded.then(function() {
                            e.refresh()
                        })
                    },
                    grid: null,
                    _tabIndex: -1,
                    _findNodeByEvent: function(e, d, c) {
                        e = e.target;
                        for (var b = l.contains; !b(e, d); ) {
                            if (b(e, c))
                                return null;
                            e = e.parentNode
                        }
                        return e
                    },
                    _toggleHover: function(e, d, c, b) {
                        (d = this._findNodeByEvent(e, d, c)) && l.toggle(d, b, "mouseover" == e.type)
                    },
                    _focus: function(e, d, c, b, a) {
                        var h = b ? -1 : 1;
                        d = d ? n.indexOf(e, d) + (c ? h : 0) : b ? e.length - 1 : 0;
                        c = function(b, c) {
                            for (; e[b] && !a(e[b]); )
                                b += c;
                            return e[b]
                        }
                        ;
                        (d = c(d, h) || c(d - h, -h)) && d.focus();
                        return d
                    },
                    _onFocus: function() {
                        this._focusNextBtn()
                    }
                })
            })
        },
        "gridx/support/LinkSizer": function() {
            define("dojo/_base/declare dojo/query dojo/_base/event dojo/string dojo/dom-class dojo/keys ./_LinkPageBase".split(" "), function(q, p, n, m, l, k, g) {
                var f = l.contains;
                return q(g, {
                    templateString: '\x3cdiv class\x3d"gridxLinkSizer" role\x3d"toolbar" aria-label\x3d"switch page size" data-dojo-attach-event\x3d"onclick: _changePageSize, onmouseover: _onHover, onmouseout: _onHover"\x3e\x3c/div\x3e',
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.connect(this.grid.pagination, "onChangePageSize", "_onChange")
                    },
                    startup: function() {
                        this.inherited(arguments);
                        this._onChange(this.grid.pagination.pageSize())
                    },
                    sizeSeparator: "|",
                    sizes: [10, 25, 50, 100, 0],
                    refresh: function() {
                        for (var e = [], d = this._tabIndex, c = this.sizeSeparator, b = this.grid.pagination.pageSize(), a = m.substitute, h = 0, f = this.sizes.length; h < f; ++h) {
                            var g = this.sizes[h]
                              , k = !1;
                            0 < g || (g = 0,
                            k = !0);
                            e.push('\x3cspan class\x3d"gridxPagerSizeSwitchBtn ', b === g ? "gridxPagerSizeSwitchBtnActive" : "", '" pagesize\x3d"', g, '" title\x3d"', k ? this.pageSizeAllTitle : a(this.pageSizeTitle, [g]), '" aria-label\x3d"', k ? this.pageSizeTitle : a(this.pageSizeTitle, [g]), '" tabindex\x3d"', d, '"\x3e', k ? this.pageSizeAll : a(this.pageSize, [g]), "\x3c/span\x3e", '\x3cspan class\x3d"gridxPagerSizeSwitchSeparator"\x3e' + c + "\x3c/span\x3e")
                        }
                        e.pop();
                        this.domNode.innerHTML = e.join("");
                        this.grid.vLayout.reLayout()
                    },
                    _onHover: function(e) {
                        this._toggleHover(e, "gridxPagerSizeSwitchBtn", "gridxLinkSizer", "gridxPagerSizeSwitchBtnHover")
                    },
                    _onChange: function(e, d) {
                        var c = this.domNode
                          , b = p('[pagesize\x3d"' + e + '"]', c)[0];
                        b && l.add(b, "gridxPagerSizeSwitchBtnActive");
                        (b = p('[pagesize\x3d"' + d + '"]', c)[0]) && l.remove(b, "gridxPagerSizeSwitchBtnActive")
                    },
                    _changePageSize: function(e) {
                        if (e = this._findNodeByEvent(e, "gridxPagerSizeSwitchBtn", "gridxLinkSizer"))
                            e = this._focusPageSize = e.getAttribute("pagesize"),
                            this.grid.pagination.setPageSize(parseInt(e, 10))
                    },
                    _onKey: function(e) {
                        var d = this.grid.pagination
                          , c = this.grid.isLeftToRight() ? k.LEFT_ARROW : k.RIGHT_ARROW;
                        e.keyCode == k.LEFT_ARROW || e.keyCode == k.RIGHT_ARROW ? (n.stop(e),
                        this._focusNextBtn(!0, e.keyCode == c)) : e.keyCode == k.ENTER && f(e.target, "gridxPagerSizeSwitchBtn") && !f(e.target, "gridxPagerSizeSwitchBtnActive") && (n.stop(e),
                        d.setPageSize(parseInt(this._focusPageSize, 10)))
                    },
                    _focusNextBtn: function(e, d) {
                        var c = this.domNode
                          , b = p('[pagesize\x3d"' + this._focusPageSize + '"]', c)[0];
                        if (b = this._focus(p(".gridxPagerSizeSwitchBtn", c), b, e, d, function(a) {
                            return !f(a, "gridxPagerSizeSwitchBtnActive")
                        }))
                            this._focusPageSize = b.getAttribute("pagesize");
                        return b
                    }
                })
            })
        },
        "gridx/support/GotoPageButton": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/string ./_LinkPageBase ./GotoPagePane dijit/Dialog dijit/form/Button dijit/form/NumberTextBox dojo/keys dojo/_base/event".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                return q(m, {
                    templateString: "\x3cspan class\x3d'gridxPagerGotoBtn' tabindex\x3d'${_tabIndex}' title\x3d'${gotoBtnTitle}' aria-label\x3d'${gotoBtnTitle}' data-dojo-attach-event\x3d'onclick: _showGotoDialog'\x3e\x3cspan class\x3d'gridxPagerA11yInner'\x3e\x26#9650;\x3c/span\x3e\x3c/span\x3e",
                    gotoPagePane: l,
                    dialogClass: k,
                    buttonClass: g,
                    numberTextBoxClass: f,
                    refresh: function() {},
                    _showGotoDialog: function() {
                        if (!this._gotoDialog) {
                            var c = this.dialogClass
                              , b = p.mixin({
                                title: this.gotoDialogTitle,
                                content: new this.gotoPagePane({
                                    pager: this,
                                    pagination: this.grid.pagination
                                })
                            }, this.dialogProps || {})
                              , c = this._gotoDialog = new c(b);
                            c.content.dialog = c
                        }
                        c = this.grid.pagination.pageCount();
                        b = this._gotoDialog.content;
                        b.pageCountMsgNode.innerHTML = n.substitute(this.gotoDialogPageCount, [c]);
                        b.pageInputBox.constraints = {
                            fractional: !1,
                            min: 1,
                            max: c
                        };
                        b.pageInputBox.set("value", b.pagination.currentPage() + 1);
                        this._gotoDialog.show();
                        b.pageInputBox.focusNode.select()
                    },
                    _onKey: function(c) {
                        c.keyCode == e.ENTER && (this._showGotoDialog(),
                        d.stop(c))
                    },
                    _focusNextBtn: function() {},
                    destroy: function() {
                        this._gotoDialog && this._gotoDialog.destroy();
                        this.inherited(arguments)
                    }
                })
            })
        },
        "gridx/support/GotoPagePane": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/event dojo/keys dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin dojo/text!../templates/GotoPagePane.html".split(" "), function(q, p, n, m, l, k, g, f) {
                return q([l, k, g], {
                    templateString: f,
                    pager: null,
                    pagination: null,
                    dialog: null,
                    postMixInProperties: function() {
                        p.mixin(this, this.pagination.grid.nls);
                        this.numberTextBoxClass = this.pager.numberTextBoxClass.prototype.declaredClass;
                        this.buttonClass = this.pager.buttonClass.prototype.declaredClass;
                        this.connect(this.domNode, "onkeydown", "_onKeyDown")
                    },
                    postCreate: function() {
                        this._updateStatus()
                    },
                    _updateStatus: function() {
                        var e = this.pageInputBox;
                        this.okBtn.set("disabled", !e.isValid() || "" === e.get("displayedValue"))
                    },
                    _onOK: function() {
                        this.pagination.gotoPage(this.pageInputBox.get("value") - 1);
                        this.dialog.hide()
                    },
                    _onCancel: function() {
                        this.dialog.hide()
                    },
                    _onKeyDown: function(e) {
                        !this.okBtn.get("disabled") && this.okBtn.get("focused") && m.ENTER == e.keyCode && (this._onOK(),
                        n.stop(e))
                    }
                })
            })
        },
        "gridx/modules/pagination/PaginationBarDD": function() {
            define(["dojo/_base/declare", "dojo/dom-class", "./_PaginationBarBase", "../../support/DropDownPager", "../../support/DropDownSizer"], function(q, p, n, m, l) {
                return q(n, {
                    _init: function(k) {
                        var g = m.prototype
                          , f = l.prototype;
                        this._add(m, 1, k, "stepper", {
                            className: "gridxPagerStepperTD",
                            visibleSteppers: this.arg("visibleSteppers"),
                            stepperClass: this.arg("stepperClass") || g.stepperClass,
                            stepperProps: this.arg("stepperProps") || g.stepperProps
                        });
                        this._add(l, 2, k, "sizeSwitch", {
                            className: "gridxPagerSizeSwitchTD",
                            sizes: this.arg("sizes"),
                            sizeSeparator: this.arg("sizeSeparator"),
                            sizerClass: this.arg("sizerClass") || f.sizerClass,
                            sizerProps: this.arg("sizerProps") || f.sizerProps
                        })
                    },
                    _refresh: function(k, g) {
                        p.toggle(k[1].domNode, "dijitHidden", !this._exist(g, "stepper"));
                        p.toggle(k[2].domNode, "dijitHidden", !this._exist(g, "sizeSwitch"));
                        k[2].sizes = this.arg("sizes")
                    }
                })
            })
        },
        "gridx/support/DropDownPager": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/store/Memory dojo/query dojo/dom-attr dijit/_WidgetBase dijit/_FocusMixin dijit/_TemplatedMixin dijit/form/FilteringSelect".split(" "), function(q, p, n, m, l, k, g, f, e) {
                return q([k, g, f], {
                    templateString: '\x3cdiv class\x3d"gridxDropDownPager"\x3e\x3clabel class\x3d"gridxPagerLabel"\x3e${pageLabel}\x3c/label\x3e\x3c/div\x3e',
                    constructor: function(d) {
                        p.mixin(this, d.grid.nls)
                    },
                    postCreate: function() {
                        var d = this
                          , c = d.grid
                          , b = c.pagination;
                        d.connect(b, "onSwitchPage", "_onSwitchPage");
                        d.connect(b, "onChangePageSize", "refresh");
                        d.connect(c.model, "onSizeChange", "refresh");
                        c.pagination.loaded.then(function() {
                            d.refresh();
                            d._onSwitchPage(c.pagination.currentPage())
                        })
                    },
                    grid: null,
                    stepperClass: e,
                    stepperProps: null,
                    refresh: function() {
                        var d = [], c, b = this.grid.pagination, a = b.pageCount(), h = b.currentPage(), e = this._pageStepperSelect, f, g;
                        for (f = 0; f < a; ++f)
                            g = f + 1,
                            g = {
                                id: g,
                                label: g,
                                value: g
                            },
                            d.push(g),
                            h == f && (c = g);
                        d = new n({
                            data: d
                        });
                        e ? (e.set("store", d),
                        e.set("value", h + 1)) : (h = this.stepperClass,
                        c = p.mixin({
                            store: d,
                            searchAttr: "label",
                            item: c,
                            "class": "gridxPagerStepperWidget",
                            onChange: function(a) {
                                b.gotoPage(a - 1)
                            }
                        }, this.stepperProps || {}),
                        e = this._pageStepperSelect = new h(c),
                        e.placeAt(this.domNode, "last"),
                        e.startup(),
                        l.set(m(".gridxPagerLabel", this.domNode)[0], "for", e.id));
                        e.set("disabled", 1 >= a)
                    },
                    _onSwitchPage: function(d) {
                        this._pageStepperSelect.set("value", d + 1)
                    }
                })
            })
        },
        "gridx/support/DropDownSizer": function() {
            define("dojo/_base/declare dojo/_base/lang dijit/_WidgetBase dijit/_FocusMixin dijit/_TemplatedMixin dijit/form/Select".split(" "), function(q, p, n, m, l, k) {
                return q([n, m, l], {
                    templateString: '\x3cdiv class\x3d"gridxDropDownSizer"\x3e\x3clabel class\x3d"gridxPagerLabel"\x3e${pageSizeLabel}\x3c/label\x3e\x3c/div\x3e',
                    constructor: function(g) {
                        p.mixin(this, g.grid.nls)
                    },
                    postCreate: function() {
                        var g = this;
                        g.connect(g.grid.pagination, "onChangePageSize", "_onChange");
                        g.grid.pagination.loaded.then(function() {
                            g.refresh()
                        })
                    },
                    startup: function() {
                        this.inherited(arguments);
                        this._onChange(this.grid.pagination.pageSize())
                    },
                    grid: null,
                    sizes: [10, 25, 50, 100, 0],
                    sizerClass: k,
                    sizerProps: null,
                    refresh: function() {
                        for (var g = [], f = this.grid.pagination, e = f.pageSize(), d = this._sizeSwitchSelect, c = this.sizes, b = 0, a = c.length; b < a; ++b) {
                            var h = c[b]
                              , k = !(0 < h);
                            g.push({
                                label: String(k ? this.pageSizeAll : h),
                                value: String(k ? -1 : h),
                                selected: e == h || k && f.isAll()
                            })
                        }
                        d ? (d.removeOption(d.getOptions()),
                        d.addOption(g)) : (e = this.sizerClass,
                        g = p.mixin({
                            options: g,
                            "class": "gridxPagerSizeSwitchWidget",
                            "aria-label": "switch page size",
                            onChange: function(a) {
                                a = parseInt(a, 10);
                                f.setPageSize(0 > a ? 0 : a)
                            }
                        }, this.sizerProps || {}),
                        d = this._sizeSwitchSelect = new e(g),
                        d.placeAt(this.domNode, "last"),
                        d.startup())
                    },
                    _onChange: function(g) {
                        var f = this._sizeSwitchSelect;
                        this.grid.pagination.isAll() && (g = -1);
                        f && f.get("value") != g && f.set("value", g)
                    }
                })
            })
        },
        "gridx/modules/Filter": function() {
            define("../core/_Module ../core/model/extensions/ClientFilter ../core/model/extensions/Query dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/_base/Deferred".split(" "), function(q, p, n, m, l, k, g) {
                function f(c, b, a, d) {
                    k.isFunction(a) && (c = a(c));
                    switch (b) {
                    case "number":
                        return parseFloat(c, 10);
                    case "boolean":
                        return !!c;
                    case "date":
                        return c = new Date(c),
                        c.setHours(0),
                        c.setMinutes(0),
                        c.setSeconds(0),
                        c.setMilliseconds(0),
                        c.getTime();
                    case "datetime":
                        return c = new Date(c),
                        c.getTime();
                    case "time":
                        return c = new Date(c),
                        isNaN(c.getTime()) ? null : (c.setDate(1),
                        c.setMonth(0),
                        c.setFullYear(2E3),
                        c.getTime());
                    default:
                        return c = c ? d ? c + "" : (c + "").toLowerCase() : ""
                    }
                }
                function e(c, b, a, d) {
                    k.isArray(a) && (a = l.map(a, function(a) {
                        return a.expr
                    }));
                    return k.mixin(c, {
                        expr: k.mixin({
                            op: b,
                            data: a
                        }, d || {})
                    })
                }
                function d(c, b, a, d, e) {
                    b = String(b.apply(0, c));
                    c = String(a.apply(0, c));
                    d || (b = b.toLowerCase(),
                    c = c.toLowerCase());
                    return e(b, c)
                }
                q = m(q, {
                    name: "filter",
                    modelExtensions: [p, n],
                    constructor: function() {
                        this.setFilter(this.arg("preCondition"), 1);
                        this.aspect(this.grid.model, "setStore", function() {
                            this._checker = null
                        })
                    },
                    serverMode: !1,
                    caseSensitive: !1,
                    setupQuery: function(c) {
                        return c
                    },
                    setFilter: function(c, b) {
                        var a = this;
                        c != this._checker && (this._checker = c,
                        this.refresh(b).then(function() {
                            a.onFilter()
                        }))
                    },
                    clearFilter: function(c) {
                        var b = this;
                        this._checker = null;
                        this.refresh(c).then(function() {
                            b.onClearFilter()
                        })
                    },
                    getFilter: function() {
                        return this._checker
                    },
                    refresh: function(c) {
                        var b = this.grid
                          , a = this.model
                          , d = new g
                          , e = this._checker;
                        if (this.arg("serverMode")) {
                            var f = this.arg("setupFilterQuery") || this.arg("setupQuery");
                            a.query(f.call(this, e && e.expr))
                        } else
                            b.tree && b.tree.loadChildRecursive ? b.tree.loadChildRecursive("").then(function() {
                                a.filter(e)
                            }) : a.filter(e);
                        g.when(!c && b.body.refresh(), function() {
                            d.callback()
                        }, function(a) {
                            d.errback(a)
                        });
                        return d
                    },
                    onFilter: function() {},
                    onClearFilter: function() {}
                });
                return k.mixin(q, {
                    column: function(c, b, a, d, g) {
                        b = String(b || "string").toLowerCase();
                        return e(function(h) {
                            "undefined" === typeof h.data && (h.data = h._data());
                            return f(h[d ? "rawData" : "data"][c], b, a, g)
                        }, b, c, {
                            isCol: !0
                        })
                    },
                    value: function(c, b, a, d) {
                        b = String(b || typeof c).toLowerCase();
                        c = f(c, b, a, d);
                        return e(function() {
                            return c
                        }, b, c)
                    },
                    isEmpty: function(c, b) {
                        return e(function() {
                            var a = c.apply(0, arguments);
                            return b ? 0 <= l.indexOf(b, a) : "" === a || null === a || void 0 === a
                        }, "isEmpty", [c])
                    },
                    isNotEmpty: function(c, b) {
                        return e(function() {
                            var a = c.apply(0, arguments);
                            return b ? 0 <= l.indexOf(b, a) : "" !== a && null !== a && void 0 !== a
                        }, "isNotEmpty", [c])
                    },
                    and: function() {
                        var c = l.filter(arguments, function(b) {
                            return k.isFunction(b)
                        });
                        return e(function() {
                            var b = arguments;
                            return l.every(c, function(a) {
                                return a.apply(0, b)
                            })
                        }, "and", c)
                    },
                    or: function() {
                        var c = l.filter(arguments, function(b) {
                            return k.isFunction(b)
                        });
                        return e(function() {
                            var b = arguments;
                            return l.some(c, function(a) {
                                return a.apply(0, b)
                            })
                        }, "or", c)
                    },
                    not: function(c) {
                        return e(function() {
                            return !c.apply(0, arguments)
                        }, "not", [c])
                    },
                    equal: function(c, b) {
                        return e(function() {
                            return c.apply(0, arguments) === b.apply(0, arguments)
                        }, "equal", [c, b])
                    },
                    greater: function(c, b) {
                        return e(function() {
                            return c.apply(0, arguments) > b.apply(0, arguments)
                        }, "greater", [c, b])
                    },
                    less: function(c, b) {
                        return e(function() {
                            return c.apply(0, arguments) < b.apply(0, arguments)
                        }, "less", [c, b])
                    },
                    greaterEqual: function(c, b) {
                        return e(function() {
                            var a = c.apply(0, arguments)
                              , d = b.apply(0, arguments);
                            return void 0 !== a && null !== a && void 0 !== d && null !== d && a >= d
                        }, "greaterEqual", [c, b])
                    },
                    lessEqual: function(c, b) {
                        return e(function() {
                            var a = c.apply(0, arguments)
                              , d = b.apply(0, arguments);
                            return void 0 !== a && null !== a && void 0 !== d && null !== d && a <= d
                        }, "lessEqual", [c, b])
                    },
                    match: function(c, b) {
                        return e(function() {
                            return 0 <= String(c.apply(0, arguments)).search(b)
                        }, "match", [c, {
                            expr: {
                                op: "regex",
                                data: b
                            }
                        }])
                    },
                    contain: function(c, b, a) {
                        return e(function() {
                            return d(arguments, c, b, a, function(a, b) {
                                return 0 <= a.indexOf(b)
                            })
                        }, "contain", [c, b])
                    },
                    startWith: function(c, b, a) {
                        return e(function() {
                            return d(arguments, c, b, a, function(a, b) {
                                return a.substring(0, b.length) === b
                            })
                        }, "startWith", [c, b])
                    },
                    endWith: function(c, b, a) {
                        return e(function() {
                            return d(arguments, c, b, a, function(a, b) {
                                return a.substring(a.length - b.length) === b
                            })
                        }, "endWith", [c, b])
                    }
                })
            })
        },
        "gridx/core/model/extensions/ClientFilter": function() {
            define(["dojo/_base/declare", "dojo/_base/array", "dojo/_base/lang", "dojo/_base/Deferred", "../_Extension"], function(q, p, n, m, l) {
                var k = n.hitch
                  , g = p.forEach
                  , f = p.indexOf;
                return q(l, {
                    name: "clientFilter",
                    priority: 20,
                    constructor: function(e, d) {
                        this.pageSize = d.pageSize || 100;
                        this._mixinAPI("filter", "hasFilter");
                        e.onFilterProgress = function() {}
                        ;
                        this.aspect(e, "_msg", "_receiveMsg");
                        this.aspect(e, "setStore", "clear")
                    },
                    _valid: !1,
                    clear: function() {
                        this._ids = 0;
                        this._indexes = {};
                        this._struct = {};
                        this._struct[""] = [void 0];
                        this._valid = !1
                    },
                    filter: function(e) {
                        this.model._addCmd({
                            name: "_cmdFilter",
                            scope: this,
                            args: arguments,
                            async: 1
                        })
                    },
                    hasFilter: function() {
                        return !!this._ids
                    },
                    hasChildren: function(e) {
                        var d = this.inner;
                        return this._ids ? d._call("hasChildren", arguments) && this._struct[e] && 1 < this._struct[e].length : d._call("hasChildren", arguments)
                    },
                    children: function(e) {
                        var d = this.inner;
                        return this._ids ? (d = this._struct[e],
                        d instanceof Array ? d.slice(1) : []) : d._call("children", arguments)
                    },
                    byIndex: function(e, d) {
                        var c = this._ids
                          , b = this.inner
                          , a = c && this._struct[d ? d : ""][e + 1];
                        return !this.model.isId(d) && c ? this.model.isId(a) && b._call("byId", [a]) : b._call("byIndex", arguments)
                    },
                    byId: function(e) {
                        return this.ids && void 0 === this._indexes[e] ? null : this.inner._call("byId", arguments)
                    },
                    indexToId: function(e, d) {
                        return this._ids ? this._struct[this.model.isId(d) ? d : ""][e + 1] : this.inner._call("indexToId", arguments)
                    },
                    idToIndex: function(e) {
                        if (!this._ids)
                            return this.inner._call("idToIndex", arguments);
                        var d = f(this._struct[this._struct[e] && this._struct[e][0]] || [], e);
                        return 0 < d ? d - 1 : -1
                    },
                    size: function(e) {
                        var d;
                        return this._ids ? (d = this._struct[this.model.isId(e) ? e : ""]) ? d.length - 1 : -1 : this.inner._call("size", arguments)
                    },
                    when: function(e, d) {
                        var c = this
                          , b = function() {
                            c._ids && c._mapWhenArgs(e);
                            return c.inner._call("when", [e, d])
                        };
                        if (c._refilter && (c._refilter = 0,
                        c._ids)) {
                            var a = new m;
                            c._reFilter().then(function() {
                                b().then(k(a, a.callback), k(a, a.errback))
                            });
                            return a
                        }
                        return b()
                    },
                    _cmdFilter: function() {
                        var e = arguments;
                        return this._filter.apply(this, e[e.length - 1])
                    },
                    _filter: function(e) {
                        var d = this;
                        d.size();
                        var c = d.model;
                        d.clear();
                        if (n.isFunction(e)) {
                            var b = []
                              , a = function(h, f, g) {
                                if (!h.length)
                                    return !1;
                                var k, r;
                                h = f + h.length;
                                for (g = void 0 !== g ? g : ""; f < h; ++f)
                                    if (k = d.indexToId(f, g),
                                    r = d.byIndex(f, g))
                                        e(r, k) ? (b.push(k),
                                        d._add(k),
                                        d._indexes[k] = f) : d._valid = !0,
                                        k = c.children(k),
                                        k.length && (r = c.parentId(k[0]),
                                        a(k, 0, r));
                                    else
                                        break
                            };
                            return d.model.scan({
                                start: 0,
                                pageSize: d.pageSize,
                                whenScope: d,
                                whenFunc: d.when
                            }, a).then(function() {
                                b.length != d.size() || d._valid ? (d._ids = b,
                                d.model._msg("filter", b)) : d.clear()
                            }, 0, d.model.onFilterProgress)
                        }
                        var h = new m;
                        h.callback();
                        d.model._msg("clearFilter", b);
                        return h
                    },
                    _add: function(e) {
                        if (void 0 !== e && null !== e) {
                            var d = this.model
                              , c = this.model.treePath(e)
                              , b = c.length
                              , a = this.model.parentId(e);
                            this._struct[e] || (this._struct[e] = [a]);
                            void 0 !== a && null !== a && (this._struct.hasOwnProperty(a) || (this._struct[a] = [d.parentId(a)]),
                            0 > f(this._struct[a], e) && this._struct[a].push(e));
                            for (e = b - 1; 0 <= e; e--)
                                this._add(c[e])
                        }
                    },
                    _mapWhenArgs: function(e) {
                        var d = this
                          , c = []
                          , b = d._ids.length;
                        e.id = p.filter(e.id, function(a) {
                            return void 0 !== d._indexes[a]
                        });
                        g(e.range, function(a) {
                            if (d.model.isId(a.parentId))
                                c.push(a);
                            else {
                                if (!a.count || 0 > a.count) {
                                    var h = b - a.start;
                                    if (0 >= h)
                                        return;
                                    a.count = h
                                }
                                for (h = 0; h < a.count; ++h) {
                                    var e = d._mapIndex(h + a.start);
                                    void 0 !== e && c.push({
                                        start: e,
                                        count: 1
                                    })
                                }
                            }
                        });
                        e.range = c
                    },
                    _mapMoveArgs: function(e) {
                        var d = this;
                        if (3 == e.length) {
                            for (var c = [], b = e[0], a = e[0] + e[1]; b < a; ++b)
                                c.push(d._mapIndex(b));
                            e[0] = c;
                            e[1] = d._mapIndex(e[2]);
                            e.pop()
                        } else
                            e[0] = p.map(e[0], function(a) {
                                return d._mapIndex(a)
                            }),
                            e[1] = d._mapIndex(e[1])
                    },
                    _mapIndex: function(e) {
                        return this._indexes[this._ids[e]]
                    },
                    _moveFiltered: function(e, d, c) {
                        var b = this._ids.length;
                        if (0 <= e && e < b && 0 < d && Infinity > d && 0 <= c && c < b && (c < e || c > e + d)) {
                            var a = []
                              , b = e;
                            for (e += d; b < e; ++b)
                                a.push(this._mapIndex(b));
                            this.inner._call("moveIndexes", [a, this._mapIndex(c)])
                        }
                    },
                    _reFilter: function() {
                        var e = this;
                        return e.inner._call("when", [{
                            id: e._ids,
                            range: []
                        }, function() {
                            g(e._ids, function(d) {
                                var c = e.inner._call("idToIndex", [d]);
                                e._indexes[d] = c
                            });
                            e._ids.sort(function(d, c) {
                                return e._indexes[d] - e._indexes[c]
                            });
                            e.syncOrder()
                        }
                        ])
                    },
                    syncOrder: function() {
                        var e = this.model._cache._struct, d;
                        for (d in this._struct) {
                            var c = this._struct[d];
                            2 < c.length && ("" === d && c.shift(),
                            this._syncOrder(c, e[d]),
                            "" === d && c.unshift(void 0))
                        }
                    },
                    _syncOrder: function(e, d) {
                        var c = {};
                        e.forEach(function(b) {
                            c[b] = f(d, b)
                        });
                        e.sort(function(b, a) {
                            return c[b] - c[a]
                        })
                    },
                    _onMoved: function(e) {
                        var d = this;
                        g(d._ids, function(c) {
                            var b = d._indexes[c];
                            void 0 !== e[b] && (d._indexes[c] = e[b])
                        });
                        d._ids.sort(function(c, b) {
                            return d._indexes[c] - d._indexes[b]
                        })
                    },
                    _receiveMsg: function(e, d) {
                        this._ids && ("storeChange" == e ? this._refilter = 1 : "moved" == e ? this._onMoved(d) : "beforeMove" == e && this._mapMoveArgs(d))
                    },
                    _onNew: function(e) {
                        this._ids && (this._ids.push(e),
                        this._refilter = 1);
                        this.onNew.apply(this, arguments)
                    },
                    _onDelete: function(e, d, c) {
                        var b = this._indexes
                          , a = this._ids;
                        if (a) {
                            var h = f(a, e)
                              , g = b[e];
                            0 <= h && a.splice(h, 1);
                            if (0 <= h && void 0 !== g)
                                for (h in d = h,
                                b)
                                    b[h] > g && --b[h];
                            else
                                d = void 0,
                                this._refilter = 1
                        }
                        this.onDelete(e, d, c)
                    }
                })
            })
        },
        "gridx/modules/filter/FilterBar": function() {
            define("dojo/_base/kernel dojo/_base/declare dijit/registry dojo/_base/lang dojo/_base/array dojo/_base/event dojo/dom-construct dojo/dom-attr dojo/dom-class dojo/string dojo/parser dojo/query dojo/keys dojo/on dojox/html/entities dijit/_BidiSupport ../../core/_Module dojo/text!../../templates/FilterBar.html ../Filter ./FilterDialog ./FilterConfirmDialog ./FilterTooltip dijit/TooltipDialog dijit/popup dijit/form/Button".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v) {
                return p(u, {
                    name: "filterBar",
                    forced: ["filter"],
                    preload: function() {
                        var a = this, b = a.grid, c;
                        y.before = y.lessEqual;
                        y.after = y.greaterEqual;
                        this.arg("experimental") && (this.conditions = m.mixin({}, this.conditions),
                        this.conditions.number = "equal greater less greaterEqual lessEqual notEqual range isEmpty".split(" "));
                        b.persist && (c = b.persist.registerAndLoad("filterBar", function() {
                            return a.filterData
                        }));
                        c ? a.filterData = c : (c = a.arg("filterData"),
                        a._preFilterData = c);
                        c && b.filter.setFilter(a._createFilterExpr(c), 1)
                    },
                    closeButton: !0,
                    defineFilterButton: !0,
                    tooltipDelay: 300,
                    maxRuleCount: 0,
                    ruleCountToConfirmClearFilter: 2,
                    experimental: !1,
                    conditions: {
                        string: "contain equal startWith endWith notEqual notContain notStartWith notEndWith isEmpty".split(" "),
                        number: "equal greater less greaterEqual lessEqual notEqual isEmpty".split(" "),
                        date: "equal before after range isEmpty past".split(" "),
                        datetime: "equal before after range isEmpty past".split(" "),
                        time: "equal before after range isEmpty past".split(" "),
                        "enum": ["equal", "notEqual", "isEmpty"],
                        "boolean": ["equal", "isEmpty"]
                    },
                    load: function(a, b) {
                        this._nls = this.grid.nls;
                        this.domNode = g.create("div", {
                            innerHTML: d.substitute(x, this._nls),
                            "class": "gridxFilterBar"
                        });
                        c.parse(this.domNode);
                        e.toggle(this.domNode, "gridxFilterBarHideCloseBtn", !this.arg("closeButton"));
                        this.grid.vLayout.register(this, "domNode", "headerNode", -.5);
                        this._initWidgets();
                        this._initFocus();
                        this.refresh();
                        this.connect(this.domNode, "onclick", "onDomClick");
                        this.connect(this.domNode, "onmouseover", "onDomMouseOver");
                        this.connect(this.domNode, "onmousemove", "onDomMouseMove");
                        this.connect(this.domNode, "onmouseout", "onDomMouseOut");
                        this.aspect(this.grid.model, "setStore", function() {
                            this.filterData = null;
                            this._buildFilterState()
                        });
                        this.loaded.callback()
                    },
                    onDomClick: function(a) {
                        a.target && a.target.tagName && ("clear" === f.get(a.target, "action") ? this.clearFilter() : e.contains(a.target, "gridxFilterBarCloseBtn") || e.contains(a.target, "gridxFilterBarCloseBtnText") ? this.hide() : this.showFilterDialog())
                    },
                    onDomMouseMove: function(a) {
                        a && a.target && ("clear" === f.get(a.target, "action") || this.btnFilter === dijit.getEnclosingWidget(a.target)) || this._showTooltip(a)
                    },
                    onDomMouseOver: function(a) {},
                    onDomMouseOut: function(a) {
                        window.setTimeout(m.hitch(this, "_hideTooltip"), 10)
                    },
                    _createFilterExpr: function(a) {
                        var b = [];
                        l.forEach(a.conditions, function(a) {
                            var c = "string";
                            if (a.colId)
                                c = this.grid.column(a.colId).dataType(),
                                b.push(this._getFilterExpression(a.condition, a, c, a.colId));
                            else {
                                var d = [];
                                l.forEach(this.grid.columns(), function(b) {
                                    b.isFilterable() && d.push(this._getFilterExpression(a.condition, a, c, b.id))
                                }, this);
                                b.push(y.or.apply(y, d))
                            }
                        }, this);
                        return ("all" === a.type ? y.and : y.or).apply(y, b)
                    },
                    applyFilter: function(a) {
                        var b = this
                          , c = this._createFilterExpr(a);
                        this.filterData = a;
                        this.grid.filter.setFilter(c);
                        this.model.when({}).then(function() {
                            b._currentSize = b.model.size();
                            b._totalSize = 0 <= b.model._cache.totalSize ? b.model._cache.totalSize : b.model._cache.size();
                            b._buildFilterState()
                        })
                    },
                    confirmToExecute: function(a, b) {
                        var c = this.arg("ruleCountToConfirmClearFilter");
                        this.filterData && (this.filterData.conditions.length >= c || 0 >= c) ? (this._cfmDlg || (this._cfmDlg = new w({
                            grid: this.grid
                        })),
                        this._cfmDlg.execute = m.hitch(b, a),
                        this._cfmDlg.show()) : a.apply(b)
                    },
                    clearFilter: function(a) {
                        a ? (this.filterData = null,
                        this.grid.filter.clearFilter(),
                        this._buildFilterState()) : this.confirmToExecute(m.hitch(this, "clearFilter", !0), this)
                    },
                    columnMixin: {
                        isFilterable: function() {
                            return !1 !== this.grid._columnsById[this.id].filterable
                        },
                        setFilterable: function(a) {
                            this.grid.filterBar._setFilterable(this.id, a);
                            return this
                        },
                        dataType: function() {
                            return (this.grid._columnsById[this.id].dataType || "string").toLowerCase()
                        },
                        filterConditions: function() {
                            return this.grid.filterBar._getColumnConditions(this.id)
                        }
                    },
                    refresh: function() {
                        this.btnClose.style.display = this.closeButton ? "" : "none";
                        this.btnFilter.domNode.style.display = this.arg("defineFilterButton") ? "" : "none";
                        this._currentSize = this.model.size();
                        this._totalSize = 0 <= this.model._cache.totalSize ? this.model._cache.totalSize : this.model._cache.size();
                        this._buildFilterState()
                    },
                    isVisible: function() {
                        return "none" != this.domNode.style.display
                    },
                    show: function() {
                        this.domNode.style.display = "block";
                        this.grid.vLayout.reLayout();
                        this.onShow()
                    },
                    hide: function() {
                        this.domNode.style.display = "none";
                        this.grid.vLayout.reLayout();
                        this._hideTooltip();
                        this.onHide()
                    },
                    onShow: function() {},
                    onHide: function() {},
                    showFilterDialog: function() {
                        var a = this._filterDialog;
                        a || (this._filterDialog = a = new z({
                            grid: this.grid
                        }));
                        a.open || (this.filterData || a.setData(this.filterData),
                        a._matchCase.set("checked", this.grid.filter.caseSensitive),
                        a.show(),
                        this.filterData && a.setData(this.filterData))
                    },
                    uninitialize: function() {
                        this._filterDialog && this._filterDialog.destroyRecursive();
                        this.inherited(arguments);
                        g.destroy(this.domNode)
                    },
                    _getColumnConditions: function(a) {
                        var b;
                        a ? (b = this.grid._columnsById[a].disabledConditions || [],
                        a = (this.grid._columnsById[a].dataType || "string").toLowerCase()) : (b = [],
                        a = "string");
                        a = this.conditions[a];
                        var c = {};
                        a || (a = this.conditions.string);
                        l.forEach(b, function(a) {
                            c[a] = !0
                        });
                        return a = l.filter(a, function(a) {
                            return !c[a]
                        })
                    },
                    _setFilterable: function(a, b) {
                        var c = this.grid._columnsById[a];
                        if (c && c.filterable != !!b && (c.filterable = !!b,
                        this.filterData)) {
                            var c = this.filterData
                              , d = c.conditions.length;
                            c.conditions = l.filter(c.conditions, function(b) {
                                return b.colId != a
                            });
                            d != c.conditions.length && this.applyFilter(c);
                            this._filterDialog.open && this._filterDialog.setData(c)
                        }
                    },
                    _initWidgets: function() {
                        this.btnFilter = n.byNode(b(".dijitButton", this.domNode)[0]);
                        this.btnClose = b(".gridxFilterBarCloseBtn", this.domNode)[0];
                        this.connect(this.btnClose, "onkeydown", "_onCloseKey");
                        this.statusNode = b(".gridxFilterBarStatus", this.domNode)[0].firstChild;
                        f.remove(this.btnFilter.focusNode, "aria-labelledby")
                    },
                    _buildFilterState: function() {
                        var b, c = this;
                        this.filterData && this.filterData.conditions.length ? (this.statusNode.innerHTML = d.substitute(this.arg("hasFilterMessage", this.arg("useShortMessage") ? this.grid.nls.summary : this.grid.nls.filterBarMsgHasFilterTemplate), [this._currentSize, this._totalSize, this.arg("itemsName") ? this.arg("itemsName") : this.grid.nls.defaultItemsName]) + '\x26nbsp; \x26nbsp; \x3ca action\x3d"clear" tabindex\x3d"-1" role\x3d"button" title\x3d"' + this.grid.nls.filterBarClearButton + '"\x3e' + this.grid.nls.filterBarClearButton + "\x3c/a\x3e",
                        b = dojo.query("[role]", this.statusNode)[0],
                        b.signal = h(b, "keypress", function(b) {
                            b.keyCode === a.ENTER && c.clearFilter()
                        }),
                        this._buildTooltip()) : (this.statusNode.innerHTML = this.arg("noFilterMessage", this.grid.nls.filterBarMsgNoFilterTemplate),
                        (b = dojo.query("[role]", this.statusNode)[0]) && b.signal.remove())
                    },
                    _buildTooltip: function() {
                        this._tooltip || (this._tooltip = new v({
                            grid: this.grid
                        }));
                        this._tooltip.buildContent()
                    },
                    _showTooltip: function(a, b) {
                        this._hideTooltip();
                        this.filterData && this.filterData.conditions && this.filterData.conditions.length && (b ? this._tooltip.show(a) : this._pointTooltipDelay = window.setTimeout(m.hitch(this, "_showTooltip", a, !0), this.arg("tooltipDelay")))
                    },
                    _hideTooltip: function() {
                        var a = this._tooltip;
                        a && !a.isMouseOn && (this._pointTooltipDelay && (window.clearTimeout(this._pointTooltipDelay),
                        this._pointTooltipDelay = null),
                        a.hide())
                    },
                    _getRuleString: function(a, b, c) {
                        var h;
                        "isEmpty" == a ? h = "" : /^date|^time/i.test(c) && "past" !== a ? (h = this._formatDate,
                        /^time/i.test(c) && (h = this._formatTime),
                        /^datetime/i.test(c) && (h = this._formatDatetime),
                        "range" === a ? (c = this.arg("rangeTemplate", this.grid.nls.rangeTemplate),
                        h = d.substitute(c, [h(b.start), h(b.end)])) : h = h(b)) : "range" === a ? (c = this.arg("rangeTemplate", this.grid.nls.rangeTemplate),
                        h = d.substitute(c, [b.start, b.end])) : "past" === a && b.interval && void 0 !== b.amount ? (c = b.interval,
                        (c = this.grid.nls["past" + c[0].toUpperCase() + c.substring(1) + "sConditionTemplate"]) && (h = d.substitute(c, [b.amount]))) : h = b;
                        this.grid.textDir && (b = this.grid.textDir,
                        "auto" == b && (b = t.prototype._checkContextual(h)),
                        h = '\x3cspan dir\x3d"' + b + '"\x3e' + h + "\x3c/span\x3e");
                        return '\x3cspan style\x3d"font-style:italic"\x3e' + this._getConditionDisplayName(a) + "\x3c/span\x3e " + h
                    },
                    _getConditionDisplayName: function(a) {
                        a = a.charAt(0).toUpperCase() + a.substring(1);
                        return this.arg("condition" + a, this.grid.nls["condition" + a])
                    },
                    _getConditionOptions: function(a) {
                        var b = this._conditionOptions = this._conditionOptions || {};
                        if (!b[a]) {
                            var c = [];
                            l.forEach(this._getColumnConditions(a), function(a) {
                                var b = a.charAt(0).toUpperCase() + a.substring(1);
                                c.push({
                                    label: this.arg("condition" + b, this.grid.nls["condition" + b]),
                                    value: a
                                })
                            }, this);
                            b[a] = c
                        }
                        return b[a]
                    },
                    _getFilterExpression: function(a, b, c, d) {
                        a = b.value;
                        var h = this.grid._columnsById[d]
                          , e = this.grid.filter.arg("caseSensitive")
                          , f = h.dateParser || this._stringToDate
                          , g = h.timeParser || this._stringToTime
                          , k = h.datetimeParser || this._stringToDatetime
                          , g = {
                            custom: h.dataTypeArgs && h.dataTypeArgs.converter && m.isFunction(h.dataTypeArgs.converter) ? h.dataTypeArgs.converter : null,
                            date: f,
                            datetime: k,
                            time: g
                        }
                          , k = b.condition
                          , f = !1;
                        c = "isEmpty" == k ? "string" : c;
                        g = g.custom ? g.custom : g[c];
                        !0 === h.encode && "string" === typeof b.value && (a = r.encode(b.value));
                        "range" === k || "past" === k ? ("past" !== k || b.value.start && b.value.end || this._buildPastCondition(b),
                        a = y.value(b.value.start, c),
                        b = y.value(b.value.end, c),
                        c = y.column(d, c, g),
                        c = y.and(y.greaterEqual(c, a), y.lessEqual(c, b))) : (/^not/.test(k) && (f = !0,
                        k = k.replace(/^not/g, ""),
                        k = k.charAt(0).toLowerCase() + k.substring(1)),
                        c = y[k](y.column(d, c, g, !1, e), "isEmpty" == k ? null : y.value(a, c, null, e), e),
                        f && (c = y.not(c)));
                        return c
                    },
                    _stringToDate: function(a) {
                        if (a instanceof Date)
                            return a;
                        if ("string" === typeof a) {
                            var b = new Date(a);
                            if ("number" === typeof b.getTime())
                                return b
                        }
                        /(\d{4})\/(\d\d?)\/(\d\d?)/.test(a);
                        b = new Date;
                        b.setFullYear(parseInt(RegExp.$1));
                        b.setMonth(parseInt(RegExp.$2) - 1);
                        b.setDate(parseInt(RegExp.$3));
                        return b
                    },
                    _stringToTime: function(a) {
                        return a instanceof Date ? a : /(\d\d?):(\d\d?):(\d\d?)/.test(a) ? (a = new Date,
                        a.setHours(parseInt(RegExp.$1)),
                        a.setMinutes(parseInt(RegExp.$2)),
                        a.setSeconds(parseInt(RegExp.$3)),
                        a) : "invalid time"
                    },
                    _stringToDatetime: function(a) {
                        return a instanceof Date ? a : new Date(a)
                    },
                    _formatDate: function(a) {
                        a = "object" === typeof a ? a : new Date(a);
                        var b = a.getMonth() + 1
                          , c = a.getDate();
                        return b + "/" + c + "/" + a.getFullYear()
                    },
                    _formatTime: function(a) {
                        a = "object" === typeof a ? a : new Date(a);
                        var b = a.getHours();
                        a = a.getMinutes();
                        10 > b && (b = "0" + b);
                        10 > a && (a = "0" + a);
                        return b + ":" + a + ":00"
                    },
                    _formatDatetime: function(a) {
                        a = "object" === typeof a ? a : new Date(a);
                        var b = a.getMonth() + 1
                          , c = a.getDate()
                          , d = a.getHours()
                          , h = a.getMinutes();
                        10 > d && (d = "0" + d);
                        10 > h && (h = "0" + h);
                        return b + "/" + c + "/" + a.getFullYear() + " " + d + ":" + h + ":00"
                    },
                    _buildPastCondition: function(a) {
                        var b = new Date
                          , c = new Date
                          , d = a.value.amount;
                        switch (a.value.interval) {
                        case "hour":
                            b.getHours() < d ? (c.setHours(0),
                            c.setMinutes(0)) : c.setHours(b.getHours() - d);
                            break;
                        case "day":
                            c.setDate(b.getDate() - d);
                            break;
                        case "month":
                            c.setMonth(b.getMonth() - d);
                            break;
                        case "year":
                            c.setFullYear(b.getFullYear() - d)
                        }
                        a.value.start = c;
                        a.value.end = b
                    },
                    _initFocus: function() {
                        var a = this.grid.focus;
                        a && (a.registerArea({
                            name: "filterbar_btn",
                            priority: -1,
                            focusNode: this.btnFilter.domNode,
                            doFocus: this._doFocusBtnFilter,
                            scope: this
                        }),
                        a.registerArea({
                            name: "filterbar_clear",
                            priority: -.9,
                            focusNode: this.domNode,
                            doFocus: this._doFocusClearLink,
                            scope: this
                        }),
                        a.registerArea({
                            name: "filterbar_close",
                            priority: -.8,
                            focusNode: this.btnClose,
                            doFocus: this._doFocusBtnClose,
                            scope: this
                        }))
                    },
                    _doFocusBtnFilter: function(a) {
                        this.btnFilter.focus();
                        a && k.stop(a);
                        return !0
                    },
                    _doFocusClearLink: function(a) {
                        this.btnFilter.focus();
                        var c = b('a[action\x3d"clear"]')[0];
                        return c ? (c.focus(),
                        a && k.stop(a),
                        !0) : !1
                    },
                    _doFocusBtnClose: function(a) {
                        this.btnClose.focus();
                        a && k.stop(a);
                        return !0
                    },
                    _doBlur: function() {
                        return !0
                    },
                    _onCloseKey: function(b) {
                        b.keyCode === a.ENTER && this.hide()
                    },
                    destroy: function() {
                        this._filterDialog && this._filterDialog.destroy();
                        this._cfmDlg && this._cfmDlg.destroy();
                        this.btnFilter.destroy();
                        this._tooltip && this._tooltip.destroy();
                        g.destroy(this.domNode);
                        this.inherited(arguments)
                    }
                })
            })
        },
        "gridx/modules/filter/FilterDialog": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/dom-class dojo/string dojo/query dojo/keys dijit/registry dijit/Dialog dojox/html/metrics ./FilterPane dojo/text!../../templates/FilterDialog.html dijit/form/Select dijit/form/Button dijit/form/CheckBox dijit/layout/AccordionContainer".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                return q(e, {
                    cssClass: "gridxFilterDialog",
                    grid: null,
                    autofocus: !1,
                    postCreate: function() {
                        this.inherited(arguments);
                        this.i18n = this.grid.nls;
                        this.set("title", this.grid.nls.filterDefDialogTitle);
                        this.set("content", l.substitute(b, this));
                        this._initWidgets();
                        m.add(this.domNode, "gridxFilterDialog")
                    },
                    done: function() {
                        this.hide();
                        this.grid.filterBar.applyFilter(this.getData())
                    },
                    getData: function() {
                        return {
                            type: this._sltMatch.get("value"),
                            conditions: n.map(this._accordionContainer.getChildren(), function(a) {
                                return a.getData()
                            })
                        }
                    },
                    setData: function(a) {
                        this.removeChildren();
                        a && a.conditions.length && (this._sltMatch.set("value", a && a.type),
                        n.forEach(a.conditions, function(a) {
                            this.addRule().setData(a)
                        }, this))
                    },
                    removeChildren: function() {
                        n.forEach(this._accordionContainer.getChildren(), function(a) {
                            this._accordionContainer.removeChild(a);
                            a.destroy()
                        }, this)
                    },
                    clear: function() {
                        this.grid.filterBar.confirmToExecute(function() {
                            this.grid.filterBar.clearFilter(!0);
                            this.hide()
                        }, this)
                    },
                    cancel: function() {
                        this.hide()
                    },
                    show: function() {
                        this.inherited(arguments);
                        this._accordionContainer.hasChildren() || this.addRule()
                    },
                    addRule: function() {
                        var a = this._accordionContainer;
                        3 === a.getChildren().length && (a._contentBox.w -= d.getScrollbar().w);
                        var b = a.getChildren().length + 1
                          , b = l.substitute(this.i18n.ruleTitleTemplate, {
                            ruleNumber: b
                        })
                          , b = new c({
                            grid: this.grid,
                            title: b
                        });
                        a.addChild(b);
                        a.selectChild(b);
                        this._titlePaneHeight || (this._titlePaneHeight = b._buttonWidget.domNode.offsetHeight + 3);
                        b._initCloseButton();
                        b._onColumnChange();
                        try {
                            b.tbSingle.focus()
                        } catch (r) {}
                        m.toggle(a.domNode, "gridxFilterSingleRule", 1 === a.getChildren().length);
                        this.connect(b, "onChange", "_updateButtons");
                        this._updateButtons();
                        this._updateAccordionContainerHeight();
                        a.domNode.parentNode.scrollTop = 1E5;
                        return b
                    },
                    _initWidgets: function() {
                        var a = dojo.query("form", this.domNode)[0]
                          , b = this
                          , c = this.grid.filterBar && this.grid.filterBar._preFilterData;
                        a.onsubmit = function() {
                            b.done();
                            return !1
                        }
                        ;
                        this._accordionContainer = f.byNode(k(".dijitAccordionContainer", this.domNode)[0]);
                        this._sltMatch = f.byNode(k(".dijitSelect", this.domNode)[0]);
                        a = k(".dijitButton", this.domNode);
                        this._btnAdd = f.byNode(a[0]);
                        this._btnFilter = f.byNode(a[1]);
                        this._btnRestore = f.byNode(a[2]);
                        c || (this._btnRestore.domNode.style.display = "none");
                        this._btnClear = f.byNode(a[3]);
                        this._btnCancel = f.byNode(a[4]);
                        this._matchCase = f.byNode(k(".matchCaseCheckbox", this.domNode)[0]);
                        this.connect(this._btnAdd, "onClick", "addRule");
                        this.connect(this._btnClear, "onClick", "clear");
                        this.connect(this._btnCancel, "onClick", "cancel");
                        this.connect(this._matchCase, "onClick", p.hitch(this, function() {
                            this.grid.filter.caseSensitive = this._matchCase.get("checked")
                        }));
                        this.connect(this._accordionContainer, "removeChild", "_updateButtons");
                        this.connect(this._accordionContainer, "removeChild", "_updatePaneTitle");
                        this.own(this._btnRestore.on("click", function() {
                            c && b.setData(c)
                        }))
                    },
                    _updatePaneTitle: function() {
                        n.forEach(this._accordionContainer.getChildren(), function(a) {
                            a._updateTitle()
                        })
                    },
                    _updateButtons: function() {
                        var a = this._accordionContainer.getChildren();
                        n.some(a, function(a) {
                            return null === a.getData()
                        }) ? this._btnFilter.set("disabled", !0) : this._btnFilter.set("disabled", !1);
                        var b = this.grid.filterBar.arg("maxRuleCount");
                        this._btnAdd.set("disabled", a.length >= b && 0 < b);
                        this._btnClear.set("disabled", !this.grid.filterBar.filterData)
                    },
                    _updateAccordionContainerHeight: function() {
                        var a = this._accordionContainer
                          , b = a.getChildren().length;
                        a.domNode.style.height = 145 + b * this._titlePaneHeight + "px";
                        a.resize()
                    },
                    uninitialize: function() {
                        this.inherited(arguments)
                    }
                })
            })
        },
        "gridx/modules/filter/FilterPane": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/dom-construct dojo/dom-class dojo/string dojo/query dijit/registry dijit/_BidiSupport dojox/html/ellipsis dojox/html/metrics ./DistinctComboBoxMenu ../Filter dojo/text!../../templates/FilterPane.html dijit/layout/ContentPane dijit/form/Select dijit/form/TextBox dijit/form/DateTextBox dijit/form/TimeTextBox dijit/form/RadioButton dijit/form/NumberTextBox dijit/form/ComboBox".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r) {
                return q([r], {
                    sltColumn: null,
                    sltCondition: null,
                    grid: null,
                    postCreate: function() {
                        this.inherited(arguments);
                        this.i18n = this.grid.nls;
                        this._columnAriaLabel = this.i18n.columnSelectAriaLabel.replace("${0}", 1).replace("${1}", 3);
                        this._conditionAriaLabel = this.i18n.conditionSelectAriaLabel.replace("${0}", 2).replace("${1}", 3);
                        this._valueAriaLabel = this.i18n.valueBoxAriaLabel.replace("${0}", 3).replace("${1}", 3);
                        this.set("title", this.grid.nls.defaultRuleTitle);
                        this.set("content", k.substitute(h, this));
                        this._initFields();
                        this._initSltCol();
                        this.connect(this.sltColumn, "onChange", "_onColumnChange");
                        this.connect(this.sltCondition, "onChange", "_onConditionChange");
                        this.comboText.dropDownClass = b;
                        this._onConditionChange()
                    },
                    getData: function() {
                        var a = this._getValue()
                          , b = this.sltColumn.get("value")
                          , c = this.sltCondition.get("value");
                        this._getDataType();
                        return "isEmpty" === c || null !== a && ("range" !== c || a.start && a.end) ? {
                            colId: "_gridx_any_column_value_" == b ? "" : b,
                            condition: c,
                            value: "isEmpty" === c ? "Date" === this._getType() ? null : "" : a,
                            type: this._getType()
                        } : null
                    },
                    setData: function(a) {
                        if (null !== a) {
                            this.sltColumn.set("value", a.colId, null);
                            this._onColumnChange();
                            var b = this;
                            window.setTimeout(function() {
                                b.sltCondition.set("value", a.condition, null);
                                b._onConditionChange();
                                window.setTimeout(function() {
                                    b._setValue(a.value)
                                }, 50)
                            }, 10)
                        }
                    },
                    close: function() {
                        var a = this._getContainer();
                        4 === a.getChildren().length && (a._contentBox.w += c.getScrollbar().w);
                        if (this === a.selectedChildWidget) {
                            var b = n.indexOf(a.getChildren(), this);
                            0 < b && a.selectChild(a.getChildren()[b - 1])
                        }
                        a.removeChild(this);
                        l.toggle(a.domNode, "gridxFilterSingleRule", 1 === a.getChildren().length);
                        this.grid.filterBar._filterDialog._updateAccordionContainerHeight()
                    },
                    onChange: function() {},
                    _getContainer: function() {
                        return f.byNode(this.domNode.parentNode.parentNode.parentNode)
                    },
                    _initFields: function() {
                        this.sltColumn = f.byNode(g("li\x3etable", this.domNode)[0]);
                        this.sltCondition = f.byNode(g("li\x3etable", this.domNode)[1]);
                        var a = this._fields = [this.tbSingle = f.byNode(g(".gridxFilterPaneTextWrapper \x3e .dijitTextBox", this.domNode)[0]), this.tbNumber = f.byNode(g(".gridxFilterPaneNumberWrapper \x3e .dijitTextBox", this.domNode)[0]), this.tbNumberStart = f.byNode(g(".gridxFilterPaneNumberRangeWrapper \x3e .dijitTextBox", this.domNode)[0]), this.tbNumberEnd = f.byNode(g(".gridxFilterPaneNumberRangeWrapper \x3e .dijitTextBox", this.domNode)[1]), this.tbTimePast = f.byNode(g(".gridxFilterPaneTimePastWrapper \x3e .dijitTextBox", this.domNode)[0]), this.sltTimeInterval = f.byNode(g(".gridxFilterPaneTimePastWrapper \x3e .dijitSelect", this.domNode)[0]), this.comboText = f.byNode(g(".gridxFilterPaneComboWrapper \x3e .dijitComboBox", this.domNode)[0]), this.sltSingle = f.byNode(g(".gridxFilterPaneSelectWrapper \x3e .dijitSelect", this.domNode)[0]), this.dtbSingle = f.byNode(g(".gridxFilterPaneDateWrapper \x3e .dijitDateTextBox", this.domNode)[0]), this.dtbStart = f.byNode(g(".gridxFilterPaneDateRangeWrapper \x3e .dijitDateTextBox", this.domNode)[0]), this.dtbEnd = f.byNode(g(".gridxFilterPaneDateRangeWrapper \x3e .dijitDateTextBox", this.domNode)[1]), this.tbDatePast = f.byNode(g(".gridxFilterPaneDatePastWrapper \x3e .dijitTextBox", this.domNode)[0]), this.sltDateInterval = f.byNode(g(".gridxFilterPaneDatePastWrapper \x3e .dijitSelect", this.domNode)[0]), this.dtbDatetimeSingle = f.byNode(g(".gridxFilterPaneDatetimeWrapper \x3e .dijitDateTextBox", this.domNode)[0]), this.dtbDatetimeStart = f.byNode(g(".gridxFilterPaneDatetimeRangeWrapper \x3e .dijitDateTextBox", this.domNode)[0]), this.dtbDatetimeEnd = f.byNode(g(".gridxFilterPaneDatetimeRangeWrapper \x3e .dijitDateTextBox", this.domNode)[1]), this.ttbDatetimeSingle = f.byNode(g(".gridxFilterPaneDatetimeWrapper \x3e .dijitTimeTextBox", this.domNode)[0]), this.ttbDatetimeStart = f.byNode(g(".gridxFilterPaneDatetimeRangeWrapper \x3e .dijitTimeTextBox", this.domNode)[0]), this.ttbDatetimeEnd = f.byNode(g(".gridxFilterPaneDatetimeRangeWrapper \x3e .dijitTimeTextBox", this.domNode)[1]), this.tbDatetimePast = f.byNode(g(".gridxFilterPaneDatetimePastWrapper \x3e .dijitTextBox", this.domNode)[0]), this.sltDatetimeInterval = f.byNode(g(".gridxFilterPaneDatetimePastWrapper \x3e .dijitSelect", this.domNode)[0]), this.ttbSingle = f.byNode(g(".gridxFilterPaneTimeWrapper \x3e .dijitTimeTextBox", this.domNode)[0]), this.ttbStart = f.byNode(g(".gridxFilterPaneTimeRangeWrapper \x3e .dijitTimeTextBox", this.domNode)[0]), this.ttbEnd = f.byNode(g(".gridxFilterPaneTimeRangeWrapper \x3e .dijitTimeTextBox", this.domNode)[1]), this.rbTrue = f.byNode(g(".gridxFilterPaneRadioWrapper .dijitRadio", this.domNode)[0]), this.rbFalse = f.byNode(g(".gridxFilterPaneRadioWrapper .dijitRadio", this.domNode)[1])];
                        this.rbTrue.domNode.nextSibling.htmlFor = this.rbTrue.id;
                        this.rbFalse.domNode.nextSibling.htmlFor = this.rbFalse.id;
                        var b = "rb_name_" + Math.random();
                        this.rbTrue.set("name", b);
                        this.rbFalse.set("name", b);
                        n.forEach(a, function(a) {
                            this.connect(a, "onChange", "_onValueChange")
                        }, this)
                    },
                    _initSltCol: function() {
                        var a = [{
                            label: this.i18n.anyColumnOption,
                            value: "_gridx_any_column_value_"
                        }]
                          , b = this.sltColumn;
                        n.forEach(this.grid.columns(), function(b) {
                            if (b.isFilterable()) {
                                var c = b.name()
                                  , c = this.grid.enforceTextDirWithUcc(b.id, c);
                                a.push({
                                    value: b.id,
                                    label: c
                                })
                            }
                        }, this);
                        b.addOption(a)
                    },
                    _initCloseButton: function() {
                        var a = this._buttonWidget
                          , b = m.create("span", {
                            className: "gridxFilterPaneCloseButton",
                            innerHTML: '\x3cimg src\x3d"' + this._blankGif + '"/\x3e',
                            tabIndex: 0,
                            title: this.i18n.removeRuleButton || ""
                        }, a.domNode, "last");
                        this.connect(b, "onclick", "close");
                        l.add(a.titleTextNode, "dojoxEllipsis")
                    },
                    _onColumnChange: function() {
                        var a = this.sltColumn.get("value")
                          , a = this.grid.filterBar._getConditionOptions("_gridx_any_column_value_" == a ? "" : a)
                          , b = this.sltCondition;
                        b.set("options", []);
                        b.addOption(p.clone(a));
                        this._updateTitle();
                        this._updateValueField();
                        this.onChange()
                    },
                    _onConditionChange: function() {
                        this._updateValueField();
                        this._updateTitle();
                        this.onChange()
                    },
                    _onValueChange: function() {
                        this.grid.textDir && "auto" == this.grid.textDir && (this.tbSingle.focusNode.dir = e.prototype._checkContextual(this._getValue()));
                        this._updateTitle();
                        this.onChange()
                    },
                    _getDataType: function() {
                        var a = this.sltColumn.get("value")
                          , b = "string";
                        "_gridx_any_column_value_" != a && (b = this.grid.column(a).dataType());
                        return b
                    },
                    _getType: function() {
                        var a = {
                            string: "Text",
                            number: "Number",
                            date: "Date",
                            time: "Time",
                            datetime: "Datetime",
                            "enum": "Select",
                            "boolean": "Radio"
                        }[this._getDataType()];
                        "range" === this.sltCondition.get("value") && (a += "Range");
                        "past" === this.sltCondition.get("value") && (a += "Past");
                        return a
                    },
                    _updateTitle: function() {
                        if (this._buttonWidget) {
                            var a;
                            a = this._getValue();
                            var b = this._getType()
                              , c = this.sltCondition.get("value")
                              , d = this._buttonWidget.titleTextNode;
                            this._isValidValue(a) && ("range" !== c || a.start && a.end) ? a = this.sltColumn.get("displayedValue") + " " + this.grid.filterBar._getRuleString(c, a, b) : (a = n.indexOf(this._getContainer().getChildren(), this) + 1,
                            a = k.substitute(this.i18n.ruleTitleTemplate, {
                                ruleNumber: a
                            }));
                            d.innerHTML = a.replace(/&/g, "\x26amp;");
                            d.title = a.replace(/<\/?span[^>]*>/g, "").replace("\x26nbsp;", " ")
                        }
                    },
                    _needComboBox: function() {
                        var a = this.sltColumn.get("value");
                        return "Text" === this._getType() && "_gridx_any_column_value_" != a && this.grid._columnsById[a].field
                    },
                    _updateValueField: function() {
                        var a = this._getType()
                          , b = this.sltColumn.get("value")
                          , c = this._needComboBox();
                        n.forEach("Text Combo Number NumberRange Date DateRange DatePast Datetime DatetimeRange DatetimePast Time TimeRange TimePast Select Radio".split(" "), function(a) {
                            l.remove(this.domNode, "gridxFilterPane" + a)
                        }, this);
                        l.add(this.domNode, "gridxFilterPane" + (c ? "Combo" : a));
                        var d = "isEmpty" === this.sltCondition.get("value");
                        n.forEach(this._fields, function(a) {
                            a.set("disabled", d)
                        });
                        b = this.grid._columnsById[b];
                        c && (this._dummyCombo || (this._dummyCombo = new dijit.form.ComboBox({
                            store: this.grid.store
                        })),
                        !1 !== b.autoComplete && p.mixin(this.comboText, {
                            store: this.grid.store,
                            searchAttr: b.field,
                            fetchProperties: {
                                sort: [{
                                    attribute: b.field,
                                    descending: !1
                                }]
                            }
                        }));
                        "Select" == a && (a = this.sltSingle,
                        a.removeOption(a.getOptions()),
                        a.addOption(n.map(b.enumOptions || [], function(a) {
                            return p.isObject(a) ? a : {
                                label: a,
                                value: a
                            }
                        })),
                        this._updateTitle())
                    },
                    _getValue: function() {
                        var a = this._getType(), b = this._needComboBox(), c;
                        c = function(a, b) {
                            var c = new Date(a);
                            return a && b ? (c.setMinutes(b.getMinutes()),
                            c.setHours(b.getHours()),
                            c) : null
                        }
                        ;
                        switch (a) {
                        case "Text":
                            return (b ? this.comboText : this.tbSingle).get("value") || null;
                        case "Number":
                            return isNaN(this.tbNumber.get("value")) || !this.tbNumber.isValid() ? null : this.tbNumber.get("value");
                        case "NumberRange":
                            return {
                                start: isNaN(this.tbNumberStart.get("value")) || !this.tbNumberStart.isValid() ? null : this.tbNumberStart.get("value"),
                                end: isNaN(this.tbNumberEnd.get("value")) || !this.tbNumberEnd.isValid() ? null : this.tbNumberEnd.get("value")
                            };
                        case "Select":
                            return this.sltSingle.get("value") || null;
                        case "Date":
                            return this.dtbSingle.get("value") || null;
                        case "DateRange":
                            return {
                                start: this.dtbStart.get("value"),
                                end: this.dtbEnd.get("value")
                            };
                        case "DatePast":
                            c = this.tbDatePast.get("value");
                            if (isNaN(c) || !this.tbDatePast.isValid())
                                return null;
                            var a = new Date
                              , b = new Date
                              , d = this.sltDateInterval.get("value");
                            switch (d) {
                            case "hour":
                                b.setHours(a.getHours() - c);
                                break;
                            case "day":
                                b.setDate(a.getDate() - c);
                                break;
                            case "month":
                                b.setMonth(a.getMonth() - c);
                                break;
                            case "year":
                                b.setFullYear(a.getFullYear() - c)
                            }
                            return {
                                start: b,
                                end: a,
                                amount: c,
                                interval: d
                            };
                        case "Datetime":
                            return a = this.dtbDatetimeSingle.get("value"),
                            b = this.ttbDatetimeSingle.get("value"),
                            c(a, b);
                        case "DatetimeRange":
                            var a = this.dtbDatetimeStart.get("value")
                              , b = this.ttbDatetimeStart.get("value")
                              , d = this.dtbDatetimeEnd.get("value")
                              , h = this.ttbDatetimeEnd.get("value");
                            return {
                                start: c(a, b),
                                end: c(d, h)
                            };
                        case "DatetimePast":
                            c = this.tbDatetimePast.get("value");
                            if (isNaN(c) || !this.tbDatetimePast.isValid())
                                return null;
                            a = new Date;
                            b = new Date;
                            d = this.sltDatetimeInterval.get("value");
                            switch (d) {
                            case "hour":
                                b.setHours(a.getHours() - c);
                                break;
                            case "day":
                                b.setDate(a.getDate() - c);
                                break;
                            case "month":
                                b.setMonth(a.getMonth() - c);
                                break;
                            case "year":
                                b.setFullYear(a.getFullYear() - c)
                            }
                            return {
                                start: b,
                                end: a,
                                amount: c,
                                interval: d
                            };
                        case "Time":
                            return this.ttbSingle.get("value") || null;
                        case "TimeRange":
                            return {
                                start: this.ttbStart.get("value"),
                                end: this.ttbEnd.get("value")
                            };
                        case "TimePast":
                            c = this.tbTimePast.get("value");
                            if (isNaN(c) || !this.tbTimePast.isValid())
                                return null;
                            a = new Date;
                            b = new Date;
                            d = this.sltTimeInterval.get("value");
                            switch (d) {
                            case "hour":
                                a.getHours() < c ? (b.setHours(0),
                                b.setMinutes(0)) : b.setHours(a.getHours() - c)
                            }
                            return {
                                start: b,
                                end: a,
                                amount: c,
                                interval: d
                            };
                        case "Radio":
                            return !!this.rbTrue.get("checked");
                        default:
                            return null
                        }
                    },
                    _setValue: function(a) {
                        if (this._isValidValue(a)) {
                            var b = this._getType()
                              , c = this._needComboBox();
                            switch (b) {
                            case "Text":
                                (c ? this.comboText : this.tbSingle).set("value", a);
                                break;
                            case "Number":
                                this.tbNumber.set("value", a);
                                break;
                            case "NumberRange":
                                this.tbNumberStart.set("value", a.start);
                                this.tbNumberEnd.set("value", a.end);
                                break;
                            case "Select":
                                this.sltSingle.set("value", a);
                                break;
                            case "Date":
                                b = new Date(a);
                                this.dtbSingle.set("value", b);
                                break;
                            case "DateRange":
                                this.dtbStart.set("value", new Date(a.start));
                                this.dtbEnd.set("value", new Date(a.end));
                                break;
                            case "DatePast":
                                this.tbDatePast.set("value", a.amount);
                                this.sltDateInterval.set("value", a.interval);
                                break;
                            case "Datetime":
                                b = new Date(a);
                                this.dtbDatetimeSingle.set("value", b);
                                b.setFullYear(1970);
                                b.setMonth(0);
                                b.setDate(1);
                                this.ttbDatetimeSingle.set("value", b);
                                break;
                            case "DatetimeRange":
                                b = new Date(a.start);
                                this.dtbDatetimeStart.set("value", b);
                                b.setFullYear(1970);
                                b.setMonth(0);
                                b.setDate(1);
                                this.ttbDatetimeStart.set("value", b);
                                a = new Date(a.end);
                                this.dtbDatetimeEnd.set("value", a);
                                a.setFullYear(1970);
                                a.setMonth(0);
                                a.setDate(1);
                                this.ttbDatetimeEnd.set("value", a);
                                break;
                            case "DatetimePast":
                                this.tbDatetimePast.set("value", a.amount);
                                this.sltDatetimeInterval.set("value", a.interval);
                                break;
                            case "Time":
                                this.ttbSingle.set("value", a);
                                break;
                            case "TimeRange":
                                this.ttbStart.set("value", a.start);
                                this.ttbEnd.set("value", a.end);
                                break;
                            case "TimePast":
                                this.tbTimePast.set("value", a.amount);
                                this.sltTimeInterval.set("value", a.interval);
                                break;
                            case "Radio":
                                a ? this.rbTrue.set("checked", !0) : this.rbFalse.set("checked", !0)
                            }
                        }
                    },
                    _isValidValue: function(a) {
                        return null !== a && void 0 != a
                    },
                    uninitialize: function() {
                        this.inherited(arguments);
                        this._dummyCombo && this._dummyCombo.destroyRecursive()
                    }
                })
            })
        },
        "gridx/modules/filter/DistinctComboBoxMenu": function() {
            define(["dojo/_base/declare", "dijit/form/_ComboBoxMenu"], function(q, p) {
                return q(p, {
                    createOptions: function(n, m, l) {
                        var k = {};
                        arguments[0] = n.filter(function(g) {
                            g = l(g).label;
                            return k[g] ? !1 : k[g] = !0
                        });
                        this.inherited(arguments)
                    }
                })
            })
        },
        "gridx/modules/filter/FilterConfirmDialog": function() {
            define(["dojo/_base/declare", "dojo/string", "dijit/Dialog", "dojo/text!../../templates/FilterConfirmDialog.html"], function(q, p, n, m) {
                return q(n, {
                    grid: null,
                    cssClass: "gridxFilterConfirmDialog",
                    autofocus: !1,
                    postCreate: function() {
                        this.inherited(arguments);
                        this.set("title", this.grid.nls.clearFilterDialogTitle);
                        this.set("content", p.substitute(m, this.grid.nls));
                        var l = dijit.findWidgets(this.domNode);
                        this.btnClear = l[0];
                        this.btnCancel = l[1];
                        this.connect(this.btnCancel, "onClick", "hide");
                        this.connect(this.btnClear, "onClick", "onExecute");
                        this.connect(this, "show", function() {
                            this.btnCancel.focus()
                        })
                    },
                    onExecute: function() {
                        this.execute()
                    },
                    execute: function() {}
                })
            })
        },
        "gridx/modules/filter/FilterTooltip": function() {
            define("dojo/_base/array dojo/_base/event dojo/dom-class dijit/popup dojo/_base/declare dojo/string dijit/TooltipDialog".split(" "), function(q, p, n, m, l, k, g) {
                return l(g, {
                    grid: null,
                    filterBar: null,
                    postCreate: function() {
                        this.inherited(arguments);
                        this.filterBar = this.grid.filterBar;
                        this.connect(this, "onClick", "_onClick");
                        this.connect(this, "onMouseEnter", "_onMouseEnter");
                        this.connect(this, "onMouseLeave", "_onMouseLeave");
                        n.add(this.domNode, "gridxFilterTooltip");
                        n.add(this.domNode, "dijitTooltipBelow")
                    },
                    show: function(f) {
                        this.inherited(arguments);
                        m.open({
                            popup: this,
                            x: f.pageX,
                            y: f.pageY,
                            padding: {
                                x: -6,
                                y: -3
                            }
                        })
                    },
                    hide: function() {
                        this.inherited(arguments);
                        m.close(this)
                    },
                    buildContent: function() {
                        var f = this.filterBar
                          , e = f._nls
                          , d = f.filterData;
                        if (d && d.conditions.length) {
                            var c = ['\x3cdiv class\x3d"gridxFilterTooltipTitle"\x3e\x3cb\x3e${i18n.statusTipTitleHasFilter}\x3c/b\x3e ', "all" === d.type ? e.statusTipHeaderAll : e.statusTipHeaderAny, "\x3c/div\x3e\x3ctable\x3e\x3ctr\x3e\x3cth\x3e${i18n.statusTipHeaderColumn}\x3c/th\x3e\x3cth\x3e${i18n.statusTipHeaderCondition}\x3c/th\x3e\x3c/tr\x3e"];
                            q.forEach(d.conditions, function(b, a) {
                                var d = a % 2 ? ' class\x3d"gridxFilterTooltipOddRow"' : "";
                                if (b.colId)
                                    var e = this.grid.column(b.colId).name()
                                      , e = this.grid.enforceTextDirWithUcc(b.colId, e);
                                c.push("\x3ctr", d, "\x3e\x3ctd\x3e", b.colId ? e : "${i18n.anyColumnOption}", '\x3c/td\x3e\x3ctd class\x3d"gridxFilterTooltipValueCell"\x3e', "\x3cdiv\x3e", f._getRuleString(b.condition, b.value, b.type), '\x3cspan action\x3d"remove-rule" title\x3d"${i18n.removeRuleButton}"', ' class\x3d"gridxFilterTooltipRemoveBtn"\x3e\x3cspan class\x3d"gridxFilterTooltipRemoveBtnText"\x3ex\x3c/span\x3e\x3c/span\x3e\x3c/div\x3e\x3c/td\x3e\x3c/tr\x3e')
                            }, this);
                            c.push("\x3c/table\x3e");
                            this.i18n = this.grid.nls;
                            this.set("content", k.substitute(c.join(""), this));
                            n.toggle(this.domNode, "gridxFilterTooltipSingleRule", 1 === d.conditions.length)
                        }
                    },
                    _onMouseEnter: function(f) {
                        this.isMouseOn = !0
                    },
                    _onMouseLeave: function(f) {
                        this.isMouseOn = !1;
                        this.hide()
                    },
                    _onClick: function(f) {
                        var e = this._getTr(f)
                          , d = this.filterBar;
                        e && /^span$/i.test(f.target.tagName) ? (d.filterData.conditions.splice(e.rowIndex - 1, 1),
                        e.parentNode.removeChild(e),
                        d.applyFilter(d.filterData),
                        p.stop(f)) : (this.filterBar.showFilterDialog(),
                        this.hide())
                    },
                    _getTr: function(f) {
                        for (f = f.target; f && !/^tr$/i.test(f.tagName) && f !== this.domNode; )
                            f = f.parentNode;
                        return f && /^tr$/i.test(f.tagName) ? f : null
                    }
                })
            })
        },
        "gridx/modules/filter/QuickFilter": function() {
            define("dojo/_base/declare dojo/dom-class dojox/gesture/tap ../../core/_Module ../../support/QuickFilter ../Puller ../Bar".split(" "), function(q, p, n, m, l) {
                return q(m, {
                    name: "quickFilter",
                    required: ["bar", "filter", "puller"],
                    autoApply: !0,
                    delay: 700,
                    preload: function() {
                        var k = this.grid
                          , g = k.bar
                          , f = {
                            bar: "top",
                            row: 0,
                            col: 3,
                            pluginClass: l,
                            className: "gridxBarQuickFilter",
                            hookPoint: this,
                            hookName: "quickFilter",
                            autoApply: this.arg("autoApply"),
                            delay: this.arg("delay"),
                            textBoxClass: this.arg("textBoxClass", "dijit.form.TextBox"),
                            buttonClass: this.arg("buttonClass", "dijit.form.Button"),
                            comboButtonClass: this.arg("comboButtonClass", "dijit.form.ComboButton"),
                            menuClass: this.arg("menuClass", "dijit.Menu"),
                            menuItemClass: this.arg("menuItemClass", "dijit.MenuItem")
                        };
                        k.touch && (f.bar = "quickFilter",
                        f.priority = .5,
                        g.loaded.then(function() {
                            k.puller.bind(g.quickFilterNode)
                        }));
                        g.defs.push(f)
                    }
                })
            })
        },
        "gridx/support/QuickFilter": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/dom-class dojo/keys dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin dijit/form/TextBox dijit/form/Button dijit/form/ComboButton dijit/Menu dijit/MenuItem ../modules/Filter dojo/text!../templates/QuickFilter.html dojox/html/entities".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t) {
                return q([k, g, f], {
                    templateString: r,
                    constructor: function(a) {
                        var b = this;
                        p.mixin(b, a.grid.nls);
                        b._hasFilterBar = a.grid.filterBar ? "gridxQuickFilterHasFilterBar" : "gridxQuickFilterNoFilterBar";
                        b._hasFilterBar && b.connect(a.grid.filterBar, "clearFilter", function() {
                            b.textBox && b.textBox.set("value", "")
                        });
                        b.connect(a.grid.model, "setStore", function() {
                            b.textBox.set("value", "");
                            m.remove(b.domNode, "gridxQuickFilterActive")
                        })
                    },
                    postCreate: function() {
                        this.connect(this.textBox, "onInput", "_onInput")
                    },
                    grid: null,
                    textBoxClass: "dijit.form.TextBox",
                    buttonClass: "dijit.form.Button",
                    comboButtonClass: "dijit.form.ComboButton",
                    menuClass: "dijit.Menu",
                    menuItemClass: "dijit.MenuItem",
                    autoApply: !0,
                    delay: 700,
                    _onInput: function(a) {
                        var b = this
                          , c = b.domNode
                          , d = b.textBox;
                        a = a.keyCode;
                        setTimeout(function() {
                            m.toggle(c, "gridxQuickFilterActive", d.get("value"))
                        }, 0);
                        b.autoApply && a != l.TAB && (clearTimeout(b._handle),
                        b._handle = setTimeout(function() {
                            b._filter()
                        }, a == l.ENTER ? 0 : b.delay))
                    },
                    _onKey: function(a) {
                        a.keyCode == l.ENTER && (this.grid.focus.stopEvent(a),
                        this._clear(),
                        this.textBox.focus())
                    },
                    _clear: function() {
                        this.textBox.set("value", "");
                        m.remove(this.domNode, "gridxQuickFilterActive");
                        this._filter()
                    },
                    _filter: function() {
                        var a = this.grid
                          , b = this.textBox.get("value")
                          , c = n.filter(a.columns(), function(a) {
                            return !1 !== a.filterable
                        })
                          , d = this.grid.filter.arg("caseSensitive");
                        clearTimeout(this._handle);
                        a.filterBar ? "" === b ? a.filterBar.clearFilter(!0) : a.filterBar.applyFilter({
                            conditions: [{
                                condition: "contain",
                                value: b
                            }]
                        }) : a.filter.setFilter("" === b ? 0 : h.or.apply(0, n.map(c, function(a) {
                            return !0 === a.encode ? h.contain(h.column(a.id), h.value(t.encode(b)), d) : h.contain(h.column(a.id), h.value(b), d)
                        })))
                    },
                    _showFilterBar: function() {
                        var a = this.grid.filterBar;
                        a.show();
                        a.showFilterDialog()
                    }
                })
            })
        },
        "gridx/modules/Puller": function() {
            define("dojo/_base/kernel dojo/_base/declare dojo/query dojo/_base/lang dojo/_base/sniff dojo/aspect dojo/dom-construct dojo/dom-class dojo/dom-style dojo/dom-geometry dojo/keys ../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                q.experimental("gridx/modules/Puller");
                return b.register(p(b, {
                    name: "puller",
                    forced: ["vScroller"],
                    load: function() {
                        this.bind(this.arg("node"));
                        this.loaded.callback()
                    },
                    bind: function(a) {
                        var b = this
                          , c = b.grid;
                        b.unbind();
                        a && a != b.node && (b.node = a,
                        b.innerNode = a.firstChild,
                        c.vScroller.loaded.then(function() {
                            var a = c.vScroller._scrollable;
                            a && (b._height = b.node.clientHeight,
                            b._binds = [b.aspect(a, "onTouchStart", function() {
                                b.node.style.height = b.node.clientHeight + "px";
                                f.add(b.node, "gridxPuller");
                                f.add(b.innerNode, "gridxPullerInner");
                                b._pos = a.getPos();
                                b._stage = 1
                            }), b.aspect(a, "scrollTo", function(a) {
                                if ("number" == typeof a.y && 1 == b._stage) {
                                    var d = b.node.clientHeight
                                      , h = d + (a.y - b._pos.y);
                                    0 > h ? h = 0 : h > b._height && (h = b._height);
                                    b._pos = a;
                                    b.node.style.height = h + "px";
                                    c.mainNode.style.height = c.mainNode.clientHeight - (h - d) + "px";
                                    c.vLayout.reLayout()
                                }
                            }), b.aspect(a, "onTouchEnd", function() {
                                b.node.clientHeight < b._height / 2 ? b._slide(0) : b.node.clientHeight >= b._height / 2 ? b._slide(1) : b._stage = 0
                            }, b, "before")])
                        }))
                    },
                    unbind: function() {
                        if (this._binds) {
                            for (var a = 0; a < this._binds.length; ++a)
                                this._binds[a].remove();
                            f.remove(this.node, "gridxPuller");
                            f.remove(this.innerNode, "gridxPullerInner");
                            this.node.style.height = "";
                            this.grid.vLayout.reLayout();
                            this._binds = this.node = null
                        }
                    },
                    _slide: function(a) {
                        var b = this
                          , c = b.grid
                          , d = a ? b._height : 0;
                        b._stage = 2;
                        f.add(b.node, "gridxPullerAnim");
                        f.add(c.mainNode, "gridxPullerAnim");
                        setTimeout(function() {
                            var a = b.node.offsetHeight - d;
                            b.node.style.height = d + "px";
                            c.mainNode.style.height = c.mainNode.clientHeight + a + "px";
                            setTimeout(function() {
                                f.remove(b.node, "gridxPullerAnim");
                                f.remove(c.mainNode, "gridxPullerAnim");
                                c.vLayout.reLayout();
                                b._stage = 0
                            }, 500)
                        }, 10)
                    }
                }))
            })
        },
        "gridx/modules/CellWidget": function() {
            define("dojo/_base/declare dojo/query dojo/_base/array dojo/_base/event dojo/_base/sniff dojo/dom-class dojo/keys dijit/registry dijit/a11y dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin ../core/_Module ./NavigableCell".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a) {
                var h = function() {
                    return ""
                }
                  , r = q([d, c, b], {
                    content: "",
                    setCellValue: null,
                    cell: null,
                    postMixInProperties: function() {
                        this.templateString = ['\x3cdiv class\x3d"gridxCellWidget"\x3e', this.content, "\x3c/div\x3e"].join("")
                    },
                    postCreate: function() {
                        var a = this
                          , b = a.domNode;
                        a.connect(b, "onmousedown", function(c) {
                            c.target === b || a.cell.column.allowEventBubble || (c.cancelBubble = !0)
                        });
                        a._cellCnnts = []
                    },
                    startup: function() {
                        var a = this
                          , b = a.cell
                          , c = b.grid.cellWidget
                          , d = a._started;
                        a.inherited(arguments);
                        n.forEach(a._cellCnnts, a.disconnect, a);
                        d && c.uninitializeCellWidget(a, b);
                        c.initializeCellWidget(a, b);
                        b = [];
                        c.collectCellWidgetConnects(a, b);
                        a._cellCnnts = n.map(b, function(b) {
                            return a.connect.apply(a, b)
                        })
                    },
                    setValue: function(a, b, c) {
                        try {
                            var d = this;
                            p(".gridxHasGridCellValue", d.domNode).map(function(a) {
                                return f.byNode(a)
                            }).forEach(function(c) {
                                if (c) {
                                    var h = k.contains(c.domNode, "gridxUseStoreData") ? b : a
                                      , e = c._handleOnChange;
                                    c._handleOnChange = function() {
                                        c._handleOnChange = e
                                    }
                                    ;
                                    d.setCellValue || c.set("value", h)
                                }
                            });
                            d.setCellValue && d.setCellValue(a, b, d, c)
                        } catch (z) {
                            console.error("Can not set cell value: ", z)
                        }
                    }
                });
                return q(a, {
                    name: "cellWidget",
                    required: ["navigableCell"],
                    cellMixin: {
                        widget: function() {
                            return this.grid.cellWidget.getCellWidget(this.row.id, this.column.id)
                        }
                    },
                    constructor: function() {
                        this._init()
                    },
                    preload: function() {
                        var a = this.grid.body;
                        this.batchConnect([a, "onAfterRow", "_showDijits"], [a, "onAfterCell", "_showDijit"], [a, "onUnrender", "_onUnrenderRow"])
                    },
                    destroy: function() {
                        this.inherited(arguments);
                        var a, b, c, d, h = this.grid._columns;
                        for (a = h.length - 1; 0 <= a; --a)
                            if (c = h[a],
                            d = c._cellWidgets) {
                                for (b in d)
                                    d[b].destroyRecursive();
                                delete c._cellWidgets
                            }
                    },
                    backupCount: 50,
                    setCellDecorator: function(a, b, c, d) {
                        var h = this._decorators[a];
                        h || (h = this._decorators[a] = {});
                        (a = h[b]) || (a = h[b] = {});
                        a.decorator = c;
                        a.setCellValue = d;
                        a.widget = null
                    },
                    restoreCellDecorator: function(a, b) {
                        var c = this._decorators[a];
                        if (c) {
                            var d = c[b];
                            if (d && d.widget) {
                                var h = d.widget.domNode.parentNode;
                                h && (h.innerHTML = null);
                                window.setTimeout(function() {
                                    d.widget.destroyRecursive();
                                    d.widget = null;
                                    d.decorator = null;
                                    d.setCellValue = null
                                }, 100)
                            }
                            delete c[b]
                        }
                    },
                    getCellWidget: function(a, b) {
                        var c = this.grid.body.getCellNode({
                            rowId: a,
                            colId: b
                        });
                        return c && (c = p(".gridxCellWidget", c)[0]) ? f.byNode(c) : null
                    },
                    onCellWidgetCreated: function(a, b) {
                        b.onCellWidgetCreated && b.onCellWidgetCreated.apply(this, arguments)
                    },
                    initializeCellWidget: function(a, b) {
                        var c = b.column;
                        c.initializeCellWidget && c.initializeCellWidget.apply(this, arguments)
                    },
                    uninitializeCellWidget: function(a, b) {
                        var c = b.column;
                        c.uninitializeCellWidget && c.uninitializeCellWidget.apply(this, arguments)
                    },
                    collectCellWidgetConnects: function(a, b) {
                        var c = a.cell.column;
                        c.getCellWidgetConnects && b.push.apply(b, c.getCellWidgetConnects(a, a.cell))
                    },
                    _init: function() {
                        this._decorators = {};
                        var a, b, c = this.grid._columns;
                        for (a = c.length - 1; 0 <= a; --a)
                            b = c[a],
                            b.widgetsInCell && (b.userDecorator = b.decorator || h,
                            b.decorator = this._dummyDecorator,
                            b._cellWidgets = {},
                            b._backupWidgets = [])
                    },
                    _dummyDecorator: function(a, b, c, d) {
                        b = d.column;
                        return !b.needCellWidget || b.needCellWidget(d) ? "" : a
                    },
                    _showDijits: function(a) {
                        var b = this;
                        n.forEach(a.cells(), function(a) {
                            var c = a.column.def();
                            if ((!c.needCellWidget || c.needCellWidget(a)) && (c.userDecorator || b._getSpecialCellDec(a.row.id, c.id)) && (c = a.contentNode())) {
                                a = b._prepareCellWidget(a);
                                if (l("ie") || l("trident"))
                                    for (; c.childNodes.length; )
                                        c.removeChild(c.firstChild);
                                else
                                    c.innerHTML = "";
                                a.placeAt(c);
                                a.startup();
                                c.setAttribute("aria-labelledby", a.id);
                                c.removeAttribute("aria-label")
                            }
                        })
                    },
                    _showDijit: function(a) {
                        var b = a.column.def();
                        b.needCellWidget && !b.needCellWidget(a) || !b.userDecorator && !this._getSpecialCellDec(a.row.id, b.id) || (b = this._prepareCellWidget(a),
                        a = a.contentNode(),
                        a.innerHTML = "",
                        b.placeAt(a),
                        b.startup(),
                        a.setAttribute("aria-labelledby", b.id),
                        a.removeAttribute("aria-label"))
                    },
                    _prepareCellWidget: function(a) {
                        var b = a.column.def()
                          , c = this._getSpecialWidget(a);
                        c || (c = b._backupWidgets.shift(),
                        c || (c = new r({
                            content: b.userDecorator(),
                            setCellValue: b.setCellValue
                        }),
                        this.onCellWidgetCreated(c, a.column)),
                        b._cellWidgets[a.row.id] = c);
                        c.cell = a;
                        c.setValue(a.data(), a.rawData(), !0);
                        return c
                    },
                    _onUnrenderRow: function(a) {
                        for (var b = this.grid._columns, c = this.arg("backupCount"), d = function(a, b) {
                            var d = a._cellWidgets[b];
                            a._backupWidgets.length < c ? (d.domNode.parentNode && d.domNode.parentNode.removeChild(d.domNode),
                            a._backupWidgets.push(d)) : d.destroyRecursive()
                        }, h = 0, e = b.length; h < e; ++h) {
                            var f = b[h]
                              , g = f._cellWidgets;
                            if (g)
                                if (this.model.isId(a))
                                    g[a] && (d(f, a),
                                    delete g[a]);
                                else {
                                    for (var k in g)
                                        d(f, k);
                                    f._cellWidgets = {}
                                }
                        }
                    },
                    _getSpecialCellDec: function(a, b) {
                        var c = this._decorators[a];
                        return c && c[b]
                    },
                    _getSpecialWidget: function(a) {
                        var b = this._decorators[a.row.id];
                        if (b && (b = b[a.column.id])) {
                            if (!b.widget && b.decorator)
                                try {
                                    var c = b.widget = new r({
                                        content: b.decorator(a.data(), a.row.id, a.row.visualIndex(), a),
                                        setCellValue: b.setCellValue
                                    });
                                    this.onCellWidgetCreated(c, a.column)
                                } catch (y) {
                                    console.error("Edit:", y)
                                }
                            return b.widget
                        }
                        return null
                    }
                })
            })
        },
        "gridx/modules/NavigableCell": function() {
            define("dojo/_base/declare dojo/_base/event dojo/_base/sniff dojo/dom-class dojo/keys dijit/a11y ../core/_Module".split(" "), function(q, p, n, m, l, k, g) {
                return g.register(q(g, {
                    name: "navigableCell",
                    preload: function() {
                        this.grid.focus.registerArea({
                            name: "navigablecell",
                            priority: 1,
                            scope: this,
                            doFocus: this._doFocus,
                            doBlur: this._doBlur,
                            onFocus: this._onFocus,
                            onBlur: this._onBlur,
                            connects: [this.connect(this.grid, "onCellKeyDown", "_onKey")]
                        })
                    },
                    _doFocus: function(f, e) {
                        if (this._navigating) {
                            var d = this._navElems
                              , c = function() {
                                var b = 0 > e ? d.highest || d.last : d.lowest || d.first;
                                if (b)
                                    try {
                                        b.focus()
                                    } catch (a) {}
                            };
                            n("webkit") ? c() : setTimeout(c, 5);
                            return !0
                        }
                        return !1
                    },
                    _doBlur: function(f, e) {
                        if (f) {
                            var d = this
                              , c = d.model
                              , b = d.grid
                              , a = b.view
                              , h = b.body
                              , g = d._navElems
                              , k = g.lowest || g.first
                              , g = g.last || g.highest || k;
                            (n("ie") || n("trident") ? f.srcElement : f.target) == (0 < e ? g : k) ? (p.stop(f),
                            c.when({
                                id: d._focusRowId
                            }, function() {
                                function f(g, l) {
                                    h._nextCell(g, l, k, r).then(function(g) {
                                        d._focusColId = b._columns[g.c].id;
                                        var k = a.getRowInfo({
                                            visualIndex: g.r
                                        });
                                        d._focusRowId = c.indexToId(k.rowIndex, k.parentId);
                                        d._beginNavigate(d._focusRowId, d._focusColId) ? (h._focusCellCol = g.c,
                                        h._focusCellRow = g.r,
                                        d._doFocus(null, e)) : f(g.r, g.c)
                                    })
                                }
                                var g = a.getRowInfo({
                                    parentId: c.treePath(d._focusRowId).pop(),
                                    rowIndex: c.idToIndex(d._focusRowId)
                                }).visualIndex
                                  , k = 0 < e ? 1 : -1
                                  , r = function(a, c) {
                                    return d._isNavigable(b._columns[c].id) && b._columns[c].decorator
                                };
                                f(g, b._columnsById[d._focusColId].index)
                            })) : (b.focus._noBlur = 1,
                            setTimeout(function() {
                                b.focus._noBlur = 0
                            }, 0));
                            return !1
                        }
                        this._navigating = !1;
                        return !0
                    },
                    _isNavigable: function(f) {
                        return (f = this.grid._columnsById[f]) && (f.navigable || void 0 === f.navigable)
                    },
                    _beginNavigate: function(f, e) {
                        if (this._isNavigable(e)) {
                            this._focusColId = e;
                            this._focusRowId = f;
                            var d = this._navElems = k._getTabNavigable(this.grid.body.getCellNode({
                                rowId: f,
                                colId: e
                            }));
                            return this._navigating = (d.highest || d.last) && (d.lowest || d.first)
                        }
                        return !1
                    },
                    _onBlur: function() {
                        this._navigating = !1;
                        this.grid.edit && this.grid.edit._applyAll()
                    },
                    _onFocus: function(f) {
                        for (var e = f.target, d = this.grid.domNode; e && e !== d && !m.contains(e, "gridxCell"); )
                            e = e.parentNode;
                        if (e && e !== d) {
                            var d = e
                              , c = e.getAttribute("colid");
                            for (this.grid.hScroller.scrollToColumn(c); e && !m.contains(e, "gridxRow"); )
                                e = e.parentNode;
                            if (e)
                                return e = e.getAttribute("rowid"),
                                d != f.target && this._beginNavigate(e, c)
                        }
                        return !1
                    },
                    _onKey: function(f) {
                        var e = this.grid.focus;
                        f.keyCode != l.F2 || this._navigating || "body" != e.currentArea() ? f.keyCode == l.ESCAPE && this._navigating && "navigablecell" == e.currentArea() && (this._navigating = !1,
                        e.focusArea("body")) : this._beginNavigate(f.rowId, f.columnId) && (p.stop(f),
                        e.focusArea("navigablecell"))
                    }
                }))
            })
        },
        "gridx/modules/Edit": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/query dojo/_base/json dojo/_base/Deferred dojo/_base/sniff dojo/_base/array dojo/DeferredList dojo/dom-class dojo/dom-style dojo/dom-geometry dojo/dom-construct dojo/keys dojox/gesture/tap dijit/a11y ../core/_Module dojo/date/locale ../core/model/extensions/Modify dojo/_base/event dijit/form/Button dijit/Toolbar dijit/form/TextBox".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y) {
                function z(a, b, c, d) {
                    return !a.storePattern || "date" != a.dataType && "time" != a.dataType ? a.editorArgs && !0 === a.editorArgs.useGridData ? void 0 === c ? null : c : void 0 === c ? null : b : u.parse(b, a.storePattern)
                }
                function w(a, b, c, d) {
                    return (b = u.parse(d[a], b)) ? u.format(b, c) : d[a]
                }
                function v(a) {
                    return a && function(b, c, d) {
                        var h = d.gridCellEditField;
                        d = d.cell;
                        var e = d.column.editorArgs;
                        h.set(e && e.valueField || "value", a(c, b, d, h))
                    }
                }
                return q(t, {
                    name: "edit",
                    forced: ["cellWidget"],
                    modelExtensions: [x],
                    constructor: function() {
                        this._init()
                    },
                    getAPIPath: function() {
                        return {
                            edit: this
                        }
                    },
                    preload: function() {
                        var a = this
                          , f = a.grid;
                        if (a.arg("lazySave")) {
                            var g = function(a) {
                                var h = a.node()
                                  , e = n(".gridxCellBg", h)
                                  , f = a.row.id
                                  , g = a.column.id;
                                a.row.visualIndex();
                                if (!e.length) {
                                    var k = d.getComputedStyle(h)
                                      , k = parseInt(c.getPadBorderExtents(h, k).l, 10)
                                      , e = ["\x3cdiv class\x3d'gridxCellEditedBgWrapper'\x3e", "\x3cdiv\trowid\x3d'" + f + "' ", "colid\x3d'" + g + "' ", "class\x3d'gridxCellEditedBg'\x3e\x3cspan\x3e\u25e5\x3c/span\x3e\x3c/div\x3e\x3c/div\x3e"].join("")
                                      , f = b.toDom(e)
                                      , e = f.firstChild;
                                    b.place(f, a.node(), "first");
                                    a = c.position(e);
                                    h = c.position(h);
                                    f.style.top = h.y - a.y + "px";
                                    f.style.left = k + "px"
                                }
                            };
                            a.connect(f.body, "onAfterRow", function(b) {
                                var c = f._columnsById;
                                n(".gridxCell", b.node()).forEach(function(d) {
                                    d = d.getAttribute("colid");
                                    a.model.isChanged(b.id, c[d].field) ? (f.body.addClass(b.id, d, "gridxCellChanged"),
                                    g(f.cell(b.id, d, 1))) : f.body.removeClass(b.id, d, "gridxCellChanged")
                                })
                            });
                            a.connect(f.body, "onAfterCell", function(c) {
                                c.node();
                                var d = c.row.id
                                  , h = c.column.id;
                                c.row.visualIndex();
                                a.model.isChanged(d, f._columnsById[h].field) ? (f.body.addClass(d, h, "gridxCellChanged"),
                                g(c)) : (f.body.removeClass(d, h, "gridxCellChanged"),
                                c = c.node(),
                                c = n(".gridxCellBg", c),
                                c.length && b.destroy(c))
                            })
                        }
                        f.domNode.removeAttribute("aria-readonly");
                        f.touch ? (a.connect(f.bodyNode, h.doubletap, function(b) {
                            b = n(b.target).closest(".gridxCell", f.bodyNode);
                            var c = b.closest(".gridxRow", f.bodyNode)[0];
                            b = b[0];
                            c && b && a._onUIBegin({
                                rowId: c.getAttribute("rowid"),
                                columnId: b.getAttribute("colid")
                            })
                        }),
                        a.aspect(f, "onCellTouchEnd", function(b) {
                            var c = f._columnsById[b.columnId];
                            n(".gridxEditFocus", f.bodyNode).removeClass("gridxEditFocus");
                            c.alwaysEditing && a._showButtons(b.rowId, b.columnId)
                        })) : a.aspect(f, "onCellDblClick", function(b) {
                            e.contains(b.target, "gridxTreeExpandoIcon") || e.contains(b.target, "gridxTreeExpandoInner") || a._onUIBegin(b)
                        });
                        a.aspect(f.cellWidget, "onCellWidgetCreated", "_onCellWidgetCreated");
                        a.aspect(f.cellWidget, "initializeCellWidget", function(a, b) {
                            var c = b.column;
                            c.initializeEditor && a.gridCellEditField && c.initializeEditor(a.gridCellEditField, b)
                        });
                        a.aspect(f.cellWidget, "uninitializeCellWidget", function(a, b) {
                            var c = b.column;
                            c.uninitializeEditor && a.gridCellEditField && c.uninitializeEditor(a.gridCellEditField, b)
                        });
                        a.aspect(f.cellWidget, "collectCellWidgetConnects", function(a, b) {
                            var c = a.cell.column;
                            c.getEditorConnects && (c = c.getEditorConnects(a, a.cell),
                            b.push.apply(b, c))
                        });
                        a.aspect(f.body, "onAfterRow", function(a) {
                            n(".gridxCell", a.node()).forEach(function(a) {
                                f._columnsById[a.getAttribute("colid")].editable && a.removeAttribute("aria-readonly")
                            })
                        })
                    },
                    lazySave: !1,
                    load: function() {
                        this._initFocus();
                        this.loaded.callback()
                    },
                    cellMixin: {
                        beginEdit: function() {
                            return this.grid.edit.begin(this.row.id, this.column.id)
                        },
                        cancelEdit: function() {
                            return this.grid.edit.cancel(this.row.id, this.column.id)
                        },
                        applyEdit: function() {
                            return this.grid.edit.apply(this.row.id, this.column.id)
                        },
                        isEditing: function() {
                            return this.grid.edit.isEditing(this.row.id, this.column.id)
                        },
                        editor: function() {
                            return this.grid.edit.getEditor(this.row.id, this.column.id)
                        },
                        isEditable: function() {
                            var a = this.column;
                            return a.isEditable() && (!a.canEdit || a.canEdit(this))
                        }
                    },
                    columnMixin: {
                        isEditable: function() {
                            return this.grid._columnsById[this.id].editable
                        },
                        isAlwaysEditing: function() {
                            return this.grid._columnsById[this.id].alwaysEditing
                        },
                        setEditable: function(a) {
                            this.grid._columnsById[this.id].editable = !!a;
                            return this
                        },
                        editor: function() {
                            return this.grid._columnsById[this.id].editor
                        },
                        setEditor: function(a, b) {
                            this.grid.edit.setEditor(this.id, a, b);
                            return this
                        }
                    },
                    begin: function(a, b) {
                        var c = new l
                          , d = this
                          , h = d.grid;
                        if (d.isEditing(a, b))
                            d._record(a, b),
                            d._focusEditor(a, b),
                            c.callback(!0),
                            d.onBegin(h.cell(a, b, 1));
                        else {
                            var e = h.row(a, 1)
                              , f = h._columnsById[b];
                            e && e.cell(b, 1).isEditable() ? (h.cellWidget.setCellDecorator(a, b, d._getDecorator(b), v(f.editorArgs && f.editorArgs.toEditor || p.partial(z, f))),
                            d._record(a, b),
                            h.body.refreshCell(e.visualIndex(), f.index).then(function() {
                                h.resize();
                                d._focusEditor(a, b);
                                c.callback(!0);
                                d.onBegin(h.cell(a, b, 1))
                            })) : c.callback(!1)
                        }
                        return c
                    },
                    cancel: function(a, b) {
                        var c = new l
                          , d = this
                          , h = d.grid
                          , e = d.model
                          , f = h.row(a, 1);
                        if (f) {
                            var g = h.cellWidget
                              , k = h._columnsById[b];
                            k && (k.alwaysEditing ? (e = e.byId(a),
                            g = g.getCellWidget(a, b),
                            g.setValue(e.data[b], e.rawData[k.field]),
                            c.callback(),
                            d.onCancel(h.cell(a, b, 1))) : (d._erase(a, b),
                            g.restoreCellDecorator(a, b),
                            h.body.refreshCell(f.visualIndex(), k.index).then(function() {
                                c.callback();
                                var e = h.cell(a, b, 1)
                                  , f = e && e.node();
                                f && (f.removeAttribute("aria-labelledby"),
                                f.innerHTML && "\x26nbsp;" !== f.innerHTML || f.setAttribute("aria-label", "empty cell"));
                                d.onCancel(e)
                            })))
                        } else
                            c.callback();
                        return c
                    },
                    apply: function(a, b) {
                        var c = new l
                          , d = this
                          , h = d.grid
                          , e = h.cell(a, b, 1);
                        if (e) {
                            var f = h.cellWidget.getCellWidget(a, b)
                              , g = f && f.gridCellEditField;
                            if (g && (!p.isFunction(g.isValid) || g.isValid())) {
                                var k = e.column.editorArgs
                                  , g = g.get(k && k.valueField || "value")
                                  , r = function(f, g) {
                                    f || console.warn("Can not apply change! Error message: ", g);
                                    d._erase(a, b);
                                    e.column.alwaysEditing ? (c.callback(f),
                                    d.onApply(e, f, g, d.arg("lazy"))) : (h.cellWidget.restoreCellDecorator(a, b),
                                    h.body.refreshCell(e.row.visualIndex(), e.column.index()).then(function() {
                                        c.callback(f);
                                        h.resize();
                                        var a = e.node();
                                        a.removeAttribute("aria-labelledby");
                                        a.innerHTML && "\x26nbsp;" !== a.innerHTML || a.setAttribute("aria-label", "empty cell");
                                        d.onApply(e, f, g, d.arg("lazy"))
                                    }))
                                };
                                try {
                                    g = isNaN(g) && "number" === typeof g ? "" : g,
                                    k && k.fromEditor ? g = k.fromEditor(g, f.cell) : e.column.storePattern && (g = u.format(g, e.column.storePattern)),
                                    p.isFunction(e.column.customApplyEdit) ? l.when(e.column.customApplyEdit(e, g), function() {
                                        r(!0)
                                    }, function(a) {
                                        r(!1, a)
                                    }) : e.rawData() === g ? r(!0) : d.arg("lazySave") ? (f = {},
                                    f[h._columnsById[b].field] = g,
                                    d.model.set(a, f),
                                    r(!0)) : l.when(e.setRawData(g), function() {
                                        r(!0)
                                    }, function(a) {
                                        r(!1, a)
                                    })
                                } catch (D) {
                                    r(!1, D)
                                }
                                return c
                            }
                        }
                        c.callback(!1);
                        return c
                    },
                    isEditing: function(a, b) {
                        var c = this.grid._columnsById[b];
                        return c && c.alwaysEditing ? !0 : !!this.getEditor(a, b)
                    },
                    setEditor: function(a, b, c) {
                        a = this.grid._columnsById[a];
                        var d = a.editorArgs = a.editorArgs || {};
                        a.editor = b;
                        p.mixin(d, c || {})
                    },
                    getEditor: function(a, b) {
                        var c = this.grid.cellWidget.getCellWidget(a, b);
                        return c && c.gridCellEditField
                    },
                    getLazyData: function(a, b) {
                        var c, d = this.grid._columnsById[b].field;
                        if (this.arg("lazy") && (c = this._lazyDataChangeList[a]))
                            return c[d] ? c[d].list[c[d].index] : void 0
                    },
                    onBegin: function() {},
                    onApply: function() {},
                    onCancel: function() {},
                    _init: function() {
                        this._editingCells = {};
                        this._lazyIds = {};
                        this._lazyData = {};
                        this._lazyDataChangeList = {};
                        this._inCallBackMode = !1;
                        this.grid.touch && (this.buttons = 1);
                        for (var a = 0, b = this.grid._columns, c = b.length; a < c; ++a) {
                            var d = b[a];
                            if (d.storePattern && d.field && ("date" == d.dataType || "time" == d.dataType)) {
                                d.gridPattern = d.gridPattern || !p.isFunction(d.formatter) && (p.isObject(d.formatter) || "string" == typeof d.formatter) && d.formatter || d.storePattern;
                                var h;
                                p.isString(d.storePattern) && (h = d.storePattern,
                                d.storePattern = {},
                                d.storePattern[d.dataType + "Pattern"] = h);
                                d.storePattern.selector = d.dataType;
                                p.isString(d.gridPattern) && (h = d.gridPattern,
                                d.gridPattern = {},
                                d.gridPattern[d.dataType + "Pattern"] = h);
                                d.gridPattern.selector = d.dataType;
                                d.formatter = p.partial(w, d.field, d.storePattern, d.gridPattern)
                            }
                        }
                        this._initAlwaysEdit()
                    },
                    _initAlwaysEdit: function() {
                        var a = this;
                        g.forEach(a.grid._columns, function(b) {
                            if (b.alwaysEditing) {
                                b.editable = !0;
                                b.navigable = !0;
                                var c = b.needCellWidget;
                                b.needCellWidget = function(a) {
                                    return (!c || c.apply(b, arguments)) && a.isEditable()
                                }
                                ;
                                b.decorator != a._dummyDecorator && (b._userDec = b.decorator);
                                b.userDecorator = a._getDecorator(b.id);
                                b.setCellValue = v(b.editorArgs && b.editorArgs.toEditor || p.partial(z, b));
                                b.decorator = a._dummyDecorator;
                                b._cellWidgets = {};
                                b._backupWidgets = []
                            }
                        })
                    },
                    _dummyDecorator: function(a, b, c, d) {
                        var h = d.column;
                        return !h.needCellWidget || h.needCellWidget(d) ? "" : h._userDec ? h._userDec(a, b, c, d) : a
                    },
                    _getColumnEditor: function(a) {
                        a = this.grid._columnsById[a].editor;
                        return p.isFunction(a) ? a.prototype.declaredClass.replace(/\//g, ".") : p.isString(a) ? a.replace(/\//g, ".") : "dijit.form.TextBox"
                    },
                    _onCellWidgetCreated: function(a, b) {
                        var c = this
                          , d = a.gridCellEditField;
                        if (d) {
                            if (a.btns) {
                                var h = function(b) {
                                    b.stopPropagation();
                                    a.cell.cancelEdit().then(function() {
                                        e.remove(a.btns, "gridxEditFocus");
                                        c.grid.body.onRender();
                                        c._blur()
                                    })
                                }
                                  , f = function(b) {
                                    b.stopPropagation();
                                    a.cell.applyEdit().then(function(b) {
                                        b && (e.remove(a.btns, "gridxEditFocus"),
                                        c.grid.body.onRender(),
                                        c._blur())
                                    })
                                };
                                a.connect(a.btnOK, "onclick", f);
                                a.connect(a.btnOK, "ontouchend", f);
                                a.connect(a.btnCancel, "onclick", h);
                                a.connect(a.btnCancel, "ontouchend", h)
                            } else
                                b.alwaysEditing && a.connect(d, "onChange", function() {
                                    var h = a.cell.row.id
                                      , e = b.editorArgs && b.editorArgs.applyDelay || 500;
                                    clearTimeout(d._timeoutApply);
                                    d._timeoutApply = setTimeout(function() {
                                        c.apply(h, b.id)
                                    }, e)
                                });
                            if (b.onEditorCreated)
                                b.onEditorCreated(d, b)
                        }
                    },
                    _focusEditor: function(a, b, c) {
                        if ((a = this.getEditor(a, b)) && !a.focused && p.isFunction(a.focus) || c)
                            this.grid.hScroller.scrollToColumn(b),
                            a.focus()
                    },
                    _showButtons: function(a, b) {
                        var c = this.grid;
                        if (c._columnsById[b].alwaysEditing) {
                            n(".gridxEditFocus", c.bodyNode).removeClass("gridxEditFocus");
                            var d = c.cellWidget.getCellWidget(a, b);
                            d && d.btns && e.add(d.btns, "gridxEditFocus");
                            c.body.onRender(void 0, void 0, {
                                _updateBody: !1
                            })
                        }
                    },
                    _hideButtons: function() {
                        n(".gridxEditFocus", this.grid.bodyNode).removeClass("gridxEditFocus");
                        this.grid.body.onRender()
                    },
                    _getDecorator: function(a) {
                        var b = this._getColumnEditor(a)
                          , c = this.grid._columnsById[a];
                        a = c.editorArgs || {};
                        var d = a.useGridData
                          , h = a.constraints || {}
                          , e = a.props || "";
                        a = c.gridPattern || c.storePattern;
                        var f = c.textDir || this.grid.textDir;
                        a && (h = p.mixin({}, a, h));
                        h = m.toJson(h);
                        h = h.substring(1, h.length - 1);
                        e = e ? e + ",scrollOnFocus: false" : "scrollOnFocus: false";
                        f ? e += [e ? ", " : "", 'dir: "', this.grid.isLeftToRight() ? "ltr" : "rtl", '", textDir: "', f, h ? '", ' : '"'].join("") : e && h && (e += ", ");
                        var g = this;
                        return function() {
                            return [g.arg("buttons") ? ["\x3cdiv class\x3d'gridxEditButtons ", c.alwaysEditing ? "gridxAlwaysEdit" : "", "' data-dojo-attach-point\x3d'btns'\x3e\x3cdiv tabindex\x3d'0' class\x3d'gridxEditOK' data-dojo-attach-point\x3d'btnOK'\x3e\x3c/div\x3e\x3cdiv tabindex\x3d'0' class\x3d'gridxEditCancel' data-dojo-attach-point\x3d'btnCancel'\x3e\x3c/div\x3e\x3c/div\x3e"].join("") : "", "\x3cdiv data-dojo-type\x3d'", b, "' data-dojo-attach-point\x3d'gridCellEditField' class\x3d'gridxCellEditor gridxHasGridCellValue ", d ? "" : "gridxUseStoreData", "' data-dojo-props\x3d'", e, h, "'\x3e\x3c/div\x3e"].join("")
                        }
                    },
                    _record: function(a, b) {
                        var c = this._editingCells
                          , d = c[a];
                        d || (d = c[a] = {});
                        d[b] = 1
                    },
                    _erase: function(a, b) {
                        var c = this._editingCells[a];
                        c && delete c[b]
                    },
                    _applyAll: function() {
                        var a = this._editingCells, b, c;
                        for (b in a)
                            for (c in a[b])
                                this.apply(b, c)
                    },
                    _onUIBegin: function(a) {
                        this.isEditing(a.rowId, a.columnId) || this._applyAll();
                        return this.begin(a.rowId, a.columnId)
                    },
                    _initFocus: function() {
                        var a = this
                          , b = a.grid
                          , c = b.focus;
                        c ? c.registerArea({
                            name: "edit",
                            priority: 1,
                            scope: a,
                            doFocus: a._onFocus,
                            doBlur: a._doBlur,
                            onFocus: a._onFocus,
                            onBlur: a._onBlur,
                            connects: [a.aspect(b, "onCellKeyDown", "_onKey"), a.aspect(a, "_focusEditor", "_focus"), a.aspect(b.focus, "onFocusArea", function(c) {
                                "navigablecell" == c && a._showButtons(b.navigableCell._focusRowId, b.navigableCell._focusColId)
                            }), a.aspect(b.focus, "onBlurArea", function(b) {
                                "navigablecell" == b && a._hideButtons()
                            })]
                        }) : a.aspect(b, "onCellMouseDown", function(b) {
                            var c = a._editingCells;
                            c[b.rowId] && c[b.rowId][b.columnId] || a._applyAll()
                        })
                    },
                    _onFocus: function(a) {
                        if (a) {
                            var b = n(a.target).closest(".gridxCell", this.grid.bodyNode)[0];
                            return b && (a = b.getAttribute("colid"),
                            b = b.parentNode.parentNode.parentNode.parentNode.getAttribute("rowid"),
                            this.isEditing(b, a)) ? (this._record(b, a),
                            !this.grid._columnsById[a].alwaysEditing) : !1
                        }
                        return this._editing
                    },
                    _doBlur: function(a, b) {
                        var c = this
                          , d = c.grid
                          , h = d.view
                          , e = d.body;
                        if (c._editing && b) {
                            var f = d.body.getCellNode({
                                rowId: c._focusCellRow,
                                colId: c._focusCellCol
                            })
                              , f = r._getTabNavigable(f);
                            !a || (f.first || f.last) && a.target != (0 > b ? f.first : f.last) || (d.focus.stopEvent(a),
                            f = h.getRowInfo({
                                parentId: c.model.parentId(c._focusCellRow),
                                rowIndex: c.model.idToIndex(c._focusCellRow)
                            }).visualIndex,
                            e._nextCell(f, d._columnsById[c._focusCellCol].index, 0 < b ? 1 : -1, function(a, b) {
                                return d._columns[b].editable
                            }).then(function(a) {
                                c._applyAll();
                                c._focusCellCol = d._columns[a.c].id;
                                var b = h.getRowInfo({
                                    visualIndex: a.r
                                });
                                c._focusCellRow = c.model.indexToId(b.rowIndex, b.parentId);
                                e._focusCellCol = a.c;
                                e._focusCellRow = a.r;
                                c.begin(c._focusCellRow, c._focusCellCol)
                            }));
                            return !1
                        }
                        return !0
                    },
                    _onBlur: function() {
                        this._applyAll();
                        this._editing = !1;
                        return !0
                    },
                    _focus: function(a, b) {
                        this._editing = !0;
                        this._focusCellCol = b;
                        this._focusCellRow = a;
                        this.grid.focus.focusArea("edit")
                    },
                    _blur: function() {
                        this._editing = !1;
                        var a = this.grid.focus;
                        a && a.focusArea("body")
                    },
                    _onKey: function(b) {
                        var c = this
                          , d = c.grid
                          , h = d._isCtrlKey(b)
                          , e = d._columnsById[b.columnId];
                        if (e.editable) {
                            var f = c.isEditing(b.rowId, b.columnId);
                            b.keyCode != a.ENTER || e.editorIgnoresEnter ? b.keyCode == a.ESCAPE && f ? (d.focus.stopEvent(b),
                            c.cancel(b.rowId, b.columnId).then(p.hitch(c, c._blur)).then(function() {
                                c._hideButtons();
                                d.focus.focusArea("body")
                            })) : 90 == b.keyCode && h ? c.arg("lazySave") && c.model.undo() : 89 == b.keyCode && h ? c.arg("lazySave") && c.model.redo() : 83 == b.keyCode && h && c.arg("lazySave") && (c.model.save(),
                            b.preventDefault()) : f ? c.apply(b.rowId, b.columnId).then(function(a) {
                                e.alwaysEditing ? (c._focusEditor(b.rowId, b.columnId),
                                c._showButtons(b.rowId, b.columnId)) : a && c._blur()
                            }) : "body" == d.focus.currentArea() && (d.focus.stopEvent(b),
                            c._onUIBegin(b))
                        }
                    }
                })
            })
        },
        "gridx/core/model/extensions/Modify": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/DeferredList dojo/_base/Deferred dojo/_base/array ../_Extension".split(" "), function(q, p, n, m, l, k) {
                return q(k, {
                    name: "modify",
                    priority: 19,
                    constructor: function(g, f) {
                        this._globalOptList = [];
                        this._globalOptIndex = -1;
                        this._cellOptList = {};
                        this._lazyData = {};
                        this._lazyRawData = {};
                        this._cache = g._cache;
                        this._mixinAPI("set", "redo", "undo", "isChanged", "getChanged", "save", "clearLazyData");
                        g.onSetLazyData = function() {}
                        ;
                        g.onRedo = g.onUndo = function() {}
                    },
                    byId: function(g) {
                        var f = this.inner._call("byId", arguments);
                        if (!f)
                            return f;
                        f = p.mixin({}, f);
                        f.rawData = p.mixin({}, f.rawData, this._lazyRawData[g]);
                        f.data && (f.data = p.mixin({}, f.data, this._lazyData[g]));
                        return f
                    },
                    byIndex: function(g, f) {
                        var e = this.inner._call("byIndex", arguments)
                          , d = this.inner._call("indexToId", arguments);
                        if (!e)
                            return e;
                        e = p.mixin({}, e);
                        e.rawData = p.mixin({}, e.rawData, this._lazyRawData[d]);
                        e.data && (e.data = p.mixin({}, e.data, this._lazyData[d]));
                        return e
                    },
                    set: function(g, f) {
                        var e = {}
                          , d = this._globalOptList
                          , c = this._globalOptIndex;
                        e.type = 0;
                        e.rowId = g;
                        e.newData = f;
                        e.oldData = {};
                        var b = this.byId(g).rawData, a;
                        for (a in f)
                            e.oldData[a] = b[a];
                        d.splice(c + 1, d.length - 1 - c, e);
                        this._globalOptIndex++;
                        e = this.byId(g);
                        this._set(g, f);
                        d = this.byId(g);
                        this.onSet(g, c, d, e)
                    },
                    undo: function() {
                        var g = this._globalOptList[this._globalOptIndex];
                        return g ? (this._globalOptIndex--,
                        0 === g.type && this._onUndo(g.rowId, g.oldData, g.newData),
                        !0) : !1
                    },
                    redo: function() {
                        var g = this._globalOptList[this._globalOptIndex + 1];
                        return g ? (this._globalOptIndex++,
                        0 === g.type && this._onRedo(g.rowId, g.newData, g.oldData),
                        !0) : !1
                    },
                    clearLazyData: function() {
                        for (this.getChanged(); 0 <= this._globalOptIndex; )
                            this.undo();
                        this._globalOptList = [];
                        this._lazyRawData = {};
                        this._lazyData = {}
                    },
                    save: function() {
                        var g = this, f = g.getChanged(), e = [], d, c = new m;
                        f.length ? (l.forEach(f, function(b) {
                            b = g._saveRow(b);
                            e.push(b)
                        }),
                        d = new n(e),
                        d.then(function() {
                            g._globalOptList = [];
                            g._globalOptIndex = -1;
                            g._lazyRawData = {};
                            g._lazyData = {};
                            g.onSave(d);
                            c.callback()
                        }, function() {
                            c.errback()
                        })) : c.callback();
                        return c
                    },
                    isChanged: function(g, f) {
                        var e = this.inner._call("byId", [g])
                          , d = this._lazyRawData[g];
                        if (f) {
                            if (d)
                                return void 0 !== d[f] ? d[f] !== e.rawData[f] : !1
                        } else if (d)
                            for (var c in d)
                                if (d[c] !== e.rawData[c])
                                    return !0;
                        return !1
                    },
                    getChanged: function() {
                        var g = [], f;
                        for (f in this._lazyRawData)
                            this.isChanged(f) && g.push(f);
                        return g
                    },
                    onSave: function(g) {},
                    onUndo: function(g, f, e) {},
                    onRedo: function(g, f, e) {},
                    _onSet: function() {
                        this._globalOptList = [];
                        this._globalOptIndex = -1;
                        this.onSet.apply(this, arguments)
                    },
                    _onUndo: function(g, f, e) {
                        var d = this._cache.idToIndex(g)
                          , c = this.byId(g);
                        this._set(g, f);
                        var b = this.byId(g);
                        this.onSet(g, d, b, c);
                        this.onUndo(g, f, e)
                    },
                    _onRedo: function(g, f, e) {
                        var d = this._cache.idToIndex(g)
                          , c = this.byId(g);
                        this._set(g, f);
                        var b = this.byId(g);
                        this.onSet(g, d, b, c);
                        this.onRedo(g, f, e)
                    },
                    _set: function(g, f) {
                        var e = this.inner._call("byId", [g])
                          , d = {};
                        this._lazyRawData[g] ? p.mixin(this._lazyRawData[g], f) : this._lazyRawData[g] = p.mixin({}, f);
                        var c = this._cache.columns, e = p.mixin({}, e.rawData, this._lazyRawData[g]), b;
                        for (b in c)
                            d[b] = c[b].formatter ? c[b].formatter(e) : e[c[b].field || b];
                        this._lazyData[g] = d
                    },
                    _saveRow: function(g) {
                        var f = this.model.store
                          , e = this.byId(g).item;
                        g = this._lazyRawData[g];
                        var d;
                        if (f.setValue) {
                            d = new m;
                            try {
                                for (var c in g)
                                    f.setValue(e, c, g[c]);
                                f.save({
                                    onComplete: p.hitch(d, d.callback),
                                    onError: p.hitch(d, d.errback)
                                })
                            } catch (b) {
                                d.errback(b)
                            }
                        }
                        return d || m.when(f.put(p.mixin({}, e, g)))
                    }
                })
            })
        },
        "gridx/modules/RowHeader": function() {
            define("dojo/_base/declare ../support/query dojo/_base/lang dojo/_base/sniff dojo/aspect dojo/dom-construct dojo/dom-class dojo/dom-style dojo/dom-geometry dojo/keys dojo/on ../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                return q(b, {
                    name: "rowHeader",
                    constructor: function() {
                        this.headerNode = k.create("div", {
                            "class": "gridxRowHeaderHeader",
                            role: "row",
                            innerHTML: '\x3ctable role\x3d"presentation" border\x3d"0" cellspacing\x3d"0" cellpadding\x3d"0" style\x3d"width: 100%;"\x3e\x3ctr\x3e\x3ctd class\x3d"gridxRowHeaderHeaderCell" role\x3d"rowheader" tabindex\x3d"-1"\x3e\x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e'
                        });
                        this.bodyNode = k.create("div", {
                            "class": "gridxRowHeaderBody"
                        })
                    },
                    destroy: function() {
                        this.inherited(arguments);
                        k.destroy(this.headerNode);
                        k.destroy(this.bodyNode)
                    },
                    preload: function() {
                        var a = this.headerNode
                          , b = this.bodyNode
                          , c = this.grid
                          , d = c.body
                          , e = this.arg("width");
                        c._initEvents(["RowHeaderHeader", "RowHeaderCell"], c._eventNames);
                        c.header.domNode.appendChild(a);
                        a.style.width = e;
                        this.headerCellNode = p("td", a)[0];
                        c._connectEvents(a, "_onHeaderEvent", this);
                        c.mainNode.appendChild(b);
                        b.style.width = e;
                        c.hLayout.register(null, b);
                        this.batchConnect([d, "onRender", "_onRendered"], [d, "onAfterRow", "_onAfterRow"], [d, "onRowHeightChange", "_onAfterRow"], [d, "onAfterCell", "_onAfterCell"], [d, "onUnrender", "_onUnrender"], [d, "onEmpty", function() {
                            b.innerHTML = ""
                        }
                        ], [c.bodyNode, "onscroll", "_onScroll"], [c, "onRowMouseOver", "_onRowMouseOver"], [c, "onRowMouseOut", "_onRowMouseOver"], [c, "_onResizeEnd", "_onResize"], c.columnWidth && [c.columnWidth, "onUpdate", "_onResize"], c.columnResizer && [c.columnResizer, "onResize", "_onResize"], [c, "onRowHeaderCellMouseOver", "_onCellMouseOver"], [c, "onRowHeaderCellMouseOut", "_onCellMouseOver"], [this.model, "onSizeChange", "_onSizeChange"]);
                        this._cnnts.push(l.before(d, "renderRows", n.hitch(this, this._onRenderRows), !0), l.before(d, "_onDelete", n.hitch(this, this._onDelete), !0));
                        c._connectEvents(b, "_onBodyEvent", this);
                        this._initFocus()
                    },
                    load: function(a, b) {
                        var c = this
                          , d = c.grid
                          , h = c.bodyNode;
                        b.then(function() {
                            var a = h.offsetWidth || f.get(h, "width")
                              , b = d.isLeftToRight()
                              , g = e.getBorderExtents(d.mainNode);
                            h.style[b ? "left" : "right"] = -(a + (b ? g.l : g.r)) + "px";
                            c.loaded.callback()
                        })
                    },
                    width: "20px",
                    onMoveToRowHeaderCell: function() {},
                    _onRenderRows: function(a, b, c) {
                        var d = this.bodyNode;
                        0 < b ? (a = this._buildRows(a, b),
                        "top" == c ? k.place(a, d, "first") : "bottom" == c ? k.place(a, d, "last") : (d.innerHTML = a,
                        d.scrollTop = 0)) : "top" != c && "bottom" != c && (d.innerHTML = "")
                    },
                    _onAfterRow: function(a) {
                        "string" === typeof a && (a = this.grid.row(a, 1));
                        if (a) {
                            var b = a.visualIndex()
                              , c = p('[visualindex\x3d"' + b + '"].gridxRowHeaderRow', this.bodyNode)[0]
                              , b = this.grid.dod ? p('[visualindex\x3d"' + b + '"].gridxRow', this.grid.bodyNode)[0] : p('[visualindex\x3d"' + b + '"].gridxRow .gridxRowTable', this.grid.bodyNode)[0]
                              , d = this.arg("cellProvider");
                            c && b && (c.setAttribute("rowid", a.id),
                            c.setAttribute("rowindex", a.index()),
                            c.setAttribute("parentid", this.model.treePath(a.id).pop() || ""),
                            d && (c.firstChild.firstChild.firstChild.firstChild.innerHTML = d.call(this, a)),
                            this._syncRowHeight(c, b))
                        } else
                            console.warn("rowHeader._onAfterRow, row is null")
                    },
                    _onAfterCell: function(a) {
                        var b = a.row.visualIndex();
                        a = p('[visualindex\x3d"' + b + '"].gridxRowHeaderRow', this.bodyNode)[0];
                        b = p('[visualindex\x3d"' + b + '"].gridxRow .gridxRowTable', this.grid.bodyNode)[0];
                        this._syncRowHeight(a, b)
                    },
                    _syncRowHeight: function(a, b) {
                        var c = this, d;
                        if (void 0 === c._isCollapse) {
                            var h = p(".gridxCell", c.grid.header.innerNode)[0];
                            c._isCollapse = h && "collapse" == f.get(h, "borderCollapse")
                        }
                        setTimeout(function() {
                            d = 8 >= m("ie") || c._isCollapse ? b.offsetHeight + "px" : f.getComputedStyle(b).height;
                            0 <= (d + "").indexOf(".") ? a.style.height = a.firstChild.style.height = b.firstChild.style.height = b.firstChild.clientHeight + 1 + "px" : a && a.firstChild && (a.style.height = a.firstChild.style.height = d)
                        }, 0)
                    },
                    _onRendered: function(a, b) {
                        var c = this.arg("headerProvider");
                        c && (this.headerCellNode.innerHTML = c());
                        this._onScroll()
                    },
                    _onSizeChange: function(a, b) {
                        var c = this.arg("headerProvider");
                        !a && c && (this.headerCellNode.innerHTML = "");
                        this._onScroll()
                    },
                    _onDelete: function(a) {
                        var b = this.model.isId(a) && p('[rowid\x3d"' + this.grid._escapeId(a) + '"].gridxRowHeaderRow', this.bodyNode);
                        if (b && b.length) {
                            var c = b[b.length - 1]
                              , b = c.getAttribute("parentid")
                              , d = {}
                              , e = 1;
                            d[a] = 1;
                            for (a = c.nextSibling; a && d[a.getAttribute("parentid")]; a = a.nextSibling)
                                c = a.getAttribute("rowid"),
                                e++,
                                d[c] = 1;
                            for (; a; a = a.nextSibling)
                                a.getAttribute("parentid") == b && a.setAttribute("rowindex", parseInt(a.getAttribute("rowindex"), 10) - 1),
                                d = parseInt(a.getAttribute("visualindex"), 10),
                                a.setAttribute("visualindex", d - e)
                        }
                    },
                    _onUnrender: function(a, b, c) {
                        !this.model.isId(a) && c ? "post" === c ? this.bodyNode.lastChild && k.destroy(this.bodyNode.lastChild) : this.bodyNode.firstChild && k.destroy(this.bodyNode.firstChild) : "refresh" != b && (a = this.model.isId(a) && p('[rowid\x3d"' + this.grid._escapeId(a) + '"].gridxRowHeaderRow', this.bodyNode)) && a.length && k.destroy(a[a.length - 1])
                    },
                    _onScroll: function() {
                        var a = this;
                        a.bodyNode.scrollTop = a.grid.bodyNode.scrollTop;
                        a.bodyNode.scrollHeight - a.bodyNode.clientHeight >= a.grid.bodyNode.scrollTop ? a.bodyNode.scrollTop = a.grid.bodyNode.scrollTop : setTimeout(function() {
                            a.bodyNode.scrollTop = a.grid.bodyNode.scrollTop
                        }, 0)
                    },
                    _onResize: function() {
                        for (var a = m("ie") ? m("ie") : m("trident") ? 11 : !1, b, c = this.grid.bodyNode.firstChild, d = this.bodyNode.firstChild; c && d; c = c.nextSibling,
                        d = d.nextSibling)
                            b = this.grid.dod ? c : c.firstChild,
                            b = 8 < a ? f.getComputedStyle(b).height : b.offsetHeight + "px",
                            d.style.height = d.firstChild.style.height = b;
                        b = this.bodyNode;
                        d = this.grid;
                        a = b.offsetWidth || f.get(b, "width");
                        c = d.isLeftToRight();
                        d = e.getBorderExtents(d.mainNode);
                        b.style[c ? "left" : "right"] = -(a + (c ? d.l : d.r)) + "px"
                    },
                    _buildRows: function(a, b) {
                        for (var c = [], d = 0; d < b; ++d)
                            c.push('\x3cdiv class\x3d"gridxRowHeaderRow" role\x3d"row" visualindex\x3d"', a + d, '"\x3e\x3ctable role\x3d"presentation" border\x3d"0" cellspacing\x3d"0" cellpadding\x3d"0" style\x3d"height: 24px;"\x3e\x3ctr\x3e\x3ctd class\x3d"gridxRowHeaderCell" role\x3d"rowheader" tabindex\x3d"-1"\x3e\x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e\x3c/div\x3e');
                        return c.join("")
                    },
                    _onHeaderEvent: function(a, b) {
                        this.grid["onRowHeaderHeader" + a](b);
                        c.emit(b.target, "rowHeader" + a, b)
                    },
                    _onBodyEvent: function(a, b) {
                        var d = this.grid
                          , e = "onRowHeaderCell" + a
                          , h = "onRow" + a;
                        this._decorateBodyEvent(b);
                        0 <= b.rowIndex && (b.isRowHeader && (d[e](b),
                        c.emit(b.target, "rowHeader" + a, b)),
                        d[h](b),
                        c.emit(b.target, "row" + a, b))
                    },
                    _decorateBodyEvent: function(a) {
                        for (var b = a.target || a.originalTarget; b && b != this.bodyNode; ) {
                            if (g.contains(b, "gridxRowHeaderCell"))
                                a.isRowHeader = !0,
                                a.rowHeaderCellNode = b;
                            else if ("div" === b.tagName.toLowerCase() && g.contains(b, "gridxRowHeaderRow")) {
                                a.rowId = b.getAttribute("rowid");
                                a.parentId = b.getAttribute("parentid");
                                a.rowIndex = parseInt(b.getAttribute("rowindex"), 10);
                                a.visualIndex = parseInt(b.getAttribute("visualindex"), 10);
                                break
                            }
                            b = b.parentNode
                        }
                    },
                    _onRowMouseOver: function(a) {
                        var b = p('\x3e [rowid\x3d"' + this.grid._escapeId(a.rowId) + '"].gridxRowHeaderRow', this.bodyNode)[0];
                        b && g.toggle(b, "gridxRowOver", "mouseover" == a.type.toLowerCase())
                    },
                    _onCellMouseOver: function(a) {
                        var b = p('\x3e [rowid\x3d"' + this.grid._escapeId(a.rowId) + '"].gridxRowHeaderRow .gridxRowHeaderCell', this.bodyNode)[0];
                        b && g.toggle(b, "gridxRowHeaderCellOver", "mouseover" == a.type.toLowerCase())
                    },
                    _initFocus: function() {
                        var a = this.grid.focus;
                        a && a.registerArea({
                            name: "rowHeader",
                            priority: .9,
                            focusNode: this.bodyNode,
                            scope: this,
                            doFocus: this._doFocus,
                            onFocus: this._onFocus,
                            doBlur: this._blur,
                            onBlur: this._blur,
                            connects: [this.connect(this.bodyNode, "onkeydown", "_onKeyDown")]
                        })
                    },
                    _doFocus: function(a) {
                        if (this._focusRow(this.grid.body._focusCellRow))
                            return this.grid.focus.stopEvent(a),
                            !0
                    },
                    _onFocus: function(a) {
                        for (a = a.target; a != this.bodyNode; ) {
                            if (g.contains(a, "gridxRowHeaderRow"))
                                return a = this.grid.body._focusCellRow = parseInt(a.getAttribute("visualindex"), 10),
                                this._focusRow(a),
                                this._onScroll(),
                                !0;
                            a = a.parentNode
                        }
                    },
                    _focusRow: function(a) {
                        a = p('[visualindex\x3d"' + a + '"] .gridxRowHeaderCell', this.bodyNode)[0];
                        this._blur();
                        if (a = a || this.bodyNode.firstChild)
                            g.add(a, "gridxCellFocus"),
                            a.focus();
                        return a
                    },
                    _blur: function() {
                        p(".gridxCellFocus", this.bodyNode).forEach(function(a) {
                            g.remove(a, "gridxCellFocus")
                        });
                        return !0
                    },
                    _onKeyDown: function(a) {
                        var b = this
                          , c = b.grid;
                        if (!b._busy && "rowHeader" == c.focus.currentArea() && a.keyCode == d.UP_ARROW || a.keyCode == d.DOWN_ARROW) {
                            c.focus.stopEvent(a);
                            var e = c.body
                              , f = e._focusCellRow + (a.keyCode == d.UP_ARROW ? -1 : 1);
                            e._focusCellRow = f = 0 > f ? 0 : f >= c.view.visualCount ? c.view.visualCount - 1 : f;
                            b._busy = 1;
                            c.vScroller.scrollToRow(f).then(function() {
                                b._focusRow(f);
                                b._busy = 0;
                                b.onMoveToRowHeaderCell(f, a)
                            })
                        }
                    }
                })
            })
        },
        "gridx/modules/IndirectSelect": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/event dojo/query dojo/_base/lang dojo/dom-class dojo/_base/Deferred dojo/keys ../core/_Module ./RowHeader".split(" "), function(q, p, n, m, l, k, g, f, e) {
                return q(e, {
                    name: "indirectSelect",
                    required: ["rowHeader", "selectRow"],
                    preload: function() {
                        var d = this
                          , c = d.grid
                          , b = c.focus
                          , a = c.select.row
                          , e = c.rowHeader;
                        e.cellProvider = l.hitch(d, d._createSelector);
                        d.batchConnect([a, "onHighlightChange", "_onHighlightChange"], [a, "clear", "_onClear"], [a, "onSelectionChange", "_onSelectionChange"], [c.body, "onRender", "_onSelectionChange"], [c, "onRowKeyDown", "_onKeyDown"], [c, "onHeaderKeyDown", "_onKeyDown"], c.filter && [c.filter, "onFilter", "_onSelectionChange"]);
                        c.select.row.holdingCtrl = !0;
                        a.selectByIndex && d.arg("all") && (d._allSelected = {},
                        e.headerProvider = l.hitch(d, d._createSelectAllBox),
                        e.loaded.then(function() {
                            b && d._initFocus();
                            d.connect(c, "onRowHeaderHeaderMouseDown", "_onSelectAll");
                            d.connect(c, "onRowHeaderHeaderKeyDown", function(a) {
                                a.keyCode == f.SPACE && (n.stop(a),
                                d._onSelectAll())
                            })
                        }))
                    },
                    all: !0,
                    _createSelector: function(d) {
                        var c = d.node()
                          , b = c && k.contains(c, "gridxRowSelected");
                        d = !this.grid.row(d.id, 1).isSelectable();
                        c = c && k.contains(c, "gridxRowPartialSelected");
                        return this._createCheckBox(b, c, d)
                    },
                    _createCheckBox: function(d, c, b) {
                        var a = this._getDijitClass()
                          , e = "";
                        b && (e = d ? "CheckedDisabled" : c ? "PartialDisabld" : "Disabled");
                        return ['\x3cspan role\x3d"', this._isSingle() ? "radio" : "checkbox", '" class\x3d"gridxIndirectSelectionCheckBox dijitReset dijitInline ', a, " ", b ? a + e : "", d ? a + "Checked" : "", c ? a + "Partial" : "", '" aria-checked\x3d"', d ? "true" : c ? "mixed" : "false", '"\x3e\x3cspan class\x3d"gridxIndirectSelectionCheckBoxInner"\x3e', this._isSingle() ? d ? "\x26#x25C9;" : "\x26#x25CC;" : d ? "\x26#10003;" : c ? "\x26#9646;" : "\x26#9744;", "\x3c/span\x3e\x3c/span\x3e"].join("")
                    },
                    _createSelectAllBox: function() {
                        var d = this._allSelected[this._getPageId()];
                        this.grid.rowHeader.headerCellNode.setAttribute("aria-label", d ? this.grid.nls.indirectDeselectAll : this.grid.nls.indirectSelectAll);
                        return this._createCheckBox(d)
                    },
                    _getPageId: function() {
                        return this.grid.view.rootStart + "," + this.grid.view.rootCount
                    },
                    _onClear: function(d) {
                        var c = this._getDijitClass()
                          , b = c + "Checked"
                          , c = c + "Partial"
                          , a = this.grid;
                        m("." + b, a.rowHeader.bodyNode).removeClass(b);
                        m("." + c, a.rowHeader.bodyNode).removeClass(c);
                        a.select.row.isSelected(d) && m('[rowid\x3d"' + a._escapeId(d) + '"].gridxRowHeaderRow .gridxIndirectSelectionCheckBox', a.rowHeader.bodyNode).addClass(b);
                        m("." + b, a.rowHeader.headerCellNode).removeClass(b).attr("aria-checked", "false");
                        this._allSelected = {}
                    },
                    _onHighlightChange: function(d, c) {
                        var b = m('[visualindex\x3d"' + d.row + '"].gridxRowHeaderRow', this.grid.rowHeader.bodyNode)[0]
                          , a = b ? m(".gridxIndirectSelectionCheckBox", b)[0] : void 0;
                        if (a) {
                            var e = this._getDijitClass()
                              , f = "mixed" == c
                              , g = c && !f
                              , b = b.getAttribute("rowid")
                              , b = !this.grid.row(b, 1).isSelectable();
                            k.toggle(a, e + "Checked", g);
                            k.toggle(a, e + "Partial", f);
                            k.toggle(a, e + "CheckedDisabled", g && b);
                            k.toggle(a, e + "PartialDisabled", f && b);
                            k.toggle(a, e + "Disabled", !g && !f && b);
                            a.setAttribute("aria-checked", g ? "true" : f ? "mixed" : "false");
                            this._isSingle() ? a.firstChild.innerHTML = g ? "\x26#x25C9" : "\x26#x25CC" : a.firstChild.innerHTML = g ? "\x26#10003;" : f ? "\x26#9646;" : "\x26#9744;"
                        }
                    },
                    _getDijitClass: function() {
                        return this._isSingle() ? "dijitRadio" : "dijitCheckBox"
                    },
                    _isSingle: function() {
                        var d = this.grid.select.row;
                        return d.hasOwnProperty("multiple") && !d.arg("multiple")
                    },
                    _onSelectAll: function() {
                        var d = this.grid;
                        d.select.row[this._allSelected[this._getPageId()] ? "deselectByIndex" : "selectByIndex"]([0, d.view.visualCount - 1])
                    },
                    _onSelectionChange: function() {
                        var d = this, c, b = d.grid, a, e = d.grid.view, f = d.model, l = e.rootStart, m = e.rootCount;
                        if (b.select.row.selectByIndex && d.arg("all")) {
                            var n = p.filter(b.select.row.getSelected(), function(a) {
                                return !f.parentId(a)
                            })
                              , e = b.select.row._getUnselectableRows()
                              , q = p.filter(e, function(a) {
                                return !f.parentId(a) && !b.select.row.isSelected(a)
                            });
                            m === f.size() ? a = m && m - q.length == n.length : (c = new g,
                            f.when({
                                start: l,
                                count: m
                            }, function() {
                                var b = p.filter(p.map(n, function(a) {
                                    return f.idToIndex(a)
                                }), function(a) {
                                    return a >= l && a < l + m
                                });
                                q = p.filter(q, function(a) {
                                    a = f.idToIndex(a);
                                    return a >= l && a < l + m
                                });
                                a = m - q.length == b.length;
                                c.callback()
                            }));
                            g.when(c, function() {
                                d._allSelected[d._getPageId()] = a;
                                var c = d.grid.rowHeader.headerCellNode.firstChild;
                                c && (k.toggle(c, d._getDijitClass() + "Checked", a),
                                c.setAttribute("aria-checked", a ? "true" : "false"),
                                c.firstChild.innerHTML = a ? "\x26#10003;" : "\x26#9744;",
                                d.grid.rowHeader.headerCellNode.setAttribute("aria-label", a ? b.nls.indirectDeselectAll : b.nls.indirectSelectAll))
                            })
                        }
                    },
                    _initFocus: function() {
                        var d = this.grid
                          , c = d.rowHeader
                          , b = c.headerCellNode
                          , a = function() {
                            k.remove(b, "gridxHeaderCellFocus");
                            return !0
                        };
                        d.focus.registerArea({
                            name: "selectAll",
                            priority: -.1,
                            focusNode: c.headerNode,
                            doFocus: function(a) {
                                if (d.header.hidden)
                                    return !1;
                                k.add(b, "gridxHeaderCellFocus");
                                b.focus();
                                d.focus.stopEvent(a);
                                return !0
                            },
                            doBlur: a,
                            onBlur: a
                        })
                    },
                    _onKeyDown: function(d) {
                        65 == d.keyCode && this.grid._isCtrlKey(d) && !d.shiftKey && (this._allSelected[this._getPageId()] || this._onSelectAll(),
                        n.stop(d))
                    }
                })
            })
        },
        "gridx/modules/IndirectSelectColumn": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/event dojo/query dojo/_base/lang dojo/dom-class dojo/_base/Deferred dojo/keys ../core/_Module ./RowHeader".split(" "), function(q, p, n, m, l, k, g, f, e) {
                return q(e, {
                    name: "indirectSelect",
                    required: ["selectRow"],
                    position: 0,
                    width: "23px",
                    all: !0,
                    preload: function() {
                        var d = this
                          , c = d.grid
                          , b = c.select.row
                          , a = d.arg("width")
                          , a = d._col = {
                            id: "__indirectSelect__",
                            decorator: l.hitch(this, "_createSelector"),
                            headerStyle: "text-align: center;",
                            style: "text-align: center;",
                            rowSelectable: !0,
                            sortable: !1,
                            filterable: !1,
                            editable: !1,
                            padding: !1,
                            ignore: !0,
                            declaredWidth: a,
                            width: a
                        };
                        b.holdingCtrl = !0;
                        d.batchConnect([c, "setColumns", "_onSetColumns"], [b, "onHighlightChange", "_onHighlightChange"], [b, "onSelectionChange", "_onSelectionChange"], [b, "clear", "_onClear"], [c.body, "onRender", "_onSelectionChange"], c.filter && [c.filter, "onFilter", "_onSelectionChange"], [c.body, "onMoveToCell", function(a, b, e) {
                            a = {
                                columnId: "__indirectSelect__"
                            };
                            "__indirectSelect__" == c._columns[b].id ? d._onMouseOver(a) : d._onMouseOut()
                        }
                        ], [c, "onCellMouseOver", "_onMouseOver"], [c, "onCellMouseOut", "_onMouseOut"]);
                        d._onSetColumns();
                        b.selectByIndex && d.arg("all") && (d._allSelected = {},
                        a.name = d._createSelectAllBox(),
                        d.connect(c, "onHeaderCellMouseDown", function(a) {
                            "__indirectSelect__" == a.columnId && d._onSelectAll()
                        }),
                        d.connect(c, "onHeaderCellKeyDown", function(a) {
                            "__indirectSelect__" == a.columnId && a.keyCode == f.SPACE && (n.stop(a),
                            d._onSelectAll())
                        }));
                        c.header._build()
                    },
                    _onSetColumns: function() {
                        var d = this.grid
                          , c = d._columns
                          , b = this._col;
                        c.splice(this.arg("position"), 0, b);
                        d._columnsById[b.id] = b;
                        p.forEach(c, function(a, b) {
                            a.index = b
                        })
                    },
                    _updateSelectAll: function() {
                        var d = this._createSelectAllBox();
                        this.grid._columnsById.__indirectSelect__.name = d;
                        this.grid.header.getHeaderNode("__indirectSelect__").innerHTML = d
                    },
                    _createSelectAllBox: function() {
                        return this._createCheckBox(this._allSelected[this._getPageId()])
                    },
                    _getPageId: function() {
                        return this.grid.view.rootStart + "," + this.grid.view.rootCount
                    },
                    _createSelector: function(d, c) {
                        var b = this.model.getMark(c)
                          , a = !this.grid.row(c, 1).isSelectable();
                        return this._createCheckBox(!0 === b, "mixed" == b, a)
                    },
                    _createCheckBox: function(d, c, b) {
                        var a = this._getDijitClass();
                        return ['\x3cspan role\x3d"', this._isSingle() ? "radio" : "checkbox", '" class\x3d"gridxIndirectSelectionCheckBox dijitReset dijitInline ', a, " ", d ? a + "Checked" : "", c ? a + "Partial" : "", b && d ? a + "CheckedDisabled" : "", b && c ? a + "PartialDisabled" : "", !b || d || c ? "" : a + "Disabled", '" aria-checked\x3d"', d ? "true" : c ? "mixed" : "false", '"\x3e\x3cspan class\x3d"gridxIndirectSelectionCheckBoxInner"\x3e', this._isSingle() ? d ? "\x26#x25C9;" : "\x26#x25CC;" : d ? "\x26#10003;" : c ? "\x26#9646;" : "\x26#9744;", "\x3c/span\x3e\x3c/span\x3e"].join("")
                    },
                    _getDijitClass: function() {
                        return this._isSingle() ? "dijitRadio" : "dijitCheckBox"
                    },
                    _isSingle: function() {
                        var d = this.grid.select.row;
                        return d.hasOwnProperty("multiple") && !d.arg("multiple")
                    },
                    _onClear: function(d) {
                        var c = this._getDijitClass()
                          , b = c + "Checked"
                          , c = c + "Partial"
                          , a = this.grid;
                        m("." + b, a.bodyNode).removeClass(b);
                        m("." + c, a.bodyNode).removeClass(c);
                        a.select.row.isSelected(d) && m('[rowid\x3d"' + a._escapeId(d) + '"].gridxRow .gridxIndirectSelectionCheckBox', a.bodyNode).addClass(b);
                        m("." + b, a.headerNode).removeClass(b).attr("aria-checked", "false");
                        this._allSelected = {}
                    },
                    _onHighlightChange: function(d, c) {
                        var b = m('[visualindex\x3d"' + d.row + '"].gridxRow', this.grid.bodyNode)[0]
                          , a = b ? m(".gridxIndirectSelectionCheckBox", b)[0] : void 0;
                        if (a) {
                            var e = this._getDijitClass()
                              , f = "mixed" == c
                              , g = c && !f
                              , b = b.getAttribute("rowid")
                              , b = !this.grid.row(b).isSelectable();
                            k.toggle(a, e + "Checked", g);
                            k.toggle(a, e + "Partial", f);
                            k.toggle(a, e + "CheckedDisabled", g && b);
                            k.toggle(a, e + "PartialDisabled", f && b);
                            k.toggle(a, e + "Disabled", !g && !f && b);
                            a.setAttribute("aria-checked", g ? "true" : f ? "mixed" : "false");
                            this._isSingle() ? a.firstChild.innerHTML = g ? "\x26#x25C9" : "\x26#x25CC" : a.firstChild.innerHTML = g ? "\x26#10003;" : f ? "\x26#9646;" : "\x26#9744;"
                        }
                    },
                    _onMouseOver: function(d) {
                        var c = this.grid.select.row;
                        c.arg("triggerOnCell") || "__indirectSelect__" == d.columnId ? c.triggerOnCell || (this._triggerOnCell = !1,
                        c.triggerOnCell = !0) : this._onMouseOut()
                    },
                    _onMouseOut: function() {
                        var d = this.grid.select.row;
                        this.hasOwnProperty("_triggerOnCell") && (d.triggerOnCell = !1,
                        delete this._triggerOnCell)
                    },
                    _onSelectAll: function() {
                        var d = this.grid;
                        d.select.row[this._allSelected[this._getPageId()] ? "deselectByIndex" : "selectByIndex"]([0, d.view.visualCount - 1])
                    },
                    _onSelectionChange: function() {
                        var d = this, c, b = d.grid, a, e = b.view, f = d.model, k = e.rootStart, l = e.rootCount;
                        if (b.select.row.selectByIndex && d.arg("all")) {
                            var m = p.filter(b.select.row.getSelected(), function(a) {
                                return !f.treePath(a).pop()
                            })
                              , e = b.select.row._getUnselectableRows()
                              , n = p.filter(e, function(a) {
                                return !f.parentId(a) && !b.select.row.isSelected(a)
                            });
                            l === f.size() ? a = l && l - n.length == m.length : (c = new g,
                            f.when({
                                start: k,
                                count: l
                            }, function() {
                                var b = p.filter(p.map(m, function(a) {
                                    return f.idToIndex(a)
                                }), function(a) {
                                    return a >= k && a < k + l
                                });
                                n = p.filter(n, function(a) {
                                    a = f.idToIndex(a);
                                    return a >= k && a < k + l
                                });
                                a = l - n.length == b.length;
                                c.callback()
                            }));
                            g.when(c, function() {
                                d._allSelected[d._getPageId()] = a;
                                d._updateSelectAll()
                            })
                        }
                    }
                })
            })
        },
        "gridx/modules/Persist": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/_base/json dojo/_base/unload dojo/cookie ../core/_Module".split(" "), function(q, p, n, m, l, k, g) {
                return q(g, {
                    name: "persist",
                    constructor: function(f) {
                        var e = this
                          , d = f.destroy;
                        e.arg("key", window.location + "/" + f.id, function(c) {
                            return c
                        });
                        e._persistedList = {};
                        f.destroy = function() {
                            e.save();
                            d.call(f)
                        }
                        ;
                        e._restoreColumnState();
                        l.addOnWindowUnload(function() {
                            e.save()
                        })
                    },
                    enabled: !0,
                    options: null,
                    key: "",
                    put: function(f, e, d) {
                        e && n.isObject(e) ? k(f, m.toJson(e), d) : k(f, null, {
                            expires: -1
                        })
                    },
                    get: function(f) {
                        return m.fromJson(k(f))
                    },
                    registerAndLoad: function(f, e, d) {
                        this._persistedList[f] = {
                            saver: e,
                            scope: d,
                            enabled: !0
                        };
                        e = this.arg("get");
                        return (e = "_content"in this ? this._content : this._content = e(this.arg("key"))) ? e[f] : null
                    },
                    features: function() {
                        var f = this._persistedList, e = [], d;
                        for (d in f)
                            f.hasOwnProperty(d) && e.push(d);
                        return e
                    },
                    enable: function(f) {
                        this._setEnable(f, 1)
                    },
                    disable: function(f) {
                        this._setEnable(f, 0)
                    },
                    isEnabled: function(f) {
                        var e = this._persistedList[f];
                        return e ? e.enabled : f ? !1 : this.arg("enabled")
                    },
                    save: function() {
                        var f = null
                          , e = this.arg("put");
                        if (this.arg("enabled")) {
                            var d, c, b = this._persistedList, f = {};
                            for (d in b)
                                c = b[d],
                                c.enabled && (f[d] = c.saver.call(c.scope || n.global))
                        }
                        delete this._content;
                        e(this.arg("key"), f, this.arg("options"))
                    },
                    _setEnable: function(f, e) {
                        var d = this._persistedList;
                        e = !!e;
                        if (d[f])
                            d[f].enabled = e;
                        else if (!f) {
                            for (f in d)
                                d[f].enabled = e;
                            this.enabled = e
                        }
                    },
                    _restoreColumnState: function() {
                        var f = this.grid
                          , e = {}
                          , d = this.registerAndLoad("column", this._columnStateSaver, this);
                        n.isArray(d) && (p.forEach(d, function(c) {
                            e[c.id] = c
                        }),
                        p.forEach(f._columns, function(c) {
                            var b = e[c.id];
                            b && b.id == c.id && (c.declaredWidth = c.width = b.width)
                        }),
                        f._columns.sort(function(c, b) {
                            var a = e[c.id]
                              , d = e[b.id];
                            return a && d ? a.index - d.index : !a && d ? 1 : a && !d ? -1 : c.index - b.index
                        }),
                        f.setColumns(f._columns))
                    },
                    _columnStateSaver: function() {
                        return p.map(this.grid._columns, function(f) {
                            return {
                                id: f.id,
                                index: f.index,
                                width: f.width
                            }
                        })
                    }
                })
            })
        },
        "gridx/modules/Menu": function() {
            define("dojo/_base/declare dojo/_base/connect ../core/_Module dojo/dom-class dojo/keys dojo/_base/event dijit/registry dijit/Menu".split(" "), function(q, p, n, m, l, k, g, f) {
                return q(n, {
                    name: "menu",
                    constructor: function() {
                        this._menus = {}
                    },
                    context: null,
                    bind: function(e, d) {
                        d = d || {};
                        var c = this
                          , b = c.grid
                          , a = d.hookPoint && d.hookPoint.toLowerCase() || "grid"
                          , h = d.selected ? a + "-selected" : a
                          , f = c._evtMap[a]
                          , k = c._menus[h] = c._menus[h] || {}
                          , m = function(a) {
                            c._showMenu(h, a)
                        }
                          , n = function(a) {
                            a.keyCode == l.F10 && a.shiftKey && c._showMenu(h, a)
                        };
                        p.disconnect(k.open);
                        p.disconnect(k.keyopen);
                        p.disconnect(k.close);
                        k.menu = g.byId(e);
                        f ? (k.open = c.connect(b, f[0], m),
                        k.keyopen = c.connect(b, f[1], n)) : "body" == a ? (k.open = c.connect(b.bodyNode, "oncontextmenu", m),
                        k.keyopen = c.connect(b.bodyNode, "onkeydown", n)) : (k.open = c.connect(b.domNode, "oncontextmenu", m),
                        k.keyopen = c.connect(b.domNode, "onkeydown", n));
                        k.close = c.connect(k.menu, "onClose", function() {
                            c._mutex = 0
                        })
                    },
                    unbind: function(e) {
                        var d, c = this._menus, b;
                        e = g.byId(e);
                        for (d in c)
                            if (b = c[d],
                            b.menu == e) {
                                p.disconnect(b.open);
                                p.disconnect(b.keyopen);
                                p.disconnect(b.close);
                                delete c[d];
                                break
                            }
                    },
                    _evtMap: {
                        header: ["onHeaderContextMenu", "onHeaderKeyDown"],
                        headercell: ["onHeaderCellContextMenu", "onHeaderCellKeyDown"],
                        cell: ["onCellContextMenu", "onCellKeyDown"],
                        row: ["onRowContextMenu", "onRowKeyDown"]
                    },
                    _showMenu: function(e, d) {
                        var c = this._menus;
                        if (!this._mutex && c[e].menu) {
                            var b = this.grid
                              , a = d.rowId
                              , h = d.columnId
                              , f = !e.indexOf("row")
                              , g = !e.indexOf("cell")
                              , n = !e.indexOf("headercell")
                              , p = 0 < e.indexOf("-")
                              , q = !!(g && m.contains(d.cellNode, "gridxCellSelected") || n && m.contains(b.header.getHeaderNode(h), "gridxColumnSelected") || f && m.contains(b.body.getRowNode({
                                rowId: a
                            }), "gridxRowSelected"));
                            if (p == q || !p && q && !c[e + "-selected"])
                                this.context = {
                                    grid: b,
                                    column: n && b.column(h, 1),
                                    row: f && b.row(a, 1),
                                    cell: g && b.cell(a, h, 1)
                                },
                                k.stop(d),
                                this._mutex = 1,
                                c[e].menu._openMyself({
                                    target: d.target,
                                    coords: d.keyCode != l.F10 && "pageX"in d ? {
                                        x: d.pageX,
                                        y: d.pageY
                                    } : null
                                })
                        }
                    }
                })
            })
        },
        "gridx/modules/Dod": function() {
            define("dojo/_base/kernel dojo/dom-construct dojo/dom-style dojo/dom-class dojo/dom-geometry dojo/_base/lang dojo/_base/Deferred dojo/_base/array dojo/_base/declare dojo/_base/fx dojo/fx dojo/keys dojo/_base/event dojo/_base/sniff ../core/_Module ../support/query dijit/a11y dijit/registry".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x) {
                var y = function() {};
                return e(r, {
                    name: "dod",
                    required: ["body"],
                    useAnimation: !0,
                    duration: 750,
                    defaultShow: !1,
                    showExpando: !0,
                    preload: function() {
                        this.initFocus();
                        for (var a = this.grid, b = a._eventNames, c = b.length, d, e = 0; e < c; e++)
                            d = "onDod" + b[e],
                            a[d] = a[d] || y;
                        this.connect(this.grid.body, "_onEvent", "_dodEventDispatcher")
                    },
                    load: function(a, b) {
                        var c = this
                          , d = c.grid
                          , e = d.model;
                        c._rowMap = {};
                        c.connect(d.body, "onAfterCell", "_onAfterCell");
                        c.connect(d.body, "onAfterRow", "_onAfterRow");
                        c.connect(d.bodyNode, "onclick", "_onBodyClick");
                        c.connect(d.body, "onUnrender", "_onBodyUnrender");
                        c.connect(d, "onCellKeyDown", "_onCellKeyDown");
                        c.connect(d.body, "_onRowMouseOver", "_onRowMouseOver");
                        c.connect(e, "onSet", "_onModelSet");
                        d.isIE && c.aspect(c.grid.body, "renderRows", function(a, b, d) {
                            if ("top" !== d && "bottom" !== d) {
                                b = c._rowMap;
                                for (var e in b)
                                    a = b[e],
                                    a.dodLoaded = !1,
                                    a.dodLoadingNode = null,
                                    a.dodNode = null
                            }
                        }, c, "before");
                        c.grid.columnResizer && c.connect(c.grid.columnResizer, "onResize", "_onColumnResize");
                        c.loaded.callback()
                    },
                    rowMixin: {
                        showDetail: function() {
                            this.grid.dod.show(this)
                        },
                        hideDetail: function() {
                            this.grid.dod.hide(this)
                        },
                        toggleDetail: function() {
                            this.grid.dod.toggle(this)
                        },
                        refreshDetail: function() {
                            this.grid.dod.refresh(this)
                        },
                        isDetailShown: function() {
                            return this.grid.dod.isShown(this)
                        }
                    },
                    show: function(a) {
                        a = "object" === typeof a ? a : this.grid.row(a, 1);
                        var b = this._row(a)
                          , c = new g
                          , d = this.grid;
                        if (b.dodShown || b.inAnim)
                            return c.errback("Row detail has already shown."),
                            c;
                        b.dodShown = !0;
                        if (!a.node())
                            return c.callback(a),
                            c;
                        var e = this._getExpando(a);
                        e && (e.firstChild.innerHTML = "-");
                        var e = a.node()
                          , h = e.scrollWidth;
                        b.dodLoadingNode || (b.dodLoadingNode = p.create("div", {
                            className: "gridxDodLoadNode",
                            innerHTML: this.grid.nls.loadingInfo
                        }));
                        b.dodNode || (b.dodNode = p.create("div", {
                            className: "gridxDodNode"
                        }));
                        p.place(b.dodLoadingNode, e, "last");
                        p.place(b.dodNode, e, "last");
                        n.set(b.dodLoadingNode, "width", h + "px");
                        n.set(b.dodNode, "width", h + "px");
                        n.set(b.dodNode, "visibility", "hidden");
                        n.set(b.dodNode, "overflow", "hidden");
                        n.set(b.dodNode, "height", "0px");
                        m.add(e, "gridxDodShown");
                        if (b.dodLoaded)
                            return this._detailLoadComplete(a, c),
                            c;
                        n.set(b.dodLoadingNode, "display", "block");
                        d.autoHeight && d.vLayout.reLayout();
                        b.inLoading = !0;
                        this.grid.rowHeader && (d = t('[rowid\x3d"' + this.grid._escapeId(a.id) + '"].gridxRowHeaderRow', this.grid.rowHeader.bodyNode)[0],
                        e = n.get(a.node(), "height"),
                        n.set(d.firstChild, "height", e + "px"),
                        n.set(d, "height", e + "px"));
                        d = new g;
                        this.arg("detailProvider") ? this.detailProvider(this.grid, a.id, b.dodNode, d) : d.callback();
                        d.then(k.hitch(this, "_detailLoadComplete", a, c), k.hitch(this, "_detailLoadError", a, c));
                        return c
                    },
                    hide: function(a) {
                        a = "object" === typeof a ? a : this.grid.row(a, 1);
                        var b, e = this._row(a), h = this.grid, f = h._escapeId, k = new g, l = this;
                        if (!e.dodShown || e.inAnim || e.inLoading)
                            return k.errback("Row Detail has already been hidden."),
                            k;
                        if (!a.node())
                            return e.dodShown = !1,
                            k.callback(a),
                            k;
                        m.remove(a.node(), "gridxDodShown");
                        n.set(e.dodLoadingNode, "display", "none");
                        if (this.grid.rowHeader) {
                            b = t('[rowid\x3d"' + f(a.id) + '"].gridxRowHeaderRow', this.grid.rowHeader.bodyNode)[0];
                            var r = n.get(a.node(), "height");
                            n.set(b.firstChild, "height", r + "px");
                            n.set(b, "height", r + "px")
                        }
                        if (b = this._getExpando(a))
                            b.firstChild.innerHTML = "+";
                        this.arg("useAnimation") ? (e.inAnim = !0,
                        c.wipeOut({
                            node: e.dodNode,
                            duration: this.arg("duration"),
                            onEnd: function() {
                                e.dodShown = !1;
                                e.inAnim = !1;
                                e.defaultShow = !1;
                                l.onHide(a);
                                k.callback(a);
                                h.body.onRender()
                            }
                        }).play(),
                        this.grid.rowHeader && (b = t('[rowid\x3d"' + f(a.id) + '"].gridxRowHeaderRow', this.grid.rowHeader.bodyNode)[0],
                        d.animateProperty({
                            node: b.firstChild,
                            duration: this.arg("duration"),
                            properties: {
                                height: {
                                    start: b.offsetHeight,
                                    end: b.offsetHeight - e.dodNode.scrollHeight,
                                    units: "px"
                                }
                            }
                        }).play(),
                        d.animateProperty({
                            node: b,
                            duration: this.arg("duration"),
                            properties: {
                                height: {
                                    start: b.offsetHeight,
                                    end: b.offsetHeight - e.dodNode.scrollHeight,
                                    units: "px"
                                }
                            }
                        }).play())) : (e.dodShown = !1,
                        e.inAnim = !1,
                        this.grid.rowHeader && (b = t('[rowid\x3d"' + f(a.id) + '"].gridxRowHeaderRow', this.grid.rowHeader.bodyNode)[0],
                        b.firstChild.style.height = b.offsetHeight - e.dodNode.scrollHeight + "px",
                        b.style.height = b.offsetHeight - e.dodNode.scrollHeight + "px"),
                        e.dodNode.style.display = "none",
                        h.body.onRender(),
                        e.defaultShow = !1,
                        this.onHide(a),
                        k.callback(a));
                        return k
                    },
                    toggle: function(a) {
                        a = "object" === typeof a ? a : this.grid.row(a, 1);
                        var b = this._row(a)
                          , c = new g;
                        return !b || b.inAnim || b.inLoading ? (c.errback("can't toggle now!"),
                        c) : c = this.isShown(a) ? this.hide(a) : this.show(a)
                    },
                    refresh: function(a) {
                        var b = this._row(a)
                          , c = new g;
                        b && (b.dodLoaded = !1);
                        if (!b || !b.dodShown || b.inAnim || b.inLoading)
                            return c.errback("can't refresh now!"),
                            c;
                        b.dodShown = !1;
                        return c = this.show(a)
                    },
                    isShown: function(a) {
                        a = "object" === typeof a ? a : this.grid.row(a, 1);
                        return !!this._row(a).dodShown
                    },
                    onShow: function(a) {},
                    onHide: function(a) {},
                    initFocus: function() {
                        this.grid.focus.registerArea({
                            name: "navigabledod",
                            priority: 1,
                            scope: this,
                            doFocus: this._doFocus,
                            doBlur: this._doBlur,
                            onFocus: this._onFocus,
                            onBlur: this._onBlur,
                            connects: [this.connect(this.grid, "onDodKeyDown", "_onRowKeyDown")]
                        })
                    },
                    _rowMap: null,
                    _lastOpen: null,
                    _row: function(a) {
                        var b = a;
                        "object" === typeof a && (b = a.id);
                        return this._rowMap[b] || (this._rowMap[b] = {})
                    },
                    _onModelSet: function(a, b, c) {
                        this.refresh(a)
                    },
                    _onBodyClick: function(a) {
                        if ((m.contains(a.target, "gridxDodExpando") || m.contains(a.target, "gridxDodExpandoText")) && this.grid.domNode == t(a.target).closest(".gridx")[0]) {
                            for (a = a.target; a && !m.contains(a, "gridxRow"); )
                                a = a.parentNode;
                            a = a.getAttribute("rowindex");
                            this.toggle(this.grid.row(parseInt(a, 10)))
                        }
                    },
                    _onRowMouseOver: function(b) {
                        var c = b.target
                          , d = this._rowMap[b.rowId] ? this._rowMap[b.rowId].dodNode : void 0;
                        if (d) {
                            for (; c && c !== d; )
                                c = c.parentNode;
                            c && (m.remove(d.parentNode, "gridxRowOver"),
                            a.stop(b))
                        }
                    },
                    _onAfterRow: function(a) {
                        var b = this._row(a)
                          , c = this
                          , d = c.grid;
                        if (this.arg("showExpando")) {
                            var e = t("table", a.node())[0].rows[0].cells[0];
                            p.create("span", {
                                className: "gridxDodExpando",
                                innerHTML: '\x3cspan class\x3d"gridxDodExpandoText"\x3e' + (this.arg("defaultShow") ? "-" : "+") + "\x3c/span\x3e"
                            }, e, "first")
                        }
                        if (this.isShown(a) || this.arg("defaultShow") && void 0 === b.dodShown)
                            b.dodShown = !1,
                            b.defaultShow = !0,
                            d.isIE ? setTimeout(function() {
                                c.show(a)
                            }, 10) : c.show(a)
                    },
                    _onBodyUnrender: function(a) {
                        if (a && (a = this._row(a))) {
                            var b = a.dodNode;
                            b && b.parentNode && b.parentNode.removeChild(b);
                            (a = a.dodLoadingNode) && a.parentNode && a.parentNode.removeChild(a)
                        }
                    },
                    _onAfterCell: function(a) {
                        this.arg("showExpando") && 0 === a.node().cellIndex && this._onAfterRow(a.row)
                    },
                    _onColumnResize: function() {
                        t(".gridxDodNode", this.grid.bodyNode).forEach(function(a) {
                            n.set(a, "width", a.parentNode.firstChild.offsetWidth + "px")
                        })
                    },
                    _detailLoadComplete: function(a, b) {
                        var e = this._row(a), h = this.grid, f = h._escapeId, g;
                        if (this.isShown(a)) {
                            e.dodLoaded = !0;
                            var k = t(".gridx", e.dodNode);
                            k.length && (t.isGridInGrid[this.grid.id] = !0);
                            if (e.defaultShow)
                                e.dodNode.style.display = "block",
                                e.dodNode.style.visibility = "visible",
                                e.dodNode.style.height = "auto",
                                h.body.onRender(),
                                this.grid.rowHeader && (g = t('[rowid\x3d"' + f(a.id) + '"].gridxRowHeaderRow', this.grid.rowHeader.bodyNode)[0],
                                g.firstChild.style.height = a.node().firstChild.offsetHeight + e.dodNode.scrollHeight + "px",
                                g.style.height = a.node().firstChild.offsetHeight + e.dodNode.scrollHeight + "px");
                            else if ("block" == n.get(e.dodLoadingNode, "display") && (l.setMarginBox(e.dodNode, {
                                h: l.getMarginBox(e.dodLoadingNode).h
                            }),
                            n.set(e.dodNode, "display", "block")),
                            this.arg("useAnimation"))
                                e.inAnim = !0,
                                c.wipeIn({
                                    node: e.dodNode,
                                    duration: this.arg("duration"),
                                    onEnd: function() {
                                        e.inAnim = !1;
                                        h.body.onRender()
                                    }
                                }).play(),
                                this.grid.rowHeader && (g = t('[rowid\x3d"' + f(a.id) + '"].gridxRowHeaderRow', this.grid.rowHeader.bodyNode)[0],
                                d.animateProperty({
                                    node: g.firstChild,
                                    duration: this.arg("duration"),
                                    onEnd: function() {
                                        try {
                                            var b = t('[rowid\x3d"' + f(a.id) + '"].gridxRowHeaderRow', h.rowHeader.bodyNode)[0]
                                              , c = a.node().firstChild.offsetHeight + e.dodNode.offsetHeight;
                                            b.firstChild.style.height = c + "px"
                                        } catch (J) {}
                                    },
                                    properties: {
                                        height: {
                                            start: g.offsetHeight,
                                            end: a.node().firstChild.offsetHeight + e.dodNode.scrollHeight,
                                            units: "px"
                                        }
                                    }
                                }).play(),
                                d.animateProperty({
                                    node: g,
                                    duration: this.arg("duration"),
                                    onEnd: function() {
                                        try {
                                            var b = t('[rowid\x3d"' + f(a.id) + '"].gridxRowHeaderRow', h.rowHeader.bodyNode)[0]
                                              , c = a.node().firstChild.offsetHeight + e.dodNode.offsetHeight;
                                            b.style.height = c + "px"
                                        } catch (J) {}
                                    },
                                    properties: {
                                        height: {
                                            start: g.offsetHeight,
                                            end: a.node().firstChild.offsetHeight + e.dodNode.scrollHeight,
                                            units: "px"
                                        }
                                    }
                                }).play());
                            else if (e.dodNode.style.display = "block",
                            e.dodNode.style.visibility = "visible",
                            e.dodNode.style.height = "auto",
                            h.body.onRender(),
                            this.grid.rowHeader) {
                                g = t('[rowid\x3d"' + f(a.id) + '"].gridxRowHeaderRow', this.grid.rowHeader.bodyNode)[0];
                                var r = a.node().firstChild.offsetHeight + e.dodNode.offsetHeight;
                                g.firstChild.style.height = r + "px";
                                g.style.height = r + "px"
                            }
                            n.set(e.dodLoadingNode, "display", "none");
                            e.inLoading = !1;
                            g = this.grid._nestedGrids = this.grid._nestedGrids ? this.grid._nestedGrids : [];
                            for (r = 0; r < k.length; r++) {
                                var m = x.byNode(k[r]);
                                m._outerGrid = h;
                                g.push(m);
                                m._refreshForDod || (m._refreshForDod = !0,
                                this.connect(m.focus, "tab", "_tab"),
                                this.connect(m.lastFocusNode, "onfocus", "_lastNodeFocus"),
                                this.connect(m.domNode, "onfocus", "_domNodeFocus"),
                                this.connect(m.vLayout, "reLayout", function() {
                                    m._outerGrid && m._outerGrid.vLayout.reLayout()
                                }),
                                this.connect(m, "onRowMouseOver", function() {
                                    m._outerGrid && t(".gridxRowOver", m._outerGrid.bodyNode).removeClass("gridxRowOver")
                                }))
                            }
                            h.vLayout.reLayout();
                            this.onShow(a);
                            b.callback(a)
                        } else
                            b.errback()
                    },
                    _detailLoadError: function(a) {
                        var b = this._row(a);
                        b.dodLoaded = !1;
                        this.isShown(a) && (b.dodLoadingNode.innerHTML = this.grid.nls.loadFailInfo)
                    },
                    _showLoading: function(a) {
                        this._row(a).dodLoadingNode.innerHTML = this.grid.nls.loadingInfo
                    },
                    _getExpando: function(a) {
                        return this.showExpando ? (a = t("table", a.node())[0].rows[0].cells[0]) ? a.firstChild : null : null
                    },
                    _onCellKeyDown: function(c) {
                        var d = this.grid
                          , e = d.focus
                          , d = d.row(c.rowId, 1);
                        c.keyCode == b.DOWN_ARROW && c.ctrlKey ? (this.show(d).then(function() {}, function() {}),
                        a.stop(c)) : c.keyCode == b.UP_ARROW && c.ctrlKey && (this.hide(d).then(function() {}, function() {}),
                        a.stop(c));
                        if (c.keyCode != b.F4 || this._navigating || "body" != e.currentArea())
                            c.keyCode == b.ESCAPE && this._navigating && "navigabledod" == e.currentArea() && (this._navigating = !1,
                            e.focusArea("body"));
                        else if (this._beginNavigate(c.rowId, c.columnId)) {
                            e.focusArea("navigabledod");
                            if (9 > h("ie"))
                                return c.returnValue = !1;
                            a.stop(c)
                        }
                    },
                    _onRowKeyDown: function(a) {
                        var c = this.grid.focus;
                        a.keyCode == b.ESCAPE && this._navigating && "navigabledod" == c.currentArea() && (this._navigating = !1,
                        c.focusArea("body"))
                    },
                    _beginNavigate: function(a) {
                        var b = this.grid.row(a, 1);
                        if (!this._row(a).dodShown)
                            return !1;
                        this._navigating = !0;
                        this._focusRowId = a;
                        a = this._navElems = u._getTabNavigable(b.node());
                        return (a.highest || a.last) && (a.lowest || a.first)
                    },
                    _tab: function(a, b) {
                        this._step = a
                    },
                    _domNodeFocus: function(a) {
                        if (a && -1 === this._step) {
                            var b = this._navElems
                              , c = b.lowest || b.first
                              , b = b.highest || b.last || c;
                            (h("ie") || h("trident") ? a.srcElement : a.target) == c && b.focus();
                            return !1
                        }
                    },
                    _lastNodeFocus: function(a) {
                        if (a && 1 === this._step) {
                            var b = this._navElems
                              , c = b.lowest || b.first
                              , b = b.highest || b.last || c;
                            (h("ie") || h("trident") ? a.srcElement : a.target) == b && setTimeout(function() {
                                c.focus()
                            }, 1);
                            return !1
                        }
                    },
                    _doFocus: function(a, b) {
                        if (this._navigating) {
                            var c = this._navElems
                              , d = function() {
                                var a = 0 > b ? c.highest || c.last : c.lowest || c.first;
                                a && a.focus()
                            };
                            h("webkit") ? d() : setTimeout(d, 5);
                            return !0
                        }
                        return !1
                    },
                    _onFocus: function(a) {
                        for (var b = a.target, c = this.grid.domNode; b && b !== c && !m.contains(b, "gridxDodNode"); )
                            b = b.parentNode;
                        return b && b !== c && (c = b.parentNode) ? (c = c.getAttribute("rowid"),
                        b !== a.target && this._beginNavigate(c)) : !1
                    },
                    _doBlur: function(b, c) {
                        if (b) {
                            var d = this._navElems
                              , e = d.lowest || d.first
                              , d = d.highest || d.last || e;
                            (h("ie") || h("trident") ? b.srcElement : b.target) == (0 < c ? d : e) && a.stop(b);
                            return !1
                        }
                        this._navigating = !1;
                        return !0
                    },
                    _onBlur: function(a) {
                        this._navigating = !1
                    },
                    _dodEventDispatcher: function(a, b) {
                        var c = b.target
                          , d = "onDod" + a
                          , e = this.grid;
                        f.forEach("rowId columnId rowIndex visualIndex columnIndex parentId cellNode".split(" "), function(a) {
                            a in b && (b[a] = void 0)
                        });
                        for (; c && !m.contains(c, "gridxDodNode"); )
                            c = c.parentNode;
                        if (c && (c = c.parentNode,
                        b.rowId = c.getAttribute("rowid"),
                        b.parentId = c.getAttribute("parentid"),
                        b.rowIndex = parseInt(c.getAttribute("rowindex"), 10),
                        b.visualIndex = parseInt(c.getAttribute("visualindex"), 10),
                        e[d]))
                            e[d](b)
                    },
                    endFunc: function() {}
                })
            })
        },
        "gridx/modules/Tree": function() {
            define("dojo/_base/declare dojo/_base/array dojo/dom-class dojo/dom-geometry dojo/_base/lang dojo/_base/Deferred dojo/DeferredList dojo/query dojo/keys ../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                function c(b) {
                    return (b = b.firstChild) && b.className && n.contains(b, "gridxTreeExpandoCell") && !n.contains(b, "gridxTreeExpandoLoading")
                }
                return q(d, {
                    name: "tree",
                    forced: ["view"],
                    preload: function() {
                        var b = this
                          , a = b.grid;
                        a.domNode.setAttribute("role", "treegrid");
                        b.aspect(a.body, "collectCellWrapper", "_createCellWrapper");
                        b.aspect(a.body, "onAfterRow", "_onAfterRow");
                        b.aspect(a.body, "onCheckCustomRow", function(a, c) {
                            !b.nested && b.mergedParentRow && (c[a.id] = a.canExpand())
                        });
                        b.aspect(a.body, "onBuildCustomRow", function(a, b) {
                            b[a.id] = a.id
                        });
                        b.aspect(a, "onCellClick", "_onCellClick");
                        b.aspect(a, "onRowClick", function(a) {
                            !b.nested && b.mergedParentRow && b.canExpand(a.rowId) && (b.isExpanded(a.rowId) ? b.collapse(a.rowId) : b.expand(a.rowId))
                        });
                        !0 === b.arg("autoExpandOnFilter") && a.filter && b.aspect(a.filter, "onFilter", function(a) {
                            b.expandRecursive()
                        });
                        b._initExpandLevel();
                        b._initFocus()
                    },
                    rowMixin: {
                        canExpand: function() {
                            return this.grid.tree.canExpand(this.id)
                        },
                        isExpanded: function() {
                            return this.grid.tree.isExpanded(this.id)
                        },
                        expand: function() {
                            return this.grid.tree.expand(this.id)
                        },
                        collapse: function() {
                            return this.grid.tree.collapse(this.id)
                        },
                        expandRecursive: function() {
                            return this.grid.tree.expandRecursive(this.id)
                        },
                        collapseRecursive: function() {
                            return this.grid.tree.collapseRecursive(this.id)
                        }
                    },
                    nested: !1,
                    expandoWidth: 16,
                    expandoPadding: 18,
                    expandLevel: 1 / 0,
                    clearOnSetStore: !0,
                    mergedParentRow: !1,
                    autoExpandOnFilter: !0,
                    onExpand: function(b) {},
                    onCollapse: function(b) {},
                    canExpand: function(b) {
                        var a = this.model
                          , c = a.treePath(b).length
                          , d = this.arg("expandLevel");
                        return a.hasChildren(b) && (!(0 < d) || c <= d)
                    },
                    isExpanded: function(b) {
                        return this.model.isId(b) && !!this.grid.view._openInfo[b]
                    },
                    isPaddingCell: function(b, a) {
                        var c = this.model.treePath(b).length
                          , d = this.grid._columnsById[a];
                        if (this.arg("nested") && 1 < c && !1 !== d.padding)
                            for (var e = 0; e < this.grid._columns.length; ++e) {
                                var f = this.grid._columns[e];
                                if (f.expandLevel == c)
                                    return d.index < f.index
                            }
                        return !1
                    },
                    expand: function(b, a) {
                        var c = new k
                          , d = this;
                        !d.isExpanded(b) && d.canExpand(b) ? (d._beginLoading(b),
                        d.grid.view.logicExpand(b).then(function() {
                            k.when(d._updateBody(b, a, !0), function() {
                                d._endLoading(b);
                                c.callback();
                                d.onExpand(b)
                            })
                        })) : c.callback();
                        return c
                    },
                    collapse: function(b, a) {
                        var c = new k
                          , d = this;
                        d.isExpanded(b) ? (d.grid.view.logicCollapse(b),
                        k.when(d._updateBody(b, a), function() {
                            c.callback();
                            d.onCollapse(b)
                        })) : c.callback();
                        return c
                    },
                    expandRecursive: function(b, a) {
                        var c = this
                          , d = c.model
                          , e = new k;
                        c._beginLoading(b);
                        c.expand(b, 1).then(function() {
                            var h, f = [], l = d.size(b);
                            d.when({
                                start: 0,
                                parentId: b
                            }, function() {
                                for (h = 0; h < l; ++h) {
                                    var a = d.indexToId(h, b);
                                    f.push(c.expandRecursive(a, 1))
                                }
                            }).then(function() {
                                (new g(f)).then(function() {
                                    k.when(c._updateBody(b, a), function() {
                                        c._endLoading(b);
                                        e.callback()
                                    })
                                })
                            })
                        });
                        return e
                    },
                    loadChildRecursive: function(b) {
                        var a = new k, c = this, d = c.model, e, f = [], l = d.size(b);
                        d.when({
                            start: 0,
                            count: 1,
                            parentId: b
                        }, function() {
                            l = d.size(b);
                            for (e = 0; e < l; ++e) {
                                var a = d.indexToId(e, b);
                                f.push(c.loadChildRecursive(a))
                            }
                        }).then(function() {
                            (new g(f)).then(function() {
                                a.callback()
                            })
                        });
                        return a
                    },
                    collapseRecursive: function(b, a) {
                        var c = new k, d = l.hitch(c, c.callback), e = l.hitch(c, c.errback), f = this, m = f.grid.view._openInfo[b || ""], n, p = [];
                        if (m) {
                            for (n = m.openned.length - 1; 0 <= n; --n)
                                p.push(f.collapseRecursive(m.openned[n], 1));
                            (new g(p)).then(function() {
                                b ? f.collapse(b, a).then(d, e) : k.when(f._updateBody("", a), d, e)
                            })
                        } else
                            d();
                        return c
                    },
                    _initExpandLevel: function() {
                        var b = p.filter(this.grid._columns, function(a) {
                            return !a.ignore
                        });
                        p.some(b, function(a) {
                            return a.expandLevel
                        }) || (this.arg("nested") ? p.forEach(b, function(a, b) {
                            a.expandLevel = b + 1
                        }) : b.length && (b[0].expandLevel = 1))
                    },
                    _createCellWrapper: function(b, a, c) {
                        var d = this.grid._columnsById[c];
                        if (!d || d.expandLevel) {
                            c = this.arg("nested");
                            var e = this.model.treePath(a).length
                              , h = this.arg("expandLevel");
                            if ((!c || d && d.expandLevel == e) && (!(0 < h) || e <= h + 1)) {
                                var f = this.model.hasChildren(a)
                                  , g = this.isExpanded(a)
                                  , k = 0
                                  , l = this.arg("expandoWidth");
                                a = this.arg("expandoPadding");
                                var m = this.grid.isLeftToRight();
                                c || (k = (e - 1) * a);
                                if (e == h + 1) {
                                    if (c)
                                        return;
                                    f = !1
                                }
                                b.push({
                                    priority: 0,
                                    wrap: function(a) {
                                        return ["\x3cdiv class\x3d'gridxTreeExpandoCell ", g ? "gridxTreeExpandoCellOpen" : "", "' style\x3d'padding-", m ? "left" : "right", ": ", k + l, "px;'\x3e\x3cdiv class\x3d'gridxTreeExpandoIcon ", f ? "" : "gridxTreeExpandoIconNoChildren", "' style\x3d'margin-", m ? "left" : "right", ": ", k, "px;'\x3e\x3cdiv class\x3d'gridxTreeExpandoInner'\x3e", g ? "-" : "+", "\x3c/div\x3e\x3c/div\x3e\x3cdiv class\x3d'gridxTreeExpandoContent gridxCellContent'\x3e", a, "\x3c/div\x3e\x3c/div\x3e"].join("")
                                    }
                                })
                            }
                        }
                    },
                    _onCellClick: function(b) {
                        if (c(b.cellNode)) {
                            var a = m.position(f(".gridxTreeExpandoIcon", b.cellNode)[0]);
                            b.clientX >= a.x && b.clientX <= a.x + a.w && b.clientY >= a.y && b.clientY <= a.y + a.h && (this.isExpanded(b.rowId) ? this.collapse(b.rowId) : this.expand(b.rowId))
                        }
                    },
                    _beginLoading: function(b) {
                        if (b = this.grid.body.getRowNode({
                            rowId: b
                        }))
                            f(".gridxTreeExpandoCell", b).addClass("gridxTreeExpandoLoading"),
                            f(".gridxTreeExpandoIcon", b).forEach(function(a) {
                                a.firstChild.innerHTML = "o"
                            })
                    },
                    _endLoading: function(b) {
                        var a = this.grid.body.getRowNode({
                            rowId: b
                        })
                          , c = this.isExpanded(b);
                        a && (b = this.grid.nls,
                        f(".gridxTreeExpandoCell", a).removeClass("gridxTreeExpandoLoading").toggleClass("gridxTreeExpandoCellOpen", c).closest(".gridxCell").attr("aria-expanded", String(c)).attr("aria-label", c ? b.treeExpanded : b.treeCollapsed),
                        f(".gridxTreeExpandoIcon", a).forEach(function(a) {
                            a.firstChild.innerHTML = c ? "-" : "+"
                        }),
                        a.setAttribute("aria-expanded", String(c)))
                    },
                    _updateBody: function(b, a, c) {
                        var d = this.grid.view
                          , e = this.grid.body;
                        return a ? null : (b = c && b ? d.getRowInfo({
                            rowIndex: this.model.idToIndex(b),
                            parentId: this.model.parentId(b)
                        }).visualIndex : -1,
                        e.refresh(c && b + 1))
                    },
                    _onAfterRow: function(b) {
                        if (this.model.hasChildren(b.id)) {
                            b = b.node();
                            var a = this.isExpanded();
                            b.setAttribute("aria-expanded", a);
                            var c = this.grid.nls;
                            f(".gridxTreeExpandoCell", b).closest(".gridxCell").attr("aria-expanded", String(a)).attr("aria-label", a ? c.treeExpanded : c.treeCollapsed)
                        }
                    },
                    _initFocus: function() {
                        this.connect(this.grid, "onCellKeyDown", "_onKey")
                    },
                    _onKey: function(b) {
                        if (b.keyCode == e.ESCAPE) {
                            var a = this.model
                              , d = a.treePath(b.rowId)
                              , f = d.pop();
                            b = d.length;
                            var g = this.grid;
                            if (f) {
                                var k, l, m;
                                for (k = g._columns.length - 1; 0 <= k && (l = g._columns[k],
                                !l.expandLevel || this.arg("nested") && l.expandLevel != b); --k)
                                    ;
                                a.when({
                                    id: f
                                }, function() {
                                    m = g.view.getRowInfo({
                                        parentId: d.pop(),
                                        rowIndex: a.idToIndex(f)
                                    }).visualIndex
                                }).then(function() {
                                    g.vScroller.scrollToRow(m).then(function() {
                                        g.body._focusCell(null, m, l.index)
                                    })
                                })
                            }
                        } else
                            this.grid._isCtrlKey(b) && c(b.cellNode) && (k = this.grid.isLeftToRight(),
                            b.keyCode == (k ? e.LEFT_ARROW : e.RIGHT_ARROW) && this.isExpanded(b.rowId) ? this.collapse(b.rowId) : b.keyCode != (k ? e.RIGHT_ARROW : e.LEFT_ARROW) || this.isExpanded(b.rowId) || this.expand(b.rowId))
                    }
                })
            })
        },
        "gridx/modules/RowLock": function() {
            define("dojo/_base/kernel dojo/_base/lang ../core/_Module dojo/_base/declare dojo/_base/array dojo/dom-class dojo/aspect dojo/query".split(" "), function(q, p, n, m, l, k, g, f) {
                q.experimental("gridx/modules/RowLock");
                return m(n, {
                    name: "rowLock",
                    required: ["vLayout"],
                    forced: ["hLayout", "body"],
                    count: 0,
                    load: function(e, d) {
                        this.count = this.arg("count");
                        var c = this
                          , b = this.grid;
                        d.then(function() {
                            c.grid.vScroller && (c.connect(b.vScrollerNode, "onscroll", function() {
                                c._updateRowPosition()
                            }),
                            c.connect(b.bodyNode, "onscroll", function() {
                                c._updateRowPosition()
                            }),
                            c.connect(b.body, "onAfterCell", function(a) {
                                a.row.visualIndex() < c.count && (c._adjustBody(),
                                c._updatePosition())
                            }));
                            c.grid.vScroller && c.grid.rowHeader && c.connect(b.bodyNode, "onscroll", function() {
                                c._updateRowHeaderPosition()
                            });
                            b.columnResizer && (c.connect(b.columnResizer, "onResize", "_adjustBody"),
                            c.connect(b.columnResizer, "onResize", "_updatePosition"));
                            c.lock(c.count);
                            c.loaded.callback()
                        });
                        g.before(b.body, "refresh", function() {
                            c.grid.bodyNode.style.paddingTop = "0px"
                        });
                        this.connect(b.body, "refresh", function() {
                            setTimeout(function() {
                                c.lock(c.count)
                            }, 0)
                        })
                    },
                    lock: function(e) {
                        this.unlock(!0);
                        this.count = e;
                        this._foreachLockedRows(function(d) {
                            d.style.position = "absolute";
                            k.add(d, "gridxLockedRow")
                        }, function(d) {
                            d.style.position = "absolute"
                        });
                        this._adjustBody();
                        this._updatePosition();
                        this.onLock()
                    },
                    unlock: function(e) {
                        var d = this.count;
                        this._foreachLockedRows(function(c) {
                            c.style.position = "static";
                            k.remove(c, "gridxLockedRow")
                        }, function(c) {
                            c.style.position = "static"
                        });
                        this.grid.bodyNode.style.paddingTop = "0px";
                        this.grid.rowHeader && (this.grid.rowHeader.bodyNode.style.paddingTop = "0px");
                        this.count = 0;
                        if (!e)
                            this.onUnlock(d)
                    },
                    onLock: function(e) {},
                    onUnlock: function(e) {},
                    _adjustBody: function() {
                        var e = 0;
                        this._foreachLockedRows(function(d) {
                            e += d.offsetHeight
                        }, function(d) {});
                        this.grid.bodyNode.style.paddingTop = e + "px";
                        this.grid.rowHeader && (this.grid.rowHeader.bodyNode.style.paddingTop = e + "px")
                    },
                    _updatePosition: function() {
                        this._updateRowPosition();
                        this.grid.rowHeader && this._updateRowHeaderPosition()
                    },
                    _updateRowPosition: function() {
                        if (this.count) {
                            var e = this.grid.bodyNode.scrollTop
                              , d = 0;
                            this._foreachLockedRows(function(c) {
                                c.style.top = e + d + "px";
                                d += c.offsetHeight
                            }, null)
                        }
                    },
                    _updateRowHeaderPosition: function() {
                        if (this.count) {
                            var e = this.grid.bodyNode.scrollTop
                              , d = 0;
                            this._foreachLockedRows(null, function(c) {
                                c.style.top = e + d + "px";
                                d += c.offsetHeight
                            })
                        }
                    },
                    _foreachLockedRows: function(e, d) {
                        for (var c = this.grid.bodyNode.childNodes, b = this.grid.rowHeader ? this.grid.rowHeader.bodyNode.childNodes : [], a = 0; a < this.count; a++)
                            b[a] && d && d(b[a]),
                            c[a] && e && e(c[a])
                    }
                })
            })
        },
        "gridx/modules/ToolBar": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dijit/Toolbar", "../core/_Module", "./Bar"], function(q, p, n, m) {
                return q(m, {
                    name: "toolBar",
                    required: ["bar"],
                    constructor: function(l, k) {
                        this._def = p.mixin(k, {
                            bar: "top",
                            row: 0,
                            col: 0,
                            pluginClass: n,
                            "aria-label": "grid toolbar",
                            className: "gridxBarToolBar"
                        })
                    },
                    preload: function() {
                        this.grid.bar.defs.push(this._def)
                    },
                    load: function() {
                        var l = this
                          , k = l.grid.bar;
                        k.loaded.then(function() {
                            l.widget = k.plugins.top[0][0];
                            l.domNode = l.widget.domNode;
                            l.loaded.callback()
                        })
                    }
                })
            })
        },
        "gridx/modules/SummaryBar": function() {
            define(["dojo/_base/declare", "../support/Summary", "../core/_Module", "./Bar"], function(q, p, n) {
                return q(n, {
                    name: "summaryBar",
                    required: ["bar"],
                    preload: function() {
                        this.grid.bar.defs.push({
                            bar: "bottom",
                            row: 0,
                            col: 0,
                            pluginClass: p,
                            className: "gridxBarSummary",
                            message: this.arg("message"),
                            hookPoint: this,
                            hookName: "summary"
                        })
                    }
                })
            })
        },
        "gridx/modules/TouchScroll": function() {
            define("dojo/_base/declare dojo/_base/window dojo/_base/event dojo/dom dojo/dom-construct dojo/touch ../core/_Module".split(" "), function(q, p, n, m, l, k, g) {
                return q(g, {
                    name: "touchScroll",
                    required: ["vScroller", "hScroller"],
                    constructor: function() {
                        var f = this.grid
                          , e = f.bodyNode;
                        this.vWrapper = l.create("div", {
                            "class": "gridxTouchScrollVWrapper"
                        }, f.mainNode);
                        this.vInner = l.create("div", {
                            "class": "gridxTouchScrollVBar"
                        }, this.vWrapper);
                        this.hWrapper = l.create("div", {
                            "class": "gridxTouchScrollHWrapper"
                        }, f.mainNode);
                        this.hInner = l.create("div", {
                            "class": "gridxTouchScrollHBar"
                        }, this.hWrapper);
                        this.batchConnect([e, k.press, "_start"], [e, k.move, "_scroll"], [p.doc, k.release, "_end"])
                    },
                    _start: function(f) {
                        var e = this.grid
                          , d = e.vScrollerNode
                          , c = e.hScrollerNode;
                        if ("none" != d.style.display && 1 == d.offsetWidth || "none" != c.style.display && 1 == c.offsetHeight) {
                            var b = this.vInner.style
                              , a = this.hInner.style
                              , h = e.bodyNode
                              , g = h.clientHeight
                              , h = h.clientWidth
                              , d = d.scrollHeight
                              , c = c.scrollWidth;
                            this._last = f;
                            m.setSelectable(e.domNode, !1);
                            this.vWrapper.style.height = g - 4 + "px";
                            this.hWrapper.style.width = h - 4 + "px";
                            b.height = g * (g - 4) / d + "px";
                            a.width = h * (h - 4) / c + "px";
                            b.opacity = 1;
                            a.opacity = 1;
                            this._vr = (g - 4) / d;
                            this._hr = (h - 4) / c;
                            n.stop(f)
                        }
                    },
                    _scroll: function(f) {
                        var e = this.grid
                          , d = e.hScrollerNode
                          , e = e.vScrollerNode
                          , c = this._last;
                        c && (e.scrollTop += c.clientY - f.clientY,
                        d.scrollLeft += c.clientX - f.clientX,
                        this.vInner.style.top = e.scrollTop * this._vr + "px",
                        this.hInner.style.left = d.scrollLeft * this._hr + "px",
                        this._last = f,
                        n.stop(f))
                    },
                    _end: function(f) {
                        this._last && (this._last = null,
                        m.setSelectable(this.grid.domNode, !0),
                        this.vInner.style.opacity = 0,
                        this.hInner.style.opacity = 0,
                        n.stop(f))
                    }
                })
            })
        },
        "gridx/modules/TouchVScroller": function() {
            define("dojo/_base/kernel dojo/_base/Deferred dojo/_base/declare dojo/query dojo/dom-class ./VScroller dojox/mobile/scrollable".split(" "), function(q, p, n, m, l, k, g) {
                q.experimental("gridx/modules/TouchVScroller");
                return n(k, {
                    constructor: function() {
                        this.grid.touch && (l.add(this.grid.domNode, "gridxTouchVScroller"),
                        this.domNode.style.width = "")
                    },
                    scrollToRow: function(f, e) {
                        if (this.grid.touch) {
                            var d = new p
                              , c = m('[visualindex\x3d"' + f + '"]', this.grid.bodyNode)[0];
                            c && this._scrollable.scrollIntoView(c, e);
                            d.callback();
                            return d
                        }
                        return this.inherited(arguments)
                    },
                    scroll: function(f) {
                        this.grid.touch ? this._scrollable.scrollTo({
                            y: f
                        }) : this.inherited(arguments)
                    },
                    position: function() {
                        return this.grid.touch ? this._scrollable.getPos().y : this.inherited(arguments)
                    },
                    _init: function() {
                        if (this.grid.touch) {
                            var f = function() {
                                var a = e.layer && e.layer._wrapper1.firstChild;
                                return a && a.firstChild
                            }
                              , e = this.grid
                              , d = e.view
                              , c = e.header.innerNode
                              , b = e.mainNode
                              , a = e.bodyNode
                              , h = e.vScroller.arg("scrollable") || {};
                            scrollable = this._scrollable = new g(h);
                            c.style.height = c.firstChild.offsetHeight + "px";
                            scrollable.init({
                                domNode: b,
                                containerNode: a,
                                scrollDir: "none" == e.hScrollerNode.style.display ? "v" : "vh",
                                noResize: !0
                            });
                            this.aspect(scrollable, "scrollTo", function(a) {
                                if ("number" == typeof a.x) {
                                    a = scrollable.makeTranslateStr({
                                        x: a.x
                                    });
                                    c.firstChild.style.webkitTransform = a;
                                    c.firstChild.style.transform = a;
                                    var b = f();
                                    b && (b.style.webkitTransform = a,
                                    b.style.transform = a)
                                }
                            });
                            this.aspect(scrollable, "slideTo", function(a, b, d) {
                                scrollable._runSlideAnimation({
                                    x: scrollable.getPos().x
                                }, {
                                    x: a.x
                                }, b, d, c.firstChild, 2);
                                var e = f();
                                e && scrollable._runSlideAnimation({
                                    x: scrollable.getPos().x
                                }, {
                                    x: a.x
                                }, b, d, e, 2)
                            });
                            this.aspect(scrollable, "stopAnimation", function() {
                                l.remove(c.firstChild, "mblScrollableScrollTo2");
                                var a = f();
                                a && l.remove(a, "mblScrollableScrollTo2")
                            });
                            this.aspect(e.hScroller, "refresh", function() {
                                scrollable._h = a.scrollWidth > b.clientWidth
                            });
                            this._onBodyChange = function() {
                                e.hLayout.reLayout();
                                e.vLayout.reLayout()
                            }
                            ;
                            this.model.when({
                                start: d.rootStart,
                                count: d.rootCount
                            }, function() {
                                e.body.renderRows(0, d.visualCount)
                            })
                        } else
                            this.inherited(arguments)
                    }
                })
            })
        },
        "gridx/modules/HiddenColumns": function() {
            define(["dojo/_base/declare", "dojo/_base/Deferred", "dojo/_base/array", "dojo/query", "../core/_Module"], function(q, p, n, m, l) {
                return q(l, {
                    name: "hiddenColumns",
                    load: function(k, g) {
                        var f = this
                          , e = f.grid
                          , d = f.arg("init", []);
                        f._cols = e._columns.slice();
                        f.aspect(e, "setColumns", function() {
                            f._cols = e._columns.slice()
                        });
                        e.move && e.move.column && f.connect(e.move.column, "onMoved", "_syncOrder");
                        e.persist && (d = d.concat(e.persist.registerAndLoad("hiddenColumns", function() {
                            return f.get()
                        }) || []));
                        d.length ? g.then(function() {
                            f.add.apply(f, d);
                            f.loaded.callback()
                        }) : f.loaded.callback()
                    },
                    add: function() {
                        for (var k = this, g = k.grid, f = g._columnsById, e = g._columns, d = g.columnLock, c = 0, b = {}, a = n.filter(n.map(arguments, function(a) {
                            a = a && "object" === typeof a ? a.id : a;
                            return f[a]
                        }), function(a) {
                            return a && !a.ignore && (void 0 === a.hidable || a.hidable)
                        }), h = 0, l = a.length; h < l; ++h)
                            b[a[h].id] = a[h];
                        var a = [], t;
                        for (t in b)
                            a.push(b[t]);
                        d && (c = d.count,
                        d.unlock());
                        n.forEach(a, function(a) {
                            a.index < c && --c;
                            a.hidden = !0;
                            delete f[a.id];
                            e.splice(n.indexOf(e, a), 1);
                            m('[colid\x3d"' + g._escapeId(a.id) + '"].gridxCell', g.domNode).forEach(function(a) {
                                a.parentNode.removeChild(a)
                            })
                        });
                        a.length && n.forEach(e, function(a, b) {
                            a.index = b
                        });
                        g.columnWidth._adaptWidth();
                        m(".gridxCell", g.bodyNode).forEach(function(a) {
                            var b = a.style;
                            b.width = b.minWidth = b.maxWidth = f[a.getAttribute("colid")].width
                        });
                        if (g.vScroller._doVirtualScroll)
                            g.body.onForcedScroll();
                        return k._refresh(0).then(function() {
                            k.onHide(n.map(a, function(a) {
                                return a.id
                            }));
                            d && 0 < c && d.lock(c)
                        })
                    },
                    remove: function() {
                        var k = this, g = k.grid, f = g._columns, e = g.columnLock, d = 0, c, b = [];
                        e && (d = e.count,
                        e.unlock());
                        n.forEach(arguments, function(a) {
                            a = a && "object" === typeof a ? a.id : a;
                            for (var e, g = -1, l = 0, m = k._cols.length; l < m; ++l)
                                if (e = k._cols[l],
                                e.id === a && e.hidden) {
                                    delete e.hidden;
                                    e.index = ++g;
                                    b.push(e);
                                    break
                                } else
                                    e.hidden || (g = e.index);
                            if (l < m)
                                for (c = 1,
                                k.grid._columnsById[a] = e,
                                g < d && (e.index = g = d),
                                f.splice(g, 0, e),
                                l = g + 1; l < f.length; ++l)
                                    f[l].index = l
                        });
                        return k._refresh(c).then(function() {
                            k.onShow(n.map(b, function(a) {
                                return a.id
                            }));
                            e && 0 < d && e.lock(d)
                        })
                    },
                    clear: function() {
                        var k = this.grid, g = k.columnLock, f = 0, e;
                        g && (f = g.count,
                        g.unlock());
                        k._columns = n.map(this._cols, function(d, c) {
                            d.index = c;
                            d.hidden && (e = 1,
                            delete d.hidden,
                            k._columnsById[d.id] = d);
                            return d
                        });
                        return this._refresh(e).then(function() {
                            g && 0 < f && g.lock(f)
                        })
                    },
                    get: function() {
                        for (var k = [], g = this._cols, f = 0; f < g.length; ++f)
                            g[f].hidden && k.push(g[f].id);
                        return k
                    },
                    onShow: function(k) {},
                    onHide: function(k) {},
                    _syncOrder: function() {
                        for (var k = this._cols, g = this.grid._columns, f = 0, e = 0, d, c; f < g.length && e < k.length; ++f,
                        ++e) {
                            for (d = k[e]; d.hidden; d = k[e])
                                ++e;
                            g[f] != d && (c = n.indexOf(k, g[f]),
                            k[e] = k[c],
                            k[c] = d)
                        }
                    },
                    _refresh: function(k) {
                        var g = this.grid;
                        if (k)
                            return g.header.refresh(),
                            g.columnWidth._adaptWidth(),
                            g.body.refresh();
                        k = new p;
                        g.header.onRender();
                        k.callback();
                        return k
                    }
                })
            })
        },
        "gridx/modules/GroupHeader": function() {
            define("dojo/_base/kernel dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/sniff dojo/dom-class dojo/keys dojo/query ./Header".split(" "), function(q, p, n, m, l, k, g, f, e) {
                q.experimental("gridx/modules/GroupHeader");
                return p(e, {
                    preload: function(d) {
                        this.inherited(arguments);
                        var c = this.grid
                          , b = c._escapeId;
                        c.columnResizer && this.aspect(c.columnResizer, "onResize", function(a) {
                            var d = f('[colid\x3d"' + b(a) + '"]', c.headerNode)[0].offsetWidth - c.columnWidth._padBorder + "px";
                            d != c._columnsById[a].width && f('[colid\x3d"' + b(a) + '"]', c.domNode).forEach(function(a) {
                                a = a.style;
                                a.width = d;
                                a.minWidth = d;
                                a.maxWidth = d
                            })
                        })
                    },
                    refresh: function() {
                        this.inherited(arguments);
                        this._curNode = 0
                    },
                    _parse: function() {
                        var d = this.grid._columns
                          , c = d.length
                          , b = 0
                          , a = 0
                          , e = this.arg("groups", [])
                          , f = this._groupsById = {}
                          , g = function(e, h, k) {
                            n.isArrayLike(e) || (e = [e]);
                            h > a && (a = h);
                            for (var l = 0, r = 0; r < e.length; ) {
                                var m = e[r];
                                if (b >= c)
                                    e.splice(r, 1);
                                else if ("number" == typeof m && 0 < m) {
                                    b + m > c && (m = e[r] = c - b);
                                    for (var t = 0; t < m; ++t)
                                        d[b + t].groupId = k;
                                    l += m;
                                    b += m;
                                    ++r
                                } else
                                    m && n.isObject(m) ? (n.isArrayLike(m.children) || (m.children = [m.children]),
                                    m.groupId = k,
                                    m.id = m.id || "group-" + h + "-" + d[b].id,
                                    m.level = h,
                                    m.start = b,
                                    t = g(m.children, h + 1, m.id),
                                    m.children.length ? (f[m.id] = m,
                                    m.colCount = t,
                                    l += t,
                                    ++r) : e.splice(r, 1)) : e.splice(r, 1)
                            }
                            return l
                        };
                        g(e, 0);
                        b < c && e.push(c - b);
                        return a
                    },
                    _configMoveColumn: function() {
                        var d = this.grid;
                        if (d.move && d.move.column) {
                            var c = d.move.column.arg("constraints", {}), b;
                            for (b in this._groupsById) {
                                var a = this._groupsById[b]
                                  , e = a.start + a.colCount - 1;
                                if ("number" != typeof c[a.start] || e < c[a.start])
                                    c[a.start] = e
                            }
                            var f = -1
                              , g = 0;
                            m.forEach(d._columns, function(a, b) {
                                a.groupId || (b != f + 1 && (g = b),
                                f = b,
                                c[g] = b)
                            })
                        }
                    },
                    _build: function() {
                        var d = this.grid
                          , c = d.focus
                          , b = d._columns.slice()
                          , a = 0
                          , e = this._parse()
                          , f = this.groups.slice()
                          , g = ['\x3ctable role\x3d"presentation" border\x3d"0" cellpadding\x3d"0" cellspacing\x3d"0"\x3e'];
                        for (this._configMoveColumn(); f.length; ) {
                            g.push("\x3ctr\x3e");
                            for (var l = 0, m = 0, p = f.length; m < p; ++m) {
                                var q = f.shift();
                                if ("number" == typeof q) {
                                    for (var w = 0; w < q; ++w) {
                                        var v = b[l + w]
                                          , A = v.headerClass
                                          , B = v.headerStyle
                                          , C = v.width;
                                        v._domId = (d.id + "-" + v.id).replace(/\s+/, "");
                                        g.push('\x3ctd role\x3d"columnheader" aria-readonly\x3d"true" tabindex\x3d"-1" id\x3d"', v._domId, '" colid\x3d"', v.id, e - a ? '" rowspan\x3d"' + (e - a + 1) : "", '" class\x3d"gridxCell ', a ? "gridxSubHeader" : "", c && "header" == c.currentArea() && v.id == this._focusHeaderId ? this._focusClass : "", (A && n.isFunction(A) ? A(v) : A) || "", '" style\x3d"width:', C, ";min-width:", C, ";max-width:", C, ";", d.getTextDirStyle(v.id, v.name), (B && n.isFunction(B) ? B(v) : B) || "", '"\x3e\x3cdiv class\x3d"gridxSortNode"\x3e', v.name || "", "\x3c/div\x3e\x3c/td\x3e")
                                    }
                                    b.splice(l, q)
                                } else
                                    l += q.colCount,
                                    f = f.concat(q.children),
                                    g.push('\x3ctd tabindex\x3d"-1" colspan\x3d"', q.colCount, '" class\x3d"gridxGroupHeader', a ? " gridxSubHeader" : "", '" groupid\x3d"', q.id, '"\x3e\x3cdiv class\x3d"gridxSortNode"\x3e', q.name || "", "\x3c/div\x3e\x3c/td\x3e")
                            }
                            g.push("\x3c/tr\x3e");
                            a++
                        }
                        g.push("\x3c/table\x3e");
                        this.innerNode.innerHTML = g.join("");
                        k.toggle(this.domNode, "gridxHeaderRowHidden", this.arg("hidden"));
                        k.add(d.domNode, "gridxGH")
                    },
                    _initFocus: function() {
                        var d = this
                          , c = d.grid;
                        c.focus && c.focus.registerArea({
                            name: "header",
                            priority: 0,
                            focusNode: d.innerNode,
                            scope: d,
                            doFocus: d._doFocus,
                            doBlur: d._blurNode,
                            onBlur: d._blurNode,
                            connects: [d.connect(d.domNode, "onkeydown", "_onKeyDown"), d.connect(d.domNode, "onmousedown", function(b) {
                                d._focusNode(f(b.target).closest("td", d.domNode)[0]);
                                c.focus.currentArea()
                            })]
                        })
                    },
                    _doFocus: function(d, c) {
                        var b = this._curNode || f("td", this.domNode)[0];
                        this._focusNode(b);
                        return b
                    },
                    _focusNode: function(d) {
                        if (d) {
                            var c = this
                              , b = c.grid
                              , a = c._focusHeaderId = d.getAttribute("colid");
                            if (!a) {
                                var a = c._focusGroupId = d.getAttribute("groupid")
                                  , e = c._groupsById[a];
                                e && (a = b._columns[d.offsetLeft + d.offsetWidth > c.innerNode.scrollLeft + c.innerNode.clientWidth ? e.start + e.colCount - 1 : e.start].id)
                            }
                            if (a && b._columnsById[a])
                                return c._blurNode(),
                                b.hScroller && b.hScroller.scrollToColumn(a),
                                b.body._focusCellCol = b._columnsById[a].index,
                                c._curNode = d,
                                k.add(d, c._focusClass),
                                setTimeout(function() {
                                    l("webkit") && k.add(d, c._focusClass);
                                    d.focus();
                                    c._isMSIE() && (c.innerNode.scrollLeft = c._scrollLeft)
                                }, 0),
                                !0
                        }
                        return !1
                    },
                    _isMSIE: function() {
                        var d = navigator.userAgent.toLowerCase();
                        return (/msie/.test(d) || /trident/.test(d)) && !/opera/.test(d)
                    },
                    _blurNode: function() {
                        var d = f("." + this._focusClass, this.innerNode)[0];
                        d && k.remove(d, this._focusClass);
                        return !0
                    },
                    _getUpNode: function(d) {
                        var c = d.getAttribute("colid");
                        d = d.getAttribute("groupid");
                        return (c = this.grid._columnsById[c] || this._groupsById[d]) && f('[groupid\x3d"' + c.groupId + '"]', this.domNode)[0]
                    },
                    _getDownNode: function(d, c) {
                        var b = this._groupsById[d.getAttribute("groupid")];
                        if (b) {
                            var a = b.children[0];
                            if ("number" == typeof a)
                                return this.getHeaderNode(this.grid._columns[b.start].id);
                            b = f('[groupid\x3d"' + a.id + '"]', this.domNode);
                            return c ? b[b.length - 1] : b[0]
                        }
                    },
                    _getPrevNode: function(d) {
                        var c = d.previousSibling;
                        c || (c = (c = (c = this._getUpNode(d)) && this._getPrevNode(c)) && this._getDownNode(c, 1) || c);
                        return c
                    },
                    _getNextNode: function(d) {
                        var c = d.nextSibling;
                        c || (c = (c = (c = this._getUpNode(d)) && this._getNextNode(c)) && this._getDownNode(c) || c);
                        return c
                    },
                    _onKeyDown: function(d) {
                        var c = this.grid
                          , b = this._curNode;
                        if (c._isCtrlKey(d) || d.altKey || d.keyCode != g.LEFT_ARROW && d.keyCode != g.RIGHT_ARROW)
                            d.keyCode == g.UP_ARROW ? (c.focus.stopEvent(d),
                            this._focusNode(this._getUpNode(b))) : d.keyCode == g.DOWN_ARROW && (c.focus.stopEvent(d),
                            this._focusNode(this._getDownNode(b)));
                        else if (c.focus.stopEvent(d),
                        c = c.isLeftToRight() ^ d.keyCode == g.RIGHT_ARROW ? this._getPrevNode(b) : this._getNextNode(b))
                            if (this._focusHeaderId = c.getAttribute("colid"),
                            this._focusGroupId = c.getAttribute("groupid"),
                            this._focusNode(c),
                            this._focusHeaderId)
                                this.onMoveToHeaderCell(this._focusHeaderId, d)
                    }
                })
            })
        },
        "gridx/modules/PagedBody": function() {
            define("dojo/_base/declare dojo/query dojo/dom-construct dojo/dom-style dojo/dom-class dojo/keys dojo/sniff ./Body ./_PagedBodyMixin".split(" "), function(q, p, n, m, l, k, g, f, e) {
                return q([f, e], {
                    maxPageCount: 0,
                    _onHScroll: function(d) {
                        var c = this.grid;
                        this.inherited(arguments);
                        (g("webkit") || 8 > g("ie")) && !c.isLeftToRight() && (d = c.header.innerNode.scrollWidth - c.header.innerNode.offsetWidth - d);
                        m.set(this._prevBtn, "marginLeft", d + "px");
                        m.set(this._moreBtn, "marginLeft", d + "px")
                    },
                    createBottom: function(d) {
                        var c = this;
                        d = c._moreBtn = n.create("button", {
                            innerHTML: c.arg("loadMoreLabel", c.grid.nls.loadMore)
                        }, d, "last");
                        c.connect(d, "onclick", function() {
                            c._load(1)
                        });
                        c.connect(d, "onkeydown", function(b) {
                            b.keyCode == k.ENTER && c._load(1)
                        })
                    },
                    createTop: function(d) {
                        var c = this;
                        d = c._prevBtn = n.create("button", {
                            innerHTML: c.arg("loadPreviousLabel", c.grid.nls.loadPrevious)
                        }, d, "last");
                        c.connect(d, "onclick", function() {
                            c._load()
                        });
                        c.connect(d, "onkeydown", function(b) {
                            b.keyCode == k.ENTER && c._load()
                        })
                    },
                    _onLoadFinish: function(d, c, b, a) {
                        var e = this
                          , f = e.grid.view;
                        c = e.arg("maxPageCount");
                        b = c * e.arg("pageSize");
                        var g = d ? e._bottomNode : e._topNode;
                        0 < c && f.rootCount > b ? f.updateRootRange(d ? f.rootStart : f.rootStart + f.rootCount - b, b).then(function() {
                            g.parentNode && g.parentNode.removeChild(g);
                            e.unrenderRows(e.renderCount - f.visualCount, d ? "post" : "");
                            e.renderStart = 0;
                            e.renderCount = f.visualCount;
                            p(".gridxRow", e.domNode).forEach(function(a, b) {
                                a.setAttribute("visualindex", b);
                                l.toggle(a, "gridxRowOdd", b % 2)
                            });
                            n.place(g, e.domNode, d ? "last" : "first");
                            d || e.grid.vScroller.scrollToRow(f.visualCount - 1);
                            a()
                        }) : a()
                    },
                    _busy: function(d, c) {
                        var b = d ? this._moreBtn : this._prevBtn
                          , a = d ? "More" : "Previous";
                        b.innerHTML = c ? '\x3cspan class\x3d"gridxLoadingMore"\x3e\x3c/span\x3e' + this.arg("load" + a + "LoadingLabel", this.grid.nls["load" + a + "Loading"]) : this.arg("load" + a + "Label", this.grid.nls["load" + a]);
                        b.disabled = !!c
                    }
                })
            })
        },
        "gridx/modules/_PagedBodyMixin": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/query dojo/_base/array dojo/dom-construct dojo/dom-geometry dojo/dom-class dojo/_base/Deferred dojo/_base/sniff dijit/a11y".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                return q([], {
                    preload: function() {
                        var c = this
                          , b = c.grid
                          , a = b.view;
                        a.paging = 1;
                        a.rootStart = 0;
                        c._autoPageSize = "auto" == c.arg("pageSize") || "auto" == b.pageSize;
                        c.pageSize = c.pageSize || c.model._cache.pageSize || 20;
                        a.rootCount = c.pageSize;
                        g.remove(c.domNode, "gridxBodyRowHoverEffect");
                        c.connect(c.domNode, "onscroll", function(a) {
                            b.hScrollerNode.scrollLeft = c.domNode.scrollLeft
                        });
                        c.aspect(c.model, "onSizeChange", "_onSizeChange");
                        c.aspect(b, "onHScroll", "_onHScroll");
                        c.arg("createBottom") && (c._bottomNode = l.create("div", {
                            "class": "gridxBodyBottom"
                        }),
                        c.createBottom(c._bottomNode),
                        c.connect(c._bottomNode, "onmouseover", function() {
                            n("\x3e .gridxRowOver", c.domNode).removeClass("gridxRowOver")
                        }));
                        c.arg("createTop") && (c._topNode = l.create("div", {
                            "class": "gridxBodyTop"
                        }),
                        c.createTop(c._topNode),
                        c.connect(c._topNode, "onmouseover", function() {
                            n("\x3e .gridxRowOver", c.domNode).removeClass("gridxRowOver")
                        }));
                        c._initFocus()
                    },
                    _onHScroll: function(c) {},
                    _onSizeChange: function(c) {
                        this.grid.view.updateRootRange(0, c < this.pageSize ? c : this.pageSize)
                    },
                    _initFocus: function() {
                        var c = this.grid.focus
                          , b = function(a, b, e) {
                            return a.parentNode ? (c.stopEvent(b),
                            (a = d._getTabNavigable(a)[0 > e ? "last" : "first"]) && a.focus(),
                            !!a) : !1
                        }
                          , a = function(a, b, c) {
                            return a.parentNode ? (a = d._getTabNavigable(a),
                            b ? b.target == (0 > c ? a.first : a.last) : !0) : !0
                        };
                        this.inherited(arguments);
                        this._topNode && c.registerArea({
                            name: "bodyTop",
                            priority: .9999,
                            focusNode: this._topNode,
                            scope: this,
                            doFocus: p.partial(b, this._topNode),
                            doBlur: p.partial(a, this._topNode)
                        });
                        this._bottomNode && c.registerArea({
                            name: "bodyBottom",
                            priority: 1.0001,
                            focusNode: this._bottomNode,
                            scope: this,
                            doFocus: p.partial(b, this._bottomNode),
                            doBlur: p.partial(a, this._bottomNode)
                        })
                    },
                    load: function(c, b) {
                        var a = this
                          , d = a.grid.view;
                        d._err && a._loadFail(d._err);
                        b.then(function() {
                            if (a._autoPageSize) {
                                var b = parseInt(a.grid.mainNode.offsetHeight / a.arg("defaultRowHeight", 24) * 1.5, 10);
                                a.pageSize = b;
                                d.updateRootRange(0, b)
                            }
                            a.loaded.callback()
                        })
                    },
                    refresh: function(c) {
                        var b = this
                          , a = b.grid.loadingNode
                          , d = new f;
                        delete b._err;
                        g.add(a, "gridxLoading");
                        b.grid.view.updateVisualCount().then(function() {
                            try {
                                b.renderStart = 0;
                                var e = b.renderCount = b.grid.view.visualCount;
                                if ("number" == typeof c && 0 <= c) {
                                    var h = e - c
                                      , k = n('\x3e [visualindex\x3d"' + c + '"]', b.domNode)[0]
                                      , e = []
                                      , p = [];
                                    if (k) {
                                        var q = b._buildRows(c, h, e, p);
                                        q && l.place(q, k, "before")
                                    }
                                    for (; k && (!b._bottomNode || k !== b._bottomNode); ) {
                                        var z = k.nextSibling
                                          , w = parseInt(k.getAttribute("visualindex"), 10)
                                          , v = k.getAttribute("rowid");
                                        l.destroy(k);
                                        if (w >= c + h)
                                            b.onUnrender(v);
                                        k = z
                                    }
                                    m.forEach(p, b.onAfterRow, b);
                                    f.when(b._buildUncachedRows(e), function() {
                                        b.onRender(c, h);
                                        g.remove(a, "gridxLoading");
                                        d.callback()
                                    })
                                } else
                                    b.renderRows(0, e, 0, 1),
                                    g.remove(a, "gridxLoading"),
                                    d.callback()
                            } catch (A) {
                                b._loadFail(A),
                                g.remove(a, "gridxLoading"),
                                d.errback(A)
                            }
                        }, function(c) {
                            b._loadFail(c);
                            g.remove(a, "gridxLoading");
                            d.errback(c)
                        });
                        return d
                    },
                    renderRows: function(c, b, a) {
                        var d = this
                          , g = d.grid
                          , k = []
                          , l = []
                          , n = d.domNode
                          , p = g.emptyNode;
                        if (!d._err)
                            if (0 < b) {
                                p.innerHTML = d.arg("loadingInfo", g.nls.loadingInfo);
                                p.style.zIndex = "";
                                a = d._buildRows(c, b, k, l);
                                d.renderStart = c;
                                d.renderCount = b;
                                n.scrollTop = 0;
                                if (e("ie") || e("trident"))
                                    for (; n.childNodes.length; )
                                        n.removeChild(n.firstChild);
                                n.innerHTML = a;
                                d._topNode && 0 < g.view.rootStart && (a ? n.insertBefore(d._topNode, n.firstChild) : n.appendChild(d._topNode));
                                d._bottomNode && g.view.rootStart + g.view.rootCount < g.model.size() && n.appendChild(d._bottomNode);
                                n.scrollLeft = g.hScrollerNode.scrollLeft;
                                a ? p.innerHTML = "" : p.style.zIndex = 1;
                                if (!d._skipUnrender)
                                    d.onUnrender();
                                m.forEach(l, d.onAfterRow, d);
                                f.when(d._buildUncachedRows(k), function() {
                                    d.onRender(c, b)
                                })
                            } else if (!{
                                top: 1,
                                bottom: 1
                            }[a]) {
                                n.scrollTop = 0;
                                if (e("ie") || e("trident"))
                                    for (; n.childNodes.length; )
                                        n.removeChild(n.firstChild);
                                n.innerHTML = "";
                                if (!d._skipUnrender)
                                    d.onUnrender();
                                d.model.size() ? n.appendChild(d._bottomNode) : (p.innerHTML = d.arg("emptyInfo", g.nls.emptyInfo),
                                p.style.zIndex = 1,
                                d.onEmpty(),
                                d.model.free())
                            }
                    },
                    onRender: function() {
                        var c = this.domNode;
                        n(".gridxBodyFirstRow", c).removeClass("gridxBodyFirstRow");
                        if (this._topNode) {
                            var b = this._topNode.nextSibling;
                            b && b != this._bottomNode && g.add(b, "gridxBodyFirstRow")
                        }
                        n(".gridxBodyLastRow", c).removeClass("gridxBodyLastRow");
                        this._bottomNode && (c = this._bottomNode.previousSibling) && c != this._topNode && g.add(c, "gridxBodyLastRow")
                    },
                    _load: function(c) {
                        var b = this
                          , a = b.grid
                          , d = b.model
                          , e = a.view
                          , f = b.arg("pageSize")
                          , g = c ? b._bottomNode : b._topNode
                          , k = e.rootStart
                          , p = e.rootCount
                          , q = c ? k : k < f ? 0 : k - f
                          , w = c ? p + f : k + p - q
                          , v = function(d, e) {
                            b._busy(c);
                            b._onLoadFinish(!c, d, e, function() {
                                b.onRender(d, e);
                                a.indirectSelect && a.indirectSelect._onSelectionChange()
                            })
                        };
                        b._busy(c, 1);
                        d.when({
                            start: c ? k + p : q,
                            count: c ? f : k - q
                        }, function() {
                            var h = d.size();
                            c && q + w > h && (w = h - q);
                            e.updateRootRange(q, w).then(function() {
                                var f = c ? b.renderCount : 0
                                  , k = e.visualCount - b.renderCount;
                                b.renderStart = 0;
                                b.renderCount = e.visualCount;
                                if (k) {
                                    for (var r = [], t = 0; t < k; ++t) {
                                        var p = e.getRowInfo({
                                            visualIndex: f + t
                                        });
                                        d.isId(p.id) || r.push({
                                            parentId: p.parentId,
                                            start: p.rowIndex,
                                            count: 1
                                        })
                                    }
                                    d.when(r, function() {
                                        var d = [], r = a.bodyNode.scrollHeight, n;
                                        n = b._buildRows(f, k, [], d);
                                        g ? l.place(n, g, c ? "before" : "after") : l.place(n, b.domNode, c ? "last" : "first");
                                        c || (a.bodyNode.scrollTop += a.bodyNode.scrollHeight - r);
                                        (c && g && g.parentNode ? e.rootStart + e.rootCount >= h : 0 === e.rootStart) && b.domNode.removeChild(g);
                                        m.forEach(d, b.onAfterRow, b);
                                        v(f, k)
                                    })
                                } else
                                    c && g && g.parentNode && e.rootStart + e.rootCount >= h && b.domNode.removeChild(g),
                                    c || n(".gridxBodyFirstRow").removeClass("gridxBodyFirstRow"),
                                    v(f, k)
                            })
                        })
                    }
                })
            })
        },
        "gridx/modules/AutoPagedBody": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/dom-class dojo/_base/Deferred ./Body ./_PagedBodyMixin".split(" "), function(q, p, n, m, l, k) {
                return q([l, k], {
                    preload: function() {
                        this.inherited(arguments);
                        var g = this
                          , f = g.grid
                          , e = g.domNode
                          , d = function() {
                            g._load(1)
                        };
                        g.connect(e, "onscroll", function(c) {
                            c = e.lastChild;
                            c.offsetTop + c.offsetHeight <= e.scrollTop + e.offsetHeight && (clearTimeout(g._loadHandler),
                            g._loadHandler = setTimeout(d, 10))
                        });
                        g.aspect(f, "_onResizeEnd", function() {
                            g._checkSpace() && g._load(1)
                        });
                        f.vScroller.loaded.then(function() {
                            var c = f.vScroller._scrollable;
                            c && g.aspect(c, "slideTo", function(b, a) {
                                b.y < f.mainNode.offsetHeight - f.bodyNode.offsetHeight + e.lastChild.offsetHeight && (clearTimeout(g._loadHandler),
                                g._loadHandler = setTimeout(d, 1E3 * a))
                            })
                        })
                    },
                    _checkSpace: function() {
                        var g = this.domNode;
                        return g.lastChild == this._bottomNode && g.lastChild.offsetTop + g.lastChild.offsetHeight < g.scrollTop + g.offsetHeight
                    },
                    onRender: function() {
                        this.inherited(arguments);
                        this._checkSpace() && this._load(1)
                    },
                    createBottom: function(g) {
                        g.innerHTML = '\x3cspan class\x3d"gridxLoadingMore"\x3e\x3c/span\x3e' + this.arg("loadMoreLoadingLabel", this.grid.nls.loadMoreLoading)
                    },
                    refresh: function() {
                        var g = p.hitch(this, this.inherited, arguments);
                        if (this.arg("quickRefresh")) {
                            n.add(this.grid.loadingNode, "gridxLoading");
                            var f = this.grid.vScroller._scrollable;
                            if (f) {
                                var e = f.getPos();
                                f.scrollTo({
                                    x: e.x,
                                    y: 0
                                })
                            }
                            var d = new m;
                            this.grid.view.updateRootRange(0, this.pageSize).then(function() {
                                g().then(function() {
                                    d.callback()
                                }, function(c) {
                                    d.errback(c)
                                })
                            });
                            return d
                        }
                        return g()
                    },
                    _busy: function() {},
                    _onLoadFinish: function(g, f, e, d) {
                        d()
                    }
                })
            })
        },
        "gridx/modules/HeaderMenu": function() {
            define("dojo/_base/declare dojo/_base/event dijit/registry dojo/dom-construct dojo/dom-class dojo/keys ../core/_Module ./HeaderRegions".split(" "), function(q, p, n, m, l, k, g) {
                return q(g, {
                    name: "headerMenu",
                    forced: ["headerRegions"],
                    preload: function() {
                        var f = this
                          , e = f.grid;
                        e.headerRegions.add(function(d) {
                            var c = d.menu && n.byId(d.menu);
                            if (c) {
                                var b = m.create("div", {
                                    className: "gridxHeaderMenuBtn",
                                    tabIndex: -1,
                                    innerHTML: '\x3cspan class\x3d"gridxHeaderMenuBtnInner"\x3e\x26#9662;\x3c/span\x3e\x26nbsp;'
                                });
                                l.add(c.domNode, "gridxHeaderMenu");
                                c.bindDomNode(b);
                                f.connect(b, "onkeydown", function(a) {
                                    a.keyCode == k.ENTER && (p.stop(a),
                                    c._scheduleOpen(b, void 0, void 0, b))
                                });
                                c.bindGrid && c.bindGrid(e, d);
                                f.aspect(c, "onClose", function(a) {
                                    e.headerRegions._doFocus(a)
                                });
                                return b
                            }
                        }, 0, 1)
                    }
                })
            })
        },
        "gridx/modules/SlantedHeader": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/_base/event dojo/query dojo/string dojo/dom-class dojo/dom-construct dojo/keys ../core/_Module ./GroupHeader".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                return q(d, {
                    name: "slantedheader",
                    _actionAreaHolder: null,
                    required: ["header"],
                    load: function(a, b) {
                        g.add(this.grid.domNode, "gridxSlantedHeader");
                        var c = this;
                        window.setTimeout(function() {
                            c._updateTransform()
                        }, 0);
                        this.connect(this.grid, "resize", "_updateTransform");
                        this.loaded.callback()
                    },
                    _updateTransform: function() {
                        var a = this.grid.header.domNode;
                        a.style.transform = a.style.msTransform = a.style.mozTransform = a.style.webkitTransform = "translate(" + (Math.round(a.offsetHeight / 2) - 1) + "px, 0px) skew(-45deg,0deg)"
                    }
                })
            })
        },
        "gridx/modules/ExpandableColumn": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/_base/event dojo/keys dojo/aspect dojo/query dojo/string dojo/dom-class dojo/dom-construct ../core/_Module ./HiddenColumns".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h) {
                return q(b, {
                    name: "expandedColumn",
                    _parentCols: null,
                    required: ["header"],
                    preload: function() {
                        this.inherited(arguments)
                    },
                    load: function(a, b) {
                        var c = this
                          , h = c.grid;
                        c._cols = h._columns.slice();
                        c._parentCols = {};
                        var f = [];
                        p.forEach(c._cols, function(a) {
                            if (a.expanded)
                                f.push(a.id);
                            else if (a.parentColumn) {
                                c._parentCols[a.parentColumn] = 1;
                                var b = this._colById(a.parentColumn);
                                b.expanded || (f.push(a.id),
                                b.expanded = !1)
                            }
                        }, this);
                        this.expandoBar = d.create("div", {
                            className: "gridxColumnExpandoBar"
                        });
                        this.connect(h.columnWidth, "onUpdate", "_updateUI");
                        this.grid.vLayout.register(this, "expandoBar", "headerNode", 1);
                        this.connect(h, "onHeaderCellMouseOver", function(a) {
                            e.add(this._expandoCellByColumnId(a.columnId), "gridxColumnExpandoHighlight")
                        }, this);
                        this.connect(h, "onHeaderCellMouseOut", function(a) {
                            e.remove(this._expandoCellByColumnId(a.columnId), "gridxColumnExpandoHighlight")
                        }, this);
                        this.connect(this.expandoBar, "onmouseover", function(a) {
                            var b = null;
                            /td/i.test(a.target.tagName) ? b = a.target : e.contains(a.target, "gridxColumnExpando") && (b = a.target.parentNode);
                            b && (a = b.getAttribute("data-column-id"),
                            e.add(b, "gridxColumnExpandoHighlight"),
                            e.add(this._headerCellByColumnId(a), "gridxCellHighlight"))
                        }, this);
                        this.connect(this.expandoBar, "onmouseout", function(a) {
                            var b = null;
                            /td/i.test(a.target.tagName) ? b = a.target : e.contains(a.target, "gridxColumnExpando") && (b = a.target.parentNode);
                            b && (a = b.getAttribute("data-column-id"),
                            e.remove(b, "gridxColumnExpandoHighlight"),
                            e.remove(this._headerCellByColumnId(a), "gridxCellHighlight"))
                        }, this);
                        this.connect(this.expandoBar, "onclick", function(a) {
                            e.contains(a.target, "gridxColumnExpando") && (a = a.target.parentNode.getAttribute("data-column-id"),
                            this.expand(a))
                        }, this);
                        this.connect(this.grid.header.innerNode, "onkeyup", function(a) {
                            var b;
                            77 == a.keyCode && a.ctrlKey && (b = a.target,
                            e.contains(b, "gridxGroupHeader") ? (b = b.getAttribute("groupid").split("-").pop(),
                            b = this._colById(b).parentColumn,
                            this.collapse(b),
                            this._focusById(b)) : e.contains(b, "gridxCell") && (b = b.getAttribute("colid"),
                            this._parentCols[b] && (this.expand(b),
                            this._focusById(b))),
                            m.stop(a))
                        }, this);
                        this.connect(this.grid.header, "refresh", function() {
                            h.header.hidden ? (h.header.domNode.parentNode.style.overflow = "hidden",
                            this.expandoBar.style.display = "none") : (h.header.domNode.parentNode.style.overflow = "visible",
                            this.expandoBar.style.display = "block")
                        });
                        this.connect(this.grid, "onHScroll", function(a) {
                            this.expandoBar.scrollLeft = a
                        }, this);
                        f.length ? b.then(function() {
                            c.add.apply(c, f);
                            c._refreshHeader();
                            c.loaded.callback()
                        }) : c.loaded.callback();
                        c.aspect(h, "setColumns", "_onSetColumns")
                    },
                    _onSetColumns: function() {
                        var a = this
                          , b = a.grid;
                        a._cols = b._columns.slice();
                        a._parentCols = {};
                        var c = [];
                        p.forEach(a._cols, function(b) {
                            if (b.expanded)
                                c.push(b.id);
                            else if (b.parentColumn) {
                                a._parentCols[b.parentColumn] = 1;
                                var d = this._colById(b.parentColumn);
                                d.expanded || (c.push(b.id),
                                d.expanded = !1)
                            }
                        }, this);
                        b.header._build();
                        b.body.refresh();
                        c.length && (a.add.apply(a, c),
                        a._refreshHeader())
                    },
                    expand: function(a) {
                        var b = p.filter(this._cols, function(b) {
                            return b.parentColumn == a
                        });
                        this.add(a);
                        this.remove.apply(this, b);
                        this._colById(a).expanded = !0;
                        this._refreshHeader()
                    },
                    collapse: function(a) {
                        var b = p.filter(this._cols, function(b) {
                            return b.parentColumn == a
                        });
                        this.remove(a);
                        this.add.apply(this, b);
                        this._colById(a).expanded = !1;
                        this._refreshHeader()
                    },
                    _updateUI: function() {
                        var a = ['\x3ctable role\x3d"presentation" border\x3d"0" cellpadding\x3d"0" cellspacing\x3d"0"\x3e\x3ctr\x3e'];
                        p.forEach(this.grid._columns, function(b) {
                            a.push('\x3ctd data-column-id\x3d"', b.id, '" aria-readonly\x3d"true" tabindex\x3d"-1" class\x3d"gridxColumnExpandoCell"\x3e');
                            this._parentCols[b.id] && a.push('\x3cspan class\x3d"gridxColumnExpando"\x3e\x3c/span\x3e');
                            a.push("\x3c/td\x3e")
                        }, this);
                        a.push("\x3c/tr\x3e\x3c/table\x3e");
                        this.expandoBar.innerHTML = a.join("");
                        this.grid._columns.length && (this.expandoBar.style.marginRight = this.grid.header.innerNode.style.marginRight,
                        this.expandoBar.style.marginLeft = this.grid.header.innerNode.style.marginLeft,
                        g("table", this.grid.headerNode),
                        p.forEach(this.expandoBar.firstChild.rows[0].cells, function(a, b) {
                            var c = a.getAttribute("data-column-id");
                            if (c = this.grid._columnsById[c])
                                a.style.width = c.width,
                                a.style.minWidth = c.width,
                                a.style.maxWidth = c.width
                        }, this))
                    },
                    _createExpandNode: function(a, b) {
                        var c = d.create("div", {
                            innerHTML: "",
                            className: "gridxColumnExpandNode"
                        });
                        if (this._parentCols[b.id]) {
                            c.innerHTML = '\x3cspan class\x3d"gridxColumnExpandNodeIcon"\x3e\x3c/span\x3e';
                            var e = this;
                            c.onclick = function() {
                                e.expand(b.id)
                            }
                        } else
                            c.innerHTML = "";
                        return c
                    },
                    _headerCellByColumnId: function(a) {
                        var b = g('td[colid\x3d"' + a + '"]', this.grid.headerNode)[0];
                        b || (b = g('td[data-map-column-id\x3d"' + a + '"]', this.grid.headerNode)[0]);
                        return b
                    },
                    _expandoCellByColumnId: function(a) {
                        return g('td[data-column-id\x3d"' + a + '"]', this.expandoBar)[0]
                    },
                    _refreshHeader: function() {
                        for (var a = [], b = this.grid._columns, c = null, e = 0, h = 0; h < b.length; h++) {
                            var f = b[h];
                            f.parentColumn ? (0 < e && (a.push(e),
                            e = 0),
                            c && c._colId == f.parentColumn || (c && c._colId != f.parentColumn && a.push(c),
                            c = {
                                _colId: f.parentColumn,
                                name: this._colById(f.parentColumn).name,
                                children: 0
                            }),
                            c.children++) : (c && a.push(c),
                            e++,
                            c = null)
                        }
                        delete this.grid.header.groups;
                        this.grid.headerGroups = a;
                        this.grid.header.refresh();
                        var k = this;
                        g(".gridxGroupHeader", this.grid.headerNode).forEach(function(a) {
                            var b = a.getAttribute("groupid").split("-").pop()
                              , b = k._colById(b).parentColumn;
                            a.setAttribute("data-map-column-id", b);
                            var c = d.create("div", {
                                innerHTML: '\x3cspan class\x3d"gridxColumnCollapseNodeIcon"\x3e\x3c/span\x3e',
                                className: "gridxColumnCollapseNode"
                            });
                            c.onclick = function() {
                                k.collapse(b)
                            }
                            ;
                            a.firstChild.insertBefore(c, a.firstChild.firstChild)
                        })
                    },
                    _colById: function(a) {
                        return this.grid._columnsById[a] || p.filter(this._cols, function(b) {
                            return b.id == a
                        })[0]
                    },
                    _focusById: function(a) {
                        (a = this._headerCellByColumnId(a)) && this.grid.header._focusNode(a)
                    }
                })
            })
        },
        "gridx/modules/Layer": function() {
            define("dojo/_base/kernel dojo/_base/declare dojo/_base/lang dojo/_base/sniff dojo/dom-class dojo/dom-geometry dojo/query dojo/keys ../core/_Module".split(" "), function(q, p, n, m, l, k, g, f, e) {
                function d(c, b) {
                    for (; c.childNodes.length; )
                        b.appendChild(c.firstChild)
                }
                q.experimental("gridx/modules/Layer");
                return p(e, {
                    name: "layer",
                    buttonColumnWidth: "20px",
                    constructor: function() {
                        function c(a) {
                            var b = a.getAttribute("colid")
                              , b = d.header.getHeaderNode(b);
                            a.style.width = b.style.width;
                            a.style.minWidth = b.style.minWidth;
                            a.style.maxWidth = b.style.maxWidth
                        }
                        function b(b) {
                            "__nextLevelButton__" == b.columnId && b.cellNode.childNodes.length && (d.focus.focusArea("header"),
                            setTimeout(function() {
                                a.down(b.rowId)
                            }, 0))
                        }
                        var a = this
                          , d = a.grid
                          , e = a._tmpBodyNode = document.createElement("div")
                          , f = a._contextNode = document.createElement("div")
                          , k = a._wrapper1 = document.createElement("div")
                          , l = a._wrapper2 = document.createElement("div");
                        e.setAttribute("class", "gridxBody");
                        f.setAttribute("class", "gridxLayerContext");
                        f.style.overflow = "hidden";
                        f.setAttribute("id", "testContextNode");
                        k.setAttribute("class", "gridxLayerWrapper");
                        l.setAttribute("class", "gridxLayerWrapper");
                        a._parentStack = [];
                        a.connect(f, "onmousedown", "up");
                        a.aspect(d.columnWidth, "onUpdate", function() {
                            g(".gridxCell", k).forEach(c);
                            g(".gridxCell", l).forEach(c);
                            f.firstChild && (f.style.height = f.firstChild.offsetHeight + "px");
                            var a = parseInt(d.header.innerNode.style.marginRight)
                              , b = parseInt(d.header.innerNode.style.marginLeft);
                            f.style.marginRight = a ? a + 1 + "px" : a + 0 + "px";
                            f.style.marginLeft = b ? b + 1 + "px" : b + 0 + "px"
                        });
                        e = a.arg("buttonColumnWidth");
                        a._col = n.mixin({
                            id: "__nextLevelButton__",
                            headerStyle: "text-align:center;",
                            style: function(a) {
                                return "text-align:center;" + (a.model.hasChildren(a.row.id) ? "cursor:pointer;" : "")
                            },
                            rowSelectable: !1,
                            sortable: !1,
                            filterable: !1,
                            editable: !1,
                            padding: !1,
                            ignore: !0,
                            declaredWidth: e,
                            width: e,
                            decorator: function(b, c) {
                                return a.model.hasChildren(c) ? '\x3cdiv class\x3d"gridxLayerHasChildren"\x3e\x3c/div\x3e' : ""
                            }
                        }, a.arg("buttonColumnArgs") || {});
                        a._onSetColumns();
                        a.aspect(d, "setColumns", "_onSetColumns");
                        a.aspect(d, "setStore", function() {
                            a._parentStack = [];
                            k.innerHTML = l.innerHTML = "";
                            f.firstChild && (f.removeChild(f.firstChild),
                            f.style.height = 0,
                            d.vLayout.reLayout())
                        });
                        d.touch && a.aspect(d, "onCellTouchStart", b);
                        a.aspect(d, "onCellMouseDown", b)
                    },
                    preload: function() {
                        this.grid.vLayout.register(this, "_contextNode", "headerNode", 10);
                        this.aspect(this.grid, "onHScroll", "_onHScroll")
                    },
                    _onHScroll: function(c) {
                        var b = this.grid;
                        if (this._contextNode) {
                            var a = this._contextNode;
                            (m("webkit") || 8 > m("ie")) && !b.isLeftToRight() && (c = a.scrollWidth - a.offsetWidth - c);
                            a.scrollLeft = this._scrollLeft = c
                        }
                    },
                    onReady: function() {},
                    onFinish: function() {},
                    down: function(c) {
                        var b = this.model;
                        if (!this._lock && b.hasChildren(c) && String(b.parentId(c)) === String(b.layerId())) {
                            this._lock = 1;
                            var a = this.grid
                              , e = a.bodyNode
                              , f = e.offsetWidth
                              , g = this._tmpBodyNode
                              , m = this._wrapper1
                              , n = this._wrapper2
                              , p = a.body.getRowNode({
                                rowId: c
                            })
                              , q = k.position(p)
                              , w = k.position(this._contextNode)
                              , v = p.cloneNode(!0);
                            l.add(p, "gridxLayerLoading");
                            n.appendChild(v);
                            this._parentStack.push(v);
                            v._pos = a.vScroller.position();
                            this._bodyScrollTop = e.scrollTop;
                            d(e, g);
                            e.style.left = f + "px";
                            e.style.zIndex = 1;
                            g.style.left = 0;
                            g.style.zIndex = 0;
                            n.style.top = q.y - w.y + "px";
                            n.style.zIndex = -1;
                            a.vScrollerNode.style.zIndex = 9999;
                            b.setLayer(c);
                            this._refresh(function() {
                                l.remove(p, "gridxLayerLoading");
                                n.style.zIndex = 9999;
                                a.vScroller.scroll(0);
                                l.add(m, "gridxLayerHSlide");
                                l.add(n, "gridxLayerVSlide");
                                e.style.left = 0;
                                g.style.left = -f + "px";
                                m.style.left = -f + "px";
                                n.style.top = 0
                            }, {
                                isDown: !0,
                                rowId: c,
                                parentRowNode: v
                            })
                        }
                    },
                    up: function() {
                        var c = this
                          , b = c.model;
                        if (!c._lock && b.isId(b.layerId())) {
                            c._lock = 1;
                            var a = c.grid
                              , e = a.bodyNode
                              , f = c._tmpBodyNode
                              , g = e.offsetWidth
                              , m = c._wrapper1
                              , n = c._wrapper2
                              , p = c._parentStack[c._parentStack.length - 2]
                              , q = c._parentStack.pop()
                              , w = q.getAttribute("rowid");
                            p && n.appendChild(p);
                            c._bodyScrollTop = e.scrollTop;
                            d(e, f);
                            e.style.left = -g + "px";
                            e.style.zIndex = 0;
                            f.style.left = 0;
                            f.style.zIndex = 1;
                            m.style.top = 0;
                            m.style.zIndex = 2;
                            n.style.left = -g + "px";
                            a.vScrollerNode.style.zIndex = 9999;
                            b.layerUp();
                            c._refresh(function() {
                                var b, d;
                                q && (a.vScroller.scroll(q._pos),
                                b = k.position(a.body.getRowNode({
                                    rowId: w
                                })),
                                d = k.position(c._contextNode));
                                l.add(m, "gridxLayerVSlide");
                                l.add(n, "gridxLayerHSlide");
                                e.style.left = 0;
                                f.style.left = g + "px";
                                q && (m.style.top = b.y - d.y + "px");
                                n.style.left = 0
                            }, {
                                parentRowNode: q
                            })
                        }
                    },
                    _onSetColumns: function() {
                        var c = this.grid
                          , b = this._col;
                        b.index = c._columns.length;
                        c._columns.push(b);
                        c._columnsById[b.id] = b
                    },
                    _onTransitionEnd: function() {
                        var c = this.model
                          , b = this.grid
                          , a = b.mainNode
                          , d = b.bodyNode
                          , e = this._tmpBodyNode
                          , f = this._contextNode
                          , g = this._wrapper1
                          , k = this._wrapper2;
                        if (this._lock) {
                            a.removeChild(e);
                            a.removeChild(g);
                            f.appendChild(k);
                            f.style.height = k.offsetHeight + "px";
                            l.remove(e, "gridxSlideRefresh");
                            l.remove(d, "gridxSlideRefresh");
                            l.remove(g, "gridxLayerHSlide gridxLayerVSlide");
                            l.remove(k, "gridxLayerHSlide gridxLayerVSlide");
                            g.childNodes.length && g.removeChild(g.firstChild);
                            a = this._wrapper1;
                            this._wrapper1 = this._wrapper2;
                            this._wrapper2 = a;
                            g.style.left = 0;
                            g.style.zIndex = "";
                            g.style.top = 0;
                            k.style.left = 0;
                            k.style.zIndex = "";
                            k.style.top = 0;
                            d.style.paddingTop = 0;
                            d.style.zIndex = "";
                            e.style.paddingTop = 0;
                            e.style.zIndex = "";
                            b.vScrollerNode.style.zIndex = "";
                            b.vLayout.reLayout();
                            for (d = 0; d < e.childNodes.length; ++d)
                                if (g = e.childNodes[d].getAttribute("rowid"),
                                c.isId(g))
                                    b.body.onUnrender(g);
                            e.innerHTML = "";
                            this._lock = b.body._skipUnrender = 0
                        }
                    },
                    _refresh: function(c, b) {
                        var a = this, d, e = a.grid, f = e.bodyNode, k = a._tmpBodyNode, m = document.createDocumentFragment();
                        m.appendChild(k);
                        m.appendChild(a._wrapper1);
                        m.appendChild(a._wrapper2);
                        e.mainNode.appendChild(m);
                        k.scrollTop = a._bodyScrollTop;
                        k.style.paddingTop = a._wrapper1.offsetHeight + "px";
                        f.style.paddingTop = a._wrapper2.offsetHeight + "px";
                        a._contextNode.style.height = 0;
                        a._paging = e.view.paging;
                        e.view.paging = 0;
                        e.vLayout.reLayout();
                        b.isDown ? g(".gridxLayerHasChildren", b.parentRowNode).removeClass("gridxLayerHasChildren").addClass("gridxLayerLevelUp") : b.parentRowNode && g(".gridxLayerLevelUp", b.parentRowNode).removeClass("gridxLayerLevelUp").addClass("gridxLayerHasChildren");
                        a.onReady(b);
                        e.body._skipUnrender = 1;
                        b.isDown && (e.vScroller._lock = 1);
                        d = e.focus.enabled;
                        e.focus.enabled = 0;
                        e.body.refresh().then(function() {
                            e.vScroller._lock = 0;
                            e.view.paging = a._paging;
                            setTimeout(function() {
                                l.add(f, "gridxSlideRefresh");
                                l.add(k, "gridxSlideRefresh");
                                e.vScroller._scrollable && e.vScroller._scrollable.scrollTo({
                                    x: 0
                                });
                                c();
                                a._contextNode.style.postion = "absolute";
                                setTimeout(function() {
                                    a._onTransitionEnd();
                                    e.vLayout.reLayout();
                                    e.focus.enabled = d;
                                    e.body._focusCellRow = 0;
                                    e.body._focusCellCol = 0;
                                    e.focus.focusArea("body");
                                    a.onFinish(b);
                                    a._contextNode.style.postion = "relative"
                                }, 700)
                            }, 10)
                        })
                    }
                })
            })
        },
        "gridx/modules/StructureSwitch": function() {
            define(["dojo/_base/kernel", "dojo/_base/declare", "dojo/_base/array", "../core/_Module"], function(q, p, n, m) {
                q.experimental("gridx/modules/StructureSwitch");
                return p(m, {
                    name: "structureSwitch",
                    required: ["hiddenColumns"],
                    "default": "",
                    orientation: !0,
                    constructor: function() {
                        var l = this.arg("config") || {}
                          , k = this.arg("condition") || {};
                        this.arg("orientation") && (l.portrait && (k.portrait = function() {
                            return "orientation"in window && 0 === window.orientation
                        }
                        ),
                        l.landscape && (k.portrait = function() {
                            return 90 == Math.abs(window.orientation)
                        }
                        ),
                        this.connect(window, "orientationchange", "check"))
                    },
                    preload: function() {
                        var l = this.config[this.arg("default")];
                        if (l) {
                            var k = n.filter(n.map(this.grid._columns, function(g) {
                                return g.id
                            }), function(g) {
                                return 0 > n.indexOf(l, g)
                            });
                            [].push.apply(this.grid.hiddenColumns.arg("init", []), k)
                        }
                    },
                    load: function(l, k) {
                        var g = this;
                        k.then(function() {
                            g.check();
                            g.loaded.callback()
                        })
                    },
                    to: function(l) {
                        var k = this.grid
                          , g = this.config[l];
                        g || "" !== l || (g = n.map(k.structure, function(d) {
                            return d.id
                        }));
                        if (g) {
                            l = k.hiddenColumns;
                            var f = n.filter(k._columns, function(d) {
                                return 0 > n.indexOf(g, d.id)
                            })
                              , e = n.filter(g, function(d) {
                                return !k._columnsById[d.id]
                            });
                            l.add.apply(l, f);
                            l.remove.apply(l, e)
                        }
                        return !!g
                    },
                    check: function() {
                        for (var l in this.condition)
                            if (this.condition[l](this.grid) && this.to(l))
                                return this.grid.resize(),
                                l;
                        return null
                    }
                })
            })
        },
        "gridx/nls/zh/gridx": function() {
            define({
                loadingInfo: "\u6b63\u5728\u88c5\u5165...",
                emptyInfo: "\u6ca1\u6709\u8981\u663e\u793a\u7684\u9879\u76ee",
                loadFailInfo: "\u672a\u80fd\u88c5\u5165\u6570\u636e\uff01",
                loadMore: "\u88c5\u5165\u66f4\u591a",
                loadMoreLoading: "\u6b63\u5728\u88c5\u5165...",
                loadPrevious: "\u88c5\u5165\u524d\u4e00\u9879",
                loadPreviousLoading: "\u6b63\u5728\u88c5\u5165...",
                clearFilterDialogTitle: "\u6e05\u9664\u8fc7\u6ee4\u5668",
                filterDefDialogTitle: "\u8fc7\u6ee4",
                defaultRuleTitle: "\u89c4\u5219",
                ruleTitleTemplate: "\u89c4\u5219 ${ruleNumber}",
                noFilterApplied: "\u672a\u5e94\u7528\u8fc7\u6ee4\u5668\u3002",
                defineFilter: "\u5b9a\u4e49\u8fc7\u6ee4\u5668",
                defineFilterAriaLabel: "\u5b9a\u4e49\u8fc7\u6ee4\u5668\uff1a\u6253\u5f00\u8fc7\u6ee4\u5668\u5bf9\u8bdd\u6846\u4ee5\u914d\u7f6e\u590d\u6742\u7684\u8fc7\u6ee4\u89c4\u5219\u3002\u6bcf\u4e2a\u8fc7\u6ee4\u89c4\u5219\u7531\u5217\u3001\u6761\u4ef6\u548c\u503c\u7684\u7ec4\u5408\u6784\u6210\u3002\u8be5\u5bf9\u8bdd\u6846\u6253\u5f00\u65f6\uff0c\u503c\u5b57\u6bb5\u62e5\u6709\u952e\u76d8\u7126\u70b9\u3002",
                conditionEqual: "\u7b49\u4e8e",
                conditionNotEqual: "\u4e0d\u7b49\u4e8e",
                conditionLess: "\u5c0f\u4e8e",
                conditionLessEqual: "\u5c0f\u4e8e\u6216\u7b49\u4e8e",
                conditionGreater: "\u5927\u4e8e",
                conditionGreaterEqual: "\u5927\u4e8e\u6216\u7b49\u4e8e",
                conditionContain: "\u5305\u542b",
                conditionIs: "\u4e3a",
                conditionStartWith: "\u5f00\u59cb\u5185\u5bb9\u4e3a",
                conditionEndWith: "\u7ed3\u675f\u5185\u5bb9\u4e3a",
                conditionNotContain: "\u4e0d\u5305\u542b",
                conditionIsNot: "\u4e0d\u662f",
                conditionNotStartWith: "\u5f00\u59cb\u5185\u5bb9\u4e0d\u4e3a",
                conditionNotEndWith: "\u7ed3\u675f\u5185\u5bb9\u4e0d\u4e3a",
                conditionBefore: "\u4e4b\u524d",
                conditionAfter: "\u4e4b\u540e",
                conditionRange: "\u8303\u56f4",
                conditionIsEmpty: "\u4e3a\u7a7a",
                conditionIsNotEmpty: "\u975e\u7a7a",
                all: "\u6240\u6709",
                any: "\u4efb\u4f55",
                relationAll: "\u6240\u6709\u89c4\u5219",
                waiRelAll: "\u4e0e\u4ee5\u4e0b\u6240\u6709\u89c4\u5219\u76f8\u5339\u914d\uff1a",
                relationAny: "\u4efb\u4f55\u89c4\u5219",
                waiRelAny: "\u4e0e\u4ee5\u4e0b\u4efb\u4f55\u89c4\u5219\u76f8\u5339\u914d\uff1a",
                relationMsgFront: "\u5339\u914d",
                relationMsgTail: "",
                and: "\u548c",
                or: "\u6216\u8005",
                addRuleButton: "\u6dfb\u52a0\u89c4\u5219",
                waiAddRuleButton: "\u6dfb\u52a0\u65b0\u89c4\u5219",
                removeRuleButton: "\u9664\u53bb\u89c4\u5219",
                waiRemoveRuleButtonTemplate: "\u9664\u53bb\u89c4\u5219 ${0}",
                addRuleButton: "\u6dfb\u52a0\u8fc7\u6ee4\u89c4\u5219",
                cancelButton: "\u53d6\u6d88",
                waiCancelButton: "\u53d6\u6d88\u6b64\u5bf9\u8bdd\u6846",
                clearButton: "\u6e05\u9664",
                waiClearButton: "\u6e05\u9664\u8fc7\u6ee4\u5668",
                filterButton: "\u8fc7\u6ee4",
                waiFilterButton: "\u63d0\u4ea4\u8fc7\u6ee4\u5668",
                columnSelectLabel: "\u5217\uff1a",
                columnSelectAriaLabel: "\u5217\uff1a${1} \u7684\u6761\u4ef6\u90e8\u5206 ${0}",
                waiColumnSelectTemplate: "\u89c4\u5219 ${0} \u7684\u5217",
                conditionSelectLabel: "\u6761\u4ef6\uff1a",
                conditionSelectAriaLabel: "\u8fd0\u7b97\u7b26\uff1a${1} \u7684\u6761\u4ef6\u90e8\u5206 ${0}",
                waiConditionSelectTemplate: "\u89c4\u5219 ${0} \u7684\u6761\u4ef6",
                valueBoxLabel: "\u503c\uff1a",
                valueBoxAriaLabel: "\u503c\uff1a${1} \u7684\u6761\u4ef6\u90e8\u5206 ${0}",
                waiValueBoxTemplate: "\u8f93\u5165\u6309\u89c4\u5219 ${0} \u8fdb\u884c\u8fc7\u6ee4\u7684\u503c",
                rangeTo: "\u5230",
                rangeTemplate: "\u4ece ${0} \u5230 ${1}",
                statusTipHeaderColumn: "\u5217",
                statusTipHeaderCondition: "\u89c4\u5219",
                statusTipTitle: "\u8fc7\u6ee4\u5668\u680f",
                statusTipMsg: "\u5355\u51fb\u6b64\u5904\u7684\u8fc7\u6ee4\u5668\u680f\u4ee5\u8fc7\u6ee4 ${0} \u4e2d\u7684\u503c\u3002",
                anycolumn: "\u4efb\u4f55\u5217",
                statusTipTitleNoFilter: "\u8fc7\u6ee4\u5668\u680f",
                statusTipTitleHasFilter: "\u8fc7\u6ee4",
                statusTipRelPre: "\u5339\u914d",
                statusTipRelPost: "\u89c4\u5219\u3002",
                statusTipHeaderAll: "\u4e0e\u6240\u6709\u89c4\u5219\u5339\u914d\u3002",
                statusTipHeaderAny: "\u4e0e\u4efb\u4f55\u89c4\u5219\u5339\u914d\u3002",
                defaultItemsName: "\u9879",
                filterBarMsgHasFilterTemplate: "\u5df2\u663e\u793a\u7684 ${1} ${2} \u9879\u4e2d\u7684\u7b2c ${0} \u9879\u3002",
                filterBarMsgNoFilterTemplate: "\u672a\u5e94\u7528\u8fc7\u6ee4\u5668",
                filterBarDefButton: "\u5b9a\u4e49\u8fc7\u6ee4\u5668",
                waiFilterBarDefButton: "\u5bf9\u8868\u8fdb\u884c\u8fc7\u6ee4",
                a11yFilterBarDefButton: "\u8fc7\u6ee4\u5668...",
                filterBarClearButton: "\u6e05\u9664\u8fc7\u6ee4\u5668",
                waiFilterBarClearButton: "\u6e05\u9664\u8fc7\u6ee4\u5668",
                closeFilterBarBtn: "\u5173\u95ed\u8fc7\u6ee4\u5668\u680f",
                clearFilterMsg: "\u8fd9\u5c06\u9664\u53bb\u8fc7\u6ee4\u5668\u5e76\u663e\u793a\u6240\u6709\u53ef\u7528\u7684\u8bb0\u5f55\u3002",
                anyColumnOption: "\u4efb\u4f55\u5217",
                trueLabel: "True",
                falseLabel: "False",
                radioTrueLabel: "True \u503c",
                radioFalseLabel: "False \u503c",
                beginTimeRangeLabel: "\u65f6\u95f4\u8303\u56f4\u5f00\u59cb\u503c",
                endTimeRangeLabel: "\u65f6\u95f4\u8303\u56f4\u7ed3\u675f\u503c",
                beginDateRangeLabel: "\u65e5\u671f\u8303\u56f4\u5f00\u59cb\u503c",
                endDateRangeLabel: "\u65e5\u671f\u8303\u56f4\u7ed3\u675f\u503c",
                startsWithExpr: "${0}*",
                singleSort: "\u5355\u4e2a\u6392\u5e8f",
                nestedSort: "\u5d4c\u5957\u6392\u5e8f",
                ascending: "\u5355\u51fb\u4ee5\u5347\u5e8f\u6392\u5e8f",
                descending: "\u5355\u51fb\u4ee5\u964d\u5e8f\u6392\u5e8f",
                sortingState: "${0} - ${1}",
                unsorted: "\u4e0d\u5bf9\u6b64\u5217\u6392\u5e8f",
                waiSingleSortLabel: "${0} - \u5df2\u6309 ${1} \u6392\u5e8f\u3002\u9009\u62e9\u6309 ${2} \u6392\u5e8f",
                waiNestedSortLabel: "${0} - \u5df2\u6309 ${1} \u8fdb\u884c\u5d4c\u5957\u6392\u5e8f\u3002\u9009\u62e9\u6309 ${2} \u8fdb\u884c\u5d4c\u5957\u6392\u5e8f",
                pagerWai: "\u9875\u9762\u8c03\u5ea6\u7a0b\u5e8f",
                pageIndex: "${0}",
                pageIndexTitle: "\u9875 ${0}",
                firstPageTitle: "\u9996\u9875",
                prevPageTitle: "\u4e0a\u4e00\u9875",
                nextPageTitle: "\u4e0b\u4e00\u9875",
                lastPageTitle: "\u672b\u9875",
                pageSize: "${0}",
                pageSizeTitle: "\u6bcf\u9875 ${0} \u9879",
                pageSizeAll: "\u6240\u6709",
                pageSizeAllTitle: "\u6240\u6709\u9879",
                description: "${2} \u9879\u4e2d\u7684\u7b2c ${0} \u9879 - \u7b2c ${1} \u9879\u3002",
                descriptionEmpty: "\u7f51\u683c\u4e3a\u7a7a\u3002",
                summary: "\u603b\u8ba1\uff1a${0}",
                summaryWithSelection: "\u603b\u8ba1\uff1a${0} \u5df2\u9009\uff1a${1}",
                gotoBtnTitle: "\u8f6c\u81f3\u7279\u5b9a\u9875\u9762",
                gotoDialogTitle: "\u8f6c\u81f3\u9875\u9762",
                gotoDialogMainMsg: "\u6307\u5b9a\u9875\u6570\uff1a",
                gotoDialogPageCount: "\uff08${0} \u9875\uff09",
                gotoDialogOKBtn: "\u8f6c\u81f3",
                gotoDialogCancelBtn: "\u53d6\u6d88",
                pageLabel: "\u9875\u9762",
                pageSizeLabel: "\u884c",
                filterLabel: "\u8fc7\u6ee4",
                clearButtonTitle: "\u6e05\u9664\u8fc7\u6ee4\u5668",
                buildFilterMenuLabel: "\u6784\u5efa\u8fc7\u6ee4\u5668...",
                apply: "\u5e94\u7528\u8fc7\u6ee4\u5668",
                helpMsg: "${0} - \u5355\u51fb\u4ee5\u6392\u5e8f\uff0c\u6216\u8005\u6309 Ctrl \u952e\u5e76\u5355\u51fb\u4ee5\u6dfb\u52a0\u5230\u6392\u5e8f\u9879",
                singleHelpMsg: "${0} - \u5355\u51fb\u4ee5\u6392\u5e8f",
                priorityOrder: "\u6392\u5e8f\u4f18\u5148\u7ea7 ${0}",
                summaryTotal: "\u603b\u8ba1\uff1a${0}",
                summarySelected: "\u5df2\u9009\uff1a${0}",
                summaryRange: "\u8303\u56f4\uff1a${0}-${1}",
                indirectSelectAll: "\u6309\u7a7a\u683c\u952e\u4ee5\u5168\u90e8\u9009\u62e9\u3002",
                indirectDeselectAll: "\u6309\u7a7a\u683c\u952e\u4ee5\u5168\u90e8\u53d6\u6d88\u9009\u62e9\u3002",
                treeExpanded: "\u6309 Control + \u5de6\u65b9\u5411\u952e\u4ee5\u6298\u53e0\u6b64\u884c\u3002",
                treeCollapsed: "\u6309 Control + \u53f3\u65b9\u5411\u952e\u4ee5\u5c55\u5f00\u6b64\u884c\u3002"
            })
        },
        "gridx/support/exporter/exporter": function() {
            define(["dojo/_base/lang", "dojo/_base/Deferred", "dojo/DeferredList", "dojo/_base/array"], function(q, p, n, m) {
                function l(e, d, c, b) {
                    return !e[d] || !1 !== e[d](c || b, b)
                }
                function k(e, d, c) {
                    var b = []
                      , a = 0
                      , h = 0
                      , f = e.progressStep;
                    "number" == typeof e.start && 0 <= e.start && (a = e.start);
                    "number" == typeof e.count && 0 < e.count && (h = a + e.count);
                    h = h || c;
                    if (d)
                        if (d = m.filter(d, function(b) {
                            return b >= a && b < h
                        }),
                        d.length && (!f || d.length <= f))
                            b.push(d);
                        else
                            for (e = 0; e < d.length; e += f)
                                b.push(d.slice(e, e + f));
                    else if (d = h - a,
                    !f || d <= f)
                        b.push({
                            start: a,
                            count: d,
                            parentId: ""
                        });
                    else
                        for (e = a; e < h; e += f)
                            b.push({
                                start: e,
                                count: e + f < h ? f : h - e,
                                parentId: ""
                            });
                    b.p = 0;
                    return b
                }
                function g(e, d, c, b, a, h, f) {
                    var k = a.filter
                      , m = b.columnIds
                      , r = f[f.p++]
                      , n = q.hitch(h, h.errback)
                      , p = r && r.parentId
                      , w = function() {
                        d.progress(f.p / f.length);
                        e.when(r, function() {
                            var d = function(h) {
                                var f = e.model, g = f.size(h), r, n;
                                f.when({
                                    start: 0,
                                    parentId: h
                                }).then(function() {
                                    for (r = 0; r < g; r++) {
                                        n = f.indexToId(r, h);
                                        var p = e.row(r, 0, h);
                                        b.row = p;
                                        if ((!k || k(p)) && l(c, "beforeRow", b, a)) {
                                            for (var t = 0; t < m.length; ++t) {
                                                var u = e.column(m[t], 1)
                                                  , x = b.cell = e.cell(p, u);
                                                b.column = u;
                                                var u = a
                                                  , y = u.formatters
                                                  , z = x.column.id
                                                  , u = y && q.isFunction(y[z]) ? y[z](x) : u.useStoreData ? x.rawData() || "" : x.data() || "";
                                                b.data = u;
                                                l(c, "handleCell", b, a)
                                            }
                                            l(c, "afterRow", b, a)
                                        }
                                        d(n)
                                    }
                                })
                            };
                            d(p)
                        }).then(function() {
                            g(e, d, c, b, a, h, f)
                        }, n)
                    };
                    r ? 1 < f.length ? setTimeout(w, 10) : w() : h.callback()
                }
                function f(e, d) {
                    var c = e._columnsById, b;
                    q.isArrayLike(d.columns) && d.columns.length ? (b = m.filter(d.columns, function(a) {
                        return c[a]
                    }),
                    b.sort(function(a, b) {
                        return c[a].index - c[b].index
                    })) : b = m.map(e._columns, function(a) {
                        return a.id
                    });
                    return b
                }
                return function(e, d, c) {
                    var b = new p, a = e.model, h = f(e, c), r = e.select, n = r && r.row, r = r && r.column, u, x, y = {
                        grid: e,
                        columnIds: h
                    }, z = function() {
                        l(d, "afterBody", y, c);
                        b.callback(d.getResult())
                    }, w = q.hitch(b, b.errback);
                    try {
                        l(d, "initialize", y, c),
                        !c.omitHeader && l(d, "beforeHeader", y, c) && (m.forEach(h, function(a) {
                            y.column = e.column(a, 1);
                            l(d, "handleHeaderCell", y, c)
                        }),
                        l(d, "afterHeader", y, c)),
                        l(d, "beforeBody", y, c) ? (!c.selectedOnly || !n || r && r.getSelected().length || (u = a.when().then(function() {
                            x = n.getSelected()
                        }, w)),
                        p.when(u, function() {
                            var h, f = x && a.when({
                                id: x
                            }, function() {
                                h = m.map(x, function(b) {
                                    return a.idToIndex(b)
                                });
                                h.sort(function(a, b) {
                                    return a - b
                                })
                            }, w);
                            p.when(f, function() {
                                var f = new p
                                  , l = a.size();
                                g(e, b, d, y, c, f, k(c, h, l));
                                f.then(z, w)
                            }, w)
                        }, w)) : b.callback(d.getResult())
                    } catch (v) {
                        w(v)
                    }
                    return b
                }
            })
        },
        "gridx/support/exporter/toCSV": function() {
            define(["./exporter"], function(q) {
                function p(n, m) {
                    return q(n, p.writer, m || {})
                }
                p.writer = {
                    initialize: function(n, m) {
                        this._s = m.separator || ",";
                        this._n = m.newLine || "\r\n";
                        this._lines = []
                    },
                    beforeHeader: function() {
                        this._cells = []
                    },
                    handleHeaderCell: function(n) {
                        this._cells.push(n.column.name())
                    },
                    afterHeader: function() {
                        this._lines.push(this._cells.join(this._s))
                    },
                    beforeRow: function() {
                        this._cells = []
                    },
                    handleCell: function(n) {
                        n = String(n.data).replace(/"/g, '""');
                        if (0 <= n.indexOf(this._s) || 0 <= n.search(/[" \t\r\n]/))
                            n = '"' + n + '"';
                        this._cells.push(n)
                    },
                    afterRow: function() {
                        this._lines.push(this._cells.join(this._s))
                    },
                    getResult: function() {
                        return this._lines.join(this._n)
                    }
                };
                return p
            })
        },
        "ttx/actions/BillActions": function() {
            var q = {}.hasOwnProperty;
            define("dojo/_base/declare dojo/_base/lang dojo/topic dijit/focus dijit/form/Form dojox/mvc/at dojox/mvc/getStateful dojox/mvc/ModelRefController ttx/dijit/ConfirmDialog ttx/util/RequestLogUtil gridx/support/exporter/toCSV".split(" "), function(p, n, m, l, k, g, f, e, d, c, b) {
                return p(null, {
                    wsoType: "amd",
                    wso: null,
                    queryDeferred: null,
                    constructor: function(a) {
                        return this.wso = a.wso
                    },
                    query: function(a, b) {
                        var c, d, e, h, f, g, k, l, m, n, p, q;
                        if (!this.queryDeferred || !this.queryDeferred.isFulfilled || this.queryDeferred.isFulfilled()) {
                            c = this.wso.cpList;
                            d = c.ctrl;
                            e = this.wso.viewModel;
                            h = this.wso.headerTableModel;
                            if (!this.wso.cpList.form.validate())
                                return this.wso.app.notifyError("\u8bf7\u68c0\u67e5\u5355\u636e");
                            c = c.grid;
                            p = [];
                            n = e.list.fields;
                            f = 0;
                            for (l = n.length; f < l; f++)
                                e = n[f],
                                e.ignoreValue || (q = d.get(e.field),
                                null !== q && void 0 !== q && "" !== q && p.push({
                                    table: e.table,
                                    field: e.field,
                                    value: q,
                                    operator: e.operator,
                                    dataType: e.dataType
                                }));
                            if (this.wso.navigatorItem.param)
                                try {
                                    if (m = this.wso.navigatorItem.param,
                                    "string" === typeof m && (g = JSON.parse(m)),
                                    g.queryParams)
                                        for (k in g.queryParams)
                                            p.push({
                                                table: h.tableName,
                                                field: k,
                                                value: this.wso.evaluateExpression(g.queryParams[k]),
                                                operator: "\x3d"
                                            })
                                } catch (I) {}
                            if ("amd" !== this.wsoType)
                                console.error("action type does not match wso type");
                            else if (c.x_bill && (c.store.headers["X-Bill"] = c.x_bill),
                            c.store.muteQuery = !1,
                            this.queryDeferred = c.filter.setOuterAndApply(p),
                            c.select && c.select.row)
                                return c.select.row.clear()
                        }
                    },
                    "new": function() {
                        var a, b, c, d, e, f, g, k, l, m, p, q, C, E, I;
                        f = this.wso;
                        f.tc.selectChild(f.cpBill);
                        f.cpBill.status = f.app.config.viewStatus.New;
                        f.resetFieldMapDisabledByViewStatus(f.cpBill.fieldMap, f.cpBill.status);
                        f.resetBillActionStyle();
                        a = f.cpBill.ctrl;
                        d = f.cpBill.fieldMap;
                        f.cpBill.orginalValues = {};
                        c = f.getCtrlData(a, f.cpBill.fieldMap);
                        for (b in c)
                            e = c[b],
                            n.isFunction(e) || a.set(b, void 0);
                        if (f.viewModel.bill.fields)
                            for (q = f.viewModel.bill.fields,
                            e = 0,
                            l = q.length; e < l; e++)
                                c = q[e],
                                c.field && d[c.field] && (void 0 !== c.value ? (a.set(c.field, c.value),
                                d[c.field].set("value", c.value)) : void 0 !== c.expression ? (b = f.evaluateExpression(c.expression),
                                a.set(c.field, b),
                                d[c.field].set("value", b)) : "integer" === (m = c.type) || "number" === m ? (a.set(c.field, 0),
                                d[c.field].set("value", 0)) : (a.set(c.field, null),
                                d[c.field].set("value", null)));
                        b = f.viewModel.bill.fields;
                        d = 0;
                        for (m = b.length; d < m; d++)
                            a = b[d],
                            a.field !== (null != (C = f.billModel) ? C.principal : void 0) || void 0 !== a.disabled && a.disabled || null != (E = f.cpBill.fieldMap[null != (I = f.billModel) ? I.principal : void 0]) && E.set("disabled", !1);
                        if (this.wso.navigatorItem.param)
                            try {
                                if (p = this.wso.navigatorItem.param,
                                "string" === typeof p && (g = JSON.parse(p)),
                                g.queryParams)
                                    for (k in g.queryParams)
                                        f.cpBill.ctrl.set(k, this.wso.evaluateExpression(g.queryParams[k]))
                            } catch (H) {}
                        f.cpBill.grid && (f.cpBill.grid.store.muteQuery = !0,
                        f.gridRefresh(f.cpBill.grid),
                        this.clearDetailData());
                        return this.wso.cpBill.form.validate()
                    },
                    edit: function(a) {
                        var b, c, d, e, f, g, k, l, m, n;
                        f = this.wso;
                        if (f.cpBill && f.cpBill.domNode)
                            return f.tc.selectChild(f.cpBill),
                            f.cpBill.status = f.app.config.viewStatus.Edit,
                            f.resetFieldMapDisabledByViewStatus(f.cpBill.fieldMap, f.cpBill.status),
                            f.deferredStatus = f.DEFERRED_STATUS.Init,
                            f.resetBillActionStyle(),
                            b = this.wso.billModel,
                            e = this.wso.headerTableModel,
                            this.wso.tc.selectChild(this.wso.cpBill),
                            c = a[e.idColumnName],
                            a = a[b.principal],
                            e = "rest/cbt/" + e.code + "/" + c,
                            null != (d = f.viewModel) && null != (g = d.list) && null != (k = g.grid) && k.useUrlForDetail && null != (l = f.viewModel) && null != (m = l.list) && null != (n = m.grid) && n.url && (e = f.viewModel.list.grid.url + "/" + c),
                            c = f.app.dataManager.get(e).then(function(a) {
                                var c, d, e, h;
                                f.deferredStatus = f.DEFERRED_STATUS.Finish;
                                f.resetBillActionStyle();
                                f.cpBill.orginalValues = a;
                                d = f.cpBill.fieldMap;
                                for (c in d)
                                    h = d[c],
                                    h.set("value", null);
                                for (c in a)
                                    h = a[c],
                                    f.cpBill.fieldMap[c] && f.cpBill.fieldMap[c].set("value", h),
                                    f.cpBill.ctrl.set(c, h);
                                return null != (e = f.cpBill.fieldMap[b.principal]) ? e.set("disabled", !0) : void 0
                            }),
                            d = [{
                                field: b.subordinate,
                                value: a
                            }],
                            f.cpBill.grid && (f.cpBill.grid.store.muteQuery = !1,
                            f.cpBill.grid.filter.setOuterAndApply(d),
                            d = f.cpBill.grid,
                            d.select && d.select.row && d.select.row.clear(),
                            this.clearDetailData()),
                            this.wso.cpBill.form.validate(),
                            c
                    },
                    "delete": function(a, b) {
                        var e, h;
                        e = this.wso;
                        h = this;
                        if (0 === e.cpList.grid.select.row.getSelected().length)
                            e.app.notifyError("\u8bf7\u9009\u62e9\u8981\u64cd\u4f5c\u7684\u884c");
                        else
                            return (new d({
                                title: tt("\u786e\u5b9a\u8981\u5220\u9664\uff1f"),
                                "class": "confirmDelete",
                                btnDef: a._cbtDef,
                                doExecute: function() {
                                    try {
                                        return a._cbtDef.logRequest && c.startLogRequest(a._cbtDef.logName, e._title),
                                        h._delete(a, b)
                                    } catch (u) {
                                        return 0
                                    } finally {
                                        c.endLogRequest()
                                    }
                                }
                            })).show()
                    },
                    _delete: function(a, b) {
                        var c, d, e;
                        d = this.wso;
                        e = d.cpList.grid.select.row.getSelected();
                        c = d.billModel.code;
                        e = {
                            items: e
                        };
                        c && (e.billCode = c);
                        return d.app.dataManager["delete"]("rest/cbt/" + d.headerTableModel.code, e).then(function() {
                            return d.gridRefresh(d.cpList.grid)
                        })
                    },
                    create: function(a, b) {
                        var c, d;
                        if (!this.wso.cpBill.form.validate())
                            return this.wso.app.notifyError("\u8bf7\u68c0\u67e5\u5355\u636e");
                        d = this.wso;
                        c = this.wso.billModel;
                        return this.wso.busyBtn(a, this.wso.app.dataManager.post("rest/cbt/" + this.wso.headerTableModel.code, this.wso.getCtrlData(this.wso.cpBill.ctrl, this.wso.cpBill.fieldMap)).then(function(a) {
                            var b, e, h, f;
                            if ("0" === a.code) {
                                d.cpBill.status = d.app.config.viewStatus.Edit;
                                d.resetFieldMapDisabledByViewStatus(d.cpBill.fieldMap, d.cpBill.status);
                                d.resetBillActionStyle();
                                e = a.data;
                                for (b in e)
                                    f = e[b],
                                    d.cpBill.ctrl.set(b, f);
                                null != (h = d.cpBill.fieldMap[c.principal]) && h.set("disabled", !0);
                                a = [{
                                    field: c.subordinate,
                                    value: a.data[c.principal]
                                }];
                                d.cpBill.grid && (d.cpBill.grid.store.muteQuery = !1,
                                d.cpBill.grid.filter.setOuterAndApply(a));
                                return m.publish("postCreateBillAction", d)
                            }
                        }))
                    },
                    update: function(a, b) {
                        var c;
                        c = this.wso;
                        return this.wso.cpBill.form.validate() ? this.wso.busyBtn(a, this.wso.app.dataManager.put("rest/cbt/" + this.wso.headerTableModel.code, this.wso.getCtrlData(this.wso.cpBill.ctrl, this.wso.cpBill.fieldMap)).then(function(a) {
                            var b, d;
                            if ("0" === a.code) {
                                a = a.data;
                                for (b in a)
                                    q.call(a, b) && (d = a[b],
                                    c.cpBill.ctrl.set(b, d));
                                m.publish("postUpdateBillAction", c)
                            }
                        })) : this.wso.app.notifyError("\u8bf7\u68c0\u67e5\u5355\u636e")
                    },
                    reset: function(a, b) {
                        return ""
                    },
                    newDetail: function() {
                        var a;
                        a = this.wso;
                        if (a.cpBill.status !== a.app.config.viewStatus.Edit)
                            return this.wso.tc.selectChild(this.wso.cpBill),
                            a.app.notifyError("\u8bf7\u5148\u6253\u5f00\u6216\u4fdd\u5b58\u5355\u636e");
                        if (!a.cpBill.ctrl.get(a.billModel.principal))
                            return a.app.notifyError("\u8bf7\u5148\u4fdd\u5b58\u5355\u5934");
                        this.wso.tc.selectChild(this.wso.cpDetail);
                        return this.clearDetailData()
                    },
                    editDetailInDialog: function(a) {
                        var b, c, g, l, m, p, q, w;
                        q = this.wso;
                        w = this;
                        g = q.viewModel.detail;
                        l = q.skuEditDialog;
                        return null === l || void 0 === l ? (l = q.skuEditDialog = new d({
                            onExecute: function() {
                                return n.hitch(w, "updateDetail", this.okButton)()
                            }
                        }),
                        p = l.form = new k({
                            "class": "ttxForm"
                        }),
                        l.addChild(p),
                        c = l.ctrl = new e({
                            model: f({})
                        }),
                        m = l.fieldMap = {},
                        q.addTtxFieldSet(g.fields, c, g.columns, p.domNode, m),
                        q.deferredStatus = q.DEFERRED_STATUS.Requesting,
                        b = q.billModel,
                        c = q.detailTableModel,
                        a = a[c.idColumnName],
                        c = c.code,
                        a = q.app.dataManager.get("rest/cbt/" + c + "/" + a).then(function(a) {
                            var c, d;
                            q.deferredStatus = q.DEFERRED_STATUS.Finish;
                            l.orginalValues = a;
                            for (c in a)
                                d = a[c],
                                l.fieldMap[c] ? l.fieldMap[c].set("value", d) : l.ctrl.set(c, d);
                            if (a = l.fieldMap[b.subordinate])
                                return a.set("disabled", !0)
                        })) : l.show()
                    },
                    clearDetailData: function() {
                        var a, b, c, d, e, f, g, k, l;
                        f = this.wso;
                        if (f.cpDetail && f.cpDetail.ctrl) {
                            f.cpDetail.status = f.app.config.viewStatus.DetailNew;
                            f.resetFieldMapDisabledByViewStatus(f.cpDetail.fieldMap, f.cpDetail.status);
                            f.resetBillActionStyle();
                            a = f.cpDetail.ctrl;
                            d = f.cpDetail.fieldMap;
                            f.cpDetail.orginalValues = {};
                            c = f.getCtrlData(a, f.cpDetail.fieldMap);
                            for (b in c)
                                e = c[b],
                                n.isFunction(e) || a.set(b, null);
                            if (f.viewModel.detail.fields)
                                for (k = f.viewModel.detail.fields,
                                e = 0,
                                g = k.length; e < g; e++)
                                    c = k[e],
                                    c.headerField ? (d[c.field].set("value", f.cpBill.ctrl.get(c.headerField)),
                                    d[c.field].set("disabled", !0)) : c.field && ("integer" === (l = c.type) || "number" === l ? (a.set(c.field, 0),
                                    d[c.field].set("value", 0)) : (a.set(c.field, null),
                                    d[c.field].set("value", null)),
                                    void 0 !== c.value ? d[c.field].set("value", c.value) : void 0 !== c.expression && (b = f.evaluateExpression(c.expression),
                                    d[c.field].set("value", b)));
                            f.cpDetail.ctrl.set(f.billModel.subordinate, f.cpBill.ctrl.get(f.billModel.principal));
                            return f.cpDetail.form.validate()
                        }
                    },
                    editDetail: function(a) {
                        var b, c, d;
                        d = this.wso;
                        d.cpDetail.status = d.app.config.viewStatus.DetailEdit;
                        d.resetFieldMapDisabledByViewStatus(d.cpDetail.fieldMap, d.cpDetail.status);
                        d.deferredStatus = d.DEFERRED_STATUS.Requesting;
                        d.resetBillActionStyle();
                        b = this.wso.billModel;
                        c = this.wso.detailTableModel;
                        a = d.app.dataManager.get("rest/cbt/" + c.code + "/" + a[c.idColumnName]).then(function(a) {
                            var c, e, h, f, g, k;
                            d.deferredStatus = d.DEFERRED_STATUS.Finish;
                            d.resetBillActionStyle();
                            d.cpDetail.orginalValues = a;
                            e = d.cpDetail.fieldMap;
                            k = d.viewModel.detail.fields;
                            h = 0;
                            for (g = k.length; h < g; h++)
                                c = k[h],
                                c.headerField && (e[c.field].set("value", d.cpBill.ctrl.get(c.headerField)),
                                e[c.field].set("disabled", !0));
                            for (f in a)
                                c = a[f],
                                d.cpDetail.fieldMap[f] ? d.cpDetail.fieldMap[f].set("value", c) : d.cpDetail.ctrl.set(f, c);
                            if (a = d.cpDetail.fieldMap[b.subordinate])
                                return a.set("disabled", !0)
                        });
                        this.wso.tc.selectChild(this.wso.cpDetail);
                        return a
                    },
                    createDetail: function(a, b) {
                        var c;
                        c = this.wso;
                        return this.wso.cpDetail.form.validate() ? this.wso.busyBtn(a, c.app.dataManager.post("rest/cbt/" + this.wso.detailTableModel.code, this.wso.getCtrlData(this.wso.cpDetail.ctrl, this.wso.cpDetail.fieldMap)).then(function(a) {
                            var b, d;
                            c.gridRefresh(c.cpBill.grid);
                            if ("0" === a.code) {
                                c.cpDetail.status = c.app.config.viewStatus.Edit;
                                c.resetFieldMapDisabledByViewStatus(c.cpDetail.fieldMap, c.cpDetail.status);
                                c.resetBillActionStyle();
                                a = a.data;
                                for (b in a)
                                    d = a[b],
                                    c.cpDetail.ctrl.set(b, d);
                                return m.publish("postCreateDetailAction", c)
                            }
                        })) : this.wso.app.notifyError("\u8bf7\u68c0\u67e5\u5355\u636e")
                    },
                    updateDetail: function(a, b) {
                        var c, d;
                        d = this.wso;
                        c = d.cpDetail;
                        c && c.ctrl || (c = d.skuEditDialog);
                        if (c && c.form)
                            return c.form.validate() ? this.wso.busyBtn(a, d.app.dataManager.put("rest/cbt/" + this.wso.detailTableModel.code, this.wso.getCtrlData(c.ctrl, c.fieldMap)).then(function(a) {
                                var b, e;
                                d.gridRefresh(d.cpBill.grid);
                                if ("0" === a.code) {
                                    a = a.data;
                                    for (b in a)
                                        e = a[b],
                                        c.ctrl.set(b, e);
                                    return m.publish("postUpdateDetailAction", d)
                                }
                            })) : this.wso.app.notifyError("\u8bf7\u68c0\u67e5\u5355\u636e")
                    },
                    resetDetail: function() {
                        return ""
                    },
                    deleteDetail: function(a, b) {
                        var e, h;
                        e = this.wso;
                        h = this;
                        if (0 === e.cpBill.grid.select.row.getSelected().length)
                            e.app.notifyError("\u8bf7\u9009\u62e9\u8981\u64cd\u4f5c\u7684\u884c");
                        else
                            return (new d({
                                title: tt("\u786e\u5b9a\u8981\u5220\u9664\uff1f"),
                                "class": "confirmDelete",
                                doExecute: function() {
                                    try {
                                        a._cbtDef.logRequest && c.startLogRequest(a._cbtDef.logName, e._title),
                                        h._deleteDetail(a, b)
                                    } catch (u) {} finally {
                                        c.endLogRequest()
                                    }
                                    if (e.actionSets["default"] && e.actionSets["default"].postDeleteDetail)
                                        return e.actionSets["default"].postDeleteDetail()
                                }
                            })).show()
                    },
                    _deleteDetail: function(a, b) {
                        var c;
                        c = this.wso;
                        return c.busyBtn(a, c.app.dataManager["delete"]("rest/cbt/" + c.detailTableModel.code, {
                            items: c.cpBill.grid.select.row.getSelected()
                        }).then(function() {
                            return c.gridRefresh(c.cpBill.grid)
                        }))
                    },
                    gridAddRow: function(a) {
                        return a.store.add({})
                    },
                    exportClientCsv: function(a, c, d) {
                        var e, h, f;
                        null == d && (d = "export.csv");
                        e = this.wso;
                        h = function(a) {
                            return 0
                        }
                        ;
                        f = function(a) {
                            return 0
                        }
                        ;
                        return setTimeout(function(a) {
                            return function() {
                                b(c, {}).then(function(a) {
                                    return e.downloadFile(d, a)
                                }, h, f);
                                return 0
                            }
                        }(this), 500)
                    },
                    exportSqlTemplateCsv: function(a, b, c, d) {
                        b && b.domNode ? (a = c,
                        c = d) : a = b;
                        return this._exportSqlTemplateCore(b, "rest/sqlTemplate/csv/" + a + "/" + c)
                    },
                    exportSqlTemplateXls: function(a, b, c, d) {
                        b && b.domNode ? (a = c,
                        c = d) : a = b;
                        return this._exportSqlTemplateCore(b, "rest/sqlTemplate/xls/" + a + "/" + c)
                    },
                    _exportSqlTemplateCore: function(a, b) {
                        var c, d;
                        d = this.wso;
                        var e, h, f, g;
                        f = a.structure;
                        g = [];
                        e = 0;
                        for (h = f.length; e < h; e++)
                            c = f[e],
                            "#" === c.field || c.exportIngore || g.push(c.field);
                        return d.downloadUrl(b, {
                            filter: JSON.stringify(a.filter.getFilter().expr),
                            "X-Result-Fields": g.join(","),
                            "x-rights": a.store.headers["x-rights"],
                            "X-Bill": a.store.headers["X-Bill"]
                        })
                    },
                    exportRestGridXls: function(a, b) {
                        var c, d, e;
                        d = this.wso;
                        e = b.storeArgs.target;
                        e = "export/excel/rest/" + e.split("/").reverse()[0];
                        var h, f, g, k;
                        g = b.structure;
                        k = [];
                        h = 0;
                        for (f = g.length; h < f; h++)
                            c = g[h],
                            "#" === c.field || c.exportIngore || k.push(c.field);
                        return d.downloadUrl(e, {
                            filter: JSON.stringify(b.filter.getFilter().expr),
                            "X-Result-Fields": k.join(","),
                            "x-rights": b.store.headers["x-rights"],
                            "X-Bill": b.store.headers["X-Bill"]
                        })
                    },
                    gridDeleteRow: function(a, b) {
                        var c, d, e, h, f;
                        h = b.select.row.getSelected();
                        f = [];
                        c = 0;
                        for (e = h.length; c < e; c++)
                            d = h[c],
                            f.push(b.store.remove(d));
                        return f
                    }
                })
            })
        },
        "ttx/dijit/ConfirmDialog": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/dom-class dojo/on dijit/ConfirmDialog dijit/form/TextBox".split(" "), function(q, p, n, m, l, k) {
                return q([l], {
                    actionBarTemplate: "\x3cdiv class\x3d'dijitDialogPaneActionBar' data-dojo-attach-point\x3d\"actionBarNode\"\x3e\n\x3cbutton data-dojo-type\x3d'dijit/form/Button' class\x3d\"buttonCancel\" type\x3d'button'\n\t\tdata-dojo-attach-point\x3d\"cancelButton\" data-dojo-attach-event\x3d'click:onCancel'\x3e\x3c/button\x3e\n\x3cbutton data-dojo-type\x3d'dijit/form/Button' class\x3d\"buttonOk\" type\x3d'submit' data-dojo-attach-point\x3d\"okButton\"\x3e\x3c/button\x3e\n\x3c/div\x3e",
                    inputBox: null,
                    withInputBox: !1,
                    postCreate: function() {
                        var g;
                        this.inherited(arguments);
                        g = this;
                        this.withInputBox && (n.add(this.containerNode, "withInput"),
                        n.add(this.domNode, "confirmInput"),
                        this.inputBox = new k({
                            "class": "confirmInputBox"
                        }),
                        this.own(m(this.inputBox, "keydown", function(f) {
                            if (f.keyCode === dojo.keys.ENTER)
                                return g.onExecute()
                        })),
                        this.addChild(this.inputBox));
                        this.okButton.set("label", tt("Ok"));
                        return this.cancelButton.set("label", tt("Cancel"))
                    },
                    getInputValue: function() {
                        var g;
                        return null != (g = this.inputBox) ? g.get("value") : void 0
                    },
                    doExecute: function() {},
                    onExecute: function() {
                        this.doExecute();
                        return this.hide()
                    },
                    cancel: function() {},
                    onCancel: function() {
                        this.cancel();
                        return this.hide()
                    }
                })
            })
        },
        "ttx/util/RequestLogUtil": function() {
            define(["dojo/_base/lang", "dojo/_base/declare"], function(q, p) {
                var n;
                n = {};
                return {
                    startLogRequest: function(m, l) {
                        return n = {
                            "x-action-name": encodeURIComponent(m),
                            "x-action-page": encodeURIComponent(l)
                        }
                    },
                    setBillCode: function(m) {
                        return n["x-action-billno"] = m
                    },
                    endLogRequest: function() {
                        return n = {}
                    },
                    getLogRequestHeaders: function() {
                        return n
                    }
                }
            })
        },
        "ttx/wso/_ViewModelWso": function() {
            define("dojo/_base/declare dojo/_base/fx dojo/on dojo/dom-construct dojo/dom-style dojo/dom-class dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin ttx/dijit/_FormMixin ttx/util/_I18nMixin ttx/actions/BillActions ttx/dijit/form/ZoomButton".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a) {
                return q([g, f, e, d, c], {
                    app: null,
                    workspace: null,
                    navigatorItem: {},
                    viewModel: {},
                    viewModelDeferred: null,
                    title: "",
                    wsoZoomNode: null,
                    gridDisplays: {},
                    buildRendering: function() {
                        this.inherited(arguments);
                        this._loading = m.toDom('\x3cdiv id\x3d"loadingOverlay" class\x3d"loadingOverlay pageOverlay"\x3e\n  \x3cdiv class\x3d"loadingMessage"\x3eLoading...\x3c/div\x3e\n\x3c/div\x3e');
                        return m.place(this._loading, this.domNode, "last")
                    },
                    postCreate: function() {
                        var a, b;
                        this.inherited(arguments);
                        this.actionSets = {
                            "default": {},
                            global: {}
                        };
                        a = this.navigatorItem;
                        b = {
                            tid: a.tid,
                            oid: a.oid,
                            nid: a.id
                        };
                        a.__sourceItem && (b.nid = a.__sourceItem.id);
                        return app.dataManager.post("/userData/getDisplay", b).then(function(a) {
                            return function(b) {
                                a.gridDisplays = b.gridDisplays;
                                a.fieldDisplays = b.fieldDisplays;
                                a._buildForm();
                                return a._buildWsoZoom(a.domNode)
                            }
                        }(this), function(a) {
                            return function(b) {
                                a.gridDisplays = {};
                                a.fieldDisplays = {};
                                a._buildForm();
                                return a._buildWsoZoom(a.domNode)
                            }
                        }(this))
                    },
                    _buildWsoZoom: function(b) {
                        var c;
                        if (this.viewModel && this.viewModel.showFullScreen)
                            return c = this,
                            b = new a({
                                contentNode: b,
                                afterZoomOut: function() {
                                    if (c.resize)
                                        return c.resize()
                                },
                                afterZoomIn: function() {
                                    if (c.resize)
                                        return c.resize()
                                }
                            }),
                            m.place(b.domNode, c.domNode)
                    },
                    _translateAll: function() {
                        var a, b, c, d, e, f;
                        e = function(a) {
                            var b, c;
                            c = "";
                            b = a.innerHTML;
                            -1 !== b.indexOf("\uff1a") ? (c = "\uff1a",
                            b = b.substring(0, b.indexOf(c))) : -1 !== b.indexOf(":") ? (c = ":",
                            b = b.substring(0, b.indexOf(c))) : c = "";
                            return a.innerHTML = tt(b.trim()) + c
                        }
                        ;
                        f = document.getElementsByClassName("transClass");
                        c = [];
                        d = a = 0;
                        for (b = f.length - 1; 0 <= b ? a <= b : a >= b; d = 0 <= b ? ++a : --a)
                            c.push(e(f[d]));
                        return c
                    },
                    _buildForm: function() {
                        var a;
                        a = this;
                        this.own(n(window, "resize", function() {
                            if (a.resize && "function" === typeof a.resize)
                                return a.resize()
                        }));
                        return this.viewModelDeferred.then(function(c) {
                            a.viewModel = c;
                            a.actionSets.global = new b({
                                wso: a
                            });
                            try {
                                return c.actionJs ? require({
                                    async: !1
                                }, [c.actionJs], function(b) {
                                    a.actionSets["default"] = new b({
                                        wso: a
                                    });
                                    a._removeLoading();
                                    a.buildForm(c);
                                    a._translateAll();
                                    try {
                                        a.transAll()
                                    } catch (u) {}
                                    a.bindingEvent();
                                    a.removeLoading();
                                    a.postBuildFormCalled || a.actionSets["default"] && a.actionSets["default"].postBuildForm && a.actionSets["default"].postBuildForm();
                                    if (a.resize && "function" === typeof a.resize)
                                        return a.resize()
                                }) : (a._removeLoading(),
                                a.buildForm(c),
                                a._translateAll(),
                                a.bindingEvent(),
                                a.removeLoading(),
                                a.postBuildFormCalled || a.actionSets["default"] && a.actionSets["default"].postBuildForm && a.actionSets["default"].postBuildForm(),
                                a.resize && "function" === typeof a.resize && a.resize()),
                                a.layoutPane(a.domNode),
                                a.layoutPane(a.domNode)
                            } catch (t) {
                                return console.error(t)
                            }
                        })
                    },
                    _abortLoadViewModel: function() {
                        if (this.viewModelDeferred)
                            return this.viewModelDeferred.cancel(),
                            this._loading.innerHTML = "LOAD FAILED!!"
                    },
                    _removeLoading: function() {
                        p.fadeOut({
                            node: this._loading,
                            onEnd: function(a) {
                                return l.set(a, "display", "none")
                            }
                        }).play();
                        m.destroy(this._loading);
                        return delete this._loading
                    },
                    buildForm: function(a) {},
                    bindingEvent: function() {}
                })
            })
        },
        "ttx/dijit/_FormMixin": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/fx dojo/_base/Deferred dojo/on dojo/dom-construct dojo/dom-geometry dojo/dom-style dojo/dom-class dojo/query dojo/request dojo/store/Memory ttx/store/JsonRest dijit/TitlePane dijit/Toolbar dijit/TooltipDialog ttx/dijit/ConfirmDialog ttx/dijit/_TtxForm dijit/ConfirmTooltipDialog dijit/Menu dijit/MenuItem dijit/form/Form dijit/form/Button dijit/form/DropDownButton dijit/form/ComboButton ttx/dijit/form/CheckBox dijit/form/ValidationTextBox dijit/form/SimpleTextarea ttx/dijit/form/DateTextBox ttx/dijit/form/DateTimeTextBox ttx/dijit/form/CheckedMultiSelect ttx/dijit/DisplaySettingDialog dijit/form/NumberTextBox dijit/form/Select dijit/form/ComboBox dijit/form/FilteringSelect dijit/layout/ContentPane dojox/mvc/at dojox/mvc/getStateful dojox/mvc/ModelRefController dojox/form/Uploader gridx/Grid gridx/core/model/cache/Sync gridx/core/model/cache/Async gridx/allModules gridx/support/exporter/toCSV ttx/util ./_TabbedFormMixin".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A, B, C, E, I, H, F, G, J, O, D, M, L, K, N, P, R, S, U, ca, da, aa, V, ea, T, X) {
                return q([x, X], {
                    actionSets: {
                        "default": {},
                        global: {}
                    },
                    viewModel: {},
                    addForm: function(a, b) {
                        var c;
                        c = b;
                        b.domNode && (c = b.domNode);
                        b.form = new v;
                        c.appendChild(b.form.domNode);
                        this.addFieldSet(a, b.form);
                        b.ctrl = b.form.ctrl;
                        return b.fieldMap = b.form.fieldMap
                    },
                    addFieldSet: function(a, b) {
                        var c, d, e, h, f, g, m, r, n, q, t, u, y, z, J;
                        J = this;
                        z = p.clone(a);
                        m = a.items;
                        c = a.columns;
                        g = a.fieldId;
                        b.reservedFields = u = a.reservedFields;
                        f = this.fieldDisplays;
                        m instanceof Array || (m = a,
                        c = 3,
                        g = null,
                        u = []);
                        if (g && (h = [],
                        r = [],
                        f && f[g] && (h = f[g]),
                        u)) {
                            if (0 < u.length)
                                for (e = 0,
                                t = u.length; e < t; e++)
                                    y = u[e],
                                    y.resource = p.clone(y),
                                    y.type = "checkbox",
                                    y.value = 1,
                                    n = T.indexOf(h, y, "id"),
                                    0 > n && (y.value = 0,
                                    r.push(y));
                            if (h && 0 < h.length)
                                for (q in h)
                                    e = h[q],
                                    n = T.indexOf(m, e, "id"),
                                    0 > n && (m.push(e),
                                    r.splice(q, 0, p.mixin(p.clone(e), {
                                        resource: p.clone(e),
                                        type: "checkbox",
                                        value: 1
                                    })))
                        }
                        b.reservedFields = r;
                        h = b;
                        b.domNode && (h = b.domNode);
                        b.ctrl || (b.ctrl = new S({
                            model: R({})
                        }));
                        b.fieldMap || (b.fieldMap = {});
                        d = this.addTtxFieldSet(m, b.ctrl, c, h, b.fieldMap);
                        if (!u || 1 > u.length)
                            return d;
                        c = k.create("div", {
                            "class": "fa fa-cog set-ttx-field-set"
                        }, d);
                        l(c, "click", function() {
                            var a;
                            b.chooseReserveFieldSetDialog || (b.chooseReserveFieldSetDialog = a = new O({
                                hasReset: !1,
                                title: tt("\u81ea\u5b9a\u4e49\u641c\u7d22\u65b9\u6848"),
                                "class": "chooseReserveFieldSetDialog",
                                style: {
                                    width: "800px"
                                }
                            }),
                            a.save = function(c) {
                                return function() {
                                    var c, e, h, l;
                                    k.destroy(d);
                                    f = [];
                                    l = a.grid.model.store.data;
                                    e = 0;
                                    for (h = l.length; e < h; e++)
                                        c = l[e],
                                        q = T.indexOf(m, c.resource, "id"),
                                        m.splice(q, 1),
                                        c.value && (m.push(c.resource),
                                        f.push(c.resource));
                                    e = {};
                                    e[g] = f;
                                    c = J.navigatorItem;
                                    e = {
                                        tid: c.tid,
                                        oid: c.oid,
                                        nid: c.id,
                                        value: e
                                    };
                                    c.__sourceItem && (e.nid = c.__sourceItem.id);
                                    app.dataManager.post("/userData/saveFieldDisplay", e).then(function(a) {});
                                    J.fieldDisplays[g] = f;
                                    d = J.addFieldSet(z, b);
                                    a.hide();
                                    b.reservedFields = a.grid.model.store.data;
                                    a.destroy();
                                    delete b.chooseReserveFieldSetDialog;
                                    return J.layoutPane(b)
                                }
                            }(this));
                            b.chooseReserveFieldSetDialog.show();
                            return b.chooseReserveFieldSetDialog.set("displayData", b.reservedFields)
                        });
                        return d
                    },
                    addActionSet: function(a, b) {
                        var c;
                        c = b;
                        b.domNode && (c = b.domNode);
                        b.actionMap || (b.actionMap = {});
                        return this.addTtxActionSet(a, c, b.actionMap)
                    },
                    addClientStoreGrid: function(a, b, c) {
                        null == c && (c = {});
                        c.modules || (c.modules = []);
                        c.modules.push(V.MoveRow);
                        c.modules.push(V.Sort);
                        return this.addTtxGrid(a, b, c)
                    },
                    addServerStoreGrid: function(a, b, c) {
                        null == c && (c = {});
                        return this.addTtxServerGrid(a, b, c)
                    },
                    layoutFieldSet: function(a) {
                        return this.layoutPane(a)
                    }
                })
            })
        },
        "ttx/dijit/_TtxForm": function() {
            var q = [].indexOf || function(p) {
                for (var n = 0, m = this.length; n < m; n++)
                    if (n in this && this[n] === p)
                        return n;
                return -1
            }
            ;
            define("dojo/_base/declare dojo/_base/lang dojo/_base/fx dojo/_base/Deferred dojo/string dojo/on dojo/dom-construct dojo/dom-geometry dojo/dom-style dojo/dom-class dojo/query dojo/io-query dojo/request dojo/store/Memory ttx/store/JsonRest dijit/TitlePane dijit/Toolbar dijit/TooltipDialog ttx/dijit/ConfirmDialog dijit/ConfirmTooltipDialog dijit/Menu dijit/MenuItem dijit/form/Form dijit/form/Button dijit/form/ToggleButton dijit/form/DropDownButton dijit/form/ComboButton ttx/dijit/form/CheckBox ttx/dijit/form/Label ttx/dijit/form/TristateCheckBox ttx/dijit/form/QuickFindInput ttx/dijit/form/MultiSelectPopup ttx/dijit/form/MultiSelectComboBox dijit/form/ValidationTextBox dijit/form/SimpleTextarea dijit/form/RadioButton ttx/dijit/form/DateTextBox ttx/dijit/form/DateTimeTextBox ttx/dijit/form/CheckedMultiSelect ttx/dijit/form/CascadeSelect ttx/dijit/form/AreaSelect dijit/form/NumberTextBox dijit/form/NumberSpinner dijit/form/Select dijit/form/ComboBox dijit/form/FilteringSelect dijit/layout/ContentPane dojox/mvc/at dojox/mvc/getStateful dojox/mvc/ModelRefController ttx/dojox/form/Uploader dojox/image/LightboxNano gridx/Grid gridx/core/model/cache/Sync gridx/core/model/cache/Async ttx/gridx/allModules gridx/support/exporter/toCSV ttx/wso/_StatusMixin ttx/util/RequestLogUtil ttx/util/Escaper ttx/util/ExpressionEvaluator ttx/dijit/layout/LayoutFormMixin ttx/util/CybertransVersion ttx/material/ripple ttx/dijit/builder/GridBuilder ttx/dijit/builder/FieldSetBuilder".split(" "), function(p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A, B, C, E, I, H, F, G, J, O, D, M, L, K, N, P, R, S, U, ca, da, aa, V, ea, T, X, fa, W, ga, ja, ka, la, ma, na, Q, oa, pa, Y, qa, ra, sa, ta, ba, ha, ia) {
                return p([pa, sa, ha, ia, ra], {
                    actionSets: {
                        "default": {},
                        global: {}
                    },
                    viewModel: {},
                    addTitlePane: function(a, b) {
                        var c;
                        c = new u({
                            title: tt(a)
                        });
                        f.place(c.domNode, b);
                        return c
                    },
                    addContentPane: function(a) {
                        var b;
                        b = new X;
                        f.place(b.domNode, a);
                        return b
                    },
                    newTtxAction: function(a, b, c) {
                        var d, e, h, f, g, k, l;
                        null == b && (b = {});
                        h = this;
                        k = n.mixin({
                            label: a.name,
                            _cbtDef: a
                        }, a.args);
                        k.label = tt(k.label);
                        a.colorTheme && (k["class"] = "alt-" + a.colorTheme);
                        d = null;
                        if (a.dropDown)
                            n.isArray(a.dropDown) ? (k = n.mixin(k, {
                                dropDown: this._newDropDownMenu(a.dropDown, c)
                            }),
                            a.action ? (d = new H(k),
                            this._addActionClick(a, d, c)) : d = new I(k)) : d = new I(k);
                        else if ("upload" === a.type) {
                            d = this.app.dataManager.getUrl(a.url);
                            e = this.app.dataManager;
                            d = this.getUrlToken(d);
                            app && app.session && app.session.params && app.session.params.warehouse && (d += "\x26warehouse\x3d" + app.session.params.warehouse);
                            if (a.defaultValues) {
                                c = a.defaultValues;
                                for (g in c)
                                    for (f in l = c[g],
                                    l)
                                        k = l[f],
                                        l[f] = this.evaluateExpression(k);
                                d += "\x26defaultValues\x3d" + encodeURIComponent(JSON.stringify(c))
                            }
                            d = new ja({
                                defaultLabel: tt(a.name),
                                label: tt(a.name),
                                accept: a.accept || "",
                                degradable: !0,
                                multiple: !!a.multiple,
                                uploadOnSelect: !0,
                                url: d,
                                onChange: function(a) {
                                    return a && 0 !== a.length ? this.set("disabled", !0) : h.app.notifyError("\u6587\u4ef6\u5217\u8868\u4e0d\u6b63\u786e")
                                },
                                onComplete: function(a) {
                                    this.set("disabled", !1);
                                    this.reset();
                                    return e.parseReturnData(a)
                                },
                                onError: function(a) {
                                    this.set("disabled", !1);
                                    this.reset();
                                    return e.parseReturnData(a)
                                }
                            });
                            d.startup()
                        } else
                            d = new C(k),
                            a.action && (this._addActionClick(a, d, c),
                            ba.button(d));
                        return b[a.id] = d
                    },
                    getUrlToken: function(a) {
                        var b;
                        b = "{}";
                        app.session.params && (b = JSON.stringify(app.session.params));
                        return a + ("?token\x3d" + app.session.token + "\x26client\x3d" + app.session.client + "\x26user\x3d" + app.session.user + "\x26db\x3d" + app.session.db + "\x26params\x3d" + encodeURIComponent(b) + "\x26device\x3dbrowser\x26cbtVersion\x3d" + ta.version)
                    },
                    addTtxAction: function(a, b, c) {
                        null == c && (c = {});
                        return f.place(this.newTtxAction(a, c).domNode, b)
                    },
                    newTtxActionSet: function(a, b) {
                        var c, d, e, h, g, k;
                        d = f.create("div", {
                            "class": "ttx-action-set"
                        });
                        if (a.group && a.items && n.isArray(a.items) && 0 < a.items.length)
                            for (e = f.create("div", {
                                "class": "ttx-action-set-group"
                            }, d),
                            k = n.isArray(a) ? a : a.items || [],
                            h = 0,
                            g = k.length; h < g; h++)
                                c = k[h],
                                c.separator ? e = f.create("div", {
                                    "class": "ttx-action-set-group"
                                }, d) : this.addTtxAction(c, e, b);
                        else
                            for (g = n.isArray(a) ? a : a.items || [],
                            h = 0,
                            e = g.length; h < e; h++)
                                c = g[h],
                                this.addTtxAction(c, d, b);
                        return d
                    },
                    addTtxActionSetAuto: function(a, b) {
                        var c;
                        c = b;
                        b.domNode && (c = b.domNode);
                        b.actionMap || (b.actionMap = {});
                        return this.addTtxActionSet(a, c, b.actionMap)
                    },
                    addTtxActionSet: function(a, b, c) {
                        return f.place(this.newTtxActionSet(a, c), b)
                    },
                    addTtxActionEvent: function(a, b, c) {
                        return this._addEventAction({
                            action: c
                        }, a, {}, b)
                    },
                    _addActionClick: function(a, b, c) {
                        null == c && (c = null);
                        return this._addEventAction(a, b, c, "onClick")
                    },
                    _addEventAction: function(a, b, c, d) {
                        var e, h, f, g, k, l, m, r, p;
                        null == c && (c = null);
                        null == d && (d = {
                            onClick: "onClick"
                        });
                        l = this;
                        if (!a.action)
                            return b[d] = function() {
                                console.error("\u672a\u914d\u7f6eAction");
                                return 0
                            }
                            ,
                            "";
                        k = a.action.indexOf(":");
                        e = a.action.substr(k + 1);
                        m = e.split(" ");
                        h = [b];
                        c && (h = [b, c]);
                        1 < m.length && (e = m[0],
                        m.reverse().pop(),
                        m = m.reverse(),
                        h = h.concat(m));
                        f = this.actionSets;
                        if (0 > k)
                            return f["default"][e] ? (g = n.hitch(f["default"], e),
                            p = function() {
                                var b;
                                try {
                                    return a.logRequest && (b = a.logName || a.name,
                                    Y.startLogRequest(b, l._title)),
                                    g.apply(f["default"], h)
                                } catch (va) {
                                    return 0
                                } finally {
                                    Y.endLogRequest()
                                }
                            }
                            ,
                            b[d] = p) : 0;
                        if (0 === k)
                            return f.global[e] ? (g = n.hitch(f.global, e),
                            p = function() {
                                var b;
                                try {
                                    return a.logRequest && (b = a.logName || a.name,
                                    Y.startLogRequest(b, l._title)),
                                    g.apply(f.global, h)
                                } catch (va) {
                                    return 0
                                } finally {
                                    Y.endLogRequest()
                                }
                            }
                            ,
                            b[d] = p) : 0;
                        r = this;
                        return require([a.action.substr(0, k)], function(c) {
                            var f;
                            f = new c({
                                wso: r
                            });
                            return f[e] ? (g = n.hitch(f, e),
                            p = function() {
                                var b;
                                try {
                                    return a.logRequest && (b = a.logName || a.name,
                                    Y.startLogRequest(b, l._title)),
                                    g.apply(f, h)
                                } catch (xa) {
                                    return 0
                                } finally {
                                    Y.endLogRequest()
                                }
                            }
                            ,
                            b[d] = p) : 0
                        })
                    },
                    _newDropDownMenu: function(a, b) {
                        var c, d, e, h, f;
                        f = new v;
                        e = 0;
                        for (h = a.length; e < h; e++)
                            c = a[e],
                            d = n.mixin({
                                label: c.name
                            }, c.args),
                            d = new A(d),
                            this._addActionClick(c, d, b),
                            f.addChild(d);
                        f.startup();
                        return f
                    },
                    addRowIndex2Structure: function(a) {
                        var b, c, d, e;
                        d = !0;
                        b = 0;
                        for (c = a.length; b < c; b++)
                            e = a[b],
                            "#" === e.name && "#" === e.field && (d = !1);
                        if (d)
                            return b = function(a, b, c) {
                                return c + 1
                            }
                            ,
                            a.splice(0, 0, {
                                field: "#",
                                name: "#",
                                width: "30px",
                                decorator: b,
                                sortable: !1,
                                filterable: !1,
                                ignoreColumn: !0
                            })
                    },
                    layoutFieldSetsPane: function(a) {
                        return b(".ttx-field-set", a.domNode).forEach(function(a) {
                            var c;
                            c = e.getContentBox(a);
                            return b(".ttx-field-row", a).forEach(function(a) {
                                var d, h, f;
                                e.setMarginBox(a, {
                                    w: c.w
                                }, !0);
                                d = a.getAttribute("ttx-field-row-cols") || 3;
                                h = e.getContentBox(a);
                                f = parseInt(h.w / d);
                                return b(".ttx-field", a).forEach(function(a) {
                                    var b;
                                    b = a.getAttribute("ttx-field-span");
                                    b *= f;
                                    e.setMarginBox(a, {
                                        w: b
                                    }, !0);
                                    a = a.childNodes;
                                    if (2 === a.length && "LABEL" === a[0].tagName && (b -= e.getMarginBox(a[0]).w,
                                    e.setMarginBox(a[1], {
                                        w: b
                                    }),
                                    a[1].classList.contains("ttxDateTimeTextBox")))
                                        return e.setMarginBox(a[1][0], {
                                            w: b - e.getMarginBox(a[1][1]).w
                                        })
                                })
                            })
                        })
                    },
                    mixinCp: function(a, b) {
                        null == b && (b = {});
                        return n.mixin(a, {
                            actionMap: {},
                            ctrl: new ga({
                                model: W(b)
                            }),
                            fieldMap: {}
                        })
                    },
                    getCtrlData: function(a, b) {
                        var c, d, e, h;
                        c = {};
                        e = a.model;
                        for (d in e)
                            h = e[d],
                            -1 !== ["declaredClass", "_attrPairNames"].indexOf(d) || n.isFunction(h) || (b && b[d] ? b[d]._def && b[d]._def.ignoreValue || (c[d] = b[d].get("value")) : c[d] = h);
                        return c
                    },
                    newGridAddRowTooltip: function(a, b, c) {
                        var d, e, h;
                        null == c && (c = {});
                        h = new B;
                        e = new w({
                            defaultValues: c,
                            content: h,
                            fieldMap: {},
                            ctrl: new ga({
                                model: W(c)
                            }),
                            reset: function() {
                                return this.ctrl.model = W(this.defaultValues)
                            }
                        });
                        e.form = h;
                        this.addTtxFieldSet(a, e.ctrl, 2, h.domNode, e.fieldMap);
                        d = this;
                        e.onExecute = function() {
                            var a;
                            a = d.getCtrlData(e.ctrl, e.fieldMap);
                            return l.when(b.store.add(a), function() {
                                return 0
                            })
                        }
                        ;
                        h.startup();
                        return e
                    },
                    getEmptyItems: function(a) {
                        var b, c, d, e;
                        e = [];
                        a instanceof Array || (a = a.items);
                        c = 0;
                        for (d = a.length; c < d; c++)
                            b = a[c],
                            e[b.field] = "";
                        return e
                    },
                    setCtrlDataFromMap: function(a, b, c) {
                        var d, e, h, f;
                        f = [];
                        d = 0;
                        for (h = c.length; d < h; d++)
                            e = c[d],
                            f.push(b.set(e, a[e]));
                        return f
                    },
                    _getPmActions: function(a, b) {
                        var c, d, e;
                        if (n.isObject(a)) {
                            if (a.actionsExportId)
                                return b[a.actionsExportId] = a.items;
                            d = [];
                            for (c in a)
                                e = a[c],
                                d.push(this._getPmActions(e, b));
                            return d
                        }
                    },
                    reloadTree: function(a, b) {
                        var c, d, e, h, f, g, k, l, m, p, q, t, u;
                        try {
                            p = Math.random();
                            a.model.store.put({
                                id: p,
                                name: "",
                                parent: "root"
                            });
                            q = a.model.store.query();
                            e = 0;
                            for (h = q.length; e < h; e++)
                                c = q[e],
                                "root" !== (t = c.id) && t !== p && a.model.store.remove(c.id);
                            k = new r({
                                data: []
                            });
                            if (n.isArray(b)) {
                                l = 0;
                                for (f = b.length; l < f; l++)
                                    d = b[l],
                                    k.put(d);
                                u = k.query();
                                m = 0;
                                for (g = u.length; m < g; m++)
                                    c = u[m],
                                    "root" !== c.id && a.model.store.put(c);
                                return a.model.store.remove(p)
                            }
                            return b.then(function(b) {
                                var e, h;
                                h = 0;
                                for (e = b.length; h < e; h++)
                                    d = b[h],
                                    k.put(d);
                                h = k.query();
                                e = 0;
                                for (b = h.length; e < b; e++)
                                    c = h[e],
                                    "root" !== c.id && a.model.store.put(c);
                                return a.model.store.remove(p)
                            })
                        } catch (wa) {
                            return console.error(wa)
                        }
                    },
                    getTreeValues: function(a) {
                        var b, c;
                        b = a.model;
                        c = a.rootNode.item;
                        a = [c];
                        this._appendTreeItems(b, c, a);
                        return a
                    },
                    _appendTreeItems: function(a, b, c) {
                        var d;
                        d = n.hitch(this, this._appendTreeItems);
                        a.getChildren(b, function(b) {
                            return b.forEach(function(b) {
                                if (!n.isFunction(b) && (c.push(a.store.get(b.id)),
                                n.isFunction(d) && a.store.hasChildren(b)))
                                    return d(a, b, c)
                            })
                        });
                        return c
                    },
                    addLoading: function() {
                        this._loading = f.toDom('\x3cdiv id\x3d"loadingOverlay" class\x3d"loadingOverlay pageOverlay"\x3e\n  \x3cdiv class\x3d"loadingMessage"\x3eLoading...\x3c/div\x3e\n\x3c/div\x3e');
                        return f.place(this._loading, this.domNode, "last")
                    },
                    removeLoading: function() {
                        if (this._loading)
                            return m.fadeOut({
                                node: this._loading,
                                onEnd: function(a) {
                                    return d.set(a, "display", "none")
                                }
                            }).play(),
                            f.destroy(this._loading),
                            delete this._loading
                    },
                    busyBtn: function(a, b) {
                        a.set("disabled", !0);
                        b.then(function() {
                            a.set("disabled", !1);
                            return a.setDisabled(!1)
                        }, function() {
                            a.set("disabled", !1);
                            return a.setDisabled(!1)
                        });
                        return b
                    },
                    busy: function(a) {
                        a.set("disabled", !0);
                        return a.setDisabled(!0)
                    },
                    enableBtn: function(a) {
                        a.set("disabled", !1);
                        return a.setDisabled(!1)
                    },
                    disableBtn: function(a) {
                        a.set("disabled", !0);
                        return a.setDisabled(!0)
                    },
                    endBusy: function(a, b) {
                        return b.then(function() {
                            a.set("disabled", !1);
                            return a.setDisabled(!1)
                        }, function() {
                            a.set("disabled", !1);
                            return a.setDisabled(!1)
                        })
                    },
                    resetFieldMapDisabledByViewStatus: function(a, b) {
                        var c, d, e;
                        for (d in a)
                            c = a[d],
                            c._def && c._def.disabledStatus && ((e = "" + b,
                            0 <= q.call(c._def.disabledStatus.split(","), e)) ? c.set("disabled", !0) : c.set("disabled", !1))
                    },
                    resetBillFormPadding: function() {
                        this.resetCpFormPadding(this.cpBill);
                        this.resetCpFormPadding(this.cpDetail)
                    },
                    resetCpFormPadding: function(a) {
                        var b, d, e, h;
                        b = a.actionMap;
                        d = !1;
                        for (e in b)
                            if (h = b[e],
                            !c.contains(h.domNode, "displayNone")) {
                                d = !0;
                                break
                            }
                        a && a.form && (d ? (a.actionDom && c.remove(a.actionDom, "displayNone"),
                        c.add(a.form.domNode, "floatingActionPadding")) : (a.actionDom && c.add(a.actionDom, "displayNone"),
                        c.remove(a.form.domNode, "floatingActionPadding")))
                    },
                    getActionShown: function(a) {
                        var b, c;
                        c = !0;
                        if (!a._cbtDef || !a._cbtDef.shownViewTypes)
                            return c;
                        if (a = a._cbtDef.shownViewTypes)
                            c = !1,
                            this.navigatorItem.paramObject && (b = this.navigatorItem.paramObject.viewType,
                            0 <= q.call(a, b)) && (c = !0);
                        return c
                    },
                    resetBillActionStyle: function() {
                        var a, b, d, e, h, f, g, k, l;
                        k = this.app.config.viewStatus;
                        a = this.cpBill;
                        d = a.status;
                        b = a.actionMap;
                        h = this.deferredStatus === this.DEFERRED_STATUS.Finish;
                        if (this.cpList.grid && this.cpList.grid.actionMap)
                            for (e in f = this.cpList.grid.actionMap,
                            f)
                                l = f[e],
                                (g = this.getActionShown(l)) || c.add(l.domNode, "displayNone");
                        if (this.cpBill && this.cpBill.grid && this.cpBill.grid.actionMap)
                            for (e in f = this.cpBill.grid.actionMap,
                            f)
                                l = f[e],
                                (g = this.getActionShown(l)) || c.add(l.domNode, "displayNone");
                        if (a && b) {
                            for (e in b)
                                if (l = b[e],
                                g = this.getActionShown(l))
                                    switch (e) {
                                    case "update":
                                        d === k.Edit && h ? c.remove(l.domNode, "displayNone") : c.add(l.domNode, "displayNone");
                                        break;
                                    case "create":
                                        d === k.New && h ? c.remove(l.domNode, "displayNone") : c.add(l.domNode, "displayNone")
                                    }
                                else
                                    c.add(l.domNode, "displayNone");
                            if (d = this.cpDetail)
                                if (b = d.status,
                                a = d.actionMap,
                                d && a)
                                    for (e in a)
                                        if (l = a[e],
                                        g = this.getActionShown(l))
                                            switch (e) {
                                            case "updateDetail":
                                            case "update":
                                                b === k.DetailEdit && (d = k.Edit && h) ? c.remove(l.domNode, "displayNone") : c.add(l.domNode, "displayNone");
                                                break;
                                            case "createDetail":
                                            case "create":
                                                b === k.DetailNew && (d = k.Edit && h) ? c.remove(l.domNode, "displayNone") : c.add(l.domNode, "displayNone")
                                            }
                                        else
                                            c.add(l.domNode, "displayNone")
                        }
                        this.resetBillFormPadding()
                    },
                    mixinActionSet: function() {
                        var a;
                        a = this;
                        if (a.viewModel.actionJs)
                            try {
                                return require({
                                    async: !1
                                }, [a.viewModel.actionJs], function(b) {
                                    return a.actionSets["default"] = new b({
                                        wso: a
                                    })
                                })
                            } catch (Z) {
                                return console.error(Z)
                            }
                    },
                    _getGridFieldsToRequest: function(a, b) {
                        var c, d, e, h, f;
                        f = [];
                        a && (f = [a.idColumnName]);
                        h = b.structure;
                        d = 0;
                        for (e = h.length; d < e; d++)
                            c = h[d],
                            c.ignoreColumn || 0 > f.indexOf(c.field) && f.push(c.field);
                        return f.join(",")
                    },
                    setQueriedFieldsToGridStore: function(a, b) {
                        a.store.headers || (a.store.headers = {});
                        return a.store.headers["X-Result-Fields"] = columnStr
                    },
                    _getGridFieldsToRequestWithId: function(a, b) {
                        var c, d, e, h, f;
                        f = a ? [a] : [];
                        h = b.structure;
                        d = 0;
                        for (e = h.length; d < e; d++)
                            c = h[d],
                            c.ignoreColumn || 0 > f.indexOf(c.field) && f.push(c.field);
                        return f.join(",")
                    },
                    confirmDialog: function(a) {
                        a = n.mixin({
                            title: "",
                            style: "width: 200px"
                        }, a);
                        return (new z(a)).show()
                    },
                    downloadUrl: function(b, c) {
                        var d;
                        null == c && (c = {});
                        d = n.mixin({}, app.session);
                        d = n.mixin({}, d);
                        d.device || (d.device = "browser");
                        d.params && (d.params = JSON.stringify(d.params));
                        d = b + "?" + a.objectToQuery(n.mixin(d, c));
                        if ("1" === c.async)
                            return app.dataManager.get(d);
                        d = f.create("a", {
                            target: "_blank",
                            href: d
                        });
                        d.click();
                        f.destroy(d);
                        return d.remove()
                    },
                    downloadFile: function(a, b) {
                        var c, d;
                        c = document.createElement("a");
                        document.body.appendChild(c);
                        d = new Blob(["\ufeff" + b]);
                        c.download = a;
                        c.href = URL.createObjectURL(d);
                        c.click();
                        return document.body.removeChild(c)
                    },
                    exportCsv: function(a, b, c, d) {
                        var e, h;
                        h = this;
                        e = function(a) {
                            c = String(a).replace(/"/g, '""');
                            if (0 <= c.indexOf(",") || 0 <= c.search(/[" \t\r\n]/))
                                c = '"' + c + '"';
                            return c
                        }
                        ;
                        c = {};
                        return this.app.dataManager.post(b, c, d).then(function(b) {
                            var c, d, f, g, k, l, m;
                            l = [];
                            c = 0;
                            for (g = b.length; c < g; c++) {
                                k = b[c];
                                f = [];
                                for (d in k)
                                    m = k[d],
                                    f.push(e(m));
                                l.push(f.join(","))
                            }
                            b = l.join("\r\n");
                            return h.downloadFile(a, b)
                        })
                    },
                    exportClientCsv: function(a, b) {
                        var c;
                        c = this;
                        return oa(b, {}).then(function(b) {
                            return c.downloadFile(a, b)
                        }, function(a) {
                            return console.error(a)
                        }, function(a) {
                            return 0
                        })
                    },
                    gridRefresh: function(a) {
                        a.model.clearCache();
                        a.body.refresh();
                        a.select && a.select.row && a.select.row.clear();
                        if (a.paginationBar)
                            return a.paginationBar.refresh()
                    },
                    floatActionSet: function(a) {
                        c.add(a, "ttx-float-action-set");
                        return f.create("div", {
                            style: {
                                height: "45px"
                            }
                        }, a, "after")
                    },
                    setHeightToParent: function(a) {
                        var b;
                        if (a && a.parentElement)
                            return b = e.getContentBox(a.parentElement).h,
                            e.setMarginBox(a, {
                                h: b
                            })
                    },
                    setGridFillParentLeft: function(a, b) {
                        var c, h, f, g, k, l;
                        if (a && a.domNode && (h = a.domNode) && b && (f = e.getContentBox(b).h,
                        !(100 > f))) {
                            l = b.children;
                            g = 0;
                            for (k = l.length; g < k; g++)
                                c = l[g],
                                c.classList.contains("listGridContainer") || (f = f - e.getMarginBox(c).h - 5);
                            d.set(h, "height", f - 20 + "px");
                            return a.resize()
                        }
                    },
                    closeWso: function() {
                        var a, b;
                        b = this.app.workspaceManager;
                        if ((a = b.getWsoInTabByType(this.navigatorItem)) && a[0] && (b.wsoContainer.removeChild(a[0]),
                        a[0].destroyRecursive(),
                        (a = app.workspaceManager.wsoContainer.selectedChildWidget) && a.getChildren() && a.getChildren()[0]))
                            return a = a.getChildren()[0],
                            b.current = {
                                tid: a.navigatorItem.tid,
                                oid: a.navigatorItem.oid,
                                nid: a.navigatorItem.nid,
                                form: a
                            }
                    },
                    addLightboxImage: function(a, b, c, d) {
                        var e, h;
                        null == d && (d = {});
                        d = n.mixin({
                            width: "100px",
                            height: "100px",
                            cursor: "pointer",
                            display: "inline-block",
                            margin: "5px"
                        }, d);
                        h = this.getUrlToken(c);
                        b = this.getUrlToken(b);
                        a = f.create("img", {
                            "class": "lightboxImage",
                            src: b,
                            style: d
                        }, a);
                        e = new ka({});
                        g(a, "click", function(a) {
                            return e.show({
                                href: h,
                                origin: a.target
                            })
                        })
                    },
                    getImageSrcById: function(a) {
                        return "/mongo/file/id/" + a
                    },
                    gridDblClickEffect: function(a) {
                        if (a)
                            return this.own(g(a, "rowDblClick", function(b) {
                                a.openedRowNode && c.remove(a.openedRowNode, "rowOpened");
                                a.openedRowNode = a.row(b.rowIndex).node();
                                return c.add(a.openedRowNode, "rowOpened")
                            }))
                    },
                    gridClickEffect: function(a) {
                        if (a)
                            return this.own(g(a, "rowClick", function(b) {
                                a.openedRowNode && c.remove(a.openedRowNode, "rowOpened");
                                a.openedRowNode = a.row(b.rowIndex).node();
                                return c.add(a.openedRowNode, "rowOpened")
                            }))
                    }
                })
            })
        },
        "ttx/dijit/form/CheckBox": function() {
            define(["dojo/_base/declare", "dijit/form/CheckBox"], function(q, p) {
                return q([p], {
                    _getValueAttr: function() {
                        return this.checked && this._get("value") ? 1 : 0
                    }
                })
            })
        },
        "ttx/dijit/form/Label": function() {
            define(["dojo/_base/declare", "dojo/dom-style", "dijit/_WidgetBase", "dijit/_TemplatedMixin", "dijit/form/_FormValueWidget"], function(q, p, n, m, l) {
                return q([n, m, l], {
                    templateString: '\x3cdiv class\x3d"dijit dijitReset dijitInline dijitLeft dijitLabel" id\x3d"widget_${id}" role\x3d"presentation"\n\x3e\x3cdiv class\x3d"dijitReset dijitInputContainer"\n\t\x3e\x3cspan class\x3d"dijitReset dijitLabelInner" data-dojo-attach-point\x3d\'textbox,focusNode\' autocomplete\x3d"off"\n/\x3e\x3c/div\n\x3e\x3c/div\x3e',
                    postCreate: function() {
                        this.inherited(arguments);
                        if (this.labelStyle)
                            return p.set(this.textbox, this.labelStyle)
                    },
                    _setValueAttr: function(k) {
                        this.inherited(arguments);
                        return this.textbox.innerText = k
                    },
                    _getValueAttr: function() {
                        this.inherited(arguments);
                        return this.textbox.innerText
                    }
                })
            })
        },
        "ttx/dijit/form/TristateCheckBox": function() {
            define(["dojo/_base/declare", "dijit/_TemplatedMixin", "dijit/_Widget"], function(q, p, n) {
                return q("ThreeCheckBox", [p, n], {
                    image: "images/dijit/form/TristateCheckBox.png",
                    width: "16px",
                    height: "16px",
                    margin_left: "10px",
                    backgroundPosition: "16px 50%",
                    value: "",
                    style: "",
                    postCreate: function() {
                        var m;
                        this.domNode.innerHTML = '\x3cdiv style\x3d"position:relative;background-position:' + this.backgroundPosition + ";width:" + this.width + ";height:" + this.height + ";margin-left:" + this.margin_left + ";background-image:url('" + this.image + "')\"\x3e\x3c/div\x3e";
                        m = this;
                        return this.domNode.onclick = function(l) {
                            l = m.domNode.childNodes[0].style.backgroundPosition;
                            if ("" === l || "0px" === l || "0px 50%" === l)
                                return m._setValueAttr("0");
                            if ("-16px" === l || "-16px 50%" === l)
                                return m._setValueAttr("");
                            if ("16px" === l || "16px 50%" === l)
                                return m._setValueAttr("1")
                        }
                    },
                    __getValue: function() {
                        return this.value
                    },
                    _setValueAttr: function(m) {
                        if (0 === m || "0" === m)
                            return this.domNode.childNodes[0].style.backgroundPosition = "-16px 50%",
                            this.value = "0";
                        if ("" === m || void 0 === m)
                            return this.domNode.childNodes[0].style.backgroundPosition = "16px 50%",
                            this.value = "";
                        if (1 === m || "1" === m)
                            return this.domNode.childNodes[0].style.backgroundPosition = "0px 50%",
                            this.value = "1"
                    }
                })
            })
        },
        "ttx/dijit/form/QuickFindInput": function() {
            require({
                cache: {
                    "url:dijit/form/templates/DropDownBox.html": '\x3cdiv class\x3d"dijit dijitReset dijitInline dijitLeft"\n\tid\x3d"widget_${id}"\n\trole\x3d"combobox"\n\taria-haspopup\x3d"true"\n\tdata-dojo-attach-point\x3d"_popupStateNode"\n\t\x3e\x3cdiv class\x3d\'dijitReset dijitRight dijitButtonNode dijitArrowButton dijitDownArrowButton dijitArrowButtonContainer\'\n\t\tdata-dojo-attach-point\x3d"_buttonNode" role\x3d"presentation"\n\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitArrowButtonInner" value\x3d"\x26#9660; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"button presentation" aria-hidden\x3d"true"\n\t\t\t${_buttonInputDisabled}\n\t/\x3e\x3c/div\n\t\x3e\x3cdiv class\x3d\'dijitReset dijitValidationContainer\'\n\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitValidationIcon dijitValidationInner" value\x3d"\x26#935; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\n\t/\x3e\x3c/div\n\t\x3e\x3cdiv class\x3d"dijitReset dijitInputField dijitInputContainer"\n\t\t\x3e\x3cinput class\x3d\'dijitReset dijitInputInner\' ${!nameAttrSetting} type\x3d"text" autocomplete\x3d"off"\n\t\t\tdata-dojo-attach-point\x3d"textbox,focusNode" role\x3d"textbox"\n\t/\x3e\x3c/div\n\x3e\x3c/div\x3e\n'
                }
            });
            define("dojo/_base/declare dojo/_base/lang dijit/_HasDropDown dijit/form/RangeBoundTextBox ttx/dijit/QuickFindDialog dojo/text!dijit/form/templates/DropDownBox.html".split(" "), function(q, p, n, m, l, k) {
                return q([m, n], {
                    DEFAULT_DIALOG_DISPLAY: {
                        title: tt("\u5feb\u901f\u67e5\u627e"),
                        "class": "containerNode",
                        style: "width: 900px;height:auto"
                    },
                    DEFAULT_STORE_ARGS: {
                        idProperty: "id",
                        muteQuery: !0
                    },
                    quickFindDialog: null,
                    labelAttr: "{id}",
                    valueField: "id",
                    hasDownArrow: !0,
                    disabled: !1,
                    disableKeyIn: !1,
                    baseClass: "dijitTextBox dijitValidationTextBox dijitComboBox",
                    templateString: k,
                    cssStateNodes: {
                        _buttonNode: "dijitDownArrowButton"
                    },
                    autoWidth: !0,
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        return this._set("type", "text")
                    },
                    constructor: function(g) {
                        var f, e, d, c;
                        this.inherited(arguments);
                        f = g && g.args || {};
                        e = p.mixin({}, this.DEFAULT_DIALOG_DISPLAY, f.dialogDisplay);
                        c = p.mixin({}, this.DEFAULT_STORE_ARGS, f.storeArgs);
                        d = f.excludeFields || [];
                        this.quickFindDialog = (new l(e)).init({
                            storeArgs: c,
                            tid: f.tid,
                            oid: f.oid,
                            nid: f.nid,
                            wso: f.wso,
                            onSelect: this.onSelect.bind(this),
                            excludeFields: d
                        });
                        this.labelAttr = f.labelAttr || this.labelAttr;
                        this.valueField = f.valueField || this.valueField;
                        this.disabled = f.disabled || this.disabled;
                        this.disableKeyIn = f.disableKeyIn || this.disableKeyIn;
                        if (null != f.hasDownArrow)
                            return this.hasDownArrow = f.hasDownArrow
                    },
                    setDialogDefaultFilter: function(g) {
                        return this.quickFindDialog.setDefaultFilter(g)
                    },
                    buildRendering: function() {
                        var g;
                        g = this;
                        this.inherited(arguments);
                        this.hasDownArrow || (this._buttonNode.style.display = "none");
                        this.hasDownArrow || (this._buttonNode = this.domNode,
                        this.baseClass += " dijitComboBoxOpenOnClick");
                        this.textbox.disabled = this.disabled || this.disableKeyIn;
                        if (!this.textbox.disabled)
                            return this.textbox.onkeyup = function(f) {
                                if (13 === f.keyCode)
                                    return g.doSearch()
                            }
                    },
                    openDropDown: function() {
                        return this.quickFindDialog.show()
                    },
                    doSearch: function() {
                        var g, f;
                        if (f = (this.textbox.value || "").trim())
                            return this.set("dialogRow", null),
                            this.set("value", ""),
                            g = {},
                            g[this.valueField] = f,
                            this.quickFindDialog.doSearch(g)
                    },
                    _setValueAttr: function(g) {
                        var f;
                        this.inherited(arguments);
                        if (g) {
                            if ("string" === typeof g)
                                return f = {},
                                f[this.valueField] = g,
                                this.set("dialogRow", f),
                                this.textbox.value = g;
                            if ("object" === typeof g)
                                return f = p.clone(g),
                                this.set("dialogRow", f),
                                this.textbox.value = f[this.valueField]
                        } else
                            return this.set("dialogRow", null),
                            this.textbox.value = ""
                    },
                    _setDisabledAttr: function(g) {
                        this.disabled = g;
                        return this.textbox.disabled = this.disabled || this.disableKeyIn
                    },
                    onSelect: function(g) {
                        if (g)
                            return this.set("value", g[this.valueField]),
                            this.set("dialogRow", g),
                            this.textbox.value = p.replace(this.labelAttr, g)
                    }
                })
            })
        },
        "ttx/dijit/QuickFindDialog": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/on ttx/store/JsonRest ttx/dijit/_GridEffectMixin dojo/dom-construct dojo/store/Memory ttx/dijit/ConfirmDialog gridx/allModules".split(" "), function(q, p, n, m, l, k, g, f, e) {
                return q([f, l], {
                    DEFAULT_STORE_ARGS: {
                        idProperty: "id",
                        muteQuery: !0
                    },
                    oid: "",
                    nid: "",
                    storeArgs: null,
                    excludeFields: [],
                    onSelect: function(d) {},
                    wso: null,
                    quickFindHeaderDiv: null,
                    gridDiv: null,
                    fields: null,
                    grid: null,
                    selectedRow: null,
                    defaultFilter: [],
                    init: function(d) {
                        var c;
                        c = this;
                        d = d || {};
                        this.tid = d.tid || "ttx.wso.Bill";
                        this.oid = d.oid;
                        this.nid = d.nid;
                        this.wso = d.wso;
                        this.excludeFields = d.excludeFields || this.excludeFields;
                        this.storeArgs = p.mixin({
                            target: "rest/cbt/" + this.oid
                        }, this.DEFAULT_STORE_ARGS, d.storeArgs);
                        this.onSelect = d.onSelect || this.onSelect;
                        this.wso.app.dataManager.getPermissionViewModels(this.wso.app.session.user, this.tid, this.oid, this.nid).then(function(b) {
                            var a, d, f;
                            d = b.list;
                            d.grid.actions.items = [{
                                action: "find",
                                id: "find",
                                name: "\u67e5\u8be2"
                            }];
                            c.excludeFields && c.excludeFields.length && (d.grid.structure = d.grid.structure.filter(function(a) {
                                return -1 === c.excludeFields.indexOf(a.field)
                            }));
                            a = d.fields.length;
                            for (b = 0; b < a; )
                                f = d.fields.slice(b, Math.min(b + 3, a)),
                                c.wso.addTtxFieldSetAuto(f, 3, c.quickFindHeaderDiv),
                                b += 3;
                            c.fields = d.fields;
                            c.grid = c.wso.addTtxServerGrid(d.grid, c.gridDiv, {
                                storeArgs: c.storeArgs,
                                store: new m(c.storeArgs),
                                noDefaultModules: !0,
                                modules: [e.Pagination, e.PaginationBar, e.Filter, e.Sort, e.CellWidget, e.Bar, e.SelectRow, e.SelectColumn, e.VirtualVScroller, e.ColumnResizer, e.Edit]
                            });
                            c.gridClickEffect(c.grid);
                            c.own(n(c.grid, "rowDblClick", p.hitch(c, function() {
                                c.execute();
                                return c.hide()
                            })));
                            c.grid.actionMap.find.onClick = c.find.bind(c);
                            return c.grid.onRowClick = function(a) {
                                return c.selectedRow = c.grid.row(a.rowIndex).item()
                            }
                        });
                        return this
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this.quickFindHeaderDiv = document.createElement("div");
                        this.quickFindHeaderDiv.setAttribute("style", "position:relative;float:left;width:100%");
                        this.containerNode.appendChild(this.quickFindHeaderDiv);
                        this.gridDiv = document.createElement("div");
                        this.gridDiv.setAttribute("style", "position:relative;float:left;width:100%");
                        return this.containerNode.appendChild(this.gridDiv)
                    },
                    execute: function() {
                        return this.selectedRow && this.onSelect && this.onSelect(this.selectedRow)
                    },
                    cancel: function() {
                        return this.selectedRow = null
                    },
                    find: function() {
                        var d, c, b, a, e, f;
                        f = p.clone(this.defaultFilter);
                        d = this.quickFindHeaderDiv.ctrl;
                        b = this.fields;
                        a = 0;
                        for (e = b.length; a < e; a++)
                            c = b[a],
                            null != d.get(c.id) && "" != d.get(c.id) && f.push({
                                table: c.table,
                                field: c.field,
                                value: d.get(c.id),
                                operator: c.operator
                            });
                        this.grid.store.muteQuery = !1;
                        return this.grid.filter.setFilter({
                            expr: {
                                and: f
                            }
                        })
                    },
                    setDefaultFilter: function(d) {
                        return this.defaultFilter = d
                    },
                    getDefaultFilter: function(d) {
                        return this.defaultFilter
                    },
                    doSearch: function(d) {
                        var c, b, a, e, f;
                        e = [];
                        c = this.quickFindHeaderDiv.ctrl;
                        if ((a = this.fields) && a.length) {
                            a = a[0].table;
                            for (b in d)
                                f = d[b],
                                c.set(b, f),
                                e.push({
                                    table: a,
                                    field: b,
                                    value: f,
                                    operator: "like"
                                });
                            this.grid.store.muteQuery = !1;
                            this.grid.filter.setFilter({
                                expr: {
                                    and: e
                                }
                            });
                            return this.grid.filter.onFilter = this.afterSearch.bind(this)
                        }
                    },
                    afterSearch: function() {
                        this.grid.filter.onFilter = null;
                        return 1 === this.grid.rowCount() ? (this.selectedRow = this.grid.row(0).item(),
                        this.execute()) : this.show()
                    },
                    show: function() {
                        var d;
                        this.inherited(arguments);
                        this.grid.store && (this.grid.store.muteQuery = !0);
                        this.wso.layoutPane(this.containerNode);
                        try {
                            return this.find()
                        } catch (c) {
                            return d = c,
                            console.error(d)
                        }
                    }
                })
            })
        },
        "ttx/dijit/_GridEffectMixin": function() {
            define(["dojo/_base/declare", "dojo/on", "dojo/dom-class"], function(q, p, n) {
                return q(null, {
                    gridDblClickEffect: function(m) {
                        return p(m, "rowDblClick", function(l) {
                            m.openedRowNode && n.remove(m.openedRowNode, "rowOpened");
                            m.openedRowNode = m.row(l.rowIndex).node();
                            return n.add(m.openedRowNode, "rowOpened")
                        })
                    },
                    gridClickEffect: function(m) {
                        return p(m, "rowClick", function(l) {
                            m.openedRowNode && n.remove(m.openedRowNode, "rowOpened");
                            m.openedRowNode = m.row(l.rowIndex).node();
                            return n.add(m.openedRowNode, "rowOpened")
                        })
                    }
                })
            })
        },
        "ttx/dijit/form/MultiSelectPopup": function() {
            define("dojo/_base/declare dojo/_base/array dojo/_base/lang dojo/dom-construct dojo/dom-style ttx/dijit/form/CheckedMultiSelect dijit/ConfirmDialog".split(" "), function(q, p, n, m, l, k, g) {
                return q([k], {
                    DEFAULT_DIALOG_DISPLAY: {
                        title: tt("\u8bf7\u9009\u62e9"),
                        "class": "containerNode",
                        style: "width: 900px;height:auto"
                    },
                    cols: 3,
                    optionsDialog: null,
                    optionsDiv: null,
                    selectionList: [],
                    constructor: function(f) {
                        var e;
                        this.inherited(arguments);
                        e = f || {};
                        this.cols = e.cols || this.cols;
                        e = n.mixin({}, this.DEFAULT_DIALOG_DISPLAY, e.dialogDisplay);
                        return this.createOptionsDialog(e)
                    },
                    postCreate: function() {
                        var f;
                        this.inherited(arguments);
                        f = this;
                        return this.defer(function() {
                            return f.dropDownButton.openDropDown = f.openDropDown.bind(f)
                        })
                    },
                    _setValueAttr: function(f) {
                        n.isArray(f) ? this.selectionList = f : n.isString(f) ? this.selectionList = f.split(",") : null == f && this.selectionList.splice(0);
                        arguments[0] = this.selectionList;
                        return this.inherited(arguments)
                    },
                    _getValueFromOpts: function() {
                        var f, e, d;
                        e = this.getOptions() || [];
                        d = [];
                        !this.multiple && e.length ? (f = p.filter(e, function(c) {
                            return c.selected
                        })[0]) && f.value ? d.push(f.value) : (e[0].selected = !0,
                        d.push(e[0].value)) : this.multiple && (d = p.map(p.filter(e, function(c) {
                            return c.selected
                        }), function(c) {
                            return c.value
                        }) || []);
                        return d.join(",")
                    },
                    openDropDown: function() {
                        var f, e, d, c, b, a;
                        a = this;
                        f = [];
                        if (!this.optionsDiv.childElementCount && this.options)
                            b = null,
                            this.options.forEach(function(c, d) {
                                var e, h, g;
                                0 === d % a.cols && (b = document.createElement("div"),
                                b.setAttribute("ttx-field-row-cols", a.cols),
                                b.classList.add("ttx-field-row"),
                                b.classList.add("ttx-field-row-" + a.cols),
                                a.optionsDiv.appendChild(b));
                                g = document.createElement("div");
                                g.setAttribute("ttx-field-span", 1);
                                g.classList.add("ttx-field");
                                g.classList.add("ttx-field-col-1");
                                b.appendChild(g);
                                e = document.createElement("input");
                                e.type = "checkbox";
                                e.name = "selection";
                                e.value = c.id;
                                e.id = a._def.field + "-" + c.id;
                                h = document.createElement("label");
                                h.setAttribute("for", a._def.field + "-" + c.id);
                                h.textContent = c.label;
                                l.set(e, "vertical-align", "middle");
                                g.appendChild(h);
                                g.appendChild(e);
                                return f.push(e)
                            });
                        else if (this.optionsDiv.childElementCount)
                            for (f = this.optionsDiv.getElementsByTagName("input"),
                            d = 0,
                            c = f.length; d < c; d++)
                                e = f[d],
                                e.checked = !1;
                        if (this.selectionList.length)
                            for (d = 0,
                            c = f.length; d < c; d++)
                                e = f[d],
                                this.selectionList.every(function(a) {
                                    e.checked = a == e.value;
                                    return !e.checked
                                });
                        return this.optionsDialog.show()
                    },
                    createOptionsDialog: function(f) {
                        var e;
                        e = this;
                        f = this.optionsDialog = new g({
                            title: f.title,
                            "class": f["class"],
                            style: f.style
                        });
                        this.optionsDiv = document.createElement("div");
                        this.optionsDiv.setAttribute("style", "position:relative;float:left;width:100%;background:transparent;padding-bottom:15px");
                        this.optionsDiv.classList.add("ttx-field-set");
                        this.optionsDialog.containerNode.appendChild(this.optionsDiv);
                        f = f.titleNode;
                        m.create("span", {
                            innerHTML: tt("\u5168\u9009"),
                            onclick: function() {
                                var d, c, b, a, h;
                                if (e.optionsDiv.childElementCount) {
                                    d = e.optionsDiv.getElementsByTagName("input");
                                    h = [];
                                    b = 0;
                                    for (a = d.length; b < a; b++)
                                        c = d[b],
                                        h.push(c.checked = !0);
                                    return h
                                }
                            }
                        }, f, "last");
                        m.create("span", {
                            innerHTML: tt("\u53cd\u9009"),
                            onclick: function() {
                                var d, c, b, a, h;
                                if (e.optionsDiv.childElementCount) {
                                    d = e.optionsDiv.getElementsByTagName("input");
                                    h = [];
                                    b = 0;
                                    for (a = d.length; b < a; b++)
                                        c = d[b],
                                        h.push(c.checked = !c.checked);
                                    return h
                                }
                            }
                        }, f, "last");
                        return this.optionsDialog.execute = function() {
                            var d, c, b, a, h;
                            d = [];
                            if (e.optionsDiv.childElementCount)
                                for (c = e.optionsDiv.getElementsByTagName("input"),
                                a = 0,
                                h = c.length; a < h; a++)
                                    b = c[a],
                                    b.checked && d.every(function(a) {
                                        return a != b.value
                                    }) && d.push(b.value);
                            return e.set("value", d)
                        }
                    }
                })
            })
        },
        "ttx/dijit/form/CheckedMultiSelect": function() {
            define(["dojo/_base/array", "dojo/_base/declare", "dojo/dom-geometry", "dojo/dom-style", "dojox/form/CheckedMultiSelect"], function(q, p, n, m, l) {
                return p([l], {
                    dropDown: !0,
                    multiple: !0,
                    _setValueAttr: function(k) {
                        var g;
                        g = k || "";
                        "string" === typeof k && (g = k.split(","));
                        if (this.multiple)
                            return q.forEach(this.options, function(f) {
                                return f.selected = !g.every(function(e) {
                                    return e != f.value
                                })
                            }),
                            this._updateSelection()
                    },
                    _getValueAttr: function() {
                        var k;
                        k = this.value;
                        if (void 0 === k)
                            return "";
                        "string" === typeof k && (k = [k]);
                        return k.join(",")
                    },
                    _updateSelection: function() {
                        var k, g;
                        this.inherited(arguments);
                        if (this.dropDown && this.dropDownButton)
                            return k = 0,
                            g = [],
                            q.forEach(this.options, function(f) {
                                if (f.selected)
                                    return k++,
                                    g.push(f.label)
                            }),
                            this.dropDownButton.set("label", g.join(", "))
                    },
                    _getValueFromOpts: function() {
                        var k, g;
                        g = this.getOptions() || [];
                        if (!this.multiple && g.length) {
                            if ((k = q.filter(g, function(f) {
                                return f.selected
                            })[0]) && k.value)
                                return k.value;
                            g[0].selected = !0;
                            return g[0].value
                        }
                        return this.multiple ? (k = q.map(q.filter(g, function(f) {
                            return f.selected
                        }), function(f) {
                            return f.value
                        }) || [],
                        k.join(",")) : ""
                    },
                    startup: function() {
                        this.inherited(arguments);
                        return this.resize()
                    },
                    resize: function() {
                        var k;
                        if (this.dropDown && this.dropDownButton)
                            return window.d = this.dropDownButton,
                            k = {
                                width: n.getMarginBox(this.domNode).w - 21 + "px",
                                "text-overflow": "ellipsis",
                                overflow: "hidden",
                                "text-align": "left"
                            },
                            m.set(this.dropDownButton.titleNode, k),
                            m.set(this.dropDownButton.containerNode, k)
                    }
                })
            })
        },
        "ttx/dijit/form/MultiSelectComboBox": function() {
            define("dojo/_base/declare dojo/dom-construct dojo/_base/Deferred dijit/_TemplatedMixin dojo/store/Memory dijit/form/ComboBox dijit/_Widget dojo/aspect ttx/dijit/form/CheckBox".split(" "), function(q, p, n, m, l, k, g, f, e) {
                return q([k], {
                    def: null,
                    storeValues: null,
                    __start: function() {
                        var d;
                        d = this;
                        d.onFocus = function() {
                            return d.focusNode.setAttribute("readOnly", !0)
                        }
                        ;
                        return f.after(d, "openDropDown", function() {
                            var c, b, a, h, f, g, k, l, m, n, q, v, A, B;
                            d.dropDown.onClick = function(a) {}
                            ;
                            n = d.dropDown.domNode.children;
                            B = d.value.split(",");
                            h = [];
                            a = p.create("div", {
                                innerHTML: "\u5168\u90e8"
                            }, n[1], "before");
                            b = new e({
                                style: "float:right"
                            });
                            a.appendChild(b.domNode);
                            c = 1;
                            b.onChange = function() {
                                var a, d, e;
                                if (b.get("value"))
                                    for (d = 0,
                                    e = h.length; d < e; d++)
                                        a = h[d],
                                        a.disabled || a.set("value", 1);
                                else if (1 === c)
                                    for (d = 0,
                                    e = h.length; d < e; d++)
                                        a = h[d],
                                        a.disabled || a.set("value", 0);
                                return c = 1
                            }
                            ;
                            g = d.dropDown.items;
                            v = [];
                            f = k = 0;
                            for (q = g.length; 0 <= q ? k < q : k > q; f = 0 <= q ? ++k : --k) {
                                a = new e({
                                    style: "float:right"
                                });
                                h.push(a);
                                n[f + 2].appendChild(a.domNode);
                                if (g[f].disabled)
                                    h[f].set("value", 0),
                                    h[f].set("disabled", !0);
                                else
                                    for (l = 0,
                                    m = B.length; l < m; l++)
                                        A = B[l],
                                        A === g[f].id && a.set("value", 1);
                                v.push(h[f].onChange = function() {
                                    var a, e, k, l;
                                    k = [];
                                    d.value && (k = d.value.split(","));
                                    if (this.get("value"))
                                        0 > k.indexOf(g[this.domNode.parentNode.getAttribute("item")].id) && k.push(g[this.domNode.parentNode.getAttribute("item")].id),
                                        d.set("value", k.join(","));
                                    else {
                                        a = [];
                                        f = e = 0;
                                        for (l = k.length; 0 <= l ? e < l : e > l; f = 0 <= l ? ++e : --e)
                                            k[f] !== g[this.domNode.parentNode.getAttribute("item")].id && a.push(k[f]);
                                        d.set("value", a.join(","))
                                    }
                                    k = l = 0;
                                    for (e = h.length; k < e; k++)
                                        if (a = h[k],
                                        a.get("value") || a.disabled)
                                            l += 1;
                                    if (l === h.length)
                                        return b.set("value", 1);
                                    c = 0;
                                    return b.set("value", 0)
                                }
                                )
                            }
                            return v
                        })
                    },
                    _getValueAttr: function(d) {
                        return this.value
                    },
                    _setValueAttr: function(d) {
                        var c, b, a, e, f, g, k, l, m;
                        if (!this.storeValues)
                            return d;
                        d || (d = "");
                        e = [];
                        m = d.split(",");
                        c = b = 0;
                        for (k = m.length; 0 <= k ? b < k : b > k; c = 0 <= k ? ++b : --b) {
                            l = this.storeValues;
                            a = 0;
                            for (f = l.length; a < f; a++)
                                if (g = l[a],
                                m[c] === g.id) {
                                    e.push(g.label);
                                    break
                                }
                            try {
                                m[c] && this.store.add({
                                    id: m[c],
                                    label: m[c],
                                    disabled: !0
                                })
                            } catch (z) {
                                11
                            }
                        }
                        this._set("value", d);
                        return this.textbox.value = e.join(",")
                    }
                })
            })
        },
        "ttx/dijit/form/DateTextBox": function() {
            define(["dojo/_base/declare", "dojo/on", "dojo/date/locale", "dijit/form/DateTextBox"], function(q, p, n, m) {
                return q([m], {
                    baseClass: "ttxDateTextBox dijitTextBox dijitComboBox dijitDateTextBox",
                    __reg: /([\d]{4}(((0[13578]|1[02])((0[1-9])|([12][0-9])|(3[01])))|(((0[469])|11)((0[1-9])|([12][1-9])|30))|(02((0[1-9])|(1[0-9])|(2[1-8])))))|((((([02468][048])|([13579][26]))00)|([0-9]{2}(([02468][048])|([13579][26]))))(((0[13578]|1[02])((0[1-9])|([12][0-9])|(3[01])))|(((0[469])|11)((0[1-9])|([12][1-9])|30))|(02((0[1-9])|(1[0-9])|(2[1-9])))))/,
                    __regWithSlant: /([\d]{4}([\/]{1})(((0[13578]|1[02])([\/]{1})((0[1-9])|([12][0-9])|(3[01])))|(((0[469])|11)([\/]{1})((0[1-9])|([12][1-9])|30))|(02([\/]{1})((0[1-9])|(1[0-9])|(2[1-8])))))|((((([02468][048])|([13579][26]))00)|([0-9]{2}(([02468][048])|([13579][26]))))([\/]{1})(((0[13578]|1[02])([\/]{1})((0[1-9])|([12][0-9])|(3[01])))|(((0[469])|11)([\/]{1})((0[1-9])|([12][1-9])|30))|(02([\/]{1})((0[1-9])|(1[0-9])|(2[1-9])))))/,
                    __regWithSortLine: /([\d]{4}([-]{1})(((0[13578]|1[02])([-]{1})((0[1-9])|([12][0-9])|(3[01])))|(((0[469])|11)([-]{1})((0[1-9])|([12][1-9])|30))|(02([-]{1})((0[1-9])|(1[0-9])|(2[1-8])))))|((((([02468][048])|([13579][26]))00)|([0-9]{2}(([02468][048])|([13579][26]))))([-]{1})(((0[13578]|1[02])([-]{1})((0[1-9])|([12][0-9])|(3[01])))|(((0[469])|11)([-]{1})((0[1-9])|([12][1-9])|30))|(02([-]{1})((0[1-9])|(1[0-9])|(2[1-9])))))/,
                    constraints: {
                        selector: "date",
                        datePattern: "yyyy-MM-dd",
                        locale: "en-us"
                    },
                    ttxFormat: {
                        selector: "date",
                        datePattern: "yyyy-MM-dd",
                        locale: "en-us"
                    },
                    simpleFormat: {
                        selector: "date",
                        datePattern: "yyyyMMdd",
                        locale: "en-us"
                    },
                    slantFormat: {
                        selector: "date",
                        datePattern: "yyyy/MM/dd",
                        locale: "en-us"
                    },
                    sortLineFormat: {
                        selector: "date",
                        datePattern: "yyyy-MM-dd",
                        locale: "en-us"
                    },
                    serialize: function(l, k) {
                        return n.format(l, this.ttxFormat)
                    },
                    _getValueAttr: function() {
                        return this.value && null !== this.textbox.value && "" !== this.textbox.value && null !== this.value && void 0 !== this.value && "Invalid Date" !== this.value.toString() ? n.format(this.value, this.ttxFormat) : null
                    },
                    _setValueAttr: function(l, k, g) {
                        if (l) {
                            if (l instanceof Date && this.inherited(arguments),
                            l && this.__reg.test(l) && this.set("value", n.parse(l, this.simpleFormat)),
                            l && this.__regWithSlant.test(l) && this.set("value", n.parse(l, this.slantFormat)),
                            l && this.__regWithSortLine.test(l))
                                return this.set("value", n.parse(l, this.sortLineFormat))
                        } else {
                            if (null === l || "" === l)
                                return this.textbox.value = null,
                                this.set("value", new Date(""));
                            this.textbox.value && this.__reg.test(this.textbox.value) && this.set("value", n.parse(this.textbox.value, this.simpleFormat));
                            this.textbox.value && this.__regWithSlant.test(this.textbox.value) && this.set("value", n.parse(this.textbox.value, this.slantFormat));
                            if (this.textbox.value && this.__regWithSortLine.test(this.textbox.value))
                                return this.set("value", n.parse(this.textbox.value, this.sortLineFormat))
                        }
                    }
                })
            })
        },
        "ttx/dijit/form/DateTimeTextBox": function() {
            define("dojo/_base/declare dojo/on dojo/date/locale dijit/Calendar dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin dijit/form/DateTextBox dijit/form/TimeTextBox dojo/text!./templates/DateTimeTextBox.html".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                return q([l, k, g], {
                    templateString: d,
                    dateFormat: {
                        selector: "date",
                        datePattern: "yyyy-MM-dd"
                    },
                    timeFormat: {
                        selector: "time",
                        timePattern: "HH:mm:ss"
                    },
                    datetimeFormat: {
                        selector: "date",
                        datePattern: "yyyy-MM-dd hh:mm:ss"
                    },
                    datetimeFormat2: {
                        selector: "date",
                        datePattern: "yyyy-MM-ddThh:mm:ss"
                    },
                    ttxFormat: {
                        dateTimePattern: "yyyy-MM-dd HH:mm:ss"
                    },
                    baseClass: "ttxDateTimeTextBox",
                    dateBox: null,
                    timeBox: null,
                    defaultDate: null,
                    defaultTime: null,
                    value: null,
                    postCreate: function() {
                        var c, b;
                        this.inherited(arguments);
                        b = this;
                        this.dateBox.onChange = function(a) {
                            return b.set("value", b.__getValue())
                        }
                        ;
                        this.timeBox.onChange = function(a) {
                            return b.set("value", b.__getValue())
                        }
                        ;
                        if (b._def.args) {
                            b.dateBox.required = b._def.args.required || b.dateBox.required;
                            if (b._def.args.datePattern) {
                                c = b._def.args.datePattern;
                                try {
                                    n.format(new Date, {
                                        selector: "date",
                                        datePattern: c
                                    }),
                                    b.dateFormat.datePattern = c,
                                    b.dateBox.constraints.datePattern = c
                                } catch (a) {}
                            }
                            if (b._def.args.min && "string" === typeof b._def.args.min)
                                try {
                                    b.dateBox.constraints.min = n.parse(b._def.args.min, {
                                        selector: "date",
                                        datePattern: b.dateFormat.datePattern
                                    })
                                } catch (a) {}
                            if (b._def.args.max && "string" === typeof b._def.args.max)
                                try {
                                    return b.dateBox.constraints.min = n.parse(b._def.args.max, {
                                        selector: "date",
                                        datePattern: b.dateFormat.datePattern
                                    })
                                } catch (a) {
                                    return 0
                                }
                        }
                    },
                    __getValue: function() {
                        var c, b;
                        c = null;
                        this.dateBox && this.dateBox.get("value") && (c = this.dateBox.get("value"));
                        b = new Date;
                        this.timeBox && this.timeBox.get("value") && (b = this.timeBox.get("value"));
                        "number" === typeof c && c && (c = new Date(c));
                        "number" === typeof b && b && (b = new Date(b));
                        return null === c ? null : n.format(c, this.dateFormat) + " " + n.format(b, this.timeFormat)
                    },
                    _getValueAttr: function() {
                        this.inherited(arguments);
                        return this.__getValue()
                    },
                    _setValueAttr: function(c) {
                        this.inherited(arguments);
                        "number" === typeof c ? c = new Date(c) : "string" === typeof c ? c = n.parse(c, {
                            timePattern: this.timeFormat.timePattern,
                            datePattern: this.dateFormat.datePattern
                        }) : c instanceof Date || c && "object" === typeof c && (c = new Date(c.year,c.monthValue - 1,c.dayOfMonth,c.hour,c.minute,c.second));
                        this.dateBox.set("value", c);
                        this.timeBox.set("value", c);
                        return this._set("value", this.__getValue())
                    },
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        return this.value = this.__getValue()
                    },
                    _setDisabledAttr: function(c) {
                        this.disabled = c;
                        this.dateBox.set("disabled", c);
                        return this.timeBox.set("disabled", c)
                    }
                })
            })
        },
        "ttx/dijit/form/CascadeSelect": function() {
            define("dojo/sniff dojo/_base/array dojo/_base/declare dojo/dom-geometry dojo/dom-construct dojo/dom-style dojo/dom-class dijit/TooltipDialog dijit/form/Select dijit/layout/ContentPane ttx/dijit/layout/TabContainer".split(" "), function(q, p, n, m, l, k, g, f, e, d, c) {
                n([], {});
                return n([e], {
                    required: !1,
                    readOnly: !0,
                    hasDownArrow: !0,
                    tabsDef: {},
                    splitBy: "",
                    valueList: [],
                    tabs: [],
                    _loadChildren: function() {},
                    _getValueAttr: function() {
                        var b;
                        b = this.value;
                        if (void 0 === b)
                            return "";
                        "string" === typeof b && (b = [b]);
                        return b.join(",")
                    },
                    _fillContent: function() {
                        var b;
                        this.inherited(arguments);
                        this.options.length && !this.value && this.srcNodeRef && (b = this.srcNodeRef.selectedIndex || 0,
                        this._set("value", this.options[0 <= b ? b : 0].value));
                        this.dropDown = this.setTabContainer();
                        g.add(this.dropDown.domNode, this.baseClass.replace(/\s+|$/g, "Menu "))
                    },
                    setTabContainer: function() {
                        var b, a, d, e, f, g, k, l;
                        g = new c({
                            region: "center",
                            splitter: !0,
                            doLayout: !0
                        });
                        f = {};
                        k = [];
                        e = this.valueList;
                        b = 0;
                        for (d = e.length; b < d; b++)
                            l = e[b],
                            (a = f[l[this.splitBy]]) || (a = 0 > k.length - 1 ? 0 : k.length - 1),
                            k[a] || (k[a] = []),
                            k[a].push(l),
                            1,
                            1,
                            1;
                        g.startup();
                        return g
                    }
                })
            })
        },
        "ttx/dijit/form/AreaSelect": function() {
            define("dojo/on dojo/_base/array dojo/_base/declare dojo/dom-geometry dojo/dom-construct dojo/dom-style dojo/dom-class dojo/promise/all dijit/layout/ContentPane dojox/mvc/at ttx/dijit/layout/TabContainer ./CascadeSelect".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                var a;
                a = n("ttx.dijit.form.AreaContentPane", [e], {
                    baseClass: "areaContentPane",
                    splitter: !1,
                    region: "center",
                    style: "padding 0;border 0;margin:0;",
                    level: 0,
                    title: "\u7701",
                    _def: {
                        id: "code",
                        tableModel: "area:parent \x3d 1",
                        title: tt("\u7701"),
                        cascade: "parent"
                    },
                    initValue: !1,
                    postCreate: function() {
                        this.inherited(arguments);
                        if (this.initValue)
                            return this.setAreaContainer()
                    },
                    _containerDom: null,
                    onFieldClick: function() {},
                    cleanContainerDom: function() {
                        l.destroy(this._containerDom);
                        return this._containerDom = l.create("div", {
                            "class": "containerDom"
                        }, this.containerNode)
                    },
                    cleanContainerClass: function() {
                        var a, b, c, d, e;
                        if (this._containerDom) {
                            d = this._containerDom.children;
                            e = [];
                            b = 0;
                            for (c = d.length; b < c; b++)
                                a = d[b],
                                e.push(a.className = "areaSelect");
                            return e
                        }
                    },
                    setAreaContainer: function(a) {
                        var b, c, d, e;
                        b = this;
                        d = b._def.tableModel.split(":");
                        e = d[0];
                        c = {};
                        1 < d.length && (c = {
                            filter: d[1]
                        });
                        return app.dataManager.getFilteringSelectData(e, {
                            headers: c,
                            cache: !0
                        }).then(function(c) {
                            var d, e, h, f;
                            b.cleanContainerDom();
                            if (c) {
                                f = [];
                                e = 0;
                                for (h = c.length; e < h; e++)
                                    d = c[e],
                                    f.push(l.create("div", {
                                        "data-value": d.id,
                                        "data-label": d.label,
                                        innerHTML: d.label,
                                        onclick: function(a) {
                                            b.cleanContainerClass();
                                            b.onFieldClick([b.level, this.getAttribute("data-value"), this.getAttribute("data-label")]);
                                            a.preventDefault();
                                            return a.stopPropagation()
                                        },
                                        "class": d.id === a ? "areaSelect current" : "areaSelect"
                                    }, b._containerDom));
                                return f
                            }
                        })
                    }
                });
                return n([b], {
                    value: [],
                    displayValue: [],
                    tabs: [],
                    cascadeFields: [],
                    cascadeCtrl: {},
                    cascadeFieldMap: {},
                    parentField: null,
                    postCreate: function() {
                        var a, b, c, e, f, g, k;
                        this.inherited(arguments);
                        k = this;
                        g = k.cascadeFields;
                        b = function(a, b) {
                            return k["_set____" + b + "Attr"] = function(b) {
                                if (b)
                                    return k._forceSetValueWithIndex(b, a)
                            }
                        }
                        ;
                        c = e = 0;
                        for (f = g.length; e < f; c = ++e)
                            a = g[c],
                            k.set("____" + a, d(k.cascadeCtrl, a)),
                            k.displayValue.push(""),
                            k.value.push(""),
                            b(c, a);
                        if (k.parentField)
                            return k.set("parent", d(k.cascadeCtrl, k.parentField)),
                            k.watch("parent", function() {
                                if (k.parent)
                                    return k.setParent()
                            })
                    },
                    _forceSetValueWithIndex: function(a, b) {
                        var c;
                        c = this;
                        return app.dataManager.get("/rest/cbt/area/" + a, {
                            cache: !0
                        }).then(function(d) {
                            var e;
                            c.displayValue[b] = d.name || d.code;
                            c.value[b] = a;
                            c._setDisplay(c.displayValue.join(" / "));
                            e = c.tabs[b];
                            e._def.tableModel = "area:parent \x3d " + d.parent;
                            return e.setAreaContainer(a)
                        })
                    },
                    _setValueAttr: function(a) {
                        var b, c, d, e, h, g;
                        g = this;
                        if (a)
                            if ("string" === typeof a)
                                e = a.split(","),
                                f(e.map(function(a) {
                                    return app.dataManager.get("/rest/cbt/area/" + a, {
                                        cache: !0
                                    })
                                })).then(function(a) {
                                    var b, c, d, e, h;
                                    h = [];
                                    b = c = 0;
                                    for (d = a.length; c < d; b = ++c)
                                        e = a[b],
                                        h.push(g.set("value", [b, e.code, e.name || e.code]));
                                    return h
                                });
                            else {
                                d = a[0];
                                c = a[1];
                                b = a[2];
                                h = d + 1;
                                if (d || 0 === d) {
                                    e = !1;
                                    this.value[d] === c && (e = !0,
                                    b = c = "");
                                    if (h < a.length) {
                                        for (a = a.length; a-- > h; )
                                            g.cascadeCtrl.set(g.cascadeFields[a], "");
                                        g.value.splice(h);
                                        g.displayValue.splice(h)
                                    }
                                    g.value[d] = c;
                                    g.cascadeCtrl.set(g.cascadeFields[d], c);
                                    g.displayValue[d] = b;
                                    g._setDisplay(g.displayValue.join(" / "));
                                    if (d + 1 < g.tabs.length) {
                                        b = g.tabs[d + 1];
                                        b._def.tableModel = "area:parent \x3d " + c;
                                        b.setAreaContainer();
                                        c = b = h;
                                        for (d = g.tabs.length; h <= d ? b < d : b > d; c = h <= d ? ++b : --b)
                                            g.tabs[c].cleanContainerDom();
                                        if (!e)
                                            g.dropDown.tablist.onButtonClick(g.tabs[h])
                                    } else
                                        g._onBlur();
                                    return g.value
                                }
                                g.value = [];
                                g.displayValue = []
                            }
                        else {
                            g.value = [];
                            g.displayValue = [];
                            g._setDisplay([]);
                            c = e = 0;
                            for (h = g.tabs.length; 0 <= h ? e < h : e > h; c = 0 <= h ? ++e : --e)
                                g.tabs[c].cleanContainerDom();
                            g.dropDown.selectChild(g.tabs[0])
                        }
                    },
                    setParent: function() {
                        var a;
                        this.set("value", null);
                        a = this.tabs[0];
                        a._def.tableModel = "area:parent \x3d " + this.parent;
                        return a.setAreaContainer()
                    },
                    isValid: function() {
                        var a, b, c, d, e;
                        b = !0;
                        e = this.cascadeFields;
                        c = 0;
                        for (d = e.length; c < d; c++)
                            a = e[c],
                            b *= !!this.cascadeFieldMap[a] && this.cascadeFieldMap[a].validate();
                        return !!b
                    },
                    setTabContainer: function() {
                        var b, d, e, f, k;
                        f = this;
                        f.__tc = k = new c({
                            region: "center",
                            splitter: !0,
                            doLayout: !0,
                            style: "padding 0;border 0;margin:0;height:200px;width:400px;"
                        });
                        g.add(k.domNode, "cascadeTabContainer");
                        b = new a({
                            initValue: !0,
                            _def: {
                                tableModel: "area:parent \x3d 1"
                            },
                            onFieldClick: function(a) {
                                return f._setValueAttr(a)
                            }
                        });
                        d = new a({
                            title: tt("\u5e02"),
                            level: 1,
                            onFieldClick: function(a) {
                                return f._setValueAttr(a)
                            }
                        });
                        e = new a({
                            title: tt("\u533a"),
                            level: 2,
                            onFieldClick: function(a) {
                                return f._setValueAttr(a)
                            }
                        });
                        k.addChild(b);
                        k.addChild(d);
                        k.addChild(e);
                        f.tabs = [b, d, e];
                        return k
                    }
                })
            })
        },
        "ttx/dojox/form/Uploader": function() {
            define("dojo/_base/declare dojo/_base/array dojo/dom-construct dojo/dom-attr dojo/dom-style dojox/form/Uploader".split(" "), function(q, p, n, m, l, k) {
                return q([k], {
                    accept: "",
                    getFileList: function() {
                        var g, f, e;
                        g = !1;
                        this.accept && 0 < this.accept.length && (g = this.accept.split(","));
                        f = [];
                        e = !1;
                        this.supports("multiple") ? p.forEach(this._files, function(d, c) {
                            var b;
                            b = d.name.substring(d.name.lastIndexOf("."));
                            g && 0 > g.indexOf(b) ? e = !0 : f.push({
                                index: c,
                                name: d.name,
                                size: d.size,
                                type: d.type
                            })
                        }, this) : p.forEach(this._inputs, function(d, c) {
                            var b;
                            b = d.value.substring(d.value.lastIndexOf("."));
                            g && 0 > g.indexOf(b) || d.value && f.push({
                                index: c,
                                name: d.value.substring(d.value.lastIndexOf("\\") + 1),
                                size: 0,
                                type: d.value.substring(d.value.lastIndexOf(".") + 1)
                            })
                        }, this);
                        e && (f = []);
                        return f
                    },
                    upload: function(g) {
                        var f;
                        (f = this.getFileList()) && 0 !== f.length && (g = g || {},
                        g.uploadType = this.uploadType,
                        this.inherited(arguments))
                    },
                    _createInput: function() {
                        var g;
                        this._inputs.length && (l.set(this.inputNode, {
                            top: "500px"
                        }),
                        this._disconnectButton(),
                        this._nameIndex++);
                        g = this._getFileFieldName();
                        this.focusNode = this.inputNode = n.create("input", {
                            type: "file",
                            name: g,
                            "aria-labelledby": this.id + "_label"
                        }, this.domNode, "first");
                        this.supports("multiple") && this.multiple && m.set(this.inputNode, "multiple", !0);
                        this.accept && m.set(this.inputNode, "accept", this.accept);
                        this._inputs.push(this.inputNode);
                        l.set(this.inputNode, {
                            position: "absolute",
                            fontSize: this.inputNodeFontSize + "em",
                            top: "-3px",
                            right: "-3px",
                            opacity: 0
                        });
                        this._connectButton()
                    }
                })
            })
        },
        "ttx/gridx/allModules": function() {
            define("gridx/modules/Focus gridx/modules/VScroller gridx/modules/ColumnResizer gridx/modules/VirtualVScroller gridx/modules/SingleSort gridx/modules/NestedSort gridx/modules/Sort gridx/modules/ColumnLock gridx/modules/select/Row gridx/modules/select/Column gridx/modules/select/Cell gridx/modules/extendedSelect/Row gridx/modules/extendedSelect/Column gridx/modules/extendedSelect/Cell gridx/modules/move/Row gridx/modules/move/Column gridx/modules/dnd/Row gridx/modules/dnd/Column gridx/modules/Pagination gridx/modules/pagination/PaginationBar gridx/modules/pagination/PaginationBarDD ./modules/Filter ./modules/HeaderFilter gridx/modules/filter/FilterBar gridx/modules/filter/QuickFilter gridx/modules/CellWidget gridx/modules/Edit gridx/modules/RowHeader gridx/modules/IndirectSelect gridx/modules/IndirectSelectColumn gridx/modules/Persist gridx/modules/Menu gridx/modules/Dod gridx/modules/Tree gridx/modules/RowLock gridx/modules/ToolBar gridx/modules/SummaryBar gridx/modules/Bar gridx/modules/NavigableCell gridx/modules/TouchScroll gridx/modules/TouchVScroller gridx/modules/HiddenColumns gridx/modules/GroupHeader gridx/modules/PagedBody gridx/modules/AutoPagedBody gridx/modules/HeaderMenu gridx/modules/HeaderRegions gridx/modules/SlantedHeader gridx/modules/ExpandableColumn gridx/modules/Layer gridx/modules/StructureSwitch".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A, B, C, E, I, H, F, G, J, O, D, M, L, K, N, P, R, S, U, ca, da, aa, V, ea, T, X, fa, W, ga) {
                return {
                    Focus: "gridx/modules/Focus",
                    VScroller: "gridx/modules/VScroller",
                    ColumnResizer: "gridx/modules/ColumnResizer",
                    VirtualVScroller: "gridx/modules/VirtualVScroller",
                    SingleSort: "gridx/modules/SingleSort",
                    NestedSort: "gridx/modules/NestedSort",
                    Sort: "gridx/modules/Sort",
                    ColumnLock: "gridx/modules/ColumnLock",
                    SelectRow: "gridx/modules/select/Row",
                    SelectColumn: "gridx/modules/select/Column",
                    SelectCell: "gridx/modules/select/Cell",
                    ExtendedSelectRow: "gridx/modules/extendedSelect/Row",
                    ExtendedSelectColumn: "gridx/modules/extendedSelect/Column",
                    ExtendedSelectCell: "gridx/modules/extendedSelect/Cell",
                    MoveRow: "gridx/modules/move/Row",
                    MoveColumn: "gridx/modules/move/Column",
                    DndRow: "gridx/modules/dnd/Row",
                    DndColumn: "gridx/modules/dnd/Column",
                    Pagination: "gridx/modules/Pagination",
                    PaginationBar: "gridx/modules/pagination/PaginationBar",
                    PaginationBarDD: "gridx/modules/pagination/PaginationBarDD",
                    Filter: "ttx/gridx/modules/Filter",
                    HeaderFilter: "ttx/gridx/modules/HeaderFilter",
                    FilterBar: "gridx/modules/filter/FilterBar",
                    QuickFilter: "gridx/modules/filter/QuickFilter",
                    CellWidget: "gridx/modules/CellWidget",
                    Edit: "gridx/modules/Edit",
                    RowHeader: "gridx/modules/RowHeader",
                    IndirectSelect: "gridx/modules/IndirectSelect",
                    IndirectSelectColumn: "gridx/modules/IndirectSelectColumn",
                    Persist: "gridx/modules/Persist",
                    Menu: "gridx/modules/Menu",
                    Dod: "gridx/modules/Dod",
                    Tree: "gridx/modules/Tree",
                    RowLock: "gridx/modules/RowLock",
                    ToolBar: "gridx/modules/ToolBar",
                    SummaryBar: "gridx/modules/SummaryBar",
                    Bar: "gridx/modules/Bar",
                    NavigableCell: "gridx/modules/NavigableCell",
                    TouchScroll: "gridx/modules/TouchScroll",
                    TouchVScroller: "gridx/modules/TouchVScroller",
                    HiddenColumns: "gridx/modules/HiddenColumns",
                    GroupHeader: "gridx/modules/GroupHeader",
                    PagedBody: "gridx/modules/PagedBody",
                    AutoPagedBody: "gridx/modules/AutoPagedBody",
                    HeaderMenu: "gridx/modules/HeaderMenu",
                    HeaderRegions: "gridx/modules/HeaderRegions",
                    SlantedHeader: "gridx/modules/SlantedHeader",
                    ExpandableColumn: "gridx/modules/ExpandableColumn",
                    Layer: "gridx/modules/Layer",
                    StructureSwitch: "gridx/modules/StructureSwitch"
                }
            })
        },
        "ttx/gridx/modules/Filter": function() {
            define(["dojo/_base/declare", "gridx/modules/Filter"], function(q, p) {
                return q([p], {
                    outerFields: [],
                    innerFields: [],
                    setFilter: function(n, m) {
                        var l;
                        l = this;
                        return n !== this._checker ? (this._checker = n,
                        this.refresh(m).then(function() {
                            return l.onFilter()
                        })) : null
                    },
                    setOuter: function(n) {
                        return this.outerFields = n
                    },
                    setOuterAndApply: function(n) {
                        this.setOuter(n);
                        return this.applyFilter()
                    },
                    setInner: function(n) {
                        return this.innerFields = n
                    },
                    setInnerAndApply: function(n) {
                        this.setInner(n);
                        return this.applyFilter()
                    },
                    applyFilter: function() {
                        return this.setFilter({
                            expr: {
                                and: this.outerFields.concat(this.innerFields)
                            }
                        })
                    }
                })
            })
        },
        "ttx/gridx/modules/HeaderFilter": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/on dojo/dom-construct dojo/dom-geometry dojo/dom-style dojo/dom-class dojo/query dojo/keys dijit/form/Form dijit/form/Button dijit/form/Select gridx/modules/Header ttx/dijit/builder/TtxField ttx/dijit/form/TooltipTextBox ttx/util/ExpressionEvaluator".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u) {
                var x, y;
                y = function(a) {
                    var b, c, d, e, h, f;
                    h = [];
                    e = a.headerFilter.fields;
                    for (d in e)
                        b = e[d],
                        c = b.get("operator"),
                        f = b.get("value"),
                        b = b._def,
                        c && (f || 0 === f) && (c = {
                            table: b.table,
                            field: b.field,
                            value: f,
                            operator: c,
                            dataType: b.dataType
                        },
                        h.push(c));
                    a.store.muteQuery = !1;
                    return a.filter.setInnerAndApply(h)
                }
                ;
                x = q([r, t], {
                    valueWidgetDef: {
                        required: !0,
                        type: "string"
                    },
                    fillConfirmToolTip: function() {
                        var b, d, e, h, g, k;
                        h = this;
                        d = h.grid;
                        this.app = window.app;
                        g = this.tooltip;
                        g.cancelButton.set("label", "\u6e05\u7a7a");
                        b = new c;
                        e = new a({
                            label: "\u64cd\u4f5c\u7b26",
                            options: [{
                                label: "\x3d",
                                value: " \x3d ",
                                selected: !0
                            }, {
                                label: "\x3c\x3e",
                                value: "\x3c\x3e"
                            }, {
                                label: "\x3e",
                                value: "\x3e"
                            }, {
                                label: "\x3e\x3d",
                                value: "\x3e\x3d"
                            }, {
                                label: "\x3c",
                                value: "\x3c"
                            }, {
                                label: "\x3c\x3d",
                                value: "\x3c\x3d"
                            }, {
                                label: "LIKE",
                                value: "LIKE"
                            }, {
                                label: "NOT LIKE",
                                value: "NOT LIKE"
                            }, {
                                label: "\u4e3a\u7a7a",
                                value: "exp:is_empty"
                            }, {
                                label: "\u4e0d\u4e3a\u7a7a",
                                value: "exp:is_not_empty"
                            }]
                        });
                        this.valueWidget = k = this.createTtxField(this.valueWidgetDef);
                        m(e, "change", function() {
                            var a, b;
                            b = this.get("value");
                            a = !1;
                            b.startsWith("exp:") ? (a = !0,
                            k.set("value", "\u3000")) : "\u3000" === k.get("value") && k.set("value", "");
                            return k.set("disabled", a)
                        });
                        b.domNode.appendChild(e.domNode);
                        b.domNode.appendChild(k.domNode);
                        g.addChild(b);
                        f.add(g.okButton.domNode, "alt-primary");
                        g._onSubmit = function(a) {
                            if (!b.validate())
                                return !1;
                            h.onSelect({
                                displayedValue: e.get("displayedValue") + "  " + k.get("displayedValue"),
                                operator: e.get("value"),
                                value: k.get("value")
                            });
                            h._opened && h.closeDropDown(!0);
                            return y(d)
                        }
                        ;
                        return g.onCancel = function(a) {
                            return function(a) {
                                h.set("value", "");
                                h.set("operator", "");
                                h.set("displayedValue", "");
                                h.valueWidget.set("value", "");
                                return y(d)
                            }
                        }(this)
                    }
                });
                return q([h, u], {
                    name: "headerFilter",
                    baseClass: "headerFilter",
                    forced: ["header"],
                    required: ["vLayout"],
                    show: !1,
                    storeDataMap: {},
                    constructor: function() {
                        var a;
                        a = this.domNode = l.create("div", {
                            "class": "gridxHeaderRow " + this.baseClass,
                            role: "presentation"
                        });
                        this.innerNode = l.create("div", {
                            "class": "gridxHeaderRowInner " + this.baseClass,
                            role: "row"
                        });
                        return this.grid._connectEvents(a, "_onEvent", this)
                    },
                    preload: function(a) {
                        var b, c, d;
                        d = this;
                        if (d.arg("enabled"))
                            return c = d.grid,
                            this.inherited(arguments),
                            c.columnResizer && d.aspect(c.columnResizer, "setWidth", "_setWidth"),
                            c.move && c.move.column && d.aspect(c.move.column, "move", "refresh"),
                            d.aspect(c.columnWidth, "_onSetColumns", "refresh"),
                            d = this,
                            c = d.grid,
                            b = [],
                            c._columns.forEach(function(a) {
                                var c, e;
                                if (a.headerFilter && a.headerFilter.valueWidget && a.headerFilter.valueWidget.tableModel)
                                    return e = {
                                        id: a.id
                                    },
                                    c = a.headerFilter.valueWidget.tableModel,
                                    c = c.split(":"),
                                    e.tableCode = c[0],
                                    1 < c.length && (e.filter = d.evaluateExpression(c[1])),
                                    a.headerFilter.valueWidget.args && a.headerFilter.valueWidget.args.orderBy && (e.order = a.headerFilter.valueWidget.args.orderBy),
                                    b.push(e)
                            }),
                            app.dataManager.post("/rest/cbt/filteringSelect", b).then(function(a) {
                                return function(a) {
                                    d.storeDataMap = a;
                                    d.refresh();
                                    d.aspect(c, "startup", "refresh");
                                    return d.aspect(c, "resize", "refresh")
                                }
                            }(this))
                    },
                    _setWidth: function(a, b) {
                        var c;
                        c = this.grid;
                        if (c._columnsById[a] && ("1" === a && (b = k.getMarginBox(c.rowHeader.bodyNode).w + parseInt(b, 10) + "px"),
                        c = {
                            width: b,
                            "min-width": b,
                            "max-width": b
                        },
                        g.set(this.getFooterNode(a), c),
                        this.fields[a]))
                            return g.set(this.fields[a].domNode, c)
                    },
                    getFooterNode: function(a) {
                        return e("[colid\x3d'" + this.grid._escapeId(a) + "']", this.domNode)[0]
                    },
                    refresh: function() {
                        var a, b, c, d;
                        d = {};
                        b = this.fields;
                        for (a in b)
                            c = b[a],
                            d[a] = c.get("value");
                        this._build();
                        for (a in d)
                            c = d[a],
                            this.fields[a] && this.fields[a].set("value", c);
                        this._onHScroll(this._scrollLeft);
                        this.grid.vLayout.reLayout();
                        return this.onRender()
                    },
                    _configMoveColumn: function() {
                        var a, b, c, d, e, h, f;
                        c = this.grid;
                        if (c.move && c.move.column) {
                            a = c.move.column.arg("constraints", {});
                            for (f in this._groupsById)
                                if (h = this._groupsById[f],
                                b = h.start + h.colCount - 1,
                                "number" !== typeof a[h.start] || b < a[h.start])
                                    a[h.start] = b;
                            d = -1;
                            e = 0;
                            n.forEach(c._columns, function(b, c) {
                                b.groupId || (c !== d + 1 && (e = c),
                                d = c,
                                a[e] = c)
                            })
                        }
                    },
                    _build: function() {
                        var a, c, d, e;
                        d = this;
                        c = d.grid;
                        d._configMoveColumn();
                        d.fields = {};
                        d.innerTable && l.destroy(d.innerTable);
                        d.innerTable = l.create("table", {}, d.innerNode);
                        e = d.tr = l.create("tr", {}, d.innerTable);
                        c._columns.forEach(function(a) {
                            var h, f;
                            a._domId = (c.id + "-" + a.id).replace(/\s+/, "");
                            if ("1" === a.id)
                                return h = 20 + parseInt(a.width, 10) + "px",
                                f = l.create("td", {
                                    "class": "gridxCell gridxFilterCell",
                                    colid: a.id,
                                    style: {
                                        width: h,
                                        "min-width": h
                                    }
                                }, e),
                                a = l.create("div", {}, f),
                                a = new b({
                                    label: tt("\u6e05\u7a7a")
                                },a),
                                a.onClick = function() {
                                    var a, b, e;
                                    b = d.fields;
                                    for (a in b)
                                        e = b[a],
                                        e.set("value", ""),
                                        e.set("operator", "");
                                    d.refresh();
                                    return y(c)
                                }
                                ;
                            f = l.create("td", {
                                "class": "gridxCell gridxFilterCell",
                                colid: a.id,
                                style: {
                                    width: a.width,
                                    "min-width": a.width
                                }
                            }, e);
                            h = p.mixin({
                                field: a.field
                            }, a.headerFilter);
                            f = l.create("div", {}, f);
                            h.valueWidget ? h.valueWidget.required = !0 : h.valueWidget = {
                                required: !0,
                                type: "string"
                            };
                            h = p.mixin(h, a);
                            h.valueWidget.data = d.storeDataMap[a.id];
                            return d.fields[a.id] = new x({
                                style: {
                                    width: a.width
                                },
                                _def: h,
                                disabled: h.disabled,
                                valueWidgetDef: h.valueWidget,
                                grid: c
                            },f)
                        });
                        d.expandWrapper && l.destroy(d.expandWrapper);
                        a = d.expandWrapper = l.create("div", {
                            "class": "expandWrapper"
                        }, d.domNode);
                        l.create("span", {
                            "class": "flat-drop-down"
                        }, a);
                        m(a, "click", function() {
                            d.showFilter(!d.show);
                            if (d.show)
                                return d._onHScroll(d._scrollLeft)
                        });
                        return d.showFilter(d.show)
                    },
                    showFilter: function(a) {
                        a ? f.remove(this.innerTable, "displayNone") : f.add(this.innerTable, "displayNone");
                        this.show = a;
                        return this.onFilterShow()
                    },
                    onFilterShow: function() {},
                    onFieldsAct: function(a) {}
                })
            })
        },
        "ttx/dijit/builder/TtxField": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/Deferred dojo/on dojo/store/Memory dijit/form/Button dijit/form/ToggleButton ttx/dijit/form/CheckBox ttx/dijit/form/Label ttx/dijit/form/TristateCheckBox ttx/dijit/form/QuickFindInput ttx/dijit/form/MultiSelectPopup ttx/dijit/form/MultiSelectComboBox dijit/form/ValidationTextBox dijit/form/SimpleTextarea dijit/form/RadioButton ttx/dijit/form/DateTextBox ttx/dijit/form/DateTimeTextBox ttx/dijit/form/CheckedMultiSelect ttx/dijit/form/CascadeSelect ttx/dijit/form/AreaSelect ttx/dijit/form/SensitiveTextBox dijit/form/NumberTextBox dijit/form/NumberSpinner dijit/form/Select dijit/form/ComboBox dijit/form/FilteringSelect dojox/mvc/at ttx/dijit/builder/ExpressionEvaluator".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A, B, C, E, I, H, F) {
                return q([F], {
                    createTtxFieldWithCtrl: function(a, b, c) {
                        var d;
                        d = null;
                        a.args || (a.args = {});
                        switch (a.type) {
                        case "cascadeSelect":
                            d = this.createTtxField(a);
                            break;
                        case "areaSelect":
                            a.args.cascadeCtrl = b;
                            a.args.cascadeFieldMap = c;
                            d = this.createTtxField(a);
                            break;
                        default:
                            a.__atBinding = H(b, a.field),
                            d = this.createTtxField(a)
                        }
                        a.value && b.set(a.field, a.value);
                        if ("date" === a.type || "datetime" === a.type)
                            c = this.getDateRelativeToday(a.args),
                            b.set(a.field, c);
                        return d
                    },
                    getDateRelativeToday: function(a) {
                        var b, c, d, e, h, f;
                        d = !0;
                        c = "year month day hour minute second".split(" ");
                        e = 0;
                        for (f = c.length; e < f; e++)
                            b = c[e],
                            void 0 !== a[b] && (d = !1);
                        return d ? null : (f = a.year || 0,
                        e = a.month || 0,
                        b = a.day || 0,
                        c = a.hour || 0,
                        d = a.minute || 0,
                        h = a.second || 0,
                        a = new Date,
                        a.setFullYear(a.getFullYear() + f),
                        a.setMonth(a.getMonth() + e),
                        a.setDate(a.getDate() + b),
                        a.setHours(a.getHours() + c),
                        a.setMinutes(a.getMinutes() + d),
                        a.setSeconds(a.getSeconds() + h),
                        a)
                    },
                    createTtxField: function(k) {
                        var m, q, D, H, L;
                        D = null;
                        k.args && k.args.regExp && (q = k.args.regExp,
                        k.args.regExp = q.replace("\\\\", "\\"));
                        k.style || (k.style = k.args && k.args.style ? k.args.style : {});
                        q = {
                            name: k.field,
                            required: !!k.required,
                            style: k.style
                        };
                        k.__atBinding && (q.value = k.__atBinding,
                        delete k.__atBinding);
                        q._def = k;
                        switch (k.type) {
                        case "string":
                            D = new h(p.mixin(q, k.args));
                            break;
                        case "password":
                            D = new h(p.mixin({
                                type: "password"
                            }, q, k.args));
                            break;
                        case "textarea":
                            D = new r(p.mixin({
                                rows: k.rows || 5
                            }, q, k.args));
                            break;
                        case "integer":
                        case "number":
                            m = {
                                pattern: "#.######"
                            };
                            "integer" === k.type && (m = {
                                pattern: "#"
                            });
                            k.args && k.args.constraints && (m = k.args.constraints);
                            D = new A(p.mixin({
                                constraints: m
                            }, q, k.args));
                            break;
                        case "numberSpinner":
                            m = {
                                places: 0
                            };
                            k.args && k.args.constraints && (m = p.mixin(m, k.args.constraints));
                            D = new B(p.mixin({
                                constraints: m
                            }, q, k.args));
                            break;
                        case "filteringSelect":
                            delete q.required;
                            D = new I(p.mixin({
                                store: new l({
                                    data: []
                                }),
                                searchAttr: "label",
                                placeHolder: tt("\u8bf7\u9009\u62e9")
                            }, q, k.args));
                            this.setFieldStoreByDef(k, D);
                            break;
                        case "combobox":
                        case "comboBox":
                            m = k.data | 0;
                            D = new E(p.mixin({
                                store: new l({
                                    data: m
                                }),
                                searchAttr: "label"
                            }, q, k.args));
                            break;
                        case "multiSelectCombobox":
                            D = new a(p.mixin({
                                store: new l({
                                    data: []
                                })
                            }, q, k.args));
                            D.__start();
                            D.searchAttr = "label";
                            if (k.tableModel || k.args && k.args.url)
                                q = new n,
                                k.args && k.args.url ? q = this.app.dataManager.get(k.args.url) : k.tableModel && (m = k.tableModel.split(":"),
                                H = m[0],
                                q = {},
                                1 < m.length && (q = {
                                    filter: this.evaluateExpression(m[1])
                                }),
                                q = this.app.dataManager.getFilteringSelectData(H, {
                                    headers: q
                                })),
                                D.onStoreLoaded = function() {}
                                ,
                                q.then(function(a) {
                                    D.set("store", new l({
                                        data: a
                                    }));
                                    D.set("storeValues", a);
                                    void 0 !== k.value && D.set("value", k.value);
                                    return D.onStoreLoaded()
                                }, function(a) {
                                    return console.error(a)
                                });
                            break;
                        case "select":
                            m = k.data || [];
                            "string" === typeof m && (m = eval(k.data));
                            D = new C(p.mixin({
                                options: m
                            }, q, k.args));
                            break;
                        case "multiSelect":
                            m = k.data || [];
                            "string" === typeof m && (m = eval(k.data));
                            D = new y(p.mixin({
                                options: m
                            }, q, k.args));
                            break;
                        case "cascadeSelect":
                            m = k.data || [];
                            "string" === typeof m && (m = eval(k.data));
                            D = new z(p.mixin({
                                options: m
                            }, q, k.args));
                            break;
                        case "areaSelect":
                            m = k.data || [];
                            "string" === typeof m && (m = eval(k.data));
                            q = p.mixin({
                                options: m,
                                parentField: k.parentField ? k.parentField : null,
                                cascadeFields: k.cascadeFields ? k.cascadeFields : []
                            }, q, k.args);
                            D = new w(q);
                            break;
                        case "checkbox":
                            D = new f(p.mixin(q, k.args));
                            break;
                        case "tristateCheckBox":
                            D = new d({
                                style: p.mixin(k.style, {
                                    height: "10px",
                                    width: "10px"
                                })
                            });
                            D.set("style", "float:right");
                            break;
                        case "date":
                            D = new u(p.mixin(q, k.args));
                            break;
                        case "datetime":
                            D = new x(p.mixin(q, k.args));
                            break;
                        case "button":
                            D = this.newTtxAction(k);
                            break;
                        case "toggleButton":
                            D = new g(p.mixin({
                                showLabel: !0,
                                checked: k.checked || !1,
                                label: k.name
                            }, q, k.args));
                            this._addEventAction(k, D, {}, "onChange");
                            break;
                        case "radio":
                            D = new t(p.mixin({
                                checked: !0,
                                value: k.value
                            }, q, k.args));
                            break;
                        case "label":
                            D = new e(p.mixin({
                                labelStyle: k.labelStyle
                            }, q, k.args));
                            break;
                        case "quickFindInput":
                            D = new c(p.mixin({
                                field: k.field
                            }, q, k.args, {
                                args: p.mixin({}, k.args, {
                                    wso: this
                                })
                            }));
                            break;
                        case "multiSelectPopup":
                            m = k.data || [];
                            "string" === typeof m && (m = eval(k.data));
                            p.isArray(m) && m.forEach(function(a) {
                                return a.value = a.value || a.id
                            });
                            D = new b(p.mixin({
                                options: m,
                                store: new l({
                                    data: []
                                })
                            }, q, k.args));
                            if (k.tableModel || k.args && k.args.url)
                                q = new n,
                                k.args && k.args.url ? q = this.app.dataManager.get(k.args.url) : k.tableModel && (m = k.tableModel.split(":"),
                                H = m[0],
                                q = {},
                                1 < m.length && (q = {
                                    filter: this.evaluateExpression(m[1])
                                }),
                                q = this.app.dataManager.getFilteringSelectData(H, {
                                    headers: q
                                })),
                                D.onStoreLoaded = function() {}
                                ,
                                q.then(function(a) {
                                    a && a.forEach(function(a) {
                                        a.value = a.value || a.id;
                                        return D.addOption(a)
                                    });
                                    void 0 !== k.value && D.set("value", k.value);
                                    return D.onStoreLoaded()
                                }, function(a) {
                                    return console.error(a)
                                });
                            break;
                        case "sensitive":
                            D = new v(p.mixin({
                                keepLeft: k.keepLeft,
                                keepRight: k.keepRight,
                                reg: k.reg,
                                replaceMask: k.replaceMask,
                                replaceType: k.replaceType
                            }, q, k.args));
                            break;
                        default:
                            throw Error("\u672a\u5b9e\u73b0\u7684\u7a7a\u7a7a\u95f4\u7c7b\u578b" + k.type);
                        }
                        try {
                            k.width && (L = parseInt(k.width),
                            40 < L && D.domNode.setAttribute("data-ttx-field-width", L))
                        } catch (K) {}
                        D.startup && D.startup();
                        D.set("disabled", !!k.disabled);
                        D.set("readOnly", !!k.readOnly);
                        this._setDefaultValue(k, D);
                        return D
                    },
                    _setDefaultValue: function(a, b) {
                        var c;
                        if (void 0 !== a.value)
                            return b.set("value", a.value);
                        if (void 0 !== a.expression)
                            return c = this.evaluateExpression(a.expression),
                            b.set(a.field, c),
                            b.set("value", c)
                    },
                    setFieldStoreByDef: function(a, b, c) {
                        var d, e;
                        null == c && (c = {});
                        e = this;
                        b.onStoreLoaded = function() {}
                        ;
                        if (a.data)
                            return b.set("store", new l({
                                data: a.data
                            }));
                        if (a._storeDataDeferred)
                            return a._storeDataDeferred.then(function(d) {
                                return function(h) {
                                    if (h[a.id])
                                        return b.set("store", new l({
                                            data: h[a.id]
                                        })),
                                        e._setDefaultValue(a, b),
                                        b.onStoreLoaded();
                                    if (a.tableModel || a.args && a.args.url)
                                        return h = new n,
                                        h = d.getRemoteStoreData(a, c),
                                        h.then(function(c) {
                                            b.set("store", new l({
                                                data: c
                                            }));
                                            e._setDefaultValue(a, b);
                                            return b.onStoreLoaded()
                                        }, function(a) {
                                            return console.error(a)
                                        })
                                }
                            }(this));
                        if (a.tableModel || a.args && a.args.url)
                            return d = new n,
                            d = this.getRemoteStoreData(a, c),
                            d.then(function(c) {
                                b.set("store", new l({
                                    data: c
                                }));
                                e._setDefaultValue(a, b);
                                return b.onStoreLoaded()
                            }, function(a) {
                                return console.error(a)
                            })
                    },
                    getRemoteStoreData: function(a, b) {
                        var c, d, e;
                        null == b && (b = {});
                        if (a.args && a.args.url)
                            return this.app.dataManager.get(a.args.url, b);
                        if (a.tableModel)
                            return d = a.tableModel.split(":"),
                            e = d[0],
                            c = {},
                            1 < d.length && (c = {
                                filter: this.evaluateExpression(d[1])
                            }),
                            a.args && a.args.orderBy && (c["x-order"] = a.args.orderBy),
                            app.dataManager.getFilteringSelectData(e, p.mixin({
                                headers: c
                            }, b, {
                                cache: !!a.cache
                            }))
                    }
                })
            })
        },
        "ttx/dijit/form/SensitiveTextBox": function() {
            define(["dojo/_base/declare", "dojo/dom-attr", "dojo/dom-style", "dijit/form/MappedTextBox"], function(q, p, n, m) {
                return q([m], {
                    keepLeft: 0,
                    keepRight: 0,
                    reg: /.(?=.)/g,
                    replaceMask: "*",
                    replaceType: 0,
                    constructor: function(l) {
                        var k, g;
                        for (k in l)
                            (g = l[k]) || delete l[k];
                        return this.inherited(arguments)
                    },
                    format: function(l) {
                        l = String(l);
                        switch (this.replaceType) {
                        case 1:
                            return l.substring(0, this.keepLeft) + this._genMask(l) + l.substring(l.length - this.keepRight);
                        default:
                            return l.replace(/.(?=.)/g, this.replaceMask)
                        }
                    },
                    _genMask: function(l) {
                        var k, g;
                        g = "";
                        k = 0;
                        for (l = l.length - this.keepLeft - this.keepRight; 0 <= l ? k < l : k > l; 0 <= l ? k++ : k--)
                            g += this.replaceMask;
                        return g
                    },
                    _getValueAttr: function() {
                        return this.valueNode.value
                    },
                    _setValueAttr: function(l) {
                        if (l || this.textbox.value)
                            return this.textbox.value && this.textbox.value !== this.format(this.textbox.value) && (l = this.textbox.value),
                            this.valueNode.value = l,
                            this.set("displayedValue", this.format(l));
                        this.valueNode.value = l
                    },
                    _setDisplayedValueAttr: function(l) {
                        this.textbox.value = l;
                        return this._set("displayedValue", l)
                    }
                })
            })
        },
        "ttx/dijit/builder/ExpressionEvaluator": function() {
            define(["dojo/_base/declare", "dojo/string"], function(q, p) {
                return q(null, {
                    evaluateExpression: function(n) {
                        var m, l, k, g, f;
                        g = n;
                        if (0 <= n.indexOf("${")) {
                            m = {};
                            k = app.session.params;
                            for (l in k)
                                f = k[l],
                                m[l.toUpperCase()] = f;
                            try {
                                g = p.substitute(n, m)
                            } catch (e) {
                                1
                            }
                        }
                        return g
                    }
                })
            })
        },
        "ttx/dijit/form/TooltipTextBox": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/on dijit/_HasDropDown dijit/TooltipDialog dijit/ConfirmTooltipDialog dijit/form/ValidationTextBox dojo/text!dijit/form/templates/DropDownBox.html".split(" "), function(q, p, n, m, l, k, g, f) {
                return q([g, m], {
                    baseClass: "dijitTextBox dijitValidationTextBox dijitComboBox",
                    templateString: f,
                    hasDownArrow: !0,
                    readOnly: !1,
                    hasDownArrow: !1,
                    disabled: !1,
                    disableKeyIn: !0,
                    tooltip: null,
                    operator: "\x3d",
                    buildRendering: function() {
                        this.inherited(arguments);
                        this.hasDownArrow || (this._buttonNode.style.display = "none");
                        this.hasDownArrow || (this._buttonNode = this.domNode,
                        this.baseClass += " dijitComboBoxOpenOnClick");
                        this.textbox.disabled = this.disabled || this.disableKeyIn;
                        this.dropDown = this.tooltip = new k({});
                        return this.fillConfirmToolTip()
                    },
                    fillConfirmTooltip: function() {},
                    openDropDown: function() {
                        return this.inherited(arguments)
                    },
                    _setValueAttr: function(e) {
                        return this.value = e
                    },
                    _setOperatorAttr: function(e) {
                        return this.operator = e
                    },
                    _getValueAttr: function(e) {
                        return this.value
                    },
                    onSelect: function(e) {
                        this.set("value", e.value);
                        this.set("operator", e.operator);
                        return this.set("displayedValue", e.displayedValue)
                    }
                })
            })
        },
        "ttx/util/ExpressionEvaluator": function() {
            define(["dojo/_base/declare", "dojo/string"], function(q, p) {
                return q(null, {
                    evaluateExpression: function(n) {
                        var m, l, k, g, f;
                        g = n;
                        if (0 <= n.indexOf("${")) {
                            m = {};
                            k = app.session.params;
                            for (l in k)
                                f = k[l],
                                m[l.toUpperCase()] = f;
                            try {
                                g = p.substitute(n, m)
                            } catch (e) {
                                1
                            }
                        }
                        return g
                    }
                })
            })
        },
        "ttx/wso/_StatusMixin": function() {
            define(["dojo/_base/declare"], function(q) {
                return q(null, {
                    VIEW_STATUS: {
                        Ready: 0,
                        New: 1,
                        Edit: 2,
                        DetailReady: 0,
                        DetailNew: 1,
                        DetailEdit: 2
                    },
                    DEFERRED_STATUS: {
                        Init: 0,
                        Requesting: 1,
                        Finish: 2
                    }
                })
            })
        },
        "ttx/util/Escaper": function() {
            define([], function() {
                var q;
                q = function(p) {
                    var n, m, l, k;
                    n = function(g) {
                        return p[g]
                    }
                    ;
                    l = "(?:" + Object.keys(p).join("|") + ")";
                    k = RegExp(l);
                    m = RegExp(l, "g");
                    return function(g) {
                        g = null === g ? "" : "" + g;
                        return k.test(g) ? g.replace(m, n) : g
                    }
                }
                ;
                return {
                    escape: q({
                        "\x26": "\x26amp;",
                        "\x3c": "\x26lt;",
                        "\x3e": "\x26gt;",
                        '"': "\x26quot;",
                        "'": "\x26#x27;",
                        "`": "\x26#x60;"
                    }),
                    unescape: q({
                        "\x26amp;": "\x26",
                        "\x26lt;": "\x3c",
                        "\x26gt;": "\x3e",
                        "\x26quot;": '"',
                        "\x26#x27;": "'",
                        "\x26#x60;": "`"
                    })
                }
            })
        },
        "ttx/dijit/layout/LayoutFormMixin": function() {
            define(["dojo/_base/declare", "dojo/dom-geometry", "dojo/query"], function(q, p, n) {
                return q(null, {
                    layoutPane: function(m) {
                        var l;
                        l = this;
                        return n(".ttx-field-set", m).forEach(function(k) {
                            return l.layoutTtxFieldSet(k)
                        })
                    },
                    layoutTtxFieldSet: function(m) {
                        var l, k;
                        l = this;
                        k = p.getContentBox(m);
                        return n(".ttx-field-row", m).forEach(function(g) {
                            return l.layoutTtxFieldRow(g, k)
                        })
                    },
                    layoutTtxFieldRow: function(m, l) {
                        var k, g, f;
                        p.setMarginBox(m, {
                            w: l.w
                        }, !0);
                        k = m.getAttribute("ttx-field-row-cols") || 2;
                        f = p.getContentBox(m);
                        g = parseInt(f.w / k);
                        return n(".ttx-field", m).forEach(function(e) {
                            var d, c, b, a;
                            d = e.getAttribute("ttx-field-span");
                            d *= g;
                            p.setMarginBox(e, {
                                w: d
                            }, !0);
                            e = e.childNodes;
                            2 !== e.length || "LABEL" !== e[0].tagName || e[1].classList.contains("dijitCheckBox") || (c = b = d - p.getMarginBox(e[0], !0).w,
                            a = e[1].getAttribute("data-ttx-field-width"),
                            e[1].style["max-width"] = c + "px",
                            40 < a && (b = Math.min(a, b)),
                            p.setMarginBox(e[1], {
                                w: b
                            }, !1),
                            e[1].classList.contains("ttxDateTimeTextBox") && p.setMarginBox(e[1].children[0], {
                                w: b - p.getMarginBox(e[1].children[1], !0).w
                            }, !1),
                            e[1].classList.contains("dojoxCheckedMultiSelect") && dijit.byNode(e[1]).resize());
                            if (1 === e.length && !e[0].classList.contains("dijitCheckBox"))
                                return p.setMarginBox(e[0], {
                                    w: d
                                }, !1)
                        })
                    }
                })
            })
        },
        "ttx/util/CybertransVersion": function() {
            define([], {
                version: "2.5"
            })
        },
        "ttx/material/ripple": function() {
            define(["dojo/on", "dojo/dom-class", "dojo/dom-construct"], function(q, p, n) {
                var m, l, k, g, f, e;
                e = f = m = l = void 0;
                k = function(d) {
                    d.srcElement.timeoutId && (clearTimeout(d.srcElement.timeoutId),
                    d.srcElement.timeoutId = void 0);
                    0 === $(this).find(".ink").length && $(this).prepend("\x3cspan class\x3d'ink'\x3e\x3c/span\x3e");
                    l = $(this).find(".ink");
                    l.removeClass("animate");
                    l.height() || l.width() || (m = Math.max($(this).outerWidth(), $(this).outerHeight()),
                    l.css({
                        height: m,
                        width: m
                    }));
                    f = d.pageX - $(this).offset().left - l.width() / 2;
                    e = d.pageY - $(this).offset().top - l.height() / 2;
                    l.css({
                        top: e + "px",
                        left: f + "px"
                    }).addClass("animate");
                    d.srcElement.timeoutId = setTimeout(function() {
                        if (l && l[0])
                            return l.removeClass("animate"),
                            n.destroy(l[0]),
                            delete l[0]
                    }, 2E3)
                }
                ;
                g = function(d) {
                    if (!d.ripple)
                        return q(d, "click", k),
                        p.add(d, "ripplelink"),
                        d.ripple = !0
                }
                ;
                return {
                    ripple: k,
                    node: g,
                    button: function(d) {
                        return g(d.domNode.children[0])
                    }
                }
            })
        },
        "ttx/dijit/builder/GridBuilder": function() {
            var q = {}.hasOwnProperty;
            define("dojo/_base/declare dojo/_base/lang dojo/_base/fx dojo/_base/Deferred dojo/string dojo/on dojo/dom-construct dojo/dom-geometry dojo/dom-style dojo/dom-class dojo/query dojo/io-query dojo/request dojo/store/Memory ttx/store/JsonRest dijit/TitlePane dijit/Toolbar dijit/TooltipDialog ttx/dijit/ConfirmDialog dijit/ConfirmTooltipDialog dijit/Menu dijit/MenuItem dijit/form/Form dijit/form/Button dijit/form/ToggleButton ttx/dijit/form/IconDropDownButton dijit/form/ComboButton ttx/dijit/form/CheckBox ttx/dijit/form/Label ttx/dijit/form/TristateCheckBox ttx/dijit/form/QuickFindInput ttx/dijit/form/MultiSelectPopup ttx/dijit/form/MultiSelectComboBox dijit/form/ValidationTextBox dijit/form/SimpleTextarea dijit/form/RadioButton ttx/dijit/form/DateTextBox ttx/dijit/form/DateTimeTextBox ttx/dijit/form/CheckedMultiSelect ttx/dijit/form/CascadeSelect ttx/dijit/form/AreaSelect dijit/form/NumberTextBox dijit/form/NumberSpinner dijit/form/Select dijit/form/ComboBox dijit/form/FilteringSelect dijit/layout/ContentPane dojox/mvc/at dojox/mvc/getStateful dojox/mvc/ModelRefController dojox/form/Uploader dojox/image/LightboxNano gridx/Grid gridx/core/model/cache/Sync gridx/core/model/cache/Async ttx/gridx/allModules gridx/support/exporter/toCSV ttx/wso/_StatusMixin ttx/util/RequestLogUtil ttx/util/Escaper ttx/util/ExpressionEvaluator ttx/dijit/layout/LayoutFormMixin ttx/util/CybertransVersion ttx/material/ripple ttx/dijit/form/ZoomButton ttx/dijit/builder/TtxField ttx/dijit/DisplaySettingDialog".split(" "), function(p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A, B, C, E, I, H, F, G, J, O, D, M, L, K, N, P, R, S, U, ca, da, aa, V, ea, T, X, fa, W, ga, ja, ka, la, ma, na, Q, oa, pa, Y, qa, ra, sa, ta, ba, ha, ia, ua) {
                return p([ia], {
                    addGridx: function(a, b, e) {
                        var h, k, l, m, t, u, z, J, w, A, v, B, O, D, H, E, L, F, K, M, G, N, P, R, Z, S;
                        O = this;
                        w = [Q.CellWidget, Q.Bar, Q.RowHeader, Q.SelectRow, Q.IndirectSelect, Q.VirtualVScroller, Q.ColumnResizer, Q.ColumnLock, Q.Edit, Q.HeaderFilter];
                        e.noDefaultModules && (w = []);
                        e.gridId && (B = new y({}),
                        c.add(B.containerNode, "columnTooltipDialog"),
                        G = new C({
                            label: tt("\u5f00\u59cb\u7f16\u8f91")
                        }),
                        K = new C({
                            label: tt("\u4fdd\u5b58\u663e\u793a\u8bbe\u7f6e")
                        }),
                        k = new C({
                            label: tt("\u6062\u590d\u9ed8\u8ba4"),
                            onClick: function(a) {
                                return function() {
                                    var a, b, c, d;
                                    c = n.clone(v.defStructure);
                                    a = 0;
                                    for (b = c.length; a < b; a++)
                                        d = c[a],
                                        d.cellWeight && (d.widgetsInCell = !0,
                                        d.onCellWidgetCreated = m(d.cellWeight),
                                        d.setCellValue = M,
                                        d.getCellWidgetConnects = A);
                                    v.setColumns(c);
                                    return Z(0)
                                }
                            }(this)
                        }),
                        t = new C({
                            label: tt("\u5217\u8bbe\u7f6e")
                        }),
                        ba.button(G),
                        ba.button(K),
                        ba.button(k),
                        ba.button(t),
                        B.addChild(G),
                        B.addChild(K),
                        B.addChild(k),
                        B.addChild(t),
                        B = new I({
                            style: {
                                display: "inline-block"
                            },
                            iconClass: "fa fa-cog",
                            dropDown: B
                        }),
                        k = new x({
                            style: "float: right; margin: 0;",
                            actionMap: {
                                gridDisplaySetting: B
                            }
                        }),
                        k.addChild(B),
                        e.barTop.push(k),
                        w.push(Q.SelectColumn, Q.MoveColumn, Q.DndColumn));
                        if (e.modules) {
                            E = e.modules;
                            k = 0;
                            for (D = E.length; k < D; k++)
                                L = E[k],
                                w.push(L);
                            e.modules = w
                        }
                        if (!b || 0 === b.length)
                            return null;
                        J = {};
                        D = 0;
                        for (E = b.length; D < E; D++)
                            if (P = b[D],
                            P.name = tt(P.name),
                            P.decorator && (k = P.decorator,
                            "sql" === k.type)) {
                                F = k.binding;
                                for (H in F)
                                    q.call(F, H) && (S = F[H],
                                    k.binding[H] = this.evaluateExpression(S));
                                J[P.id] = k
                            }
                        J !== {} && O.app.dataManager.getSqlTemplateResultByMap(J).then(function(a) {
                            return J = a
                        });
                        D = 0;
                        for (E = b.length; D < E; D++)
                            if (N = b[D],
                            N.decorator)
                                switch (k = N.decorator,
                                N.decorator.type) {
                                case "simple":
                                    F = function(a) {
                                        return function(b, c, d) {
                                            for (H in a)
                                                if (S = a[H],
                                                c = new RegExp(H),
                                                c.test(b))
                                                    return b && b.replace ? b.replace(c, S) : S;
                                            return b
                                        }
                                    }
                                    ;
                                    N.decorator = F(k.map);
                                    break;
                                case "sql":
                                    if (J[N.id])
                                        N.decorator = function(a, b, c) {
                                            L = new r({
                                                data: J[this.id],
                                                idProperty: "value"
                                            });
                                            return L.get(a) ? L.get(a).label : a
                                        }
                                        ;
                                    else {
                                        F = k.binding;
                                        for (H in F)
                                            q.call(F, H) && (S = F[H],
                                            k.binding[H] = this.evaluateExpression(S));
                                        O.app.dataManager.getSqlTemplateResult(k.tid, k.oid, k.binding, {
                                            sync: !0,
                                            async: !1,
                                            cache: !!k.cache
                                        }).then(function(a) {
                                            return N.decorator = function(b, c, d) {
                                                L = new r({
                                                    data: a,
                                                    idProperty: "value"
                                                });
                                                return L.get(b) ? L.get(b).label : b
                                            }
                                        })
                                    }
                                }
                        e.defStructure = n.clone(b);
                        if (e.gridId && this.gridDisplays && (z = this.gridDisplays[e.gridId],
                        k = [],
                        L = new r({
                            data: b,
                            idProperty: "id"
                        }),
                        z)) {
                            D = 0;
                            for (b = z.length; D < b; D++)
                                if (l = z[D],
                                R = L.get(l.id))
                                    L.remove(l.id),
                                    R.width = l.width,
                                    k.push(R);
                            b = k
                        }
                        e.noRowIndexColumn || (this.addRowIndex2Structure(b),
                        this.addRowIndex2Structure(e.defStructure));
                        k = !!cbtConfig.gridAutoHeight;
                        e && void 0 !== e.autoHeight && null !== e.autoHeight && (k = e.autoHeight);
                        void 0 !== e.selectRowMultiple && !0 !== e.selectRowMultiple || w.push(Q.ExtendedSelectRow);
                        m = function(a) {
                            return function(b, c) {
                                b.widget = O.createTtxField(a);
                                return b.domNode.appendChild(b.widget.domNode)
                            }
                        }
                        ;
                        M = function(a, b, c) {
                            return c.widget.set("value", a)
                        }
                        ;
                        A = function(a, b) {
                            return [[a.widget, "onChange", function() {
                                var c, d, e;
                                e = a.widget.getValue();
                                d = b.row.item();
                                c = a.cell.column;
                                d[c.id] = e;
                                d = b.row.rawData();
                                d[c.id] = e;
                                return b.row.setRawData(d)
                            }
                            ]]
                        }
                        ;
                        E = 0;
                        for (D = b.length; E < D; E++)
                            N = b[E],
                            N.cellWeight && (N.widgetsInCell = !0,
                            N.onCellWidgetCreated = m(N.cellWeight),
                            N.setCellValue = M,
                            N.getCellWidgetConnects = A,
                            (N.cellWeight.args && N.cellWeight.args.url || N.cellWeight.tableModel) && this.getRemoteStoreData(N.cellWeight, {
                                sync: !0,
                                async: !1
                            }).then(function(a) {
                                if (a)
                                    return N.cellWeight.data = a
                            }));
                        w = n.mixin({
                            cacheClass: ma,
                            structure: b,
                            autoHeight: k,
                            selectRowTriggerOnCell: !0,
                            selectRowCanSwept: !1,
                            paginationBarSizes: [50, 100, 0],
                            paginationPagesize: 50,
                            paginationInitialPageSize: 50,
                            rowHeaderCellProvider: function(a) {
                                return a.id
                            },
                            modules: w,
                            style: {
                                "white-space": "nowrap"
                            },
                            onCellMouseOver: function(a) {
                                var b, c;
                                c = a.cellNode;
                                b = this.cell(a.rowId, a.columnId).data();
                                if (c.scrollWidth > c.clientWidth)
                                    return layer.tips(qa.escape(b), a.cellNode, {
                                        tips: [1, "#3595CC"],
                                        time: 3E3,
                                        area: "auto"
                                    })
                            },
                            onCellMouseOut: function(a) {
                                return layer.closeAll("tips")
                            }
                        }, e);
                        v = new (p([la], {
                            _init: function(a) {
                                this.nls && (this.nls.pageSizeLabel = tt("pageSizeLabel"));
                                this.nls && (this.nls.pageLabel = tt("pageLabel"));
                                return this.inherited(arguments)
                            }
                        }))(w);
                        v.onCellClick = function(a) {
                            var b, c, d, e;
                            try {
                                if (d = a.cellNode,
                                b = this.column(a.columnId, 1),
                                !b.widgetsInCell && !b.isEditable())
                                    return c = document.createRange(),
                                    c.selectNodeContents(d),
                                    e = window.getSelection(),
                                    e.removeAllRanges(),
                                    e.addRange(c)
                            } catch (ya) {}
                        }
                        ;
                        v.placeAt(a);
                        v.startup();
                        e.gridHeight && d.set(v.domNode, {
                            height: e.gridHeight
                        });
                        e.gridId && (v.bar.plugins && v.bar.plugins.pagingbottom[0][0].domNode && f.place(B.domNode, v.bar.plugins.pagingbottom[0][0].domNode, "before"),
                        Z = function(a) {
                            return function(a) {
                                a || v.select.column.clear(0);
                                G.set("label", a ? tt("\u505c\u6b62\u7f16\u8f91") : tt("\u5f00\u59cb\u7f16\u8f91"));
                                v.select.column.enabled = !!a;
                                v.dnd.column.enabled = !!a;
                                return v.columnSelectable = !!a
                            }
                        }(this),
                        Z(0),
                        h = function(a) {
                            return function(a) {
                                var b, c;
                                z = [];
                                c = 0;
                                for (b = a.length; c < b; c++)
                                    l = a[c],
                                    "#" !== l.id && z.push({
                                        id: l.id,
                                        width: l.width
                                    });
                                b = {};
                                b[v.gridId] = z;
                                a = O.navigatorItem;
                                b = {
                                    tid: a.tid,
                                    oid: a.oid,
                                    nid: a.id,
                                    value: b
                                };
                                a.__sourceItem && (b.nid = a.__sourceItem.id);
                                app.dataManager.post("/userData/saveGridDisplay", b).then(function(a) {
                                    Z(0)
                                });
                                return z
                            }
                        }(this),
                        u = function(a) {
                            return function() {
                                var a, b, c, d, e, h, f;
                                a = [];
                                e = v._columns;
                                d = 0;
                                for (c = e.length; d < c; d++)
                                    b = e[d],
                                    a.push(b);
                                "#" === a[0].field && a.splice(0, 1);
                                b = function(a, b) {
                                    var c;
                                    for (c = b.length; c--; )
                                        if (b[c].id === a)
                                            return !0;
                                    return !1
                                }
                                ;
                                d = 0;
                                for (c = a.length; d < c; d++)
                                    l = a[d],
                                    l.value = 1,
                                    l.type = "checkbox",
                                    l.basic && (l.disabled = !0,
                                    l.hidden = !0);
                                c = [];
                                h = v.defStructure;
                                f = 0;
                                for (e = h.length; f < e; f++)
                                    d = h[f],
                                    c.push(d);
                                "#" === c[0].field && c.splice(0, 1);
                                h = 0;
                                for (d = c.length; h < d; h++)
                                    e = c[h],
                                    "#" === e.field || b(e.id, a) || (e.value = 0,
                                    e.type = "checkbox",
                                    e.basic && (e.disabled = !0,
                                    e.hidden = !0),
                                    a.push(e));
                                return a
                            }
                        }(this),
                        g(G, "click", function(a) {
                            return function() {
                                return Z(!v.columnSelectable)
                            }
                        }(this)),
                        g(t, "click", function(a) {
                            return function() {
                                v.settingDialog || (v.settingDialog = new ua({
                                    title: tt("\u8868\u683c\u663e\u793a\u8bbe\u7f6e"),
                                    save: function() {
                                        var a, b, c, d, f;
                                        a = this.grid.model.store.data;
                                        f = [];
                                        d = 0;
                                        for (c = a.length; d < c; d++)
                                            b = a[d],
                                            b.value && f.push(b);
                                        a = h(f);
                                        c = 0;
                                        for (b = a.length; c < b; c++)
                                            if (l = a[c],
                                            R = this.grid.model.store.get(l.id))
                                                l.field = R.field,
                                                l.name = R.name,
                                                l.basic = R.basic,
                                                R.decorator && (l.decorator = R.decorator);
                                        e.noRowIndexColumn || O.addRowIndex2Structure(a);
                                        v.setColumns(a);
                                        return this.hide()
                                    }
                                }));
                                v.settingDialog.set("displayData", u());
                                return v.settingDialog.show()
                            }
                        }(this)),
                        g(K, "click", function(a) {
                            return function() {
                                return h(v.columns())
                            }
                        }(this)));
                        return v
                    },
                    addTtxGrid: function(a, b, c) {
                        var d, e, h;
                        null == c && (c = {});
                        if (a.structure && (0 !== a.structure.length || 0 !== a.actions.length)) {
                            c = n.mixin(c, a.args);
                            e = f.create("div", {
                                "class": "listGridContainer"
                            }, b);
                            (b = !(!a.actions && !a.name)) && (h = new x({
                                actionMap: {}
                            }));
                            b && (c.barTop = [{
                                content: "\x3ch1\x3e" + tt(a.name) || " \x3c/h1\x3e"
                            }, h]);
                            c = this.addGridx(e, a.structure, n.mixin({
                                store: new r({
                                    data: []
                                })
                            }, c));
                            b && (c.actionMap = h.actionMap);
                            b && a.actions && a.actions.items && this.addActionsToGrid(c, h, a.actions);
                            if (b && a.dropDownForms)
                                for (d in a = a.dropDownForms,
                                a)
                                    h = a[d],
                                    h = this.newGridAddRowTooltip(h, c),
                                    c.barTop[1].actionMap[d].set("dropDown", h);
                            return c
                        }
                    },
                    addTtxServerGrid: function(a, b, c) {
                        var d, e, h, g;
                        if (!a.structure || 0 === a.structure.length && 0 === a.actions.length)
                            console.error("create grid failed");
                        else {
                            if (null === c || void 0 === c)
                                c = {};
                            a.gridId && (c.gridId = a.gridId);
                            a.showFullScreen && (c.showFullScreen = a.showFullScreen);
                            c.headerFilterEnabled = !!a.headerFilterEnabled;
                            c = n.mixin(c, a.args);
                            a.modules && (c.modules = a.modules);
                            a.noDefaultModules && (c.noDefaultModules = a.noDefaultModules);
                            h = f.create("div", {
                                "class": "listGridContainer"
                            }, b);
                            (b = !(!a.actions && !a.name)) && (g = new x({
                                actionMap: {}
                            }));
                            e = a.idColumn || "id";
                            e = {
                                target: a.url,
                                idProperty: e,
                                muteQuery: a.muteQuery || !0,
                                headers: {
                                    "X-Result-Fields": this._getGridFieldsToRequestWithId(e, a)
                                }
                            };
                            c = n.mixin({
                                store: new t(e),
                                filterServerMode: !0,
                                filterSetupFilterQuery: function(b) {
                                    this.grid.store.headers || (this.grid.store.headers = {});
                                    this.grid.store.headers.filter = JSON.stringify(b);
                                    d.pagination && (this.grid.store.headers.Range = "items\x3d0-" + this.grid.pagination.pageSize());
                                    a.rights && (this.grid.store.headers["x-rights"] = JSON.stringify(a.rights));
                                    return ""
                                }
                            }, c);
                            b && (c.barTop = [{
                                content: "\x3ch1\x3e" + tt(a.name) || " \x3c/h1\x3e"
                            }, g]);
                            d = this.addGridx(h, a.structure, n.mixin({
                                cacheClass: na,
                                modules: [Q.Pagination, Q.PaginationBar, Q.Filter, Q.Sort]
                            }, c));
                            b && (d.actionMap = g.actionMap);
                            a.x_bill && (d.x_bill = a.x_bill);
                            b && a.actions && a.actions.items && this.addActionsToGrid(d, g, a.actions);
                            d.barTop && c.showFullScreen && (g = d.zoomButton = new ha({
                                style: {
                                    float: "right",
                                    margin: 0,
                                    position: "inherit"
                                },
                                contentNode: d.domNode,
                                afterZoomOut: function() {
                                    return d.body.refresh()
                                },
                                afterZoomIn: function() {
                                    return d.body.refresh()
                                }
                            }),
                            c = d.barTop[d.barTop.length - 1],
                            c.domNode && (c = c.domNode),
                            f.place(g.domNode, c, "before"));
                            a.rights && (d.rights = a.rights);
                            return d
                        }
                    },
                    addActionsToGrid: function(a, b, c) {
                        var d, e, h, g, k, l;
                        if (c.group) {
                            e = f.create("div", {
                                "class": "ttx-action-set-group"
                            }, b.domNode);
                            k = c.items;
                            l = [];
                            h = 0;
                            for (g = k.length; h < g; h++)
                                d = k[h],
                                d.separator ? l.push(e = f.create("div", {
                                    "class": "ttx-action-set-group"
                                }, b.domNode)) : (c = this.newTtxAction(d, {}, a),
                                b.actionMap[d.id] = c,
                                l.push(f.place(c.domNode, e)));
                            return l
                        }
                        g = c.items;
                        k = [];
                        e = 0;
                        for (h = g.length; e < h; e++)
                            d = g[e],
                            c = this.newTtxAction(d, {}, a),
                            b.actionMap[d.id] = c,
                            k.push(b.addChild(c));
                        return k
                    }
                })
            })
        },
        "ttx/dijit/form/IconDropDownButton": function() {
            define("dojo/_base/declare dojo/_base/lang dijit/_HasDropDown dijit/_WidgetBase dijit/_TemplatedMixin dojo/text!./templates/IconDropDownButton.html".split(" "), function(q, p, n, m, l, k) {
                return q([m, l, n], {
                    templateString: k,
                    hasDownArrow: !1,
                    autoWidth: !1
                })
            })
        },
        "ttx/dijit/form/ZoomButton": function() {
            define("dojo/_base/declare dojo/query dojo/dom-construct dojo/dom-style dojo/dom-class dijit/_WidgetBase dijit/_TemplatedMixin".split(" "), function(q, p, n, m, l, k, g) {
                return q([k, g], {
                    templateString: '\x3cdiv class\x3d"wsoZoomBtn"\x3e\x3c/div\x3e',
                    contentNode: null,
                    zoomStatus: "in",
                    fullScreen: function(f) {
                        f = document.documentElement;
                        if (f.requestFullscreen)
                            return f.requestFullscreen();
                        if (f.mozRequestFullScreen)
                            return f.mozRequestFullScreen();
                        if (f.webkitRequestFullScreen)
                            return f.webkitRequestFullScreen();
                        if (f.msRequestFullscreen)
                            return f.msRequestFullscreen()
                    },
                    exitFullScreen: function(f) {
                        if (document.exitFullscreen)
                            return document.exitFullscreen();
                        if (document.mozCancelFullScreen)
                            return document.mozCancelFullScreen();
                        if (document.webkitCancelFullScreen)
                            return document.webkitCancelFullScreen();
                        if (document.msExitFullscreen)
                            return document.msExitFullscreen()
                    },
                    postCreate: function(f) {
                        var e;
                        e = this.contentNode;
                        return this.domNode.onclick = function(d) {
                            return function() {
                                var c, b, a;
                                a = m.get(e, "width");
                                b = m.get(e, "height");
                                c = m.get(e, "display");
                                n.create("div", {
                                    id: "dom_to_hold"
                                }, e, "before");
                                n.place(e, document.body);
                                if ("out" === d.zoomStatus)
                                    return d.beforeZoomIn(),
                                    n.place(e, document.getElementById("dom_to_hold"), "replace"),
                                    layer.close(d.zoomLayerId),
                                    p(".layui-layer").forEach(function(a) {
                                        return n.destroy(a)
                                    });
                                d.beforeZoomOut();
                                d.zoomLayerId = layer.open({
                                    type: 1,
                                    title: "",
                                    closeBtn: !1,
                                    shade: !1,
                                    zIndex: 948,
                                    content: $(e),
                                    area: ["0", "0"],
                                    success: function() {
                                        m.set(document.getElementById("topNav"), {
                                            display: "none"
                                        });
                                        m.set(e, {
                                            width: "100%",
                                            height: "100%"
                                        });
                                        l.add(d.domNode, "zoomIn");
                                        d.zoomStatus = "out";
                                        return d.afterZoomOut()
                                    },
                                    end: function() {
                                        m.set(document.getElementById("topNav"), {
                                            display: "flex"
                                        });
                                        m.set(e, {
                                            display: c,
                                            width: a + "px",
                                            height: b + "px"
                                        });
                                        l.remove(d.domNode, "zoomIn");
                                        d.zoomStatus = "in";
                                        return d.afterZoomIn()
                                    }
                                });
                                return layer.full(d.zoomLayerId)
                            }
                        }(this)
                    },
                    afterZoomOut: function() {},
                    afterZoomIn: function() {},
                    beforeZoomOut: function() {},
                    beforeZoomIn: function() {}
                })
            })
        },
        "ttx/dijit/DisplaySettingDialog": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/on dojo/dom-construct dojo/store/Memory dijit/Dialog dijit/form/Button gridx/Grid gridx/modules/RowHeader gridx/modules/select/Row gridx/modules/extendedSelect/Row gridx/modules/IndirectSelect gridx/modules/NavigableCell gridx/modules/CellWidget ttx/dijit/form/SwitchCheckBox".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r) {
                return q([k], {
                    hasReset: !0,
                    displayData: [],
                    baseClass: "displaySettingDialog",
                    postCreate: function() {
                        var a, b, c, k;
                        k = this;
                        this.inherited(arguments);
                        this.leftDom = a = m.create("div", {
                            "class": "left"
                        }, this.containerNode);
                        this.rightDom = c = m.create("div", {
                            "class": "right"
                        }, this.containerNode);
                        b = new l({
                            idProperty: "field",
                            data: k.displayData
                        });
                        this.grid = b = new f({
                            style: {
                                height: "500px"
                            },
                            store: b,
                            structure: [{
                                id: "index",
                                field: "Identity",
                                name: "#",
                                width: "20px",
                                decorator: function(a, b, c) {
                                    return c + 1
                                }
                            }, {
                                id: "id",
                                field: "id",
                                name: "id"
                            }, {
                                id: "field",
                                field: "field",
                                name: "Field"
                            }, {
                                id: "name",
                                field: "name",
                                name: "Name"
                            }, {
                                id: "value",
                                field: "value",
                                name: "\u663e\u793a/\u9690\u85cf",
                                widgetsInCell: !0,
                                onCellWidgetCreated: function(a, b) {
                                    a.widget = new r({});
                                    return a.domNode.appendChild(a.widget.domNode)
                                },
                                setCellValue: function(a, b, c) {
                                    return c.widget.set("value", a)
                                },
                                initializeCellWidget: function(a, b) {
                                    return b.row.item().basic ? a.widget.set("disabled", !0) : a.widget.set("disabled", !1)
                                },
                                getCellWidgetConnects: function(a, b) {
                                    return [[n(a.widget, "change", function() {
                                        return b.row.item()[a.cell.column.id] = a.widget.get("value")
                                    })]]
                                }
                            }],
                            selectRowMultiple: !1,
                            selectRowTriggerOnCell: !0,
                            modules: [h, e, d]
                        });
                        a.appendChild(b.domNode);
                        b = new g({
                            label: tt("\u4e0a\u79fb"),
                            onClick: function(a) {
                                return function() {
                                    return k._moveLine("up")
                                }
                            }(this)
                        });
                        a = new g({
                            label: tt("\u4e0b\u79fb"),
                            onClick: function(a) {
                                return function() {
                                    return k._moveLine("down")
                                }
                            }(this)
                        });
                        c.appendChild(b.domNode);
                        c.appendChild(a.domNode);
                        this.hasReset && (a = new g({
                            label: tt("\u91cd\u7f6e"),
                            onClick: function(a) {
                                return function() {
                                    return k.resetGrid()
                                }
                            }(this)
                        }),
                        c.appendChild(a.domNode));
                        a = new g({
                            "class": "alt-primary",
                            label: tt("\u4fdd\u5b58"),
                            onClick: function(a) {
                                return function() {
                                    return k.save()
                                }
                            }(this)
                        });
                        c.appendChild(m.create("span", {}));
                        return c.appendChild(a.domNode)
                    },
                    resetGrid: function() {
                        var a, b, c, d, e;
                        b = [];
                        e = this._displayDataDefault;
                        c = 0;
                        for (d = e.length; c < d; c++)
                            a = e[c],
                            b.push(a);
                        return this.set("displayData", b)
                    },
                    save: function() {},
                    _moveLine: function(a) {
                        var b, c;
                        c = this;
                        c.grid;
                        b = function(a) {
                            var b, d, e, h, f;
                            d = c.grid.model.store.data;
                            b = d.length - 1;
                            e = c.grid.row(c.grid.select.row.getSelected()[0]);
                            h = e.index();
                            a = h + a;
                            if (!(0 > a || a > b))
                                return b = d.slice(Math.min(h, a), Math.max(h, a))[0],
                                d.splice(h, 1),
                                f = e.item(),
                                d.splice(a, 0, f),
                                c.grid.model.store.index[f.id] = a,
                                c.grid.model.store.index[b.id] = h,
                                c.grid.model.clearCache(),
                                c.grid.body.refresh(),
                                c.grid.select.row.selectById(e.id)
                        }
                        ;
                        switch (a) {
                        case "up":
                            return b(-1);
                        case "down":
                            return b(1)
                        }
                    },
                    onShow: function() {
                        var a, b, c, d;
                        this.inherited(arguments);
                        this._displayDataDefault = [];
                        d = this.displayData;
                        b = 0;
                        for (c = d.length; b < c; b++)
                            a = d[b],
                            this._displayDataDefault.push(a);
                        this.resize();
                        return this.grid.select.row.clear()
                    },
                    _setDisplayDataAttr: function(a) {
                        this.displayData = a;
                        if (this.grid)
                            return this.grid.setStore(new l({
                                idProperty: "field",
                                data: a
                            }))
                    }
                })
            })
        },
        "ttx/dijit/form/SwitchCheckBox": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/fx dojo/dom-class dojo/dom-style dojo/dom-geometry dojo/dom-construct dojo/fx dojo/on dijit/_WidgetBase dijit/_TemplatedMixin dojo/text!./templates/SwitchCheckBox.html".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a) {
                return q("ttx.dijit.SwitchCheckBox", [c, b], {
                    baseClass: "switchCheckBox",
                    focusNode: null,
                    coreNode: null,
                    buttonNode: null,
                    disabled: !1,
                    value: null,
                    templateString: a,
                    getValue: function() {
                        return this.value
                    },
                    setValue: function(a) {
                        return this._setValueAttr(a)
                    },
                    _setValueAttr: function(a) {
                        if (!this.disabled)
                            return 1 === a || "1" === a ? this.checked() : this.unchecked()
                    },
                    _setDisabledAttr: function(a) {
                        return (this.disabled = a) ? l.add(this.coreNode, "disabled") : l.remove(this.coreNode, "disabled")
                    },
                    checked: function() {
                        var a, b, c;
                        c = this.focusNode;
                        b = this.coreNode;
                        a = this.buttonNode;
                        c.checked = !0;
                        this.value = c.value = 1;
                        b.style.borderColor = "#13ce66";
                        b.style.backgroundColor = "#13ce66";
                        a.style.transform = "translate(16px, 0)";
                        return this
                    },
                    unchecked: function() {
                        var a, b, c;
                        c = this.focusNode;
                        b = this.coreNode;
                        a = this.buttonNode;
                        c.checked = !1;
                        this.value = c.value = 0;
                        b.style.borderColor = "#ee3973";
                        b.style.backgroundColor = "#ee3973";
                        a.style.transform = "translate(3px, 0)";
                        return this
                    },
                    onChange: function() {},
                    postCreate: function() {
                        var a, b, c, d, e;
                        b = this.focusNode;
                        a = this.coreNode;
                        e = this.value;
                        d = this;
                        c = [1, 0];
                        b.onchange = function(a) {
                            d.set("value", c[d.get("value")]);
                            return d.onChange()
                        }
                        ;
                        a.onclick = function(a) {
                            return b.onchange(a)
                        }
                        ;
                        return this.set("value", e)
                    }
                })
            })
        },
        "ttx/dijit/builder/FieldSetBuilder": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/fx dojo/dom-construct dojo/dom-style dojox/mvc/getStateful dojox/mvc/ModelRefController ttx/dijit/builder/ExpressionEvaluator ./FieldBuilder".split(" "), function(q, p, n, m, l, k, g, f, e) {
                return q([f, e], {
                    newTtxFieldSet: function(d, c, b, a) {
                        var e, f, g, k, n, q, z, w, v, A, B;
                        null == a && (a = {});
                        A = null;
                        if (void 0 === b || null === b || 0 === b)
                            b = 4;
                        k = 0;
                        n = m.create("div", {
                            "class": "ttx-field-set"
                        });
                        q = [];
                        g = 0;
                        for (z = d.length; g < z; g++)
                            f = d[g],
                            f.tableModel && (e = f.tableModel,
                            w = {
                                id: f.id
                            },
                            e = e.split(":"),
                            w.tableCode = e[0],
                            1 < e.length && (w.filter = this.evaluateExpression(e[1])),
                            f.args && f.args.orderBy && (w.order = f.args.orderBy),
                            q.push(w));
                        0 < q.length && (B = app.dataManager.post("/rest/cbt/filteringSelect", q));
                        f = 0;
                        for (q = d.length; f < q; f++)
                            if (g = d[f],
                            g.tableModel && B && (g._storeDataDeferred = B),
                            "h1" === (v = g.type) || "h2" === v)
                                k = this.addTtxFieldRow(1, n),
                                m.create(g.type, {
                                    innerHTML: tt(g.name)
                                }, k),
                                k = 0;
                            else {
                                w = p.mixin({
                                    span: 1,
                                    wrap: !1
                                }, g.layout || {});
                                g.wrap && (w.wrap = !0);
                                w.span > b && (w.span = b);
                                "textarea" === g.type && (w.span = b,
                                w.wrap = !0);
                                k %= b;
                                z = !0 === g.hidden || "true" === g.hidden;
                                if (0 === k || w.wrap || !z && k + w.span > b)
                                    A = this.addTtxFieldRow(b, n),
                                    k = 0;
                                g = m.place(this.newTtxField(g, c, w.span, a), A);
                                z ? l.set(g, {
                                    display: "none"
                                }) : k += w.span
                            }
                        return n
                    },
                    addTtxFieldSetAuto: function(d, c, b) {
                        var a;
                        a = b;
                        b.domNode && (a = b.domNode);
                        b.ctrl || (b.ctrl = new g({
                            model: k({})
                        }));
                        b.fieldMap || (b.fieldMap = {});
                        return this.addTtxFieldSet(d, b.ctrl, c, a, b.fieldMap)
                    },
                    addFieldSetWidgetAuto: function(d, c) {
                        var b, a, e;
                        a = d.items;
                        b = d.columns;
                        e = c;
                        c.domNode && (e = c.domNode);
                        c.ctrl || (c.ctrl = new g({
                            model: k({})
                        }));
                        c.fieldMap || (c.fieldMap = {});
                        return this.addTtxFieldSet(a, c.ctrl, b, e, c.fieldMap)
                    },
                    addTtxFieldSet: function(d, c, b, a, e) {
                        null == e && (e = {});
                        d = this.newTtxFieldSet(d, c, b, e);
                        m.place(d, a);
                        return d
                    },
                    newTtxFieldRow: function(d) {
                        var c;
                        c = m.create("div", {
                            "class": "ttx-field-row ttx-field-row-" + d
                        });
                        c.setAttribute("ttx-field-row-cols", d);
                        return c
                    },
                    addTtxFieldRow: function(d, c) {
                        return m.place(this.newTtxFieldRow(d), c)
                    }
                })
            })
        },
        "ttx/dijit/builder/FieldBuilder": function() {
            define(["dojo/_base/declare", "dojo/on", "dojo/dom-construct", "dojo/dom-style", "./TtxField"], function(q, p, n, m, l) {
                return q([l], {
                    newTtxField: function(k, g, f, e) {
                        var d, c;
                        null == e && (e = {});
                        k.args && "string" === typeof k.args && (k.args = eval("(" + k.args + ")"),
                        k.args.data && (k.data = k.args.data));
                        k.wrapperStyle || (k.wrapperStyle = {});
                        f = k.hidden ? n.create("div", {
                            "class": "ttx-field hidden",
                            "ttx-field-span": 0,
                            style: k.wrapperStyle
                        }) : n.create("div", {
                            "class": "ttx-field ttx-field-col-" + f,
                            "ttx-field-span": f,
                            style: k.wrapperStyle
                        });
                        g = this.createTtxFieldWithCtrl(k, g, e);
                        if ("button" !== (d = k.type) && "toggleButton" !== d || void 0 === k.name)
                            if (c = k.labelTitle || k.name || "",
                            d = k.name || "")
                                d = n.create("label", {
                                    innerHTML: tt(d),
                                    "for": g.id,
                                    title: tt(c)
                                }, f),
                                k.labelStyle && m.set(d, k.labelStyle);
                        e[k.id] = g;
                        n.place(g.domNode, f);
                        return f
                    },
                    addTtxField: function(k, g, f, e) {
                        return n.place(this.newTtxField(k, g, f), e)
                    }
                })
            })
        },
        "ttx/util": function() {
            define(["dojo/_base/lang", "dojo/_base/array"], function(q, p) {
                var n, m;
                n = {};
                m = {};
                return q.mixin(m, {
                    setDefaults: function(l, k) {
                        for (var g in k)
                            n[g] && n[g] == k[g] || (void 0 === l[g] ? l[g] = q.clone(k[g]) : dojo.isObject(k[g]) && m.setDefaults(l[g], k[g]));
                        return l
                    },
                    forEachString: function(l, k, g) {
                        return p.forEach(l.split("."), k, g)
                    },
                    defaultWsoPanel: function(l) {
                        return this.setDefaults(l, {
                            "with": "100%",
                            height: "100%",
                            children: []
                        })
                    },
                    getUUId: function(l, k) {
                        var g, f, e, d, c, b;
                        g = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");
                        b = [];
                        k = k || g.length;
                        if (l)
                            for (f = e = 0; 0 <= l ? e < l : e > l; f = 0 <= l ? ++e : --e)
                                b[f] = g[0 | Math.random() * k];
                        else
                            for (b[8] = b[13] = b[18] = b[23] = "-",
                            b[14] = "4",
                            f = e = 0; 36 > e; f = ++e)
                                b[f] || (d = 0 | 16 * Math.random(),
                                b[f] = g[null != (c = 19 === f) ? c : d & 3 | NaN]);
                        return b.join("")
                    },
                    indexOf: function(l, k, g) {
                        var f, e;
                        e = k;
                        k instanceof Object && (e = k[g]);
                        for (f = l.length; f--; )
                            if ((k = l[f]) && k[g] && k[g] === e)
                                return f;
                        return -1
                    },
                    getDateRelativeToday: function(l) {
                        var k, g, f, e, d, c;
                        f = !0;
                        g = "year month day hour minute second".split(" ");
                        e = 0;
                        for (c = g.length; e < c; e++)
                            k = g[e],
                            void 0 !== l[k] && (f = !1);
                        return f ? null : (c = l.year || 0,
                        e = l.month || 0,
                        k = l.day || 0,
                        g = l.hour || 0,
                        f = l.minute || 0,
                        d = l.second || 0,
                        l = new Date,
                        l.setFullYear(l.getFullYear() + c),
                        l.setMonth(l.getMonth() + e),
                        l.setDate(l.getDate() + k),
                        l.setHours(l.getHours() + g),
                        l.setMinutes(l.getMinutes() + f),
                        l.setSeconds(l.getSeconds() + d),
                        l)
                    }
                })
            })
        },
        "ttx/dijit/_TabbedFormMixin": function() {
            define(["dojo/_base/declare", "dojo/dom-construct", "dijit/layout/ContentPane", "dijit/layout/TabContainer", "./_TtxForm"], function(q, p, n, m, l) {
                return q([l], {
                    addTtxTabbedFieldSet: function(k, g, f, e) {
                        var d, c, b, a, h;
                        null == e && (e = {});
                        h = new m({
                            style: "width:100%; height:" + (k.height || 200) + "px",
                            region: "center",
                            splitter: !0,
                            doLayout: !0,
                            tabs: {},
                            "class": "secondLevelTab"
                        });
                        a = k.items;
                        d = 0;
                        for (c = a.length; d < c; d++)
                            k = a[d],
                            b = k.title,
                            b = new n({
                                title: tt(b),
                                "class": "",
                                style: {
                                    padding: "4px 0 0 0"
                                }
                            }),
                            h.addChild(b),
                            k.id && (h.tabs[k.id] = b),
                            k.fields && this.addTtxFieldSet(k.fields, g, k.columns || 3, b.domNode, e);
                        p.place(h.domNode, f);
                        h.startup();
                        return h
                    },
                    _newTtxTabbedFieldSet: function(k, g, f, e) {
                        var d, c, b, a, h, l, m, n;
                        null == e && (e = {});
                        n = null;
                        c = 0;
                        b = p.create("div", {
                            "class": "ttx-field-set"
                        });
                        a = 0;
                        for (l = k.length; a < l; a++)
                            if (d = k[a],
                            "h1" === (m = d.type) || "h2" === m)
                                c = this.addTtxFieldRow(1, b),
                                p.create(d.type, {
                                    innerHTML: d.name
                                }, c),
                                c = 0;
                            else {
                                h = lang.mixin({
                                    span: 1,
                                    wrap: !1
                                }, d.layout || {});
                                d.wrap && (h.wrap = !0);
                                h.span > f && (h.span = f);
                                "textarea" === d.type && (h.span = f,
                                h.wrap = !0);
                                c %= f;
                                if (0 === c || h.wrap || c + h.span > f)
                                    n = this.addTtxFieldRow(f, b),
                                    c = 0;
                                c += h.span;
                                p.place(this.newTtxField(d, g, h.span, e), n)
                            }
                        return b
                    }
                })
            })
        },
        "ttx/wso/_TabLayoutMixin": function() {
            define(["dojo/_base/declare", "dojo/dom-geometry", "dojo/dom-style"], function(q, p, n) {
                return q(null, {
                    resize: function() {
                        var m, l;
                        m = this.workspace.domNode;
                        this.app.workspaceManager.useTab && (m = this.domNode.parentElement);
                        if (m && (m = p.getContentBox(m),
                        l = p.getPadExtents(this.domNode),
                        this.domNode && p.setMarginBox(this.tc.domNode, {
                            w: m.w - l.w,
                            h: m.h - l.h
                        }, !0),
                        this.tc.resize(),
                        n.set(this.tc.domNode, {
                            left: 0,
                            top: 0
                        }),
                        this.layoutPane))
                            return this.layoutPane(this.domNode)
                    }
                })
            })
        },
        "ttx/dnd/Source": function() {
            define(["dojo/_base/declare", "dojo/dnd/Source"], function(q, p) {
                return q([p], {
                    allowedCopyItem: !0,
                    onDndDrop: function(n, m, l, k) {
                        l && (l = this.allowedCopyItem);
                        if (this === k)
                            this.onDrop(n, m, l);
                        return this.onDndCancel()
                    }
                })
            })
        },
        "ttx/dijit/Navigator": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/dom-construct dojo/dom-class dojo/query dojo/on dojo/aspect dojo/topic dojo/request dojo/keys dojo/store/Memory dijit/_WidgetBase dijit/_TemplatedMixin dijit/form/FilteringSelect dijit/layout/ContentPane ttx/dijit/tree/Tree cbtree/extensions/TreeStyling cbtree/store/ObjectStore cbtree/model/TreeStoreModel ttx/material/ripple ttx/dijit/layout/_DragResizerMixin dojo/text!./templates/Navigator.html ./NavigatorToggle".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A) {
                return q([b, a, w, A], {
                    templateString: v,
                    app: null,
                    showRoot: !1,
                    url: "rest/creation/navigator",
                    tree: null,
                    treeNode: null,
                    quickSearch: null,
                    quickSearchNode: null,
                    expandNode: null,
                    store: null,
                    model: null,
                    widget: y,
                    expanded: !0,
                    postCreate: function() {
                        var a, b, d;
                        d = this;
                        b = this.store = new x({
                            multiParented: !0,
                            data: [{
                                id: "root",
                                name: "TTX",
                                tid: "root"
                            }]
                        });
                        a = new y({
                            store: b,
                            query: {
                                id: "root"
                            },
                            rootLabel: "TTX",
                            checkedRoot: !0
                        });
                        this.tree = new t({
                            model: a,
                            showRoot: !1,
                            openOnClick: !0,
                            region: "left",
                            splitter: !0,
                            branchCheckBox: !1,
                            "class": "tree navigatorTree",
                            leafCheckBox: !1,
                            useStar: !0,
                            onStarClick: function(a) {
                                var b;
                                b = this;
                                return a.stared ? app.dataManager.post("/userData/removeFavorite", a).then(function(c) {
                                    var d, e, h, f;
                                    if (c && c.code === app.config.code.SUCCESS && (a.stared = !1,
                                    b.changeStar(),
                                    h = [],
                                    a.parent instanceof Array)) {
                                        f = a.parent;
                                        c = 0;
                                        for (d = f.length; c < d; c++)
                                            e = f[c],
                                            "FAVORITE_NAVIGATOR" !== e && h.push(e);
                                        a.parent = h;
                                        b.tree.model.store.put(a);
                                        c = b.tree.model.store.get("FAVORITE_NAVIGATOR");
                                        if ((c = b.tree.getNodesByItem(c)[0]) && !c.isExpandable)
                                            return b.tree.model.store.remove("FAVORITE_NAVIGATOR")
                                    }
                                }) : app.dataManager.post("/userData/saveFavorite", a).then(function(c) {
                                    var d, e, h, f;
                                    if (c && c.code === app.config.code.SUCCESS) {
                                        a.stared = !0;
                                        b.changeStar();
                                        h = ["FAVORITE_NAVIGATOR"];
                                        if (a.parent instanceof String)
                                            h.push(a.parent);
                                        else if (a.parent instanceof Array)
                                            for (f = a.parent,
                                            c = 0,
                                            d = f.length; c < d; c++)
                                                e = f[c],
                                                h.push(e);
                                        a.parent = h;
                                        b.tree.model.store.put(a);
                                        if (!b.tree.model.store.get("FAVORITE_NAVIGATOR"))
                                            return c = {
                                                checked: !0,
                                                id: "FAVORITE_NAVIGATOR",
                                                name: tt("\u7528\u6237\u6536\u85cf"),
                                                parent: ["root"],
                                                stared: !0,
                                                icon: "favorite-already"
                                            },
                                            b.tree.model.store.put(c, {
                                                before: b.tree.model.store.getChildren({
                                                    id: "root"
                                                })[0]
                                            })
                                    }
                                })
                            }
                        },this.treeNode);
                        this.tree.startup();
                        this.quickSearch = new h({
                            "class": "quickSearch",
                            searchAttr: "name",
                            label: "State:",
                            name: "state",
                            store: new c({
                                data: []
                            }),
                            value: "",
                            required: !1,
                            labelType: "html",
                            labelFunc: function(a) {
                                return "\x3cdiv class\x3d'name'\x3e" + a.name + "\x3c/div\x3e"
                            }
                        },this.quickSearchNode);
                        g.after(this.tree, "focusNode", function(a) {
                            return f.publish("focusNavNode", b, a.item, a)
                        }, !0);
                        k(this.tree, "click", function(a) {
                            return f.publish("clickNavNode", a)
                        });
                        this.bindEvent();
                        return this.addDragDom(this.domNode, function() {
                            return d.tree.resize()
                        })
                    },
                    buildSearchWidget: function(a) {
                        var b, c;
                        c = this;
                        b = this.quickSearch;
                        b.queryExpr = "*${0}*";
                        b.autoComplete = !1;
                        b.store.setData(a);
                        b.on("change", function(a) {
                            a = this.store.get(a);
                            return c.openNav(a)
                        });
                        return this.quickSearch.textbox.onkeyup = function(a) {
                            if (event.keyCode === d.ENTER)
                                return c.openNav(b.store.get(b.get("value")))
                        }
                    },
                    openNav: function(a) {
                        l("input.dijitInputInner", this.domNode)[0].blur();
                        this.selectNavItem(a);
                        return f.publish("clickNavNode", a)
                    },
                    selectNavItem: function(a) {
                        var b, c;
                        c = this.tree;
                        b = c.getNodesByItem(a.id)[0];
                        b.isExpandable && !b.isExpanded && c._expandNode(b);
                        "root" !== a.parent[0] && this.selectNavItem(c.getNodesByItem({
                            id: a.parent
                        })[0].item);
                        return c._setSelectedNodeAttr(b)
                    },
                    reset: function() {
                        var a, b, c, d, e;
                        d = this.store.query();
                        e = [];
                        a = 0;
                        for (c = d.length; a < c; a++)
                            b = d[a],
                            "root" !== b.id ? e.push(this.store.remove(b.id)) : e.push(void 0);
                        return e
                    },
                    toggleExpand: function(a) {
                        (this.expanded = !this.expanded) ? (m.replace(this.domNode, "expanded", "shrinked"),
                        m.replace(app.topNav.logo, "logo", "logoShrinked")) : (m.replace(this.domNode, "shrinked", "expanded"),
                        m.replace(app.topNav.logo, "logoShrinked", "logo"));
                        return this.app.appContainer.resize()
                    },
                    reload: function() {
                        var a, b;
                        b = this;
                        a = this.app;
                        return a.dataManager.post("rest/permission/securableUserNav", {
                            user: a.session.user
                        }).then(function(c) {
                            return a.dataManager.get("/userData/getFavorite").then(function(a) {
                                b.buildStoreWithFavorite(a, c);
                                return b.hideNav()
                            }, function(a) {
                                return b.buildStoreWithFavorite([], c)
                            })
                        })
                    },
                    buildStoreWithFavorite: function(a, b) {
                        var c, d, e, h, f;
                        h = {};
                        if (a && a.length)
                            for (d = 0,
                            e = a.length; d < e; d++)
                                c = a[d],
                                c.name = tt(c.name),
                                "root" !== c.parent ? h[c.id] = c : h.root = c;
                        if (b && b.length)
                            for (d = 0,
                            e = b.length; d < e; d++)
                                c = b[d],
                                c.name = tt(c.name),
                                c.stared = !1,
                                h[c.id] && (h[c.id].stared = !0,
                                "root" === c.id ? this.store.put(h[c.id]) : (f = [c.parent],
                                f.push(h[c.id].parent),
                                c.parent = f),
                                c.stared = !0),
                                "root" !== c.id && this.store.put(c);
                        return this.buildSearchWidget(b)
                    }
                })
            })
        },
        "ttx/dijit/tree/Tree": function() {
            define("dojo/_base/declare dojo/on dojo/dom-class dijit/registry cbtree/Tree dojo/text!./templates/cbtreeNode.html".split(" "), function(q, p, n, m, l, k) {
                var g;
                g = q([l._TreeNode], {
                    templateString: k,
                    useStar: !1,
                    _setExpando: function() {
                        var f;
                        this.inherited(arguments);
                        if (this.useStar)
                            return this.isExpandable ? n.remove(this.star, "star") : n.add(this.star, "star"),
                            f = this.params.item,
                            f.stared ? this.starIcon.src = "/css/icon/SVG/favorite-already.svg" : this.starIcon.src = "/css/icon/SVG/favorite-not.svg"
                    },
                    changeStar: function() {
                        var f, e, d, c, b, a;
                        e = this.params.item;
                        a = this.tree.getNodesByItem(e);
                        c = [];
                        f = 0;
                        for (d = a.length; f < d; f++) {
                            b = a[f];
                            if (!b)
                                break;
                            e.stared ? c.push(b.starIcon.src = "/css/icon/SVG/favorite-already.svg") : c.push(b.starIcon.src = "/css/icon/SVG/favorite-not.svg")
                        }
                        return c
                    },
                    postCreate: function() {
                        var f;
                        this.inherited(arguments);
                        f = this;
                        if (this.useStar)
                            return p(this.starIcon, "click", function(e) {
                                f.onStarClick(f.params.item);
                                return e.stopPropagation()
                            })
                    },
                    onStarClick: function(f) {}
                });
                q = q([l], {
                    _createTreeNode: function(f) {
                        f.widget = this._customWidget;
                        f.useStar = this.useStar;
                        f.onStarClick = this.onStarClick;
                        this._hasStyling && this._icon && (f.icon = this._icon);
                        return new g(f)
                    },
                    _onClick: function(f, e) {
                        m.getEnclosingWidget(e.target).isInstanceOf(g) && this.inherited(arguments)
                    },
                    getIconStyle: function(f) {
                        var e, d;
                        e = this.model.mayHaveChildren(f);
                        d = this.inherited(arguments) || {};
                        e ? this.branchIcons ? f.icon || (f.icon = "icon-folder-open") : (d.display = "none",
                        f.icon || (f.icon = "icon-folder2")) : this.leafIcons || (d.display = "none",
                        f.icon || (f.icon = " icon-file-text2"));
                        f.icon || (f.icon = "cbt-nav-report");
                        d.background = "url(/css/icon/SVG/" + f.icon + ".svg) no-repeat";
                        return d
                    }
                });
                q._TreeNode = g;
                return q
            })
        },
        "cbtree/Tree": function() {
            define("module require dojo/_base/connect dojo/_base/declare dojo/_base/lang dojo/aspect dojo/Deferred dojo/dom-construct dojo/has dojo/keys dojo/on dojo/topic dojo/text!./templates/cbtreeNode.html dijit/registry dijit/Tree ./CheckBox ./errors/createError!./errors/CBTErrors.json ./util/IE8_Event ./util/shim/Array".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x) {
                var y = u(q.id)
                  , z = e("ie")
                  , w = 0
                  , v = m([r._TreeNode], {
                    templateString: a,
                    _checkBox: null,
                    _toggle: !0,
                    _widget: null,
                    constructor: function(a) {
                        var b = {
                            type: t,
                            target: "INPUT",
                            mixin: null,
                            postCreate: null
                        }
                          , c = {
                            multiState: null,
                            checked: void 0,
                            value: "on"
                        };
                        if (a = a.widget)
                            l.mixin(c, a.args),
                            l.mixin(b, a);
                        b.args = c;
                        this._toggle = "function" == typeof b.type.prototype.toggle;
                        this._widget = b
                    },
                    _getCheckedAttr: function() {
                        if (this._checkBox)
                            return this.tree.model.getChecked(this.item)
                    },
                    _getEnabledAttr: function() {
                        return this.tree.model.getEnabled(this.item)
                    },
                    _set_checked_Attr: function(a) {
                        this._checkBox && this._checkBox.set("checked", a)
                    },
                    _set_enabled_Attr: function(a) {
                        this._checkBox && this._checkBox.set("readOnly", !a)
                    },
                    _setCheckedAttr: function(a) {
                        if (this._checkBox)
                            return this.tree.model.setChecked(this.item, a)
                    },
                    _setEnabledAttr: function(a) {
                        void 0 === this.tree.model.setEnabled(this.item, a) && this.set("_enabled_", !!a)
                    },
                    _createCheckBox: function(a) {
                        var b = !0 === this.tree.attachToForm
                          , c = this.tree.model
                          , d = !0
                          , e = c.getChecked(this.item)
                          , h = this._widget
                          , g = h.args;
                        "function" == typeof c.getEnabled && (d = c.getEnabled(this.item));
                        if (void 0 !== e) {
                            g.multiState = a;
                            g.checked = e;
                            g.value = this.label;
                            "function" == typeof h.mixin && l.hitch(this, h.mixin)(g);
                            this._checkBox = new h.type(g);
                            b ? this._checkBox.set("name", this._checkBox.id) : this._checkBox.name = this._checkBox.id;
                            this._checkBox.item = this.item;
                            if (!this.isExpandable && !this.tree.leafCheckBox || this.isExpandable && !this.tree.branchCheckBox)
                                this._checkBox.domNode.style.display = "none";
                            "function" == typeof this._widget.postCreate && l.hitch(this._checkBox, this._widget.postCreate)(this);
                            f.place(this._checkBox.domNode, this.checkBoxNode, "replace")
                        }
                        this._checkBox && (this.isExpandable ? !this.tree.branchReadOnly && d || this._checkBox.set("readOnly", !0) : !this.tree.leafReadOnly && d || this._checkBox.set("readOnly", !0))
                    },
                    _remove: function() {
                        function a(b) {
                            if (!b._destroyed) {
                                var e = d.getIdentity(b.item)
                                  , h = c._itemNodesMap[e];
                                1 == h.length ? delete c._itemNodesMap[e] : (e = h.indexOf(b),
                                -1 != e && h.splice(e, 1));
                                c.dndController.removeTreeNode(b);
                                b.getChildren().forEach(a);
                                c.persist && b.isExpanded && c._state(b, !1)
                            }
                        }
                        var b = this.getParent()
                          , c = this.tree
                          , d = c.model;
                        a(this);
                        b && this != c.rootNode && b.removeChild(this);
                        this.destroyRecursive()
                    },
                    _setExpando: function() {
                        this.rowNode.setAttribute("expandable", this.isExpandable.toString());
                        this.inherited(arguments)
                    },
                    _toggleCheckBox: function() {
                        var a;
                        this._checkBox && (this._toggle ? a = this._checkBox.toggle() : (a = this._checkBox.get("checked"),
                        a = "mixed" == a ? !0 : !a),
                        this._checkBox.set("checked", a));
                        return a
                    },
                    destroy: function() {
                        this._checkbox && (this._checkbox.destroyRecursive(),
                        delete this._checkbox);
                        this.inherited(arguments)
                    },
                    postCreate: function() {
                        var a = this.tree
                          , b = null;
                        !0 === a.checkBoxes && this._createCheckBox(a._multiState);
                        a._hasStyling && a._iconAttr && (b = a.get("icon", this.item)) && this.set("_icon_", b);
                        this.set("tooltip", this.title);
                        this.inherited(arguments)
                    }
                });
                q = m([r], {
                    attachToForm: !1,
                    branchCheckBox: !0,
                    branchIcons: !0,
                    branchReadOnly: !1,
                    checkBoxes: !0,
                    clickEventCheckBox: !0,
                    closeOnUnchecked: !1,
                    deleteRecursive: !1,
                    enableDelete: !1,
                    leafCheckBox: !0,
                    leafIcons: !0,
                    leafReadOnly: !1,
                    openOnChecked: !1,
                    _multiState: !0,
                    _customWidget: null,
                    _eventAttrMap: null,
                    _dojoRequired: {
                        min: {
                            major: 1,
                            minor: 8
                        },
                        max: {
                            major: 1,
                            minor: 99
                        }
                    },
                    _checkboxBaseClass: t.prototype.baseClass,
                    _assertVersion: function() {
                        if (dojo.version) {
                            var a = 199
                              , b = 0;
                            w = 100 * dojo.version.major + dojo.version.minor;
                            if (this._dojoRequired && (void 0 !== this._dojoRequired.min && (b = 100 * this._dojoRequired.min.major + this._dojoRequired.min.minor),
                            void 0 !== this._dojoRequired.max && (a = 100 * this._dojoRequired.max.major + this._dojoRequired.max.minor),
                            w < b || w > a))
                                throw new y("InvalidVersion","_assertVersion");
                        } else
                            throw new y("UnknownVersion","_assertVersion");
                    },
                    _createTreeNode: function(a) {
                        a.widget = this._customWidget;
                        this._hasStyling && this._icon && (a.icon = this._icon);
                        return new v(a)
                    },
                    _onCheckBoxClick: function(a, c) {
                        var d = c._checkBox.get("checked")
                          , e = c.item;
                        this.model.setChecked(e, d);
                        d && this.openOnChecked ? this.expandChecked() : !d && this.closeOnUnchecked && this.collapseUnchecked();
                        this.onCheckBoxClick(e, c, a);
                        if (this.clickEventCheckBox)
                            this.onClick(e, c, a);
                        this.focusNode(c);
                        b.publish("checkbox", {
                            item: e,
                            node: c,
                            state: d,
                            evt: a
                        });
                        a.stopPropagation();
                        return d
                    },
                    _onClick: function(a, b) {
                        h.getEnclosingWidget(b.target).isInstanceOf(v) && this.inherited(arguments)
                    },
                    _onItemChange: function(a, b, c) {
                        if (b = this._eventAttrMap[b]) {
                            var d = this.model.getIdentity(a)
                              , d = this._itemNodesMap[d]
                              , e = {};
                            d && (e[b.attribute] = b.value ? "function" == typeof b.value ? l.hitch(this, b.value)(a, b.attribute, c) : b.value : c,
                            d.forEach(function(b) {
                                b.item = a;
                                b.set(e)
                            }, this))
                        }
                    },
                    _onItemDelete: function(a) {
                        a = this.model.getIdentity(a);
                        if (a = this._itemNodesMap[a])
                            a = a.slice(0),
                            a.forEach(function(a) {
                                a._remove()
                            })
                    },
                    _onDeleteKey: function(a) {
                        109 > w && (a = a.evt);
                        n.isCopyKey(a) && this.enableDelete && "function" == typeof this.model.deleteItem && (a = this.paths.map(function(a) {
                            return a[a.length - 1]
                        }),
                        a.length && this.model.deleteItem(a, this.deleteRecursive))
                    },
                    _onEnterKey: function(a) {
                        var b = a.node
                          , c = a.evt;
                        c.altKey || c.keyCode != d.SPACE || this._onSpaceKey(c, b);
                        this.inherited(arguments)
                    },
                    _onSpaceKey: function(a, b) {
                        b && b._checkBox && !a.altKey && a.keyCode == d.SPACE && (b._toggleCheckBox(),
                        this._onCheckBoxClick(a, b))
                    },
                    _onLabelChange: function(a, b) {
                        this.mapEventToAttr(a, b, "label")
                    },
                    _onModelReset: function() {
                        var a = l.clone(this._openedNodes)
                          , b = this.model
                          , c = this;
                        this.onLoadDeferred.always(function() {
                            c.rootNode && !c.rootNode._destroyed && c._onItemDelete(c.rootNode.item);
                            b.ready().then(function() {
                                c.expandChildrenDeferred = new g;
                                c.pendingCommandsDeferred = c.expandChildrenDeferred;
                                c.persist && (c._openedNodes = a);
                                c._load();
                                c.onLoadDeferred = c.pendingCommandsPromise;
                                c.onLoadDeferred.then(l.hitch(c, "onLoad"))
                            }, function(a) {
                                throw a;
                            })
                        })
                    },
                    _onSubmit: function(a) {
                        var b = a;
                        z && 9 > z && (b = new x(this.formNode,"submit",{
                            cancelable: !0
                        },a),
                        b.defaultPrevented = !!a.returnValue);
                        b.defaultPrevented || !1 === this.onSubmit(this.formNode, this, b) && b.preventDefault();
                        return !b.defaultPrevented
                    },
                    _setAttachToFormAttr: function(a) {
                        var b = this;
                        if (a)
                            if ("boolean" === typeof a || "object" === typeof a)
                                "object" !== typeof a || this._hasOnSubmit || p([a.extension || "./extensions/TreeOnSubmit"], function(a) {
                                    k.around(b, "onSubmit", function() {
                                        return a.prototype.onSubmit
                                    });
                                    this._hasOnSubmit = !0
                                }),
                                this.attachToForm = a;
                            else
                                throw new y("InvalidType","_setAttachToFormAttr");
                        else
                            this.attachToForm = !1
                    },
                    _setWidgetAttr: function(a) {
                        var b = a, c;
                        if ("string" == typeof a)
                            return this._setWidgetAttr({
                                type: a
                            });
                        if (l.isObject(a) && a.hasOwnProperty("type"))
                            if (b = a.type,
                            "function" == typeof b)
                                if (c = b.prototype,
                                this._checkboxBaseClass = b.prototype.baseClass,
                                c && void 0 !== c.checked) {
                                    if ("function" == typeof c.get && "function" == typeof c.set) {
                                        this._customWidget = a;
                                        return
                                    }
                                    b = "Widget does not support get() and/or set()"
                                } else
                                    b = "widget MUST have a 'checked' property";
                            else {
                                if ("string" == typeof b && ~b.indexOf("/")) {
                                    var d = this;
                                    p([b], function(b) {
                                        a.type = b;
                                        d._setWidgetAttr(a)
                                    });
                                    return
                                }
                                b = "argument is not a valid module id"
                            }
                        else
                            b = "Object is missing required 'type' property";
                        throw new y("InvalidWidget","_setWidgetAttr",b);
                    },
                    collapseUnchecked: function(a) {
                        (a = a || this.rootNode) && a.isExpandable && a.isExpanded && (a.getChildren(a).forEach(function(a) {
                            this.collapseUnchecked(a)
                        }, this),
                        !1 === this.model.getChecked(a.item) && this._collapseNode(a))
                    },
                    create: function() {
                        this._assertVersion();
                        this.inherited(arguments)
                    },
                    destroy: function() {
                        this.model = null;
                        this.inherited(arguments)
                    },
                    expandChecked: function(a) {
                        var b = !1;
                        a || (a = this.rootNode,
                        b = !a._checkBox);
                        a && a.isExpandable && (b || this.model.getChecked(a.item)) && (a.isExpanded || this._expandNode(a),
                        a.getChildren(a).forEach(function(a) {
                            this.expandChecked(a)
                        }, this))
                    },
                    getIconStyle: function(a) {
                        var b = this.model.mayHaveChildren(a)
                          , c = this.inherited(arguments) || {};
                        b ? this.branchIcons || (c.display = "none") : this.leafIcons || (c.display = "none");
                        return c
                    },
                    mixinEvent: function(a, b, c) {
                        this.model.isItem(a) && this._eventAttrMap[b] && (this._onItemChange(a, b, c),
                        this.onEvent(a, b, c))
                    },
                    onCheckBoxClick: function() {},
                    onEvent: function() {},
                    onSubmit: function() {},
                    postMixInProperties: function() {
                        this._eventAttrMap = {};
                        this.inherited(arguments)
                    },
                    postCreate: function() {
                        var a = this.domNode.parentNode
                          , b = this.model
                          , e = this;
                        if (this.model) {
                            !0 === this.checkBoxes && (this._modelOk() ? (this._multiState = b.multiState,
                            this.mapEventToAttr(null, b.get("checkedAttr") || "checked", "_checked_"),
                            b.validateData()) : (console.warn(b.id + "::postCreate(): model does not support getChecked() and/or setChecked()."),
                            this.checkBoxes = !1));
                            k.after(b, "onLabelChange", l.hitch(this, "_onLabelChange"), !0);
                            k.after(b, "onReset", l.hitch(this, "_onModelReset"), !0);
                            this.mapEventToAttr(null, b.get("enabledAttr"), "_enabled_");
                            this.mapEventToAttr(null, b.get("labelAttr"), "label");
                            this.inherited(arguments);
                            b = "." + this._checkboxBaseClass;
                            109 > w ? (this.own(c(this.domNode, c.selector(b, "click"), function(a) {
                                e._onCheckBoxClick(a, h.getEnclosingWidget(this.parentNode))
                            })),
                            this._onKeyDown(null, {}),
                            this._keyHandlerMap[d.DELETE] = "_onDeleteKey") : (this.own(c(this.containerNode, c.selector(b, "click"), function(a) {
                                e._onCheckBoxClick(a, h.getEnclosingWidget(this.parentNode))
                            })),
                            this._keyNavCodes[d.DELETE] = l.hitch(this, "_onDeleteKey"),
                            this._keyNavCodes[d.SPACE] = l.hitch(this, "_onSpaceKey"));
                            for (this.on("load", function() {
                                !e.autoExpand && e.openOnChecked && e.expandChecked()
                            }); a; ) {
                                if ("FORM" === a.nodeName) {
                                    c(a, "submit", l.hitch(this, "_onSubmit"));
                                    break
                                }
                                a = a.parentNode
                            }
                            this.formNode = a
                        } else
                            throw new y("PropertyMissing","postCreate","no model was specified");
                    },
                    mapEventToAttr: function(a, b, c, d) {
                        "string" == typeof b && "string" == typeof c && b.length && c.length && (a && delete this._eventAttrMap[a],
                        this._eventAttrMap[b] = {
                            attribute: c,
                            value: d
                        })
                    },
                    _modelOk: function() {
                        return this.model.getChecked && "function" == typeof this.model.getChecked && this.model.setChecked && "function" == typeof this.model.setChecked ? !0 : !1
                    }
                });
                q._TreeNode = v;
                return q
            })
        },
        "cbtree/CheckBox": function() {
            define(["dijit/form/CheckBox", "dojo/_base/declare", "dojo/_base/event", "dojo/dom-attr"], function(q, p, n, m) {
                return p([q], {
                    baseClass: "cbtreeCheckBox",
                    toggleState: {
                        mixed: !0,
                        "true": !1,
                        "false": !0
                    },
                    multiState: !0,
                    _getCheckedAttr: function() {
                        return this.checked
                    },
                    _onClick: function(l) {
                        return this.readOnly || this.disabled ? n.stop(l) : (this.toggle(),
                        this.onClick(l))
                    },
                    _setCheckedAttr: function(l, k) {
                        var g = l, f;
                        "mixed" === g && this.multiState || (g = g ? !0 : !1);
                        f = "mixed" == g ? g : g ? "true" : "false";
                        this._set("checked", g);
                        m.set(this.focusNode || this.domNode, "checked", g);
                        (this.focusNode || this.domNode).setAttribute("aria-checked", f);
                        this._handleOnChange(g, k);
                        return g
                    },
                    _setValueAttr: function(l) {
                        "string" == typeof l && (this.value = l,
                        m.set(this.focusNode, "value", l))
                    },
                    toggle: function() {
                        var l = this.get("checked");
                        this.readOnly || this.disabled || (l = this.toggleState[l.toString()],
                        l = this._setCheckedAttr(void 0 !== l ? l : !0));
                        return l
                    }
                })
            })
        },
        "cbtree/errors/createError": function() {
            define(["dojo/_base/lang", "dojo/request", "../util/shim/Array"], function(q, p) {
                function n(e) {
                    switch (Object.prototype.toString.call(e)) {
                    case "[object Array]":
                        e.forEach(n);
                        break;
                    case "[object Object]":
                        var d;
                        a: {
                            var c;
                            for (d in e)
                                if (/\W/.test(d) || !(c = e[d]) || !c.text) {
                                    d = !1;
                                    break a
                                }
                            d = !0
                        }
                        d && (f = q.mixin(f, e))
                    }
                }
                function m(e, d) {
                    var c = (e || "").replace(/Error$/, "")
                      , b = c + "Error"
                      , a = {
                        type: b,
                        text: "",
                        code: 0
                    };
                    c && (a = q.mixin(a, f[b] || f[c] || k));
                    a.text = d || a.text;
                    return a
                }
                function l(e, d) {
                    function c(a, c, d) {
                        var h = e + (c ? b + c + "()" : ""), f;
                        if (a instanceof Error) {
                            for (f in a)
                                a.hasOwnProperty(f) && (this[f] = a[f]);
                            f = {
                                type: a.name,
                                code: a.code || 0,
                                text: d || a.message
                            }
                        } else
                            f = m(a, d);
                        if (2 < arguments.length) {
                            var g = Array.prototype.slice.call(arguments, 3);
                            f.text = f.text.replace(/\%\{(\d+)\}/g, function(a, b) {
                                return void 0 != g[b] ? g[b] : a
                            })
                        }
                        this.message = (h.length ? h + ": " : "") + f.text;
                        this.code = f.code;
                        this.name = f.type
                    }
                    var b = e ? "::" : "";
                    e = e || "";
                    n(d || {});
                    c.prototype = Error();
                    return c.prototype.constructor = c
                }
                var k = {
                    text: "Undefined error",
                    code: 0
                }
                  , g = {}
                  , f = {};
                l.normalize = function(e, d) {
                    var c = e.split("!")
                      , c = c.map(function(b) {
                        return /^\./.test(b) ? d(b) : b
                    });
                    return c.join("!")
                }
                ;
                l.load = function(e, d, c) {
                    function b() {
                        0 == --a && c(l)
                    }
                    e = e.split("!");
                    var a = e.length;
                    e.forEach(function(a) {
                        a = d.toUrl(a);
                        a in g ? b() : (p(a, {
                            handleAs: "json"
                        }).then(function(a) {
                            n(a);
                            b()
                        }, function(a) {
                            b()
                        }),
                        g[a] = !0)
                    })
                }
                ;
                return l
            })
        },
        "cbtree/util/shim/Array": function() {
            define([], function() {
                Array.prototype.every || (Array.prototype.every = function(q, p) {
                    if (null == this)
                        throw new TypeError;
                    var n = Object(this)
                      , m = n.length >>> 0;
                    if ("function" != typeof q)
                        throw new TypeError;
                    for (var l = 0; l < m; l++)
                        if (l in n && !q.call(p, n[l], l, n))
                            return !1;
                    return !0
                }
                );
                Array.prototype.filter || (Array.prototype.filter = function(q, p) {
                    if (null == this)
                        throw new TypeError;
                    var n = Object(this)
                      , m = n.length >>> 0;
                    if ("function" != typeof q)
                        throw new TypeError;
                    for (var l = [], k = 0; k < m; k++)
                        if (k in n) {
                            var g = n[k];
                            q.call(p, g, k, n) && l.push(g)
                        }
                    return l
                }
                );
                Array.prototype.forEach || (Array.prototype.forEach = function(q, p) {
                    var n, m;
                    if (null == this)
                        throw new TypeError("this is null or not defined");
                    var l = Object(this)
                      , k = l.length >>> 0;
                    if ("[object Function]" !== {}.toString.call(q))
                        throw new TypeError(q + " is not a function");
                    p && (n = p);
                    for (m = 0; m < k; ) {
                        var g;
                        Object.prototype.hasOwnProperty.call(l, m) && (g = l[m],
                        q.call(n, g, m, l));
                        m++
                    }
                }
                );
                Array.prototype.indexOf || (Array.prototype.indexOf = function(q) {
                    if (null == this)
                        throw new TypeError;
                    var p = Object(this)
                      , n = p.length >>> 0;
                    if (0 === n)
                        return -1;
                    var m = 0;
                    1 < arguments.length && (m = Number(arguments[1]),
                    m != m ? m = 0 : 0 != m && Infinity != m && -Infinity != m && (m = (0 < m || -1) * Math.floor(Math.abs(m))));
                    if (m >= n)
                        return -1;
                    for (m = 0 <= m ? m : Math.max(n - Math.abs(m), 0); m < n; m++)
                        if (m in p && p[m] === q)
                            return m;
                    return -1
                }
                );
                Array.prototype.lastIndexOf || (Array.prototype.lastIndexOf = function(q) {
                    if (null == this)
                        throw new TypeError;
                    var p = Object(this)
                      , n = p.length >>> 0;
                    if (0 === n)
                        return -1;
                    var m = n;
                    1 < arguments.length && (m = Number(arguments[1]),
                    m != m ? m = 0 : 0 != m && m != 1 / 0 && m != -(1 / 0) && (m = (0 < m || -1) * Math.floor(Math.abs(m))));
                    for (n = 0 <= m ? Math.min(m, n - 1) : n - Math.abs(m); 0 <= n; n--)
                        if (n in p && p[n] === q)
                            return n;
                    return -1
                }
                );
                Array.prototype.map || (Array.prototype.map = function(q, p) {
                    if (null == this)
                        throw new TypeError(" this is null or not defined");
                    var n, m, l, k = Object(this), g = k.length >>> 0;
                    if ("[object Function]" != {}.toString.call(q))
                        throw new TypeError(q + " is not a function");
                    p && (n = p);
                    m = Array(g);
                    for (l = 0; l < g; ) {
                        var f;
                        l in k && (f = k[l],
                        f = q.call(n, f, l, k),
                        m[l] = f);
                        l++
                    }
                    return m
                }
                );
                Array.prototype.some || (Array.prototype.some = function(q, p) {
                    if (null == this)
                        throw new TypeError;
                    var n = Object(this)
                      , m = n.length >>> 0;
                    if ("function" != typeof q)
                        throw new TypeError;
                    for (var l = 0; l < m; l++)
                        if (l in n && q.call(p, n[l], l, n))
                            return !0;
                    return !1
                }
                )
            })
        },
        "cbtree/util/IE8_Event": function() {
            define(function() {
                return function(q, p, n, m) {
                    this.currentTarget = this.target = q;
                    this.eventPhase = 2;
                    this.bubbles = !(!n || !n.bubbles);
                    this.cancelable = !(!n || !n.cancelable);
                    this.defaultPrevented = this.isTrusted = !1;
                    this.ieEventObject = m;
                    this.type = p;
                    this.stopPropagation = this.stopImmediatePropagation = function() {
                        m.cancelBubble = !0
                    }
                    ;
                    this.preventDefault = function() {
                        m.returnValue = !1;
                        this.defaultPrevented = !0
                    }
                }
            })
        },
        "cbtree/Evented": function() {
            define(["dojo/aspect", "dojo/on"], function(q, p) {
                return function() {
                    this.on = function(n, m) {
                        function l(k, g) {
                            var f = k.constructor
                              , e = f._onMap;
                            if (!e) {
                                var e = f._onMap = {}, d;
                                for (d in f.prototype)
                                    /^on/.test(d) && (e[d.replace(/^on/, "").toLowerCase()] = d)
                            }
                            return e[g.toLowerCase()] || "on" + g
                        }
                        return p.parse(this, n, m, function(k, g) {
                            return q.after(k, l(k, g), m, !0)
                        })
                    }
                    ;
                    this.emit = function(n, m) {
                        var l = [this];
                        m.type || (m.type = n);
                        l.push.apply(l, arguments);
                        return p.emit.apply(p, l)
                    }
                }
            })
        },
        "cbtree/extensions/TreeStyling": function() {
            define("module dojo/_base/lang dojo/aspect dojo/dom-class dojo/dom-prop dojo/dom-style dijit/Tree ../errors/createError!../errors/CBTErrors.json".split(" "), function(q, p, n, m, l, k, g, f) {
                function e(b) {
                    for (var a in b)
                        if (b.hasOwnProperty(a))
                            return !1;
                    return !0
                }
                function d(b) {
                    return b && "[object Object]" == Object.prototype.toString.call(b)
                }
                var c = f(q.id);
                g._TreeNode.extend({
                    _applyClassAndStyle: function(b, a) {
                        var c, d, f, g, n;
                        f = a + "Class";
                        g = a + "Style";
                        n = a + "Node";
                        c = l.get(this[n], "className");
                        d = this.tree.get(f, this.item, this.isExpanded, this) || c;
                        c !== d && (m.replace(this[n], d, c || ""),
                        this[f] = d);
                        c = e(this[g]) ? this.tree.get(g, this.item, this.isExpanded) || {} : this[g];
                        k.set(this[n], c);
                        this[g] = c
                    },
                    _set_icon_Attr: function(b) {
                        b.iconClass && (this._set_iconClass_Attr(b.iconClass),
                        this.icon = b)
                    },
                    _set_iconClass_Attr: function(b) {
                        b && b !== this.iconClass && (m.replace(this.iconNode, b, this.iconClass || ""),
                        this._applyClassAndStyle(this.item, "icon"))
                    },
                    _set_styling_Attr: function(b) {
                        this._updateItemClasses(this.item)
                    },
                    _setIconStyleAttr: function(b) {
                        this.iconStyle = b;
                        this._applyClassAndStyle(this.item, "icon")
                    },
                    _setLabelStyleAttr: function(b) {
                        this.labelStyle = b;
                        this._applyClassAndStyle(this.item, "label")
                    },
                    _setRowStyleAttr: function(b) {
                        this.rowStyle = b;
                        this._applyClassAndStyle(this.item, "row")
                    }
                });
                g.extend({
                    _hasStyling: !0,
                    _icon: null,
                    _iconAttr: null,
                    _itemStyleMap: {},
                    _itemAttr: ["icon", "label", "row"],
                    _typeAttr: ["Class", "Style"],
                    _dijitIconClasses: ["dijitFolderOpened", "dijitFolderClosed", "dijitLeaf"],
                    iconClass: "",
                    _getBaseClass: function(b) {
                        b = b ? l.get(b.iconNode, "className") : "";
                        var a, c;
                        a = "";
                        b = p.trim(b).split(/\s+/);
                        if (b[0]) {
                            for (c = 0; c < this._dijitIconClasses.length; c++)
                                a = b.indexOf(this._dijitIconClasses[c]),
                                -1 != a && b.splice(a, 1);
                            a = b.toString()
                        }
                        return a.replace(/,/g, " ")
                    },
                    _getClassOrStyle: function(b, a, d) {
                        if (-1 != this._itemAttr.indexOf(a) && -1 != this._typeAttr.indexOf(d))
                            return this._getItemStyling(b)[a][a + d];
                        throw new c("InvalidProperty","getClassOrStyle");
                    },
                    _getHasTreeSytlingAttr: function() {
                        return this._hasStyling
                    },
                    _getItemStyling: function(b) {
                        this._connected || this._connectModel();
                        if (p.isObject(b)) {
                            b = b ? this.model.getIdentity(b) : "__DEFAULT";
                            var a = this._itemStyleMap[b];
                            a || (a = this._getTreeStyling(),
                            this._icon && (a.icon = this._icon),
                            this._itemStyleMap[b] = a);
                            return a
                        }
                        throw new c("InvalidType","getItemStyling");
                    },
                    _getTreeStyling: function() {
                        var b = this._itemStyleMap.__DEFAULT || {};
                        e(b) && (this._itemAttr.forEach(function(a) {
                            b[a] = this._initStyleElement(a)
                        }, this),
                        b.defStyle = !0);
                        return p.clone(b)
                    },
                    _initStyleElement: function(b) {
                        var a = {};
                        this._typeAttr.forEach(function(c) {
                            a[b + c] = null
                        }, this);
                        return a
                    },
                    _setAllItems: function(b, a, c, d) {
                        b = b ? b instanceof Array ? b : this._object2Array(b) : [];
                        var e;
                        b.unshift(null);
                        for (e in this._itemStyleMap)
                            b[0] = this._itemStyleMap[e],
                            a.apply(d || this, Array.prototype.slice.call(b, 0));
                        c && c.apply(d || this, Array.prototype.slice.call(b, 1))
                    },
                    _setAttrClass: function(b, a, d, e) {
                        if ("string" === typeof d) {
                            if (-1 != this._itemAttr.indexOf(a)) {
                                var h = p.trim(d).split(/\s+/);
                                if (h[0]) {
                                    if (b) {
                                        var f = this._getItemStyling(b);
                                        f[a][a + "Class"] = d;
                                        f[a].baseClass = h[0];
                                        delete f.defStyle;
                                        e && e.call(this, b, a, d, h[0]);
                                        return f[a]
                                    }
                                    this._setAllItems([a, d, h[0]], function(a, b, c, d) {
                                        a[b][b + "Class"] = c;
                                        a[b].baseClass = d;
                                        delete a.defStyle
                                    }, e, this)
                                }
                                return null
                            }
                            throw new c("InvalidProperty","setItemClass");
                        }
                        throw new c("InavlidType","setItemClass");
                    },
                    _setAttrClassSet: function(b, a, c) {
                        b ? this._setAttrClass(b, a, c, function(a, b, c, d) {
                            this._setStyling(a, "_styling_", c)
                        }) : this._setAttrClass(null, a, c, function(a, b, c) {
                            this._setTreeNodes(this.rootNode, {
                                _styling_: b
                            })
                        })
                    },
                    _setAttrStyle: function(b, a, d, e) {
                        if (p.isObject(d)) {
                            if (-1 != this._itemAttr.indexOf(a)) {
                                if (b) {
                                    var h = this._getItemStyling(b);
                                    h[a][a + "Style"] = d;
                                    e && e.call(this, b, a, d);
                                    return h[a]
                                }
                                this._setAllItems([a, d], function(a, b, c) {
                                    a[b][b + "Style"] = c
                                }, e, this);
                                return null
                            }
                            throw new c("InvalidProperty","setItemStyle");
                        }
                        throw new c("InvalidType","setItemStyle");
                    },
                    _setAttrStyleSet: function(b, a, c) {
                        var d = {};
                        this._connected || this._connectModel();
                        b ? this._setAttrStyle(b, a, c, function(a, b, c) {
                            this._setStyling(a, b + "Style", c)
                        }) : this._setAttrStyle(null, a, c, function(a, b) {
                            d[a + "Style"] = b;
                            this._setTreeNodes(this.rootNode, d)
                        })
                    },
                    _setStyling: function(b, a, c) {
                        b = this.model.getIdentity(b);
                        b = this._itemNodesMap[b];
                        var d = {};
                        b && (d[a] = c,
                        b.forEach(function(a) {
                            a.set(d)
                        }, this))
                    },
                    _getIconAttr: function(b) {
                        var a = this._getItemStyling(b);
                        if (a.defStyle && this._iconAttr) {
                            if (a = this.model.getIcon(b))
                                return a = this._setIconAttr(a, b)
                        } else
                            return a.icon
                    },
                    _getIconClassAttr: function(b, a, c) {
                        return this.getIconClass(b, a, c)
                    },
                    _getIconStyleAttr: function(b, a) {
                        return this.getIconStyle(b, a)
                    },
                    _getLabelClassAttr: function(b, a, c) {
                        return this.getLabelClass(b, a, c)
                    },
                    _getLabelStyleAttr: function(b, a) {
                        return this.getLabelStyle(b, a)
                    },
                    _getRowClassAttr: function(b, a, c) {
                        return this.getRowClass(b, a, c)
                    },
                    _getRowStyleAttr: function(b, a) {
                        return this.getRowStyle(b, a)
                    },
                    _setIconAttr: function(b, a) {
                        var c = this._icon2Object(b);
                        if (c)
                            if (a) {
                                var d = this._getItemStyling(a);
                                d.icon = c;
                                delete d.defStyle;
                                this._setStyling(a, "_icon_", c)
                            } else
                                this._setAllItems([c], function(a, b) {
                                    a.icon = b;
                                    delete a.defStyle
                                }, function(a) {
                                    this._setTreeNodes(this.rootNode, {
                                        _icon_: a
                                    })
                                }, this),
                                this._icon = c;
                        return c
                    },
                    _setIconClassAttr: function(b, a) {
                        return this._setAttrClassSet(a, "icon", b)
                    },
                    _setIconStyleAttr: function(b, a) {
                        return this._setAttrStyleSet(a, "icon", b)
                    },
                    _setLabelClassAttr: function(b, a) {
                        return this._setAttrClassSet(a, "label", b)
                    },
                    _setLabelStyleAttr: function(b, a) {
                        return this._setAttrStyleSet(a, "label", b)
                    },
                    _setRowClassAttr: function(b, a) {
                        return this._setAttrClassSet(a, "row", b)
                    },
                    _setRowStyleAttr: function(b, a) {
                        return this._setAttrStyleSet(a, "row", b)
                    },
                    _setValueToIconMapAttr: function(b) {
                        if (d(b)) {
                            var a, h, f = {};
                            for (a in b)
                                if (d(b[a]))
                                    if (f = b[a],
                                    e(f))
                                        f["*"] = null,
                                        b[a] = f;
                                    else
                                        for (h in f)
                                            "*" == f[h] && (f[h] = null);
                                else if (b[a]instanceof Array)
                                    b[a].length ? b[a].forEach(function(a) {
                                        f[a] = a
                                    }, this) : f["*"] = null,
                                    b[a] = f;
                                else if ("*" != b[a])
                                    throw new c("InvalidType","_setValueToIconMap","invalid property value type");
                        } else
                            b = null;
                        return this._valueToIconMap = b
                    },
                    _modelIconUpdate: function(b, a, c) {
                        b = this._getItemStyling(b);
                        if (c = this._icon2Object(c))
                            b.icon = c,
                            delete b.defStyle;
                        return c
                    },
                    _valueToIcon: function(b) {
                        if (b && this._valueToIconMap) {
                            var a, e, f, g;
                            for (a in this._valueToIconMap)
                                if (e = this._valueToIconMap[a],
                                f = p.getObject(a, !1, b))
                                    if (f in e ? g = e[f] || f : "*"in e && (g = e["*"] || f),
                                    g) {
                                        switch (typeof g) {
                                        case "string":
                                        case "object":
                                            break;
                                        case "function":
                                            if ((g = g.call(this, b, a, f)) && !d(g) && "string" != typeof g)
                                                throw new c("InvalidResponse","_valueToIcon");
                                            break;
                                        default:
                                            g = null
                                        }
                                        if (g)
                                            return g = this._icon2Object(g),
                                            g = this._wcToValue(g, f)
                                    }
                        }
                    },
                    _wcToValue: function(b, a) {
                        if (!d(b))
                            return b && "function" == typeof b.replace ? b.replace(/\*/g, a) : b;
                        var c, e = b.constructor();
                        for (c in b)
                            e[c] = this._wcToValue(b[c], a);
                        return e
                    },
                    getIconClass: function(b, a, c) {
                        var d, e = b, h, f;
                        !e && this.rootNode && (e = this.rootNode.item,
                        c = this.rootNode,
                        a = this.rootNode.isExpanded);
                        b = e ? this.model.mayHaveChildren(e) : !1;
                        this._valueToIconMap && (d = this._valueToIcon(e));
                        d && d.iconClass || (d = this._getItemStyling(e).icon);
                        if (!d || !d.iconClass)
                            return a = !e || b ? a ? "dijitFolderOpened" : "dijitFolderClosed" : "dijitLeaf",
                            (h = this._getBaseClass(c)) ? h + " " + a : a;
                        e = d.iconClass;
                        h = d.baseClass;
                        f = d.indent;
                        d.fixed ? e += " " + d.fixed : c && (a = h + (b ? a ? "Expanded" : "Collapsed" : "Terminal"),
                        void 0 !== f && !1 !== f && (!0 === f || f >= c.indent) && (a += " " + a + "_" + c.indent),
                        e += " " + a);
                        return e
                    },
                    getIconStyle: function(b, a) {
                        var c = this._getClassOrStyle(b, "icon", "Style")
                          , d = this._valueToIconMap ? this._valueToIcon(b) : null;
                        return c = d && d.iconStyle || c
                    },
                    getLabelClass: function(b, a) {
                        return this._getClassOrStyle(b, "label", "Class")
                    },
                    getLabelStyle: function(b, a) {
                        return this._getClassOrStyle(b, "label", "Style")
                    },
                    getRowClass: function(b, a) {
                        return this._getClassOrStyle(b, "row", "Class")
                    },
                    getRowStyle: function(b, a) {
                        return this._getClassOrStyle(b, "row", "Style")
                    },
                    get: function(b) {
                        var a = this[this._getAttrNames(b).g];
                        return "function" === typeof a ? a.apply(this, Array.prototype.slice.call(arguments, 1)) : this[b]
                    },
                    _connectModel: function() {
                        var b = this.model;
                        this._connected = !0;
                        this._itemStyleMap = {};
                        this._getItemStyling(null);
                        b && (b.iconAttr && (b.getIcon && "function" == typeof b.getIcon ? this._iconAttr = this.model.iconAttr : (console.warn(new c("MethodMissing","_connectModel","model property 'iconAttr' set but method getIcon() is missing.")),
                        this._iconAttr = null)),
                        this.mapEventToAttr && "function" === typeof this.mapEventToAttr && this.mapEventToAttr(null, this._iconAttr, "_icon_", this._modelIconUpdate),
                        n.after(this.model, "onDelete", p.hitch(this, "_onStyleDelete"), !0))
                    },
                    _icon2Object: function(b) {
                        var a, e, f;
                        if (b) {
                            if (d(b)) {
                                if (b.iconClass && (e = p.trim(b.iconClass).split(/\s+/),
                                e[0])) {
                                    f = this._initStyleElement("icon");
                                    f.baseClass = e[0];
                                    f.indent = !0;
                                    for (a in b)
                                        f[a] = b[a];
                                    return f
                                }
                                throw new c("ParameterMissing","_icon2Object","required property 'iconClass' is missing or empty");
                            }
                            if ("string" === typeof b && b.length) {
                                if (e = p.trim(b).split(/\s+/),
                                e[0])
                                    return f = this._initStyleElement("icon"),
                                    f.baseClass = e[0],
                                    f.iconClass = b,
                                    f.indent = !0,
                                    f
                            } else
                                throw new c("InvalidType","_icon2Object","icon must be an object or string");
                        }
                        return null
                    },
                    _object2Array: function(b) {
                        var a = [], c;
                        if (!(b instanceof Array)) {
                            if (p.isObject(b))
                                for (c in b)
                                    a.push(b[c]);
                            else
                                a.push(b);
                            return a
                        }
                        return b
                    },
                    _onStyleDelete: function(b) {
                        b = this.model.getIdentity(b);
                        delete this._itemStyleMap[b]
                    },
                    _setTreeNodes: function(b, a) {
                        b && p.isObject(a) && (b.set(a),
                        b.getChildren().forEach(function(b) {
                            this._setTreeNodes(b, a)
                        }, this))
                    }
                })
            })
        },
        "cbtree/model/TreeStoreModel": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/when", "./_base/CheckedStoreModel"], function(q, p, n, m) {
                return q([m], {
                    getChildren: function(l, k, g) {
                        this._getChildren(l, function(f, e) {
                            return this.store.getChildren(f, this.options)
                        }, k, g)
                    },
                    toString: function() {
                        return "[object TreeStoreModel]"
                    }
                })
            })
        },
        "cbtree/model/_base/CheckedStoreModel": function() {
            define("module dojo/_base/declare dojo/_base/lang dojo/Deferred dojo/when ./BaseStoreModel ../../errors/createError!../../errors/CBTErrors.json".split(" "), function(q, p, n, m, l, k, g) {
                var f = g(q.id);
                return p([k], {
                    checkedAll: !0,
                    checkedAttr: "checked",
                    checkedRoot: !1,
                    checkedState: !1,
                    checkedStrict: !0,
                    enabledAttr: "",
                    multiState: !0,
                    normalize: !0,
                    _validating: 0,
                    _checkedInherit: !0,
                    constructor: function(e) {
                        if (!this._writeEnabled)
                            throw new f("MethodMissing","constructor","Store must be write enabled, no put() supported");
                        this.set("checkedStrict", this.checkedStrict);
                        !0 === this.checkedStrict && (this._loadOptions = {
                            all: !0
                        });
                        this._validateDefer = new m
                    },
                    _checkedAttrSetter: function(e) {
                        if ("string" == typeof e) {
                            if (/\./.test(e))
                                throw new f("InvalidType","set","checkedAttr can not be a dot separated string");
                        } else
                            throw new f("InvalidType","set","checkedAttr value must be a string");
                        return this.checkedAttr
                    },
                    _checkedStrictSetter: function(e) {
                        e = e.toLowerCase ? e.toLowerCase() : !!e;
                        this._checkedInherit = !0;
                        switch (e) {
                        case !1:
                            this._checkedInherit = !1;
                            break;
                        case !0:
                            break;
                        case "inherit":
                            e = !1;
                            break;
                        default:
                            throw new f("InvalidType","set","invalid checkedStrict value");
                        }
                        return this.checkedStrict = e
                    },
                    _enabledAttrSetter: function(e) {
                        if ("string" === typeof e) {
                            if (this.enabledAttr !== e)
                                throw new f("ReadOnly","set","property enabledAttr is read-only");
                        } else
                            throw new f("InvalidType","set","enabledAttr value must be a string");
                        return this.enabledAttr
                    },
                    getChecked: function(e) {
                        if (e != this.root || this.checkedRoot) {
                            var d = e[this.checkedAttr];
                            return void 0 == d && this.checkedAll ? (this._setChecked(e, this.checkedState),
                            this.checkedState) : d
                        }
                    },
                    getEnabled: function(e) {
                        var d = !0;
                        this.enabledAttr && (d = e[this.enabledAttr]);
                        return void 0 == d || !!d
                    },
                    setChecked: function(e, d) {
                        this.checkedStrict || this._checkedInherit ? this._updateCheckedChild(e, d) : this._setChecked(e, d)
                    },
                    setEnabled: function(e, d) {
                        if (this.enabledAttr)
                            return this._setValue(e, this.enabledAttr, !!d)
                    },
                    validateData: function() {},
                    _getCompositeState: function(e) {
                        var d = !1, c = !1, b = !1, a, f;
                        e.some(function(a) {
                            f = this.getChecked(a);
                            b |= "mixed" == f;
                            switch (f) {
                            case !0:
                                d = !0;
                                break;
                            case !1:
                                c = !0
                            }
                            return b
                        }, this);
                        if (b || d || c)
                            a = (b |= !(d ^ c)) ? "mixed" : d ? !0 : !1;
                        return a
                    },
                    _normalizeState: function(e, d) {
                        return this.multiState && "mixed" == d ? this.normalize && !this.mayHaveChildren(e) ? !0 : d : !!d
                    },
                    _setChecked: function(e, d) {
                        var c;
                        c = this._normalizeState(e, d);
                        var b = e[this.checkedAttr];
                        return void 0 === b && !this.checkedAll || b == c && c == d ? !1 : (this._setValue(e, this.checkedAttr, c),
                        !0)
                    },
                    _updateCheckedChild: function(e, d) {
                        var c = this;
                        this._setChecked(e, d);
                        this.getChildren(e, function(b) {
                            b.forEach(function(a) {
                                c._updateCheckedChild(a, d)
                            })
                        }, function(b) {
                            console.error(b)
                        })
                    },
                    _updateCheckedParent: function(e, d) {
                        if (this.checkedStrict && e) {
                            var c = this.getParents(e), b = this.getChecked(e), a = this, f;
                            c.then(function(c) {
                                c.forEach(function(c) {
                                    (b !== a.getChecked(c) || d) && a.getChildren(c, function(b) {
                                        f = a._getCompositeState(b);
                                        void 0 !== f && a._setChecked(c, f)
                                    }, a.onError)
                                }, this)
                            })
                        }
                    },
                    _validateChildren: function(e, d) {
                        var c, b;
                        this._validating += 1;
                        d = d instanceof Array ? d : [d];
                        d.forEach(function(a) {
                            if (this.mayHaveChildren(a))
                                this.getChildren(a, n.hitch(this, function(b) {
                                    this._validateChildren(a, b)
                                }), function(a) {
                                    console.error(a)
                                });
                            else if (c = this.getChecked(a))
                                b = this.normalize ? !!c : c,
                                c != b && this._setValue(a, this.checkedAttr, b)
                        }, this);
                        c = this.getChecked(e);
                        b = this._getCompositeState(d);
                        void 0 !== c && void 0 !== b && c != b && this._setChecked(e, b);
                        this._validating--;
                        this._validating || this._onDataValidated()
                    },
                    _validateStore: function() {
                        var e = this;
                        this._validateDefer = new m;
                        this.checkedStrict ? this.store.isValidated ? this._onDataValidated() : this._validating || this.getRoot(function(d) {
                            e.getChildren(d, function(c) {
                                e._validateChildren(d, c)
                            }, e.onError)
                        }, e.onError) : this._validateDefer.resolve();
                        return this._validateDefer.promise
                    },
                    _onChildrenChange: function(e, d) {
                        var c = d[0] || null
                          , b = this;
                        this.checkedStrict && (c ? this._observable ? setTimeout(function() {
                            b._updateCheckedParent(c, !0)
                        }, 0) : b._updateCheckedParent(c, !0) : this._observable ? setTimeout(function() {
                            b._setChecked(e, e[b.checkedAttr])
                        }, 0) : this._setChecked(e, e[this.checkedAttr]));
                        this.onChildrenChange(e, d)
                    },
                    _onDataValidated: function() {
                        this.store.isValidated = !0;
                        this.onDataValidated();
                        this._validateDefer.resolve()
                    },
                    _onSetItem: function(e, d, c, b) {
                        var a = this;
                        this.checkedStrict && d === this.checkedAttr && (this._observable ? setTimeout(function() {
                            a._updateCheckedParent(e, !1)
                        }, 0) : a._updateCheckedParent(e, !1));
                        return this.inherited(arguments)
                    },
                    _onStoreClosed: function(e, d) {
                        this._resetPending || (e && delete this.store.isValidated,
                        this.inherited(arguments))
                    },
                    onDataValidated: function() {}
                })
            })
        },
        "cbtree/model/_base/BaseStoreModel": function() {
            define("module dojo/_base/declare dojo/_base/lang dojo/aspect dojo/Deferred dojo/promise/all dojo/promise/Promise dojo/Stateful dojo/when ./Parents ./Prologue ../../Evented ../../errors/createError!../../errors/CBTErrors.json ../../util/shim/Array".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a) {
                function h() {
                    return !0
                }
                var r = a(q.id);
                return p([b, f], {
                    iconAttr: "",
                    labelAttr: "name",
                    labelType: "text",
                    parentProperty: "parent",
                    query: null,
                    options: null,
                    rootLabel: null,
                    store: null,
                    state: "created",
                    root: null,
                    _forest: !1,
                    _loadRequested: !1,
                    constructor: function(a) {
                        this._childrenCache = {};
                        this._objectCache = {};
                        this._obsHandles = {};
                        this._methods = {};
                        this._forest = this._eventable = !1;
                        this._loadOptions = null;
                        this._resetPending = this._observable = this._monitored = this._loadRequested = !1;
                        this._writeEnabled = !0;
                        this._evtHandles = {
                            remove: function() {}
                        };
                        this._modelReady = new l;
                        this._storeReady = new l;
                        p.safeMixin(this, a);
                        var b = this.store;
                        if (!b)
                            throw new r("ParameterMissing","constructor","Store parameter is required");
                        b.parentProperty ? this.parentProperty = b.parentProperty : b.parentProperty = this.parentProperty;
                        "add put get load hasChildren getChildren getParents addParent query removeParent queryEngine notify emit dispatchEvent isItem ready".split(" ").forEach(function(a) {
                            if ("function" == typeof b[a])
                                switch (this._methods[a] = b[a],
                                a) {
                                case "add":
                                    !0 !== b.hierarchical && m.before(b, "add", c);
                                    break;
                                case "dispatchEvent":
                                case "emit":
                                    !0 === b.eventable && (this._evtHandles = b.on("change, delete, new", n.hitch(this, this._onStoreEvent)),
                                    this._observable = !1,
                                    this._eventable = !0);
                                    break;
                                case "notify":
                                    this._eventable || (this._observable = !0);
                                    break;
                                case "put":
                                    !0 !== b.hierarchical && m.before(b, "put", c)
                                }
                            else
                                switch (a) {
                                case "getChildren":
                                    if ("function" == typeof b.query)
                                        b.getChildren = new Function(["object", "options"],"return this.query({" + this.parentProperty + ": this.getIdentity(object)}, options);");
                                    else
                                        throw new r("MethodMissing","constructor","store MUST support getChildren() or query() method");
                                    break;
                                case "isItem":
                                    b.isItem = function(a) {
                                        return a && "object" == typeof a ? a == this.get(this.getIdentity(a)) : !1
                                    }
                                    ;
                                    break;
                                case "get":
                                    throw new r("MethodMissing","constructor","store MUST support the get() method");
                                case "hasChildren":
                                case "load":
                                case "ready":
                                    this._methods[a] = h;
                                    break;
                                case "put":
                                    this._writeEnabled = !1
                                }
                        }, this);
                        this._monitored = this._eventable || this._observable;
                        m.after(b, "onClose", n.hitch(this, "_onStoreClosed"), !0)
                    },
                    postscript: function() {
                        this.inherited(arguments);
                        this._loadStore(this._loadOptions)
                    },
                    _parentPropertySetter: function(a) {
                        if ("string" == typeof a) {
                            if (/\./.test(a))
                                throw new r("InvalidType","set","parentProperty can not be a dot separated string");
                        } else
                            throw new r("InvalidType","set","parentProperty value must be a string");
                        return this.checkedAttr
                    },
                    destroy: function() {
                        for (var a in this._childrenCache)
                            this._deleteCacheEntry(a);
                        this._evtHandles.remove();
                        this._childrenCache = {};
                        this._objectCache = {};
                        this.store = void 0
                    },
                    getChildren: function(a, b, c) {
                        throw new r("AbstractOnly","getChildren");
                    },
                    getIcon: function(a) {
                        if (this.iconAttr)
                            return this._getProp(this.iconAttr, a)
                    },
                    getIdentity: function(a) {
                        return this.store.getIdentity(a)
                    },
                    getLabel: function(a) {
                        return a === this.root && this.rootLabel ? this.rootLabel : this._getProp(this.labelAttr, a)
                    },
                    getParents: function(a) {
                        var b = new l
                          , c = [];
                        if (a)
                            if (this._methods.getParents)
                                e(this.store.getParents(a), function(a) {
                                    b.resolve(a || [])
                                }, b.reject);
                            else {
                                var f = [];
                                (new d(a,this.parentProperty)).forEach(function(a) {
                                    if (a = this.store.get(a))
                                        e(a, function(a) {
                                            a && c.push(a)
                                        }),
                                        f.push(a)
                                }, this);
                                k(f).always(function() {
                                    b.resolve(c)
                                })
                            }
                        else
                            b.resolve(c);
                        return b.promise
                    },
                    getRoot: function(a, b) {
                        var c = this;
                        if (this.root)
                            e(this._storeReady, function() {
                                a(c.root)
                            });
                        else if (this._methods.query)
                            e(this._storeReady, function() {
                                var d = c.store.query(c.query, c.options);
                                e(d, function(b) {
                                    if (1 != b.length)
                                        throw new r("InvalidResponse","getRoot","Root query returned %{0} items, but must return exactly one",b.length);
                                    c.root = b[0];
                                    d.observe && d.observe(function(a, b, d) {
                                        b == d && c._onChange(a, null)
                                    }, !0);
                                    a(c.root)
                                }, b)
                            }, b);
                        else
                            throw new r("MethodMissing","getRoot","store has no query() method");
                    },
                    isItem: function(a) {
                        return this.store.isItem(a)
                    },
                    mayHaveChildren: function(a) {
                        var b = this._methods.hasChildren
                          , c = this.getIdentity(a)
                          , c = this._childrenCache[c];
                        return !c || c instanceof g ? b.call(this.store, a) : !!c.length
                    },
                    isChildOf: function(a, b) {
                        return b && a ? (new d(a,this.parentProperty)).contains(this.getIdentity(b)) : !1
                    },
                    deleteItem: function(a, b) {
                        function c(a) {
                            var f = d.getIdentity(a);
                            f && (b && d.getChildren(a, function(a) {
                                a.forEach(c)
                            }),
                            d._forest && a == d.root ? d._onDeleteItem(a) : (f = d.store.remove(f),
                            d._monitored || e(f, function() {
                                d._onDeleteItem(a)
                            })),
                            a == d.root && (d.root = null))
                        }
                        a = a instanceof Array ? a : [a];
                        var d = this;
                        a.forEach(c)
                    },
                    ready: function(a, b, c) {
                        return a || b ? this._modelReady.then(a ? n.hitch(c || this, a) : null, b ? n.hitch(c || this, b) : null) : this._modelReady.promise
                    },
                    newItem: function(a, b, c, f) {
                        var h = b[this.parentProperty]instanceof Array, g = this.getIdentity(a), k = this, l;
                        b = this._forest && b == this.root ? void 0 : b;
                        if (void 0 != g)
                            return l = e(this.store.get(g), function(m) {
                                if (m) {
                                    var n = new d(m,k.parentProperty);
                                    h ? (n.add(k.getIdentity(b), !0),
                                    m[k.parentProperty] = n.toValue(),
                                    g = k.store.put(m),
                                    k._monitored || e(g, function() {
                                        k._childrenChanged(b)
                                    })) : k.getParents(m).then(function(a) {
                                        a.length && k.pasteItem(m, a[0], b, !1, c, f)
                                    });
                                    return m
                                }
                                l = k.store.put(a, {
                                    parent: b,
                                    before: f
                                });
                                return e(l, function(a) {
                                    return e(k.store.get(a), function(a) {
                                        a && (k._monitored || e(l, function() {
                                            k._onNewItem(a)
                                        }));
                                        return a
                                    })
                                })
                            });
                        l = this.store.put(a, {
                            parent: b,
                            before: f
                        });
                        return e(l, function(a) {
                            return e(k.store.get(a), function(a) {
                                if (a) {
                                    if (b == this.root)
                                        k.onRootChange(a, "new");
                                    this._monitored || e(l, function() {
                                        k._onNewItem(a)
                                    })
                                }
                                return a
                            })
                        })
                    },
                    pasteItem: function(a, b, c, f, h, g) {
                        var k = new d(a,this.parentProperty)
                          , l = this.getIdentity(c)
                          , m = this.getIdentity(b)
                          , n = [c]
                          , p = this;
                        if (m != l) {
                            var r = b == this.root;
                            c = c == this.root;
                            f || (n.push(b),
                            k.remove(m));
                            if (c || r)
                                this.onRootChange(a, c ? "attach" : "detach");
                            this._forest && c || k.add(l)
                        }
                        a[this.parentProperty] = k.toValue();
                        b = this.store.put(a, {
                            before: g
                        });
                        (!this._monitored || this._eventable && g) && e(b, function() {
                            p._childrenChanged(n)
                        });
                        this.onPasteItem(a, h, g)
                    },
                    _onChange: function(a, b) {
                        var c = this.getIdentity(a);
                        if (b = b || this._objectCache[c]) {
                            for (var d in b)
                                d in a ? b[d] != a[d] && this._onSetItem(a, d, b[d], a[d]) : this._onSetItem(a, d, b[d], void 0);
                            for (d in a)
                                d in b || this._onSetItem(a, d, void 0, a[d])
                        }
                        this._objectCache[c] = n.mixin(null, a)
                    },
                    _onChildrenChange: function(a, b) {
                        this.onChildrenChange(a, b)
                    },
                    _onDeleteItem: function(a) {
                        var b = this.getIdentity(a)
                          , c = this;
                        e(this.store.get(b), function(a) {
                            a || delete c._objectCache[b]
                        }, function(a) {
                            delete c._objectCache[b]
                        });
                        this._deleteCacheEntry(b);
                        this.onDelete(a);
                        this.getParents(a).then(function(b) {
                            if (c.isChildOf(a, c.root))
                                c.onRootChange(a, "delete");
                            c._childrenChanged(b)
                        })
                    },
                    _onNewItem: function(a) {
                        var b = this;
                        this.getParents(a).then(function(c) {
                            if (b.isChildOf(a, b.root))
                                b.onRootChange(a, "new");
                            b._childrenChanged(c)
                        })
                    },
                    _onSetItem: function(a, b, c, e) {
                        var f = this.parentProperty;
                        if (b === f) {
                            var h = new d(e,f)
                              , g = new d(c,f)
                              , k = this
                              , l = [];
                            h.forEach(function(a) {
                                !g.contains(a) && k._objectCache[a] && l.push(k._objectCache[a])
                            });
                            g.forEach(function(a) {
                                !h.contains(a) && k._objectCache[a] && l.push(k._objectCache[a])
                            });
                            l.length && (k._childrenChanged(l),
                            this.onChange(a, b, e, c))
                        } else
                            this.onChange(a, b, e, c);
                        return !0
                    },
                    _onStoreClosed: function(a, b) {
                        if (!this._resetPending) {
                            if (!b || !a) {
                                for (var c in this._childrenCache)
                                    this._deleteCacheEntry(c);
                                this._childrenCache = {};
                                this._objectCache = {}
                            }
                            if (a) {
                                var d = this;
                                this._modelReady.isFulfilled() || this._modelReady.cancel(new r("RequestCancel","_onStoreClosed"));
                                this._modelReady = new l;
                                this._storeReady = new l;
                                this._loadRequested = !1;
                                this._resetPending = !0;
                                this.state = "reset";
                                this.onReset();
                                this._forest || (this.root = null);
                                this._loadStore().then(function() {
                                    d._resetPending = !1
                                })
                            }
                        }
                    },
                    _onStoreEvent: function(a) {
                        var b = a;
                        a.detail && (b = a.detail);
                        switch (a.type) {
                        case "change":
                            this._onChange(b.item, null);
                            b.from && b.from != b.at && e(this.getParents(b.item), n.hitch(this, "_childrenChanged"));
                            break;
                        case "close":
                            this._onStoreClose(b.count, b.cleared);
                            break;
                        case "delete":
                            this._onDeleteItem(b.item);
                            break;
                        case "new":
                            this._onNewItem(b.item)
                        }
                    },
                    onChange: function(a, b, c, d) {},
                    onChildrenChange: function(a, b) {},
                    onPasteItem: function(a, b, c) {},
                    onDelete: function(a) {},
                    onReset: function() {},
                    onRootChange: function(a, b) {},
                    _childrenChanged: function(a) {
                        var b, c = this;
                        (a = a instanceof Array ? a : [a]) && a.length && a.forEach(function(a) {
                            b = c.getIdentity(a);
                            c._deleteCacheEntry(b);
                            c.getChildren(a, function(b) {
                                c._onChildrenChange(a, b.slice(0))
                            }, function(a) {
                                console.error(a)
                            })
                        })
                    },
                    _deleteCacheEntry: function(a) {
                        if (this._childrenCache[a]) {
                            var b = this._obsHandles[a];
                            b && b.remove();
                            delete this._childrenCache[a];
                            delete this._obsHandles[a]
                        }
                    },
                    _getChildren: function(a, b, c, d) {
                        var f = this.getIdentity(a)
                          , h = this
                          , g = null;
                        if (a && void 0 != f) {
                            if (this._observable && this._childrenCache[f]) {
                                e(this._childrenCache[f], c, d);
                                return
                            }
                            h._childrenCache[f] = g = b.call(h, a, f);
                            this._objectCache[f] || (this._objectCache[f] = n.mixin(null, a));
                            e(g, function(a) {
                                a.forEach(function(a) {
                                    h._objectCache[h.getIdentity(a)] = n.mixin(null, a)
                                });
                                h._childrenCache[f] = a
                            });
                            this._observable && g.observe && (a = g.observe(function(a, b, c) {
                                -1 == c ? e(g, n.hitch(h, "_onDeleteItem", a)) : -1 == b ? e(g, n.hitch(h, "_onNewItem", a)) : b == c ? e(g, n.hitch(h, "_onChange", a, null)) : e(g, function(a) {
                                    a = Array.prototype.slice.call(a)
                                })
                            }, !0),
                            this._obsHandles[f] = a)
                        } else
                            g = new l,
                            g.reject(new r("ParameterMissing","_getChildren","No parent object or Id"));
                        e(g, c, d)
                    },
                    _getProp: function(a, b) {
                        for (var c = a.split("."), d, e = 0; b && (d = c[e++]); )
                            b = d in b ? b[d] : void 0;
                        return b
                    },
                    _loadStore: function(a) {
                        if (!this._loadRequested) {
                            var b = this._methods.ready
                              , c = this._methods.load
                              , d = this;
                            this._loadRequested = !0;
                            this.state = "loading";
                            a = [c.call(this.store, a), b.call(this.store)];
                            this._loadPromise = k(a).always(function() {
                                return e(b.call(d.store), function() {
                                    d._storeReady.resolve();
                                    d._validateStore().then(function() {
                                        d._modelReady.resolve();
                                        d.state = "active"
                                    }, function(a) {
                                        d._modelReady.reject(a);
                                        d.state = "in-active"
                                    });
                                    return !0
                                }, function(a) {
                                    d._modelReady.reject(a);
                                    d._storeReady.reject(a)
                                })
                            })
                        }
                        return this._loadPromise
                    },
                    _setProp: function(a, b, c) {
                        a = a.split(".");
                        var d = a.pop();
                        if (a.length)
                            for (var e, f = 0; b && (e = a[f++]); )
                                b = e in b ? b[e] : b[e] = {};
                        return b[d] = c
                    },
                    _setValue: function(a, b, c) {
                        if (a[b] !== c)
                            if (this._writeEnabled) {
                                var d = n.mixin(null, a)
                                  , f = null
                                  , h = this;
                                this._setProp(b, a, c);
                                f = this.store.put(a, {
                                    overwrite: !0
                                });
                                this._monitored || e(f, function() {
                                    h._onChange(a, d)
                                })
                            } else
                                throw new r("AccessError","_setValue","store is not writable.");
                        return c
                    },
                    _updateChildrenCache: function(a, b, c) {
                        var d = this.getIdentity(b)
                          , f = this;
                        return e(this._childrenCache[d], function(b) {
                            b = b || [];
                            var e = b.indexOf(c)
                              , h = b.total || 0;
                            "add" == a || "attach" == a ? -1 == e && (b.push(c),
                            h++) : -1 < e && (b.splice(e, 1),
                            h--);
                            b.total = h;
                            return f._childrenCache[d] = b
                        })
                    },
                    _validateStore: function() {
                        return (new l).resolve()
                    }
                })
            })
        },
        "cbtree/model/_base/Parents": function() {
            define(["../../util/shim/Array"], function() {
                return function(q, p) {
                    function n(m) {
                        Array.prototype.splice.call(this, 0, this.length);
                        m instanceof Array ? m.forEach(function(l, k) {
                            this[k] = l;
                            this.length++
                        }, this) : (n.call(this, [m]),
                        this.multiple = !1,
                        this.length = 1)
                    }
                    p = p || "parent";
                    this.multiple = !0;
                    this.length = 0;
                    this.input = null;
                    this.add = function(m, l) {
                        if (void 0 != m)
                            return this.contains(m) ? !1 : (l || this.multiple ? (this[this.length++] = m,
                            this.multiple = 1 < this.length) : this.set(m),
                            !0)
                    }
                    ;
                    this.contains = function(m) {
                        return Array.prototype.some.call(this, function(l) {
                            return l === m
                        })
                    }
                    ;
                    this.forEach = function(m, l) {
                        Array.prototype.forEach.call(this, m, l)
                    }
                    ;
                    this.remove = function(m) {
                        return Array.prototype.some.call(this, function(l, k) {
                            if (l === m)
                                return Array.prototype.splice.call(this, k, 1),
                                !0
                        }, this)
                    }
                    ;
                    this.set = function(m) {
                        Array.prototype.splice.call(this, 0, this.length);
                        this[0] = m;
                        this.length = 1;
                        return !0
                    }
                    ;
                    this.toValue = function() {
                        return this.multiple ? Array.prototype.slice.call(this) : this[0]
                    }
                    ;
                    void 0 != q && (q instanceof Array ? this.input = q : "object" === typeof q ? this.input = q[p] : "string" === typeof q ? (this.input = q.split(/\s*,\s*/),
                    1 == this.input.length && (this.input = q)) : this.input = q,
                    void 0 != this.input ? n.call(this, this.input) : this.multiple = !1)
                }
            })
        },
        "cbtree/model/_base/Prologue": function() {
            define([], function() {
                return function(q, p) {
                    if (p && p.parent && !0 !== this.hierarchical) {
                        var n = this.parentProperty, m = this.getIdentity(q), l = p.parent, k, g = [], f;
                        if (l instanceof Array)
                            for (f = 0; f < l.length; f++)
                                (k = this.getIdentity(l[f])) && k != m && -1 == g.indexOf(k) && (g ? g.push(k) : g = [k]);
                        else
                            (k = this.getIdentity(l)) ? k != m && (g = k) : g = void 0;
                        q[n] = g
                    }
                }
            })
        },
        "cbtree/store/Hierarchy": function() {
            define("module dojo/_base/declare dojo/_base/lang dojo/store/util/QueryResults ./Natural ../errors/createError!../errors/CBTErrors.json".split(" "), function(q, p, n, m, l, k) {
                var g = k(q.id);
                return p([l], {
                    indexChildren: !0,
                    multiParented: "auto",
                    parentProperty: "parent",
                    hierarchical: !0,
                    _indexParent: {},
                    _indexChild: {},
                    constructor: function() {
                        this.indexChildren = this._indexStore ? this.indexChildren : !1
                    },
                    destroy: function() {
                        this._indexParent = {};
                        this._indexChild = {};
                        this.inherited(arguments)
                    },
                    _getParentArray: function(f) {
                        f = f[this.parentProperty];
                        return void 0 != f ? this.multiParented ? f : [f] : []
                    },
                    _getParentIds: function(f, e) {
                        var d = [];
                        e && (e = e instanceof Array ? e : [e],
                        e.forEach(function(c) {
                            switch (typeof c) {
                            case "object":
                                c = this.getIdentity(c);
                            case "string":
                            case "number":
                                void 0 != c && c != f && -1 == d.indexOf(c) && d.push(c);
                                break;
                            default:
                                throw new g("InvalidType","_getParentId");
                            }
                        }, this));
                        return d
                    },
                    _loadData: function(f) {
                        this._indexParent = {};
                        this._indexChild = {};
                        f instanceof Array && "auto" == this.multiParented && (this.multiParented = f.some(function(e) {
                            return e[this.parentProperty]instanceof Array
                        }, this));
                        this.inherited(arguments)
                    },
                    _parentIdsChanged: function(f, e) {
                        return f.length == e.length ? !e.every(function(d) {
                            return -1 != f.indexOf(d)
                        }) : !0
                    },
                    _setParentType: function(f) {
                        !0 === this.multiParented ? f instanceof Array || (f = f ? [f] : []) : !1 === this.multiParented ? f instanceof Array && (f = f.length ? f[0] : void 0) : "auto" === this.multiParented && (this.multiParented = f instanceof Array);
                        return f
                    },
                    _updateHierarchy: function(f, e, d) {
                        if (this.indexChildren) {
                            d = this.getIdentity(f);
                            var c = this._indexParent[d] || []
                              , b = this._getParentArray(f)
                              , a = this._parentIdsChanged(b, c);
                            a && c.forEach(function(a) {
                                if (-1 == b.indexOf(a)) {
                                    var c = this._indexChild[a]
                                      , d = c.indexOf(f);
                                    -1 < d && (c.splice(d, 1),
                                    0 == c.length && delete this._indexChild[a])
                                }
                            }, this);
                            if (a || e)
                                b.forEach(function(a) {
                                    var b = this._indexChild[a] || [];
                                    e ? this._insertBefore(b, f, e) : -1 == b.indexOf(f) && b.push(f);
                                    this._indexChild[a] = b
                                }, this),
                                this._indexParent[d] = b.slice(0),
                                b.length || delete this._indexParent[d]
                        }
                    },
                    _validParents: function(f) {
                        return this._getParentArray(f).every(function(e) {
                            return this._indexId[e]
                        }, this)
                    },
                    _writeObject: function(f, e, d, c) {
                        var b, a;
                        c && (c.parent && (e[this.parentProperty] = this._getParentIds(f, c.parent)),
                        c.before && (b = this._anyToObject(c.before)));
                        e[this.parentProperty] = this._setParentType(e[this.parentProperty]);
                        a = this.inherited(arguments);
                        this._updateHierarchy(e, b);
                        return a
                    },
                    addParent: function(f, e) {
                        var d = this.getIdentity(f)
                          , d = this._getParentIds(d, e);
                        if (d.length) {
                            var c = n.clone(f)
                              , b = this._getParentArray(c);
                            d.forEach(function(a) {
                                -1 == b.indexOf(a) && b.unshift(a)
                            });
                            c[this.parentProperty] = this._setParentType(b);
                            this.put(c);
                            return !0
                        }
                        return !1
                    },
                    close: function(f) {
                        if (f || this.clearOnClose)
                            this._indexParent = {},
                            this._indexChild = {};
                        this.inherited(arguments)
                    },
                    getChildren: function(f, e) {
                        var d = this.getIdentity(f), c = {}, b;
                        this.indexChildren && (b = (this._indexChild[d] || []).slice(0));
                        c[this.parentProperty] = d;
                        return this.query(c, e, b)
                    },
                    getParents: function(f) {
                        if (f) {
                            var e = [];
                            this._getParentArray(f).forEach(function(d) {
                                (d = this.get(d)) && e.push(d)
                            }, this);
                            return e
                        }
                    },
                    hasChildren: function(f) {
                        var e = this.getIdentity(f);
                        return this.indexChildren ? !!(this._indexChild[e] || []).length : this._data.some(function(d) {
                            return -1 != this._getParentArray(d).indexOf(e)
                        }, this)
                    },
                    query: function(f, e) {
                        var d = 3 == arguments.length ? arguments[2] : null
                          , c = d || this._data
                          , b = this;
                        return this._loadDeferred.isFulfilled() || d ? m(this.queryEngine(f, e)(c, !!d)) : m(this._loadDeferred.then(function() {
                            return b.queryEngine(f, e)(b._data, !1)
                        }))
                    },
                    remove: function(f) {
                        f = this._indexId[f];
                        if (0 <= f) {
                            var e = this._data[f]
                              , d = e[this.parentProperty];
                            e[this.parentProperty] = void 0;
                            this._updateHierarchy(e, null);
                            this._data.splice(f, 1);
                            this._indexData();
                            e[this.parentProperty] = d;
                            return !0
                        }
                        return !1
                    },
                    removeParent: function(f, e) {
                        var d = this.getIdentity(f)
                          , c = this._getParentIds(d, e);
                        if (c.length) {
                            var d = n.clone(f)
                              , b = this._getParentArray(d)
                              , b = b.filter(function(a) {
                                return -1 == c.indexOf(a)
                            });
                            d[this.parentProperty] = this._setParentType(b);
                            this.put(d);
                            return !0
                        }
                        return !1
                    },
                    toString: function() {
                        return "[object HierarchyStore]"
                    }
                })
            })
        },
        "cbtree/store/Natural": function() {
            define(["dojo/_base/declare", "./Memory"], function(q, p) {
                return q([p], {
                    _insertBefore: function(n, m, l) {
                        var k = n.length;
                        l && (k = n.indexOf(l),
                        -1 != k && (l = n.indexOf(m),
                        -1 != l && (k = k > l ? k - 1 : k,
                        n.splice(l, 1))));
                        n.splice(k, 0, m);
                        return k
                    },
                    _writeObject: function(n, m, l, k) {
                        if (k && k.before) {
                            var g = this._anyToObject(k.before);
                            l && -1 != l || (this._applyDefaults(n, m),
                            this.total++);
                            this._insertBefore(this._data, m, g);
                            this._indexData();
                            return n
                        }
                        return this.inherited(arguments)
                    },
                    toString: function() {
                        return "[object NaturalStore]"
                    }
                })
            })
        },
        "cbtree/store/Memory": function() {
            define("module dojo/_base/declare dojo/_base/lang dojo/Deferred dojo/request dojo/Stateful dojo/request/handlers dojo/store/util/QueryResults ../errors/createError!../errors/CBTErrors.json ../util/QueryEngine ../util/shim/Array".split(" "), function(q, p, n, m, l, k, g, f, e, d) {
                function c(a) {
                    if (a.response)
                        switch (a.response.status) {
                        case 404:
                            a.message = a.response.url.match(/[^?#]*/)[0],
                            a.name = "NotFoundError"
                        }
                    return a
                }
                function b(b) {
                    throw new a("ReadOnly","set","property [" + b + "] is READ-ONLY");
                }
                var a = e(q.id);
                return p([k], {
                    autoLoad: !0,
                    clearOnClose: !1,
                    data: null,
                    dataHandler: null,
                    defaultProperties: null,
                    filter: null,
                    handleAs: null,
                    idProperty: "id",
                    queryEngine: d,
                    url: null,
                    state: "closed",
                    total: 0,
                    _indexStore: !0,
                    constructor: function(b) {
                        this._loadDeferred = new m(this._loadReset);
                        this._storeReady = new m;
                        this._loadPending = !1;
                        this._data = [];
                        this._indexId = {};
                        this.state = "waitOnLoad";
                        this.total = 0;
                        p.safeMixin(this, b);
                        if (this.handleAs && this.dataHandler) {
                            b = this.dataHandler.handler || this.dataHandler;
                            var c = this.dataHandler.options, d, e;
                            switch (typeof b) {
                            case "function":
                                if (b = new b,
                                "function" != typeof b.handler) {
                                    e = this.dataHandler;
                                    b = void 0;
                                    break
                                }
                            case "object":
                                e = b.handler;
                                d = b.set;
                                break;
                            default:
                                throw new a("InvalidType","constructor","handler must be a function");
                            }
                            e && (g.register(this.handleAs, b ? n.hitch(b, e) : e),
                            b && c && (d ? d.call(b, c) : n.mixin(b, c)))
                        }
                        this.data || this.url || !this.autoLoad || this.set("data", [])
                    },
                    destroy: function() {
                        this._data.forEach(function(a) {
                            a._destoyed = !0
                        });
                        this._destroyed = !0;
                        this._indexId = {};
                        this._data = []
                    },
                    _autoLoadSetter: function(a) {
                        this.autoLoad = !!a
                    },
                    _dataSetter: function(a) {
                        this.autoLoad ? this.load({
                            data: a
                        }) : this.data = a
                    },
                    _eventableSetter: function() {
                        b("eventable")
                    },
                    _hierarchicalSetter: function() {
                        b("hierarchical")
                    },
                    _idPropertySetter: function(a) {
                        this._indexStore = !!a;
                        this.idProperty = a
                    },
                    _urlSetter: function(b) {
                        if ("string" == typeof b)
                            this.autoLoad ? this.load({
                                url: b
                            }) : this.url = b;
                        else
                            throw new a("InvalidType","_urlSetter","URL property must be of type string");
                    },
                    _anyToObject: function(b, c) {
                        if (b) {
                            c = c || !1;
                            var d;
                            switch (typeof b) {
                            case "string":
                            case "number":
                                d = b;
                                break;
                            case "object":
                                if (c) {
                                    if (!this.isItem(b))
                                        throw new a("InvalidObject","_anyToObject");
                                    return b
                                }
                                d = this.getIdentity(b);
                                break;
                            default:
                                return
                            }
                            return this.get(d)
                        }
                    },
                    _applyDefaults: function(a, b) {
                        if (this.defaultProperties)
                            for (var c in this.defaultProperties)
                                b[c] = b[c] || this.defaultProperties[c];
                        this.idProperty && (b[this.idProperty] = a)
                    },
                    _getObjectId: function(a, b) {
                        var c;
                        c = b && "id"in b ? b.id : this.getIdentity(a);
                        if (null === c || void 0 === c)
                            c = Math.random();
                        return c
                    },
                    _indexData: function() {
                        if (this._indexStore) {
                            var a = this.idProperty, b = this._indexId = {}, c = this._data, d;
                            for (d = 0; d < c.length; d++)
                                b[c[d][a]] = d
                        }
                    },
                    _loadError: function(b, d) {
                        this._loadReset(b);
                        d.reject(new a(c(b),"load"));
                        return d.promise
                    },
                    _loadData: function(b, c) {
                        if (!c.isFulfilled()) {
                            var d, e, f, h;
                            this._indexId = {};
                            this._data = [];
                            this.data = null;
                            b = b || [];
                            if (b instanceof Array)
                                try {
                                    for (f = 0; f < b.length; f++)
                                        d = b[f],
                                        e = this._getObjectId(d),
                                        h = this._indexId[e] || -1,
                                        0 <= h ? console.warn(new a("ItemExist","_loadData","Object with ID: [" + e + "] already exist")) : this._writeObject(e, d, h);
                                    this._indexData();
                                    this._storeReady.resolve(!0);
                                    this.state = "active";
                                    c.resolve(!0)
                                } catch (z) {
                                    this._loadError(z, c)
                                }
                            else
                                this._loadError(new a("InvalidData","_loadData"), c);
                            this._loadPending = !1
                        }
                        return c.promise
                    },
                    _loadReset: function() {
                        this._loadDeferred = new m(this._loadReset);
                        this._loadPending = !1;
                        this.url = this.data = this.handleAs = null;
                        this.state = "closed"
                    },
                    _writeObject: function(a, b, c, d) {
                        -1 < c ? this._data[c] = b : (this._applyDefaults(a, b),
                        this._indexStore ? this._indexId[a] = this._data.push(b) - 1 : this._data.push(b),
                        this.total = this._data.length);
                        return a
                    },
                    _xhrGet: function(a, b) {
                        return l(this.url, {
                            method: "GET",
                            handleAs: b,
                            preventCache: !0
                        })
                    },
                    add: function(b, c) {
                        var d = this._getObjectId(b, c)
                          , e = this._indexId[d];
                        if (0 <= e)
                            throw new a("ItemExist","add");
                        return this._writeObject(d, b, e, c)
                    },
                    close: function(b) {
                        this._loadDeferred.isFulfilled() || (this._loadDeferred.then(null, function() {}),
                        this._loadDeferred.cancel(new a("RequestCancel","close","load request was canceled")));
                        this._storeReady.isFulfilled() && (this._storeReady = new m);
                        if (b = !(!b && !this.clearOnClose))
                            this._loadReset(),
                            this._indexId = {},
                            this._data = [],
                            this.total = 0;
                        this.onClose(b, this.total)
                    },
                    get: function(a) {
                        return this._data[this._indexId[a]]
                    },
                    getIdentity: function(a) {
                        if (a && this.idProperty)
                            return a[this.idProperty]
                    },
                    isItem: function(a) {
                        return a && "object" == typeof a ? a == this.get(this.getIdentity(a)) : !1
                    },
                    load: function(b) {
                        var c = ["data", "filter", "handleAs", "url"]
                          , e = this._loadDeferred;
                        if (!this._loadPending && !e.isFulfilled()) {
                            if (b)
                                for (var f in b)
                                    -1 != c.indexOf(f) && (this[f] = b[f]);
                            if (this.data || this.url) {
                                var h = this.filter ? d(this.filter) : function(a) {
                                    return a
                                }
                                  , k = this;
                                this.state = "loading";
                                this._loadPending = !0;
                                if (this.data) {
                                    try {
                                        this.handleAs && (this.data = g({
                                            text: this.data,
                                            options: {
                                                handleAs: this.handleAs
                                            }
                                        }).data),
                                        this._loadData(h(this.data), e)
                                    } catch (z) {
                                        return k._loadError(z, e)
                                    }
                                    this.url = null
                                } else
                                    this.handleAs || (this.handleAs = "json"),
                                    this._xhrGet(this.url, this.handleAs, null).then(function(a) {
                                        k._loadData(h(a), e)
                                    }, function(a) {
                                        k._loadError(a, e)
                                    })
                            }
                        } else if (b && (b.url || b.data))
                            return b = new m,
                            this._loadPending ? b.reject(new a("RequestPending","load")) : b.reject(new a("Access","load","store already loaded"));
                        return e.promise
                    },
                    put: function(b, c) {
                        var d = this._getObjectId(b, c)
                          , e = this._indexId[d];
                        if (0 <= e && c && !1 === c.overwrite)
                            throw new a("ItemExist","put");
                        return this._writeObject(d, b, e, c)
                    },
                    query: function(a, b) {
                        var c = this;
                        return f(this._storeReady.then(function() {
                            return c.queryEngine(a, b)(c._data, !1)
                        }))
                    },
                    ready: function(a, b, c) {
                        return a || b ? this._storeReady.then(a ? n.hitch(c || this, a) : null, b ? n.hitch(c || this, b) : null) : this._storeReady.promise
                    },
                    remove: function(a) {
                        a = this._indexId[a];
                        return 0 <= a ? (this._data.splice(a, 1),
                        this._indexData(),
                        this.total = this._data.length,
                        !0) : !1
                    },
                    toString: function() {
                        return "[object MemoryStore]"
                    },
                    onClose: function() {}
                })
            })
        },
        "cbtree/util/QueryEngine": function() {
            define(["module", "../errors/createError!../errors/CBTErrors.json", "./shim/Array"], function(q, p) {
                function n(e, d, c) {
                    return d ? d.test ? e.some(function(b) {
                        return d.test(b)
                    }) : d instanceof Array ? d.every(function(b) {
                        b = c && b.toLowerCase ? b.toLowerCase() : b;
                        return n(e, b, c)
                    }) : c ? e.some(function(b) {
                        b = c && b.toLowerCase ? b.toLowerCase() : b;
                        return b == d
                    }) : -1 != e.indexOf(d) : !1
                }
                function m(e, d) {
                    for (var c = e.split("."), b, a = 0; d && (b = c[a++]); )
                        d = b in d ? d[b] : void 0;
                    return d
                }
                function l(e) {
                    if (e)
                        for (var d in e)
                            if (/\./.test(d))
                                return !0;
                    return !1
                }
                function k(e, d, c) {
                    c && d && !d.test && (d = d.toLowerCase ? d.toLowerCase() : d,
                    e = e.toLowerCase ? e.toLowerCase() : e);
                    return d == e ? !0 : e instanceof Array ? n(e, d, c) : d && d.test ? d.test(e) : d instanceof Array ? g(e, d, c) : !1
                }
                function g(e, d, c) {
                    return d.some(function(b) {
                        return k(e, b, c)
                    })
                }
                var f = p(q.id);
                return function(e, d) {
                    function c(b, c) {
                        b = b || [];
                        var e = d && d.sort
                          , f = c ? b : b.filter(a)
                          , h = e;
                        e && ("function" != typeof h && (h = function(a, b) {
                            var c, d, f, h;
                            for (c = 0; d = e[c]; c++)
                                if (f = d.property || d.attribute,
                                h = m(f, a),
                                f = m(f, b),
                                d.ignoreCase && (h = h && h.toLowerCase ? h.toLowerCase() : h,
                                f = f && f.toLowerCase ? f.toLowerCase() : f),
                                h != f)
                                    return !!d.descending == (null == h || h > f) ? -1 : 1;
                            return 0
                        }
                        ),
                        f.sort(h));
                        d && (d.start || d.count) && (h = f.length,
                        f = f.slice(d.start || 0, (d.start || 0) + (d.count || Infinity)),
                        f.total = h);
                        return f
                    }
                    var b = d && !!d.ignoreCase
                      , a = function() {}
                      , h = !1;
                    switch (typeof e) {
                    case "undefined":
                    case "object":
                        h = l(e);
                        a = function(a) {
                            var c, d, f;
                            for (c in e)
                                if (f = e[c],
                                d = h ? m(c, a) : a[c],
                                !(k(d, f, b) || "function" == typeof f && f(d, c, a)))
                                    return !1;
                            return !0
                        }
                        ;
                        break;
                    case "string":
                        if (!this[e] || "function" != typeof this[e])
                            throw new f("MethodMissing","QueryEngine","No filter function " + e + " was found in store");
                        a = this[e];
                        break;
                    case "function":
                        a = e;
                        break;
                    default:
                        throw new f("InvalidType","QueryEngine","Can not query with a " + typeof e);
                    }
                    c.matches = a;
                    return c
                }
            })
        },
        "cbtree/store/ObjectStore": function() {
            define("module dojo/_base/declare dojo/_base/lang dojo/store/util/QueryResults ./Hierarchy ../Evented ../errors/createError!../errors/CBTErrors.json".split(" "), function(q, p, n, m, l, k, g) {
                var f = g(q.id);
                return p([l, k], {
                    eventable: !0,
                    add: function(e, d) {
                        var c = this.inherited(arguments);
                        void 0 != c && this.emit("new", {
                            type: "new",
                            detail: {
                                item: e
                            }
                        });
                        return c
                    },
                    put: function(e, d) {
                        var c = this._getObjectId(e, d), b = this._indexId[c], a, h = !1;
                        if (0 <= b) {
                            if (d && !1 === d.overwrite)
                                throw new f("ItemExist","put");
                            a = this._data[b];
                            h = !0
                        }
                        c = this._writeObject(c, e, b, d);
                        h ? this.emit("change", {
                            type: "change",
                            detail: {
                                item: e,
                                oldItem: a
                            }
                        }) : this.emit("new", {
                            type: "new",
                            detail: {
                                item: e
                            }
                        });
                        return c
                    },
                    remove: function(e) {
                        var d = this.get(e);
                        if (d) {
                            var c = this.inherited(arguments);
                            c && this.emit("delete", {
                                type: "delete",
                                detail: {
                                    item: d
                                }
                            });
                            return c
                        }
                        return !1
                    }
                })
            })
        },
        "ttx/dijit/layout/_DragResizerMixin": function() {
            define(["dojo/_base/declare", "dojo/on", "dojo/dom-geometry", "dojo/dom-construct", "dojo/dom-attr"], function(q, p, n, m, l) {
                return q(null, {
                    addDragDom: function(k, g) {
                        var f;
                        f = m.create("div", {
                            "start-change": 0,
                            "class": "dragResizerMixin"
                        }, k);
                        m.create("div", {
                            "class": "resizerTmub"
                        }, f);
                        p(f, "mousedown", function(e) {
                            return l.set(f, "start-change", 1)
                        });
                        p(document, "mousemove", function(e) {
                            this;
                            k;
                            n;
                            e;
                            if (e.clientX !== n.position(k).w && "1" === l.get(f, "start-change"))
                                return n.setContentSize(k, {
                                    w: e.clientX + 2
                                }),
                                g.call()
                        });
                        return p(document, "mouseup", function(e) {
                            return l.set(f, "start-change", 0)
                        })
                    }
                })
            })
        },
        "ttx/dijit/NavigatorToggle": function() {
            define("dojo/_base/declare dojo/fx dojo/on dojo/dom-class dojo/dom-construct dojo/dom-geometry dojo/dom-style".split(" "), function(q, p, n, m, l, k, g) {
                return q(null, {
                    bindEvent: function() {
                        var f;
                        f = l.create("div", {
                            style: {
                                "z-index": 233,
                                position: "absolute",
                                left: 0,
                                bottom: 0,
                                width: "10px",
                                height: "calc(100% - 50px)"
                            }
                        }, document.body);
                        n(f, "mouseover", function(e) {
                            return function() {
                                return e.showNav()
                            }
                        }(this));
                        n(this.domNode, "mousedown", function(e) {
                            return function(d) {
                                return d.stopPropagation()
                            }
                        }(this));
                        return n(document, "mousedown", function(e) {
                            return function(d) {
                                e.quickSearch.dropDown && e.quickSearch.dropDown.containerNode.contains(d.target) || e.hideNav();
                                if (e.domNode.contains(d.target))
                                    return 0
                            }
                        }(this))
                    },
                    hideNav: function() {
                        var f;
                        this.quickSearch && this.quickSearch._onBlur();
                        f = k.getMarginBox(this.domNode).w;
                        return g.set(this.domNode, {
                            left: 0 - f + "px"
                        })
                    },
                    showNav: function() {
                        g.set(this.domNode, {
                            left: 0
                        });
                        return this.quickSearch.focus()
                    }
                })
            })
        },
        "ttx/data/DataManager": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/request dojo/request/iframe dojo/Deferred dojo/store/Memory ttx/util/_CacheMixin ttx/util/CybertransVersion ttx/util/RequestLogUtil ttx/AppConfig".split(" "), function(q, p, n, m, l, k, g, f, e, d, c) {
                var b, a;
                a = c.server;
                b = c.dataServer;
                q("TestData", [], {
                    constructor: function(a) {
                        return this.delay = a.delay || 100
                    },
                    handler: function(a, b) {
                        return "obe/test/data/wsoDefinitions/Login" === b.tid ? a.resolve({
                            username: "wang",
                            password: "chengyi"
                        }) : a.resolve({})
                    },
                    getService: function() {
                        return p.hitch(this, "call")
                    },
                    call: function(a) {
                        var b;
                        b = new k;
                        b.then(a.load, a.error, a.handle);
                        setTimeout(p.hitch(this, "handler", b, a), this.delay);
                        return b
                    }
                });
                return q([f], {
                    app: null,
                    iframe: l,
                    constructor: function(a) {
                        return this.app = a.app
                    },
                    mixinHeaders: function(a, b) {
                        return p.mixin(a, d.getLogRequestHeaders(), {
                            "X-User": this.app.session.user,
                            "X-Token": this.app.session.token,
                            "X-DB": this.app.session.db,
                            "x-cbtVersion": e.version,
                            "x-device": this.app.clientInfo.device,
                            "X-CLIENT": this.app.session.client,
                            "X-Locale": this.app.session.locale,
                            "X-SSO": this.app.session.sso,
                            "X-SSO-TOKEN": this.app.session.ssoToken,
                            "X-SSO-APP": this.app.session.ssoApp,
                            "X-SSO-CLIENT": this.app.session.ssoClient,
                            "x-params": JSON.stringify(this.app.session.params || {})
                        }, b)
                    },
                    mixinCookieHeaders: function(a, b) {
                        var c;
                        c = this.app.getCookieSession();
                        return p.mixin(a, {
                            "X-User": c.user,
                            "X-Token": c.token,
                            "X-DB": c.db,
                            "X-SSO": c.sso,
                            "x-cbtVersion": e.version,
                            "x-device": this.app.clientInfo.device,
                            "X-SSO-TOKEN": c.ssoToken,
                            "X-SSO-APP": c.ssoApp,
                            "X-SSO-Client": c.ssoClient,
                            "X-Client": c.client,
                            "X-Locale": c.locale
                        }, b)
                    },
                    getUrl: function(b) {
                        var c;
                        c = a;
                        "/" !== a[a.length - 1] && (c += "/");
                        "/" === b[0] && (b = b.substr(1));
                        0 !== b.toLowerCase().indexOf("http://") && 0 !== b.toLowerCase().indexOf("https://") && (b = c + b);
                        return b
                    },
                    getJson: function(a) {
                        return m(b + a, {
                            handleAs: "json"
                        })
                    },
                    getWsoDefinition: function(a) {
                        console.error("deprecated");
                        return this.get(b + "wsoDefinition/" + a, {
                            cache: !0
                        })
                    },
                    get: function(a, b, c, d) {
                        var e, f, h;
                        null == b && (b = {});
                        null == c && (c = !1);
                        null == d && (d = !0);
                        b = p.mixin({
                            cache: !1,
                            updateCache: !1
                        }, b);
                        b.headers = c ? this.mixinCookieHeaders(b.headers) : this.mixinHeaders(b.headers);
                        b.updateCache && (b.cache = !0);
                        b.headers.filter && (b.cache = !1);
                        f = this;
                        0 === a.indexOf("/") && (a = a.substr(1));
                        h = "." !== a[0] ? this.getUrl(a) : a;
                        d = new k;
                        b.cache ? (e = b.updateCache,
                        c = null,
                        e || (c = f.cacheGet(a)),
                        e || c || (e = !0),
                        e ? (d = m(h, p.mixin({
                            handleAs: "json"
                        }, b)),
                        d.then(function(b) {
                            return f.cacheSet(a, b)
                        })) : d.resolve(c)) : d = m(h, p.mixin({
                            handleAs: "json"
                        }, b));
                        this.returnCodeCheck(d);
                        return d
                    },
                    post: function(a, b, c) {
                        null == c && (c = {});
                        a = this.getUrl(a);
                        c.headers = this.mixinHeaders(c.headers, {
                            "Content-Type": "application/json"
                        });
                        a = m(a, p.mixin({
                            handleAs: "json",
                            method: "post",
                            data: JSON.stringify(b)
                        }, c));
                        this.returnCodeCheck(a);
                        return a
                    },
                    postData: function(a, b, c) {
                        null == c && (c = {});
                        a = this.getUrl(a);
                        a = m(a, p.mixin({
                            handleAs: "json",
                            method: "post",
                            data: b
                        }, c));
                        this.returnCodeCheck(a);
                        return a
                    },
                    put: function(a, b, c) {
                        null == c && (c = {});
                        a = this.getUrl(a);
                        c.headers = this.mixinHeaders(c.headers, {
                            "Content-Type": "application/json"
                        });
                        a = m(a, p.mixin({
                            handleAs: "json",
                            method: "put",
                            data: JSON.stringify(b)
                        }, c));
                        this.returnCodeCheck(a);
                        return a
                    },
                    "delete": function(a, b, c) {
                        null == c && (c = {});
                        c.headers = this.mixinHeaders(c.headers, {
                            "Content-Type": "application/json"
                        });
                        a = this.getUrl(a);
                        a = m(a, p.mixin({
                            handleAs: "json",
                            method: "delete",
                            data: JSON.stringify(b)
                        }, c));
                        this.returnCodeCheck(a);
                        return a
                    },
                    getViewModel: function(a) {
                        return this.get("rest/creation/viewModels/" + a, {
                            cache: !0
                        })
                    },
                    getBillModel: function(a) {
                        return this.get("rest/creation/billModels/" + a, {
                            cache: !0
                        })
                    },
                    getTableModel: function(a) {
                        return this.get("rest/creation/tableModels/" + a, {
                            cache: !0
                        })
                    },
                    getBillDefinition: function(a) {
                        return m(b + "billDefinition/" + a, {
                            handleAs: "json"
                        })
                    },
                    getFilteringSelectData: function(a, b) {
                        null == b && (b = {});
                        return this.get("rest/cbt/filteringSelect/" + a, p.mixin({
                            cache: !1
                        }, b))
                    },
                    getTableRestUrl: function(a) {
                        return this.getUrl("/rest/cbt/" + a)
                    },
                    getModelValueById: function(a, b) {
                        return this.post("/rest/tableModelImpl/get", {
                            tableCode: a,
                            id: b
                        })
                    },
                    getPermissionViewModels: function(a, b, c, d) {
                        return this.post("rest/permission/viewData", {
                            user: a,
                            tid: b,
                            oid: c,
                            nid: d
                        })
                    },
                    getPermissionActions: function(a, b, c, d) {
                        return this.post("rest/permission/actions", {
                            role: a,
                            tid: b,
                            oid: c,
                            nid: d
                        })
                    },
                    getSqlTemplateResult: function(a, b, d, e) {
                        null == d && (d = {});
                        null == e && (e = {});
                        return this.get(c.urls.sqlTemplate + "/sqlResult/" + a + "/" + b, p.mixin({
                            headers: {
                                "x-binding": JSON.stringify(d)
                            }
                        }, e))
                    },
                    getSqlTemplateResultByMap: function(a, b) {
                        null == b && (b = {});
                        return this.post(c.urls.sqlTemplate + "/sqlResult", a, b)
                    },
                    getSqlTemplateObjectResult: function(a, b, d, e) {
                        null == d && (d = {});
                        null == e && (e = {});
                        return this.get(c.urls.sqlTemplate + "/sqlObjectResult/" + a + "/" + b, p.mixin({
                            headers: {
                                "x-binding": JSON.stringify(d)
                            }
                        }, e))
                    },
                    checkLogin: function() {
                        return app.session.sso ? app.session.sso && 2 === app.session.sso ? this.get("rest/auth/loginStatus", {}, !0, !1) : this.get("rest/auth/loginStatus", {}, !1, !1) : this.get("rest/auth/loginStatus", {}, !0, !1)
                    },
                    notifyResponse: function(a) {
                        var b, c, d, e;
                        b = a.code;
                        e = "success";
                        c = "center";
                        d = 3E3;
                        if (!1 !== a.notify && ("0" !== b && 0 !== b && (e = "error",
                        c = "center",
                        d = 8E3),
                        a.msg))
                            return this.app.notify(a.msg, a.parameters, e, c, d)
                    },
                    returnCodeCheck: function(a) {
                        var b;
                        b = this;
                        return a.then(function(a) {
                            return b.parseReturnData(a)
                        }, function(a) {
                            if ("/userData/getDisplay" !== a.response.url) {
                                if (401 === a.response.status)
                                    if (a.response.getHeader("Location"))
                                        location.href = a.response.getHeader("Location");
                                    else {
                                        b.app.notifyError("\u6743\u9650\u4e0d\u8db3\uff0c\u8bf7\u68c0\u67e5\u7528\u6237\u6743\u9650");
                                        return
                                    }
                                console.error(a);
                                if ("SyntaxError" === a.name && "Unexpected token \x3c in JSON at position 0" === a.message)
                                    return layer.alert(tt("\u8bf7\u68c0\u67e5\u670d\u52a1\u5668\u662f\u5426\u53ef\u7528!"));
                                if (a.message)
                                    return b.app.notifyError(a.message)
                            }
                        })
                    },
                    parseReturnData: function(a) {
                        var b;
                        if ("string" !== typeof a && (b = parseInt(a.code),
                        !isNaN(b) && (void 0 !== a.msg && void 0 !== a.data || !0 !== !a.notify)))
                            switch (a.code) {
                            case 0:
                            case "0":
                                return this.notifyResponse(a);
                            case c.code.TIMEOUT:
                                return app.logout();
                            case c.code.DANGER:
                                return window.location.href = a.data.url;
                            case c.code.BLACKLIST:
                                return this.notifyResponse(a);
                            default:
                                return this.notifyResponse(a)
                            }
                    },
                    buildModelsCache: function(a) {
                        this.buildModelCache("table");
                        this.buildModelCache("bill");
                        return this.buildModelCache("view")
                    },
                    buildModelCache: function(a) {
                        var b;
                        b = this;
                        return b.get("rest/creation/" + a + "Models", {
                            updateCache: !0
                        }).then(function(c) {
                            var d, e, f, h;
                            h = [];
                            d = 0;
                            for (e = c.length; d < e; d++)
                                f = c[d],
                                h.push(b.cacheSet("rest/creation/" + a + "Models/" + f.code, f));
                            return h
                        }, function(a) {
                            return console.error(a)
                        })
                    }
                })
            })
        },
        "ttx/util/_CacheMixin": function() {
            define(["dojo/_base/declare", "dojo/_base/array", "dojo/store/Memory"], function(q, p, n) {
                var m;
                m = new n({
                    data: [],
                    idProperty: "client_cache_url"
                });
                return q(null, {
                    dataManager: null,
                    cacheGet: function(l) {
                        return m.get(l)
                    },
                    cacheSet: function(l, k) {
                        k.client_cache_url = l;
                        return "object" === typeof k ? m.put(k) : 0
                    },
                    cacheClear: function() {
                        var l;
                        l = m.query();
                        return p.forEach(l, function(k) {
                            return m.remove(k.client_cache_url)
                        })
                    }
                })
            })
        },
        "ttx/data/WsoDefinitionsManager": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "dojo/Deferred"], function(q, p, n) {
                return q(null, {
                    dataManager: null,
                    cache: [],
                    cacheBill: !1,
                    constructor: function(m) {
                        this.app = m.app;
                        this.dataManager = m.wsoDefinitionsService ? m.wsoDefinitionsService : this.app.dataManager;
                        return this._cache = []
                    },
                    getBill: function(m) {
                        this.cacheBill && this.dataManager.getViewModel(m);
                        return this.dataManager.getViewModel(m)
                    },
                    get: function(m) {
                        var l;
                        l = null;
                        m.startsWith("amd") ? (m = "".substr(3),
                        require(m, function(k) {
                            return l = k
                        })) : this._cache[m] ? (l = new n,
                        l.then(this._cache[m])) : l = this.dataManager.getWsoDefinition(m);
                        return l
                    },
                    _catchServerResponse: function(m, l, k) {
                        return k.tid && k.tid === l ? k : Error("baf.data.WsoDefinitionsManager: failed to get wsoDefinition")
                    }
                })
            })
        },
        "ttx/dijit/TopNav": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/fx dojo/on dojo/topic dojo/dom-construct dojo/dom-class dojo/dom-style dojo/dom-geometry dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin dijit/Tooltip dijit/layout/_LayoutWidget ttx/util/_I18nMixin dijit/Dialog ttx/wso/general/ChangePassword ttx/wso/top/ChangeLog ttx/widget/badge/SvgIcon dojo/text!./templates/TopNav.html".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z) {
                return q([d, c, b, r], {
                    userBtn: null,
                    changePasswordBtn: null,
                    logout: null,
                    templateString: z,
                    message: "",
                    constructor: function(a) {
                        this.app = a.app;
                        return this.inherited(arguments)
                    },
                    createUserDorp: function() {
                        var a, b, c, d, h, g;
                        b = this;
                        a = e.position(this.userNode, !0);
                        a = document.body.clientWidth - a.w - a.x - 10;
                        c = k.toDom('\x3cul class\x3d"topNavDropList center"\x3e\n    \x3cli data-event\x3d"doChangePassword"\x3e\u4fee\u6539\u5bc6\u7801\x3c/li\x3e\n    \x3cli data-event\x3d"doLogout"\x3e\u6ce8\u9500\x3c/li\x3e\n\x3c/ul\x3e');
                        k.place(c, document.body);
                        f.set(c, {
                            right: a + "px"
                        });
                        h = c.childNodes;
                        g = [];
                        a = 0;
                        for (c = h.length; a < c; a++)
                            d = h[a],
                            g.push(m(d, "click", function() {
                                return b[this.getAttribute("data-event")].call()
                            }));
                        return g
                    },
                    showChangeLog: function() {
                        var a, b;
                        b = this;
                        b.changeLog || (b.changeLog = new t({
                            "class": "changeLogDialog"
                        }),
                        a = new x({
                            imgDom: b.changeLog.titleBar
                        }),
                        b.changeLog.addChild(a),
                        b.changeLog.onShow = function() {
                            return a.show(b.changeLogTemplateData)
                        }
                        );
                        return b.changeLog.show()
                    },
                    changeLogEvent: function() {
                        var a;
                        a = this;
                        return l.subscribe("sendChangeLogData", function(b) {
                            return a.changeLogTemplateData = b
                        })
                    },
                    doChangePassword: function() {
                        var a;
                        a = app.topNav;
                        a.dialog || (a.dialog = new t({
                            title: tt("\u4fee\u6539\u5bc6\u7801"),
                            "class": "changePassword"
                        }),
                        a.dialog.addChild(new u({
                            app: app,
                            parentDialog: a.dialog
                        })));
                        return a.dialog.show()
                    },
                    doLogout: function() {
                        return app.logout()
                    },
                    tpSettingEvent: function() {
                        var a;
                        this.settingWrapper = a = new y({},this.settingWrapper);
                        this.settingWrapper.setToggleSvgIcon("message");
                        l.subscribe("newOutputMsg", function(b) {
                            return function() {
                                return a.newOne()
                            }
                        }(this));
                        l.subscribe("readOutputMsg", function(b) {
                            return function() {
                                return a.readOne()
                            }
                        }(this));
                        l.subscribe("readWrapperBadge", function(b) {
                            return function(b) {
                                return a.cleanCount(b)
                            }
                        }(this));
                        return m(this.settingWrapper, "click", function(a) {
                            return function() {
                                n.slideTo({
                                    node: a.app.messageTab.domNode,
                                    top: 50,
                                    left: window.innerWidth - (a.settingWrapper.active ? -3 : 297),
                                    units: "px"
                                }).play();
                                a.settingWrapper.set("active", !a.settingWrapper.active);
                                return a.app.messageTab.set("show", a.settingWrapper.active)
                            }
                        }(this))
                    },
                    postCreate: function() {
                        this.tpSettingEvent();
                        this.changeLogEvent();
                        return this.trans()
                    },
                    trans: function() {
                        var a, b, c, d, e;
                        d = this.domNode.getElementsByTagName("li");
                        e = [];
                        a = 0;
                        for (b = d.length; a < b; a++)
                            c = d[a],
                            e.push(c.innerHTML = tt(c.innerHTML));
                        return e
                    },
                    startup: function() {
                        var a;
                        a = this;
                        return setTimeout(function() {
                            a.createUserDorp();
                            return a.hideAllDropList()
                        }, 1E3)
                    },
                    setUser: function(a) {
                        if (this.userNode)
                            return this.userNode.innerText = a
                    },
                    setOrg: function(a) {
                        if (this.corpNode)
                            return this.corpNode.innerText = a
                    },
                    hideOtherDropList: function(a) {
                        var b, c, d, e, f;
                        e = document.getElementsByClassName("topNavDropList");
                        f = [];
                        b = 0;
                        for (c = e.length; b < c; b++)
                            d = e[b],
                            a !== d ? f.push(g.remove(d, "shown")) : f.push(void 0);
                        return f
                    },
                    hideAllDropList: function() {
                        var a;
                        a = this;
                        return m(document.body, "click", function() {
                            return a.hideOtherDropList(this)
                        })
                    }
                })
            })
        },
        "ttx/wso/general/ChangePassword": function() {
            define("dojo/_base/declare dojo/dom-construct dojo/dom-geometry dijit/form/Form dijit/form/ValidationTextBox dijit/form/Button ttx/wso/_WsoBase ttx/AppConfig".split(" "), function(q, p, n, m, l, k, g, f) {
                return q([g], {
                    templateString: '\x3cdiv class\x3d"ttxChangePassword"\x3e\x3c/div\x3e',
                    buildForm: function() {
                        var e, d, c, b;
                        c = this;
                        d = this.form = new m;
                        p.place(d.domNode, this.domNode);
                        this.addTtxFieldSetAuto([{
                            field: "validatePass",
                            id: "validatePass",
                            name: "\u5f53\u524d\u5bc6\u7801",
                            required: !0,
                            type: "string",
                            args: {
                                type: "password"
                            }
                        }, {
                            field: "password1",
                            id: "password1",
                            name: "\u5bc6\u7801",
                            required: !0,
                            type: "string",
                            args: {
                                type: "password"
                            }
                        }, {
                            field: "password2",
                            id: "password2",
                            name: "\u91cd\u590d\u5bc6\u7801",
                            required: !0,
                            type: "string",
                            args: {
                                type: "password"
                            }
                        }], 1, d);
                        b = function(a, b) {
                            return a && '""' !== a ? (b.required = !0,
                            b.isValid = function() {
                                return (new RegExp(a)).test(this.get("value"))
                            }
                            ) : !0
                        }
                        ;
                        c.app.dataManager.get(f.urls.userService + "/pwdRegex").then(function(a) {
                            b(a, d.fieldMap.password1);
                            return b(a, d.fieldMap.password2)
                        });
                        e = new k({
                            label: tt("\u4fee\u6539"),
                            onClick: function() {
                                var a, b, d;
                                d = c.form.fieldMap.validatePass.get("value");
                                a = c.form.fieldMap.password1.get("value");
                                if (!c.form.validate())
                                    return c.app.notifyError(tt("\u8bf7\u68c0\u67e5\u5bc6\u7801"));
                                if (a !== c.form.fieldMap.password2.get("value"))
                                    return c.app.notifyError(tt("\u4e24\u6b21\u5bc6\u7801\u8f93\u5165\u4e0d\u4e00\u81f4"));
                                if ("" === a || null === a || void 0 === a)
                                    return c.app.notifyError(tt("\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a"));
                                b = c.extraValidate();
                                a = b[0];
                                b = b[1];
                                if (!a)
                                    return c.app.notifyError(tt(b));
                                a = c.app.dataManager.getUrl("user/updatePassword");
                                d = {
                                    validatePass: d,
                                    password: c.form.fieldMap.password1.get("value")
                                };
                                return c.app.dataManager.post(a, d).then(function(a) {
                                    return c.afterExecute(a)
                                })
                            }
                        });
                        e.startup();
                        return p.place(e.domNode, d.domNode)
                    },
                    extraValidate: function() {
                        return [!0, ""]
                    },
                    afterExecute: function(e) {
                        if ("0" === e.code && this.parentDialog)
                            return this.parentDialog.hide()
                    }
                })
            })
        },
        "ttx/wso/_WsoBase": function() {
            define("dojo/_base/declare dojo/_base/fx dojo/dom-construct dojo/dom-style dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin ttx/dijit/_TtxForm".split(" "), function(q, p, n, m, l, k, g, f) {
                return q([l, k, g, f], {
                    app: null,
                    workspace: null,
                    navigatorItem: {},
                    viewModel: {},
                    viewModelDeferred: null,
                    title: "",
                    templateString: "\x3cdiv\x3e\x3c/div\x3e",
                    buildRendering: function() {
                        this.inherited(arguments);
                        return this.addLoading()
                    },
                    postCreate: function() {
                        var e, d;
                        this.inherited(arguments);
                        e = this.navigatorItem;
                        d = {
                            tid: e.tid,
                            oid: e.oid,
                            nid: e.nid
                        };
                        e.__sourceItem && (d.nid = e.__sourceItem.id);
                        return app.dataManager.post("/userData/getDisplay", d).then(function(c) {
                            return function(b) {
                                c.gridDisplays = b.gridDisplays;
                                c.fieldDisplays = b.fieldDisplays;
                                return c._buildForm()
                            }
                        }(this), function(c) {
                            return function(b) {
                                c.gridDisplays = {};
                                c.fieldDisplays = {};
                                return c._buildForm()
                            }
                        }(this))
                    },
                    _buildForm: function() {
                        this.buildForm();
                        return this.removeLoading()
                    },
                    buildForm: function() {}
                })
            })
        },
        "ttx/wso/top/ChangeLog": function() {
            define(["dojo/_base/declare", "dojo/dom-construct", "dojo/dom-geometry", "dijit/_WidgetBase", "dijit/_TemplatedMixin"], function(q, p, n, m, l) {
                return q([m, l], {
                    templateString: '\x3cdiv class\x3d"changeLog"\x3e\x3c/div\x3e',
                    container: null,
                    templateData: null,
                    constructor: function(k) {
                        this.inherited(arguments);
                        if (k.imgDom)
                            return this.imgDom = k.imgDom
                    },
                    postCreate: function() {
                        var k;
                        this.inherited(arguments);
                        k = this.container = p.create("div", {}, this.domNode);
                        return this.buildVersionShow(k)
                    },
                    buildVersionShow: function(k) {
                        var g;
                        g = p.create("div", {
                            "class": "currentVersion"
                        }, k);
                        return app.dataManager.get("api/version/rootList").then(function(f) {
                            return function(e) {
                                var d, c, b, a;
                                if (e && 0 < e.length) {
                                    a = [];
                                    c = 0;
                                    for (b = e.length; c < b; c++)
                                        d = e[c],
                                        a.push(p.create("div", {
                                            innerHTML: d.name + d.version
                                        }, g));
                                    return a
                                }
                            }
                        }(this))
                    },
                    show: function(k) {
                        var g, f, e, d, c, b, a, h, l, m;
                        g = this.templateData;
                        if (g !== k && k && k !== {} && (g = k) && ((k = this.container) && p.destroy(k),
                        k = this.container = p.create("div", {}, this.domNode),
                        this.img && p.destroy(this.img),
                        this.img = p.create("img", {
                            src: g.logoUrl || "images/ttx-logo.svg"
                        }, this.imgDom || k),
                        this.buildVersionShow(k),
                        g.items)) {
                            c = g.items;
                            b = [];
                            g = 0;
                            for (e = c.length; g < e; g++)
                                l = c[g],
                                m = p.create("div", {
                                    "class": "versionWrapper"
                                }, k),
                                a = p.toDom("\x3cdiv class\x3d'h1'\x3e\x3cspan class\x3d'version'\x3e" + l.version + "\x3c/span\x3e\x3cspan\x3e\uff08" + l.date + "\uff09\x3c/span\x3e\x3c/div\x3e"),
                                p.place(a, m, "last"),
                                h = p.create("ul", {}, m),
                                b.push(function() {
                                    var a, b, c, e;
                                    c = l.items;
                                    e = [];
                                    a = 0;
                                    for (b = c.length; a < b; a++)
                                        f = c[a],
                                        d = p.toDom("\x3cli\x3e\x3cspan\x3e" + f + "\x3c/span\x3e\x3c/li\x3e"),
                                        e.push(p.place(d, h, "last"));
                                    return e
                                }());
                            return b
                        }
                    }
                })
            })
        },
        "ttx/widget/badge/SvgIcon": function() {
            define("dojo/_base/declare dojo/on dojo/topic dojo/dom-construct dojo/dom-class ./_Base ttx/util/Svg".split(" "), function(q, p, n, m, l, k, g) {
                return q([k], {
                    name: "badgeSvgIcon",
                    widgetClass: "badge-svg-icon",
                    activeClass: "active",
                    active: !1,
                    setSvgIcon: function(f) {
                        f = g.getSvgDom(f);
                        return m.place(f, this.icon, "only")
                    },
                    setToggleSvgIcon: function(f) {
                        var e, d;
                        l.add(this.badge, "badge-" + f);
                        e = g.getSvgDom("icon-cbt-" + f + "-default");
                        this.icon.appendChild(e, this.icon);
                        d = g.getSvgDom("icon-cbt-" + f + "-click");
                        this.icon.appendChild(d, this.icon);
                        d.classList.add("displayNone");
                        return this.watch("active", function(c) {
                            return function() {
                                if (c.active)
                                    return l.add(c.domNode, c.activeClass),
                                    e.classList.add("displayNone"),
                                    d.classList.remove("displayNone");
                                l.remove(c.domNode, c.activeClass);
                                e.classList.remove("displayNone");
                                return d.classList.add("displayNone")
                            }
                        }(this))
                    }
                })
            })
        },
        "ttx/widget/badge/_Base": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/on dojo/topic dojo/dom-class dojo/dom-geometry dijit/_WidgetBase dijit/_TemplatedMixin dojo/text!./templates/Base.html".split(" "), function(q, p, n, m, l, k, g, f, e) {
                return q([g, f], {
                    name: "baseBadge",
                    baseClass: "badge-base",
                    templateString: e,
                    count: 0,
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.widgetClass && (this.baseClass += " " + this.widgetClass);
                        return this.watch("count", function() {
                            if (0 === this.count)
                                this.cleanCount();
                            else
                                return this.badge.innerText = this.count
                        })
                    },
                    newOne: function() {
                        return this.set("count", this.count + 1)
                    },
                    initClick: function(d) {
                        var c;
                        c = this;
                        return d instanceof Function ? n(c, "click", function() {
                            return d(c)
                        }) : console.error("param is not a function")
                    },
                    readOne: function() {
                        return 1 < this.count ? this.set("count", this.count - 1) : this.cleanCount()
                    },
                    cleanCount: function(d) {
                        null == d && (d = 0);
                        if (d instanceof Number && d)
                            return this.set("count", this.count - d);
                        this.badge.innerText = "";
                        return this.count = 0
                    }
                })
            })
        },
        "ttx/util/Svg": function() {
            define(["dojo/dom-construct"], function(q) {
                return {
                    _svgStrings: {},
                    getSvgDom: function(p, n) {
                        null == n && (n = "");
                        return q.toDom('\x3csvg class\x3d"' + ("icon " + p + (n ? " " + n : "")) + '"\x3e\x3cuse xlink:href\x3d"#' + p + '"\x3e\x3c/use\x3e\x3c/svg\x3e')
                    }
                }
            })
        },
        "ttx/dijit/StatusBar": function() {
            define("dojo/_base/declare dojo/_base/array dojo/dom-class dojo/dom-style dojo/dom-geometry dijit/_WidgetBase dijit/layout/_LayoutWidget".split(" "), function(q, p, n, m, l, k, g) {
                return q(g, {
                    postCreate: function() {
                        this.inherited(arguments);
                        return n.add(this.domNode, "bafDijitStatus")
                    },
                    createTextPane: function(f, e) {
                        e = e || {};
                        this[f] = new k(e);
                        n.add(this[f].domNode, "bafDijitStatusStaticPane");
                        return this.addChild(this[f])
                    },
                    deleteTextPane: function(f) {
                        if (f = this[f])
                            return this.removeChild(f),
                            f.destroy
                    },
                    setTextPane: function(f, e) {
                        var d;
                        if (d = this[f])
                            return d.domNode.innerHTML = e
                    },
                    startup: function() {
                        if (!this._started)
                            return p.forEach(this.getChildren(), this._setupChild, this),
                            this.inherited(arguments),
                            this.setHeight()
                    },
                    layout: function() {
                        return this._layoutChildren()
                    },
                    addChild: function(f) {
                        this.inherited(arguments);
                        if (this._started)
                            return this._layoutChildren
                    },
                    setHeight: function() {
                        var f, e;
                        e = 0;
                        f = this.domNode;
                        p.forEach(this.getChildren(), function(d) {
                            return e = Math.max(l.getMarginBox(d.domNode).h, e)
                        });
                        e += l.getPadBorderExtents(f).h;
                        return l.setMarginBox(f, {
                            h: e
                        })
                    },
                    _setupChild: function(f) {
                        if (f.domNode)
                            return f.domNode.style.position = "absolute"
                    },
                    _layoutChildren: function() {
                        var f, e, d, c, b, a, h;
                        e = this.domNode;
                        f = this.getChildren();
                        d = l.getPadBorderExtents(e);
                        c = l.getMarginExtents(e);
                        e = l.getMarginBox(e).w - (d.w - d.l) - (c.w - c.l);
                        for (b = a = h = f.length - 1; 1 >= h ? 1 >= a : 1 <= a; b = 1 >= h ? ++a : --a)
                            b = f[b].domNode,
                            e -= l.getMarginBox(b).w,
                            l.setMarginBox(b, {
                                l: e
                            });
                        d = d.l + c.l;
                        return l.setMarginBox(f[0].domNode, {
                            l: d,
                            w: e - d
                        })
                    },
                    demo: function() {
                        this.createTextPane("message");
                        this.createTextPane("userName", {
                            style: "width: 20em; height:1.5em"
                        });
                        return this.createTextPane("role", {
                            "class": "statusPaneRed",
                            style: "width: 10em"
                        })
                    }
                })
            })
        },
        "ttx/dijit/MessageTab": function() {
            define("dojo/_base/declare dojo/on dojo/aspect dojo/topic dojo/dom-class dojo/dom-construct dojo/store/Memory dijit/_WidgetBase dijit/_TemplatedMixin dijit/form/Button dijit/layout/ContentPane dijit/layout/TabContainer ./ConfirmDialog ./message/ServerMessage ./message/MailMessage ../wso/SimpleView ttx/widget/badge/SvgIcon dojo/text!./templates/MessageTab.html".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x) {
                return q([f, e], {
                    baseClass: "cbtMessageTab",
                    templateString: x,
                    show: !1,
                    outputTabNode: null,
                    outputNode: null,
                    helpTabNode: null,
                    helpNode: null,
                    msgTabNode: null,
                    msgNode: null,
                    mailTabNode: null,
                    mailNode: null,
                    activeTab: null,
                    activeContent: null,
                    tabNodes: null,
                    contentNodes: null,
                    outputList: [],
                    outputCountMax: 100,
                    outputCount: 0,
                    postCreate: function() {
                        var a, b, c, d, e;
                        d = this;
                        this.inherited(arguments);
                        e = [["outputTabNode", "server", function(a) {
                            return d.setActive(a)
                        }
                        ], ["helpTabNode", "help", function(a) {
                            return d.setActive(a)
                        }
                        ], ["msgTabNode", "message2", function(a) {
                            return d.setActive(a)
                        }
                        ], ["mailTabNode", "mail", function(a) {
                            return d.setActive(a)
                        }
                        ]];
                        a = 0;
                        for (b = e.length; a < b; a++)
                            c = e[a],
                            d[c[0]] = new u({},d[c[0]]),
                            d[c[0]].setToggleSvgIcon(c[1]),
                            d[c[0]].initClick(c[2]);
                        this.outputTabNode.contentNode = this.outputNode;
                        this.helpTabNode.contentNode = this.helpNode;
                        this.msgTabNode.contentNode = this.msgNode;
                        this.mailTabNode.contentNode = this.mailNode;
                        this.activeTab = this.outputTabNode;
                        this.activeTab.set("active", !0);
                        l.add(this.activeTab.contentNode, "active");
                        this.activeContent = this.activeTab.contentNode;
                        this.buildMailTab();
                        this.subscribeEvent();
                        return d.serverMessageTitle.innerHTML = tt("\u670d\u52a1\u7aef\u6d88\u606f")
                    },
                    subscribeEvent: function() {
                        var a;
                        a = this;
                        m.subscribe("appLoginSuccess", function(b) {
                            return function() {
                                a.reloadMailMsg();
                                return a.connect()
                            }
                        }(this));
                        m.subscribe("appLogoutSuccess", function(b) {
                            return function() {
                                a.reloadMailMsg();
                                return a.stompClient.disconnect()
                            }
                        }(this));
                        m.subscribe("readServerMsg", function(b) {
                            return function() {
                                a.outputTabNode.readOne();
                                return m.publish("readOutputMsg")
                            }
                        }(this));
                        return m.subscribe("readMailMsg", function(b) {
                            return function() {
                                a.mailTabNode.readOne();
                                return m.publish("readOutputMsg")
                            }
                        }(this))
                    },
                    connect: function() {
                        var a;
                        ({
                            connect: function(a, b) {}
                        });
                        a = new SockJS("/endpoint");
                        this.stompClient = Stomp.over(a);
                        return this._connect()
                    },
                    _connect: function() {
                        var a;
                        a = this;
                        return a.stompClient.connect({}, function() {
                            a.stompClient.subscribe("/topic/message/" + app.session.user, function(b) {
                                if (b && b.body)
                                    return a.addMailMsg(JSON.parse(b.body), !0)
                            });
                            return a.stompClient.subscribe("/topic/orgMessage", function(b) {
                                return a.reloadMailMsg()
                            })
                        }, function() {})
                    },
                    buildMailTab: function() {
                        var b, c, e;
                        e = this;
                        c = new d({
                            label: tt("\u53d1\u9001\u7ad9\u5185\u4fe1")
                        });
                        b = new d({
                            label: tt("\u5237\u65b0")
                        });
                        p(b, "click", function(a) {
                            return function() {
                                return a.reloadMailMsg()
                            }
                        }(this));
                        p(c, "click", function(b) {
                            return function() {
                                var c;
                                if (e.mailEditorDialog)
                                    return b.mailEditorDialog.show();
                                c = {
                                    tid: "ttx.wso.InnerSystemMailSender",
                                    oid: "InnerSystemMailSender",
                                    id: "InnerSystemMailSender"
                                };
                                return app.dataManager.getPermissionViewModels(app.session.user, "ttx.wso.InnerSystemMailSender", "InnerSystemMailSender", "InnerSystemMailSender").then(function(b) {
                                    var d, f, h, m;
                                    if (b)
                                        return e.mailEditorDialog = new a({
                                            title: tt("\u7f16\u5199\u7ad9\u5185\u4fe1"),
                                            "class": "innerSystemMailSender"
                                        }),
                                        m = new t({
                                            mixedJson: b.topView,
                                            navigatorItem: c,
                                            actionBuild: function() {
                                                var a, b, c;
                                                c = this.fieldMap.type;
                                                b = this.fieldMap.to;
                                                "admin" === app.session.user || app.session.user.includes("-ADMIN") || (c.removeOption("global"),
                                                c.removeOption("org"));
                                                app.session.user.includes("-ADMIN") && c.removeOption("global");
                                                a = function() {
                                                    var a, d;
                                                    if ((d = c.get("value")) && d.trim())
                                                        if (b.set("value", ""),
                                                        "global" === d)
                                                            b.set("store", new g({
                                                                data: [{
                                                                    id: "*",
                                                                    label: "*"
                                                                }]
                                                            }));
                                                        else if ("org" === d && app.session.user.includes("-ADMIN"))
                                                            a = "code\x3d'" + app.session.orgCode + "'",
                                                            app.dataManager.getFilteringSelectData(f[d], {
                                                                headers: {
                                                                    filter: a
                                                                }
                                                            }).then(function(a) {
                                                                return b.set("store", new g({
                                                                    data: a
                                                                }))
                                                            });
                                                        else
                                                            return app.dataManager.getFilteringSelectData(f[d]).then(function(a) {
                                                                return b.set("store", new g({
                                                                    data: a
                                                                }))
                                                            })
                                                }
                                                ;
                                                a();
                                                return p(c, "change", function() {
                                                    return a()
                                                })
                                            }
                                        }),
                                        f = {
                                            user: "ttx_user",
                                            role: "ttx_role",
                                            org: "ttx_organization"
                                        },
                                        k.place(m.domNode, e.mailEditorDialog.containerNode),
                                        d = new t({
                                            mixedJson: b.centerView,
                                            editorPosition: 1,
                                            editorHeight: "200px"
                                        }),
                                        k.place(k.toDom("\x3chr/\x3e"), e.mailEditorDialog.containerNode),
                                        k.place(d.domNode, e.mailEditorDialog.containerNode),
                                        l.add(d.domNode, "centerView"),
                                        h = d.fieldMap.title,
                                        e.mailEditorDialog.onExecute = function(a) {
                                            return function() {
                                                var a;
                                                a = d.editor.get("value");
                                                if (m.form.validate() && d.form.validate())
                                                    return a = {
                                                        title: h.get("value"),
                                                        type: m.fieldMap.type.get("value"),
                                                        to: m.fieldMap.to.get("value"),
                                                        content: a
                                                    },
                                                    app.dataManager.post("/rest/cbt/message", a).then(function() {
                                                        return e.mailEditorDialog.hide()
                                                    })
                                            }
                                        }(this),
                                        n.after(e.mailEditorDialog, "hide", function() {
                                            m.clearAll();
                                            return d.clearAll()
                                        }),
                                        e.mailEditorDialog.show()
                                })
                            }
                        }(this));
                        this.mailActionNode.appendChild(c.domNode);
                        return this.mailActionNode.appendChild(b.domNode)
                    },
                    addServerMsg: function(a) {
                        a = new h({
                            messageData: a
                        });
                        this.serverMsgContainerNode.insertBefore(a.domNode, this.serverMsgContainerNode.firstElementChild);
                        this.setActive(this.outputTabNode);
                        this.outputTabNode.newOne();
                        return m.publish("newOutputMsg")
                    },
                    addMailMsg: function(a, b) {
                        var c;
                        c = new r({
                            messageData: a
                        });
                        b ? this.mailContainerNode.insertBefore(c.domNode, this.mailContainerNode.firstElementChild) : this.mailContainerNode.appendChild(c.domNode);
                        if (!a.status)
                            return this.setActive(this.mailTabNode),
                            this.mailTabNode.newOne(),
                            m.publish("newOutputMsg")
                    },
                    reloadMailMsg: function() {
                        var a;
                        a = this;
                        if (app.session && app.session.token)
                            return this.clearTab(this.mailContainerNode),
                            this.clearBadge(this.mailTabNode),
                            app.dataManager.post("/rest/cbt/message/list", {
                                user: app.session.user
                            }).then(function(b) {
                                var c, d, e, f;
                                if (b && "0" === b.code && b.data && 0 < b.data.length) {
                                    e = b.data;
                                    f = [];
                                    b = 0;
                                    for (c = e.length; b < c; b++)
                                        d = e[b],
                                        f.push(a.addMailMsg(d));
                                    return f
                                }
                            })
                    },
                    clearBadge: function(a) {
                        var b;
                        if (b = a.get("count"))
                            return m.publish("readWrapperBadge", b),
                            a.cleanCount()
                    },
                    clearTab: function(a) {
                        var b, c;
                        a = a.children;
                        b = a.length;
                        for (c = []; b--; )
                            c.push(k.destroy(a[b]));
                        return c
                    },
                    setActive: function(a) {
                        if (!1 === a.get("active"))
                            return a.set("active", !0),
                            this.activeTab.set("active", !1),
                            l.remove(this.activeContent, "active"),
                            l.add(a.contentNode, "active"),
                            this.activeTab = a,
                            this.activeContent = a.contentNode
                    }
                })
            })
        },
        "ttx/dijit/message/ServerMessage": function() {
            define("dojo/_base/declare dojo/on dojo/topic dojo/dom-construct dojo/dom-class ./_Base".split(" "), function(q, p, n, m, l, k) {
                return q([k], {
                    baseClass: "messageBase serverMessage",
                    unread: !0,
                    postCreate: function() {
                        this.inherited(arguments);
                        this.unread && l.add(this.title, "unread");
                        return this.watch("unread", function() {
                            return l.remove(this.title, "unread")
                        })
                    },
                    setData: function(g) {
                        var f, e, d, c, b;
                        this.totalCount = c = g.length;
                        d = 0;
                        for (e = this.content; c--; )
                            f = "",
                            b = g[c],
                            "0" !== b.code && (d += 1,
                            f = "error"),
                            b = m.toDom('\x3cli class\x3d"' + f + '"\x3e\x3cspan\x3e' + b.msg + "\x3c/span\x3e\x3c/li\x3e"),
                            f ? e.insertBefore(b, e.firstElementChild) : e.appendChild(b);
                        this.errorCount = d;
                        return this.title.innerHTML = "\u5171" + this.totalCount + "\u6761,\u5931\u8d25" + this.errorCount + "\u6761"
                    },
                    onTitleClick: function(g) {
                        if (this.unread)
                            return n.publish("readServerMsg"),
                            this.set("unread", !1)
                    }
                })
            })
        },
        "ttx/dijit/message/_Base": function() {
            define("dojo/_base/declare dojo/on dojo/dom-construct dojo/dom-class dijit/_WidgetBase dijit/_TemplatedMixin".split(" "), function(q, p, n, m, l, k) {
                return q([l, k], {
                    baseClass: "messageBase",
                    templateString: '    \x3cdiv\x3e\n    \x3cdiv class\x3d"msgTitle" data-dojo-attach-point\x3d"title"\x3e\x3c/div\x3e\n    \x3cul class\x3d\'msgContent\' data-dojo-attach-point\x3d"content"\x3e\x3c/ul\x3e\n\x3c/div\x3e',
                    totalCount: 0,
                    messageData: null,
                    errorCount: 0,
                    show: !0,
                    postCreate: function() {
                        var g;
                        g = this;
                        this.setData(this.messageData);
                        this.show ? m.remove(this.content, "displayNone") : m.add(this.content, "displayNone");
                        return p(this.title, "click", function(f) {
                            return function() {
                                f.onTitleClick();
                                f.show ? m.add(f.content, "displayNone") : (m.remove(f.content, "displayNone"),
                                g.afterExpand(g.messageData));
                                return f.show = !f.show
                            }
                        }(this))
                    },
                    onTitleClick: function() {},
                    afterExpand: function() {},
                    setData: function(g) {}
                })
            })
        },
        "ttx/dijit/message/MailMessage": function() {
            define("dojo/_base/declare dojo/on dojo/topic dojo/dom-construct dojo/dom-class ./_Base".split(" "), function(q, p, n, m, l, k) {
                return q([k], {
                    baseClass: "messageBase mailMessage",
                    show: !1,
                    afterExpand: function() {},
                    setData: function(g) {
                        this.mailTitle = m.toDom("\x3cdiv class\x3d'" + (g.status ? "mailTitle" : "mailTitle unread") + "'\x3e\n    " + g.title + "\n\x3c/div\x3e");
                        p(this.domNode, "dblclick", function() {
                            return layer.open({
                                type: 1,
                                title: g.title,
                                closeBtn: 1,
                                shadeClose: !0,
                                skin: "mailMsgContentDialog",
                                content: g.content
                            })
                        });
                        this.mailInfo = m.toDom("\x3cdiv class\x3d'mailInfo'\x3e\n    \x3cdiv class\x3d'mailSentTime'\x3e" + g.postDate + "\x3c/div\x3e\x3cdiv\x3e" + (g.senderName || g.sender) + "\x3c/div\x3e\n\x3c/div\x3e");
                        this.title.appendChild(this.mailTitle);
                        this.title.appendChild(this.mailInfo);
                        return g.content.length
                    },
                    afterExpand: function(g) {
                        var f;
                        f = this;
                        if (!g.status)
                            return app.dataManager.put("/rest/cbt/message/read/" + g.id).then(function(e) {
                                if ("0" === e.code)
                                    return l.remove(f.mailTitle, "unread"),
                                    n.publish("readMailMsg")
                            })
                    }
                })
            })
        },
        "ttx/wso/SimpleView": function() {
            define("dojo/_base/declare dojo/dom-construct dijit/_WidgetBase dijit/_TemplatedMixin dijit/Editor dijit/form/Form ../dijit/_FormMixin ../editor/EditorAllPlugins".split(" "), function(q, p, n, m, l, k, g, f) {
                return q([g, n, m], {
                    name: "simpleView",
                    baseClass: "simpleView",
                    mixedJson: {},
                    actionMap: {},
                    fieldMap: {},
                    ctrl: null,
                    editorPosition: -1,
                    editorHeight: "400px",
                    templateString: "\x3cdiv\x3e\x3c/div\x3e",
                    navigatorItem: {},
                    constructor: function(e) {
                        return this.inherited(arguments)
                    },
                    postCreate: function() {
                        var e, d, c;
                        c = this;
                        e = this.navigatorItem;
                        return e.id ? (d = {
                            tid: e.tid,
                            oid: e.oid,
                            nid: e.id
                        },
                        e.__sourceItem && (d.nid = e.__sourceItem.id),
                        app.dataManager.post("/userData/getDisplay", d).then(function(b) {
                            return function(a) {
                                c.gridDisplays = a.gridDisplays;
                                c.fieldDisplays = a.fieldDisplays;
                                return c._build()
                            }
                        }(this), function(b) {
                            return function(a) {
                                c.gridDisplays = {};
                                c.fieldDisplays = {};
                                return c._build()
                            }
                        }(this))) : c._build()
                    },
                    _build: function() {
                        var e, d, c, b;
                        this.fieldDom = p.toDom("\x3cdiv\x3e\x3c/div\x3e");
                        this.buildFields(this.mixedJson.fields);
                        this.actionDom = p.toDom("\x3cdiv\x3e\x3c/div\x3e");
                        this.buildActions(this.mixedJson.actions);
                        this.gridDom = p.toDom("\x3cdiv\x3e\x3c/div\x3e");
                        this.buildGrid(this.mixedJson.grid);
                        d = [this.fieldDom, this.actionDom, this.gridDom];
                        0 < this.editorPosition && (this.editor = new l({
                            plugins: f.all
                        }),
                        d.splice(this.editorPosition, 0, this.editor.domNode),
                        this.editor.set("height", this.editorHeight),
                        this.editor.startup());
                        c = 0;
                        for (b = d.length; c < b; c++)
                            e = d[c],
                            this.domNode.appendChild(e);
                        return this.actionBuild()
                    },
                    actionBuild: function() {},
                    clearAll: function() {
                        var e, d, c, b;
                        this.editor && this.editor.set("value", "");
                        d = this.fieldMap;
                        c = [];
                        for (e in d)
                            b = d[e],
                            c.push(b.set("value", ""));
                        return c
                    },
                    mixGridJson: function() {
                        var e, d, c, b, a, f;
                        c = this.mixedJson;
                        if ((d = c.grid) && d.structure && c.actions) {
                            if (e = d.actions) {
                                if (e.items || (e.items = []),
                                c.actions.actionsExportId && (e.actionsExportId = c.actions.actionsExportId),
                                c.actions.items) {
                                    f = c.actions.items;
                                    c = 0;
                                    for (a = f.length; c < a; c++)
                                        b = f[c],
                                        e.items.push(b);
                                    delete this.mixedJson.actions
                                }
                            } else
                                e = c.actions;
                            return this.mixedJson.grid = d
                        }
                    },
                    buildGrid: function(e) {
                        if (e)
                            return this.addTtxServerGrid(e, this.gridDom)
                    },
                    buildActions: function(e) {
                        if (e)
                            return this.addTtxActionSet(e, this.actionDom, this.actionMap)
                    },
                    buildFields: function(e) {
                        var d;
                        if (e)
                            return d = this.form = new k,
                            this.addFieldSet(e, d),
                            this.fieldDom.appendChild(d.domNode),
                            this.fieldMap = d.fieldMap,
                            this.ctrl = d.ctrl
                    }
                })
            })
        },
        "dijit/Editor": function() {
            define("require dojo/_base/array dojo/_base/declare dojo/Deferred dojo/i18n dojo/dom-attr dojo/dom-class dojo/dom-geometry dojo/dom-style dojo/keys dojo/_base/lang dojo/sniff dojo/string dojo/topic ./_Container ./Toolbar ./ToolbarSeparator ./layout/_LayoutWidget ./form/ToggleButton ./_editor/_Plugin ./_editor/plugins/EnterKeyHandling ./_editor/html ./_editor/range ./_editor/RichText ./main dojo/i18n!./_editor/nls/commands".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A, B, C) {
                function E(a) {
                    return new z({
                        command: a.name
                    })
                }
                function I(a) {
                    return new z({
                        buttonClass: y,
                        command: a.name
                    })
                }
                n = n("dijit.Editor", B, {
                    plugins: null,
                    extraPlugins: null,
                    constructor: function() {
                        c.isArray(this.plugins) || (this.plugins = ["undo", "redo", "|", "cut", "copy", "paste", "|", "bold", "italic", "underline", "strikethrough", "|", "insertOrderedList", "insertUnorderedList", "indent", "outdent", "|", "justifyLeft", "justifyRight", "justifyCenter", "justifyFull", w]);
                        this._plugins = [];
                        this._editInterval = 1E3 * this.editActionInterval;
                        if (b("ie") || b("trident") || b("edge"))
                            this.events.push("onBeforeDeactivate"),
                            this.events.push("onBeforeActivate")
                    },
                    postMixInProperties: function() {
                        this.setValueDeferred = new m;
                        this.inherited(arguments)
                    },
                    postCreate: function() {
                        this.inherited(arguments);
                        this._steps = this._steps.slice(0);
                        this._undoedSteps = this._undoedSteps.slice(0);
                        c.isArray(this.extraPlugins) && (this.plugins = this.plugins.concat(this.extraPlugins));
                        this.commands = l.getLocalization("dijit._editor", "commands", this.lang);
                        b("webkit") && e.set(this.domNode, "KhtmlUserSelect", "none")
                    },
                    startup: function() {
                        this.inherited(arguments);
                        this.toolbar || (this.toolbar = new t({
                            ownerDocument: this.ownerDocument,
                            dir: this.dir,
                            lang: this.lang,
                            "aria-label": this.id
                        }),
                        this.header.appendChild(this.toolbar.domNode));
                        p.forEach(this.plugins, this.addPlugin, this);
                        this.setValueDeferred.resolve(!0);
                        g.add(this.iframe.parentNode, "dijitEditorIFrameContainer");
                        g.add(this.iframe, "dijitEditorIFrame");
                        k.set(this.iframe, "allowTransparency", !0);
                        this.toolbar.startup();
                        this.onNormalizedDisplayChanged()
                    },
                    destroy: function() {
                        p.forEach(this._plugins, function(a) {
                            a && a.destroy && a.destroy()
                        });
                        this._plugins = [];
                        this.toolbar.destroyRecursive();
                        delete this.toolbar;
                        this.inherited(arguments)
                    },
                    addPlugin: function(a, b) {
                        var d = c.isString(a) ? {
                            name: a
                        } : c.isFunction(a) ? {
                            ctor: a
                        } : a;
                        if (!d.setEditor) {
                            var e = {
                                args: d,
                                plugin: null,
                                editor: this
                            };
                            d.name && (z.registry[d.name] ? e.plugin = z.registry[d.name](d) : h.publish(C._scopeName + ".Editor.getPlugin", e));
                            if (!e.plugin)
                                try {
                                    var f = d.ctor || c.getObject(d.name) || q(d.name);
                                    f && (e.plugin = new f(d))
                                } catch (D) {
                                    throw Error(this.id + ": cannot find plugin [" + d.name + "]");
                                }
                            if (!e.plugin)
                                throw Error(this.id + ": cannot find plugin [" + d.name + "]");
                            a = e.plugin
                        }
                        1 < arguments.length ? this._plugins[b] = a : this._plugins.push(a);
                        a.setEditor(this);
                        c.isFunction(a.setToolbar) && a.setToolbar(this.toolbar)
                    },
                    resize: function(a) {
                        a && x.prototype.resize.apply(this, arguments)
                    },
                    layout: function() {
                        var a = this._contentBox.h - (this.getHeaderHeight() + this.getFooterHeight() + f.getPadBorderExtents(this.iframe.parentNode).h + f.getMarginExtents(this.iframe.parentNode).h);
                        this.editingArea.style.height = a + "px";
                        this.iframe && (this.iframe.style.height = "100%");
                        this._layoutMode = !0
                    },
                    _onIEMouseDown: function(a) {
                        var b, c = this.document.body, d = c.clientWidth, e = c.clientHeight, f = c.clientLeft, h = c.offsetWidth, g = c.offsetHeight, k = c.offsetLeft;
                        /^rtl$/i.test(c.dir || "") ? d < h && a.x > d && a.x < h && (b = !0) : a.x < f && a.x > k && (b = !0);
                        b || e < g && a.y > e && a.y < g && (b = !0);
                        b || (delete this._cursorToStart,
                        delete this._savedSelection,
                        "BODY" == a.target.tagName && this.defer("placeCursorAtEnd"),
                        this.inherited(arguments))
                    },
                    onBeforeActivate: function() {
                        this._restoreSelection()
                    },
                    onBeforeDeactivate: function(a) {
                        this.customUndo && this.endEditing(!0);
                        "BODY" != a.target.tagName && this._saveSelection()
                    },
                    customUndo: !0,
                    editActionInterval: 3,
                    beginEditing: function(a) {
                        this._inEditing || (this._inEditing = !0,
                        this._beginEditing(a));
                        0 < this.editActionInterval && (this._editTimer && this._editTimer.remove(),
                        this._editTimer = this.defer("endEditing", this._editInterval))
                    },
                    _steps: [],
                    _undoedSteps: [],
                    execCommand: function(a) {
                        if (!this.customUndo || "undo" != a && "redo" != a) {
                            this.customUndo && (this.endEditing(),
                            this._beginEditing());
                            var b = this.inherited(arguments);
                            this.customUndo && this._endEditing();
                            return b
                        }
                        return this[a]()
                    },
                    _pasteImpl: function() {
                        return this._clipboardCommand("paste")
                    },
                    _cutImpl: function() {
                        return this._clipboardCommand("cut")
                    },
                    _copyImpl: function() {
                        return this._clipboardCommand("copy")
                    },
                    _clipboardCommand: function(c) {
                        var d;
                        try {
                            if (d = this.document.execCommand(c, !1, null),
                            b("webkit") && !d)
                                throw {};
                        } catch (G) {
                            d = a.substitute,
                            alert(d(this.commands.systemShortcut, [this.commands[c], d(this.commands[b("mac") ? "appleKey" : "ctrlKey"], [{
                                cut: "X",
                                copy: "C",
                                paste: "V"
                            }[c]])])),
                            d = !1
                        }
                        return d
                    },
                    queryCommandEnabled: function(a) {
                        return !this.customUndo || "undo" != a && "redo" != a ? this.inherited(arguments) : "undo" == a ? 1 < this._steps.length : 0 < this._undoedSteps.length
                    },
                    _moveToBookmark: function(a) {
                        var d = a.mark
                          , e = a.mark;
                        a = a.isCollapsed;
                        var f, h, g;
                        e && (9 > b("ie") || 9 === b("ie") && b("quirks") ? c.isArray(e) ? (d = [],
                        p.forEach(e, function(a) {
                            d.push(A.getNode(a, this.editNode))
                        }, this),
                        this.selection.moveToBookmark({
                            mark: d,
                            isCollapsed: a
                        })) : e.startContainer && e.endContainer && (g = A.getSelection(this.window)) && g.removeAllRanges && (g.removeAllRanges(),
                        a = A.create(this.window),
                        f = A.getNode(e.startContainer, this.editNode),
                        h = A.getNode(e.endContainer, this.editNode),
                        f && h && (a.setStart(f, e.startOffset),
                        a.setEnd(h, e.endOffset),
                        g.addRange(a))) : (g = A.getSelection(this.window)) && g.removeAllRanges && (g.removeAllRanges(),
                        a = A.create(this.window),
                        f = A.getNode(e.startContainer, this.editNode),
                        h = A.getNode(e.endContainer, this.editNode),
                        f && h && (a.setStart(f, e.startOffset),
                        a.setEnd(h, e.endOffset),
                        g.addRange(a))))
                    },
                    _changeToStep: function(a, b) {
                        this.setValue(b.text);
                        var c = b.bookmark;
                        c && this._moveToBookmark(c)
                    },
                    undo: function() {
                        var a = !1;
                        if (!this._undoRedoActive) {
                            this._undoRedoActive = !0;
                            this.endEditing(!0);
                            var b = this._steps.pop();
                            b && 0 < this._steps.length && (this.focus(),
                            this._changeToStep(b, this._steps[this._steps.length - 1]),
                            this._undoedSteps.push(b),
                            this.onDisplayChanged(),
                            delete this._undoRedoActive,
                            a = !0);
                            delete this._undoRedoActive
                        }
                        return a
                    },
                    redo: function() {
                        var a = !1;
                        if (!this._undoRedoActive) {
                            this._undoRedoActive = !0;
                            this.endEditing(!0);
                            var b = this._undoedSteps.pop();
                            b && 0 < this._steps.length && (this.focus(),
                            this._changeToStep(this._steps[this._steps.length - 1], b),
                            this._steps.push(b),
                            this.onDisplayChanged(),
                            a = !0);
                            delete this._undoRedoActive
                        }
                        return a
                    },
                    endEditing: function(a) {
                        this._editTimer && (this._editTimer = this._editTimer.remove());
                        this._inEditing && (this._endEditing(a),
                        this._inEditing = !1)
                    },
                    _getBookmark: function() {
                        var a = this.selection.getBookmark()
                          , d = [];
                        if (a && a.mark) {
                            var e = a.mark;
                            if (9 > b("ie") || 9 === b("ie") && b("quirks")) {
                                var f = A.getSelection(this.window);
                                if (c.isArray(e))
                                    p.forEach(a.mark, function(a) {
                                        d.push(A.getIndex(a, this.editNode).o)
                                    }, this),
                                    a.mark = d;
                                else if (f) {
                                    var h;
                                    f.rangeCount && (h = f.getRangeAt(0));
                                    a.mark = h ? h.cloneRange() : this.selection.getBookmark()
                                }
                            }
                            try {
                                a.mark && a.mark.startContainer && (d = A.getIndex(a.mark.startContainer, this.editNode).o,
                                a.mark = {
                                    startContainer: d,
                                    startOffset: a.mark.startOffset,
                                    endContainer: a.mark.endContainer === a.mark.startContainer ? d : A.getIndex(a.mark.endContainer, this.editNode).o,
                                    endOffset: a.mark.endOffset
                                })
                            } catch (D) {
                                a.mark = null
                            }
                        }
                        return a
                    },
                    _beginEditing: function() {
                        0 === this._steps.length && this._steps.push({
                            text: v.getChildrenHtml(this.editNode),
                            bookmark: this._getBookmark()
                        })
                    },
                    _endEditing: function() {
                        var a = v.getChildrenHtml(this.editNode);
                        this._undoedSteps = [];
                        this._steps.push({
                            text: a,
                            bookmark: this._getBookmark()
                        })
                    },
                    onKeyDown: function(a) {
                        b("ie") || this.iframe || a.keyCode != d.TAB || this.tabIndent || this._saveSelection();
                        if (this.customUndo) {
                            var c = a.keyCode;
                            if (a.ctrlKey && !a.shiftKey && !a.altKey) {
                                if (90 == c || 122 == c) {
                                    a.stopPropagation();
                                    a.preventDefault();
                                    this.undo();
                                    return
                                }
                                if (89 == c || 121 == c) {
                                    a.stopPropagation();
                                    a.preventDefault();
                                    this.redo();
                                    return
                                }
                            }
                            this.inherited(arguments);
                            switch (c) {
                            case d.ENTER:
                            case d.BACKSPACE:
                            case d.DELETE:
                                this.beginEditing();
                                break;
                            case 88:
                            case 86:
                                if (a.ctrlKey && !a.altKey && !a.metaKey) {
                                    this.endEditing();
                                    88 == a.keyCode ? this.beginEditing("cut") : this.beginEditing("paste");
                                    this.defer("endEditing", 1);
                                    break
                                }
                            default:
                                if (!a.ctrlKey && !a.altKey && !a.metaKey && (a.keyCode < d.F1 || a.keyCode > d.F15)) {
                                    this.beginEditing();
                                    break
                                }
                            case d.ALT:
                                this.endEditing();
                                break;
                            case d.UP_ARROW:
                            case d.DOWN_ARROW:
                            case d.LEFT_ARROW:
                            case d.RIGHT_ARROW:
                            case d.HOME:
                            case d.END:
                            case d.PAGE_UP:
                            case d.PAGE_DOWN:
                                this.endEditing(!0);
                            case d.CTRL:
                            case d.SHIFT:
                            case d.TAB:
                            }
                        } else
                            this.inherited(arguments)
                    },
                    _onBlur: function() {
                        this.inherited(arguments);
                        this.endEditing(!0)
                    },
                    _saveSelection: function() {
                        try {
                            this._savedSelection = this._getBookmark()
                        } catch (H) {}
                    },
                    _restoreSelection: function() {
                        this._savedSelection && (delete this._cursorToStart,
                        this.selection.isCollapsed() && this._moveToBookmark(this._savedSelection),
                        delete this._savedSelection)
                    },
                    onClick: function() {
                        this.endEditing(!0);
                        this.inherited(arguments)
                    },
                    replaceValue: function(a) {
                        this.customUndo ? this.isClosed ? this.setValue(a) : (this.beginEditing(),
                        a || (a = "\x26#160;"),
                        this.setValue(a),
                        this.endEditing()) : this.inherited(arguments)
                    },
                    _setDisabledAttr: function(a) {
                        this.setValueDeferred.then(c.hitch(this, function() {
                            !this.disabled && a || !this._buttonEnabledPlugins && a ? p.forEach(this._plugins, function(a) {
                                a.set("disabled", !0)
                            }) : this.disabled && !a && p.forEach(this._plugins, function(a) {
                                a.set("disabled", !1)
                            })
                        }));
                        this.inherited(arguments)
                    },
                    _setStateClass: function() {
                        try {
                            this.inherited(arguments),
                            this.document && this.document.body && e.set(this.document.body, "color", e.get(this.iframe, "color"))
                        } catch (H) {}
                    }
                });
                c.mixin(z.registry, {
                    undo: E,
                    redo: E,
                    cut: E,
                    copy: E,
                    paste: E,
                    insertOrderedList: E,
                    insertUnorderedList: E,
                    indent: E,
                    outdent: E,
                    justifyCenter: E,
                    justifyFull: E,
                    justifyLeft: E,
                    justifyRight: E,
                    "delete": E,
                    selectAll: E,
                    removeFormat: E,
                    unlink: E,
                    insertHorizontalRule: E,
                    bold: I,
                    italic: I,
                    underline: I,
                    strikethrough: I,
                    subscript: I,
                    superscript: I,
                    "|": function() {
                        return new z({
                            setEditor: function(a) {
                                this.editor = a;
                                this.button = new u({
                                    ownerDocument: a.ownerDocument
                                })
                            }
                        })
                    }
                });
                return n
            })
        },
        "dijit/ToolbarSeparator": function() {
            define(["dojo/_base/declare", "dojo/dom", "./_Widget", "./_TemplatedMixin"], function(q, p, n, m) {
                return q("dijit.ToolbarSeparator", [n, m], {
                    templateString: '\x3cdiv class\x3d"dijitToolbarSeparator dijitInline" role\x3d"presentation"\x3e\x3c/div\x3e',
                    buildRendering: function() {
                        this.inherited(arguments);
                        p.setSelectable(this.domNode, !1)
                    },
                    isFocusable: function() {
                        return !1
                    }
                })
            })
        },
        "dijit/_editor/_Plugin": function() {
            define(["dojo/_base/connect", "dojo/_base/declare", "dojo/_base/lang", "../Destroyable", "../form/Button"], function(q, p, n, m, l) {
                p = p("dijit._editor._Plugin", m, {
                    constructor: function(k) {
                        this.params = k || {};
                        n.mixin(this, this.params);
                        this._attrPairNames = {}
                    },
                    editor: null,
                    iconClassPrefix: "dijitEditorIcon",
                    button: null,
                    command: "",
                    useDefaultCommand: !0,
                    buttonClass: l,
                    disabled: !1,
                    getLabel: function(k) {
                        return this.editor.commands[k]
                    },
                    _initButton: function() {
                        if (this.command.length) {
                            var k = this.getLabel(this.command)
                              , g = this.editor
                              , f = this.iconClassPrefix + " " + this.iconClassPrefix + this.command.charAt(0).toUpperCase() + this.command.substr(1);
                            this.button || (k = n.mixin({
                                label: k,
                                ownerDocument: g.ownerDocument,
                                dir: g.dir,
                                lang: g.lang,
                                showLabel: !1,
                                iconClass: f,
                                dropDown: this.dropDown,
                                tabIndex: "-1"
                            }, this.params || {}),
                            delete k.name,
                            this.button = new this.buttonClass(k))
                        }
                        this.get("disabled") && this.button && this.button.set("disabled", this.get("disabled"))
                    },
                    destroy: function() {
                        this.dropDown && this.dropDown.destroyRecursive();
                        this.inherited(arguments)
                    },
                    connect: function(k, g, f) {
                        this.own(q.connect(k, g, this, f))
                    },
                    updateState: function() {
                        var k = this.editor, g = this.command, f, e;
                        if (k && k.isLoaded && g.length) {
                            var d = this.get("disabled");
                            if (this.button)
                                try {
                                    e = !d && k.queryCommandEnabled(g),
                                    this.enabled !== e && (this.enabled = e,
                                    this.button.set("disabled", !e)),
                                    e && "boolean" == typeof this.button.checked && (f = k.queryCommandState(g),
                                    this.checked !== f && (this.checked = f,
                                    this.button.set("checked", k.queryCommandState(g))))
                                } catch (c) {}
                        }
                    },
                    setEditor: function(k) {
                        this.editor = k;
                        this._initButton();
                        this.button && this.useDefaultCommand && (this.editor.queryCommandAvailable(this.command) ? this.own(this.button.on("click", n.hitch(this.editor, "execCommand", this.command, this.commandArg))) : this.button.domNode.style.display = "none");
                        this.own(this.editor.on("NormalizedDisplayChanged", n.hitch(this, "updateState")))
                    },
                    setToolbar: function(k) {
                        this.button && k.addChild(this.button)
                    },
                    set: function(k, g) {
                        if ("object" === typeof k) {
                            for (var f in k)
                                this.set(f, k[f]);
                            return this
                        }
                        f = this._getAttrNames(k);
                        if (this[f.s])
                            var e = this[f.s].apply(this, Array.prototype.slice.call(arguments, 1));
                        else
                            this._set(k, g);
                        return e || this
                    },
                    get: function(k) {
                        var g = this._getAttrNames(k);
                        return this[g.g] ? this[g.g]() : this[k]
                    },
                    _setDisabledAttr: function(k) {
                        this._set("disabled", k);
                        this.updateState()
                    },
                    _getAttrNames: function(k) {
                        var g = this._attrPairNames;
                        if (g[k])
                            return g[k];
                        var f = k.charAt(0).toUpperCase() + k.substr(1);
                        return g[k] = {
                            s: "_set" + f + "Attr",
                            g: "_get" + f + "Attr"
                        }
                    },
                    _set: function(k, g) {
                        this[k] = g
                    }
                });
                p.registry = {};
                return p
            })
        },
        "dijit/_editor/plugins/EnterKeyHandling": function() {
            define("dojo/_base/declare dojo/dom-construct dojo/keys dojo/_base/lang dojo/on dojo/sniff dojo/_base/window dojo/window ../_Plugin ../RichText ../range".split(" "), function(q, p, n, m, l, k, g, f, e, d, c) {
                return q("dijit._editor.plugins.EnterKeyHandling", e, {
                    blockNodeForEnter: "BR",
                    constructor: function(b) {
                        b && ("blockNodeForEnter"in b && (b.blockNodeForEnter = b.blockNodeForEnter.toUpperCase()),
                        m.mixin(this, b))
                    },
                    setEditor: function(b) {
                        if (this.editor !== b)
                            if (this.editor = b,
                            "BR" == this.blockNodeForEnter)
                                this.editor.customUndo = !0,
                                b.onLoadDeferred.then(m.hitch(this, function(a) {
                                    this.own(l(b.document, "keydown", m.hitch(this, function(a) {
                                        if (a.keyCode == n.ENTER) {
                                            var b = m.mixin({}, a);
                                            b.shiftKey = !0;
                                            this.handleEnterKey(b) || (a.stopPropagation(),
                                            a.preventDefault())
                                        }
                                    })));
                                    9 <= k("ie") && 10 >= k("ie") && this.own(l(b.document, "paste", m.hitch(this, function(a) {
                                        setTimeout(m.hitch(this, function() {
                                            var a = this.editor.document.selection.createRange();
                                            a.move("character", -1);
                                            a.select();
                                            a.move("character", 1);
                                            a.select()
                                        }), 0)
                                    })));
                                    return a
                                }));
                            else if (this.blockNodeForEnter) {
                                var a = m.hitch(this, "handleEnterKey");
                                b.addKeyHandler(13, 0, 0, a);
                                b.addKeyHandler(13, 0, 1, a);
                                this.own(this.editor.on("KeyPressed", m.hitch(this, "onKeyPressed")))
                            }
                    },
                    onKeyPressed: function() {
                        if (this._checkListLater) {
                            if (this.editor.selection.isCollapsed()) {
                                var b = this.editor.selection.getAncestorElement("LI");
                                if (b) {
                                    k("mozilla") && "LI" == b.parentNode.parentNode.nodeName && (b = b.parentNode.parentNode);
                                    var a = b.firstChild;
                                    !a || 1 != a.nodeType || "UL" != a.nodeName && "OL" != a.nodeName || (b.insertBefore(a.ownerDocument.createTextNode("\u00a0"), a),
                                    a = c.create(this.editor.window),
                                    a.setStart(b.firstChild, 0),
                                    b = c.getSelection(this.editor.window, !0),
                                    b.removeAllRanges(),
                                    b.addRange(a))
                                } else
                                    d.prototype.execCommand.call(this.editor, "formatblock", this.blockNodeForEnter),
                                    (b = this.editor.selection.getAncestorElement(this.blockNodeForEnter)) ? (b.innerHTML = this.bogusHtmlContent,
                                    9 >= k("ie") && (b = this.editor.document.selection.createRange(),
                                    b.move("character", -1),
                                    b.select())) : console.error("onKeyPressed: Cannot find the new block node")
                            }
                            this._checkListLater = !1
                        }
                        this._pressedEnterInBlock && (this._pressedEnterInBlock.previousSibling && this.removeTrailingBr(this._pressedEnterInBlock.previousSibling),
                        delete this._pressedEnterInBlock)
                    },
                    bogusHtmlContent: "\x26#160;",
                    blockNodes: /^(?:P|H1|H2|H3|H4|H5|H6|LI)$/,
                    handleEnterKey: function(b) {
                        var a, e, g, l, m = this.editor.document, n, q, z;
                        if (b.shiftKey) {
                            b = this.editor.selection.getParentElement();
                            if (l = c.getAncestor(b, this.blockNodes)) {
                                if ("LI" == l.tagName)
                                    return !0;
                                b = c.getSelection(this.editor.window);
                                a = b.getRangeAt(0);
                                a.collapsed || (a.deleteContents(),
                                b = c.getSelection(this.editor.window),
                                a = b.getRangeAt(0));
                                if (c.atBeginningOfContainer(l, a.startContainer, a.startOffset))
                                    n = m.createElement("br"),
                                    a = c.create(this.editor.window),
                                    l.insertBefore(n, l.firstChild),
                                    a.setStartAfter(n),
                                    b.removeAllRanges(),
                                    b.addRange(a);
                                else if (c.atEndOfContainer(l, a.startContainer, a.startOffset))
                                    a = c.create(this.editor.window),
                                    n = m.createElement("br"),
                                    l.appendChild(n),
                                    l.appendChild(m.createTextNode("\u00a0")),
                                    a.setStart(l.lastChild, 0),
                                    b.removeAllRanges(),
                                    b.addRange(a);
                                else
                                    return (q = a.startContainer) && 3 == q.nodeType ? (z = q.nodeValue,
                                    e = m.createTextNode(z.substring(0, a.startOffset)),
                                    g = m.createTextNode(z.substring(a.startOffset)),
                                    l = m.createElement("br"),
                                    "" == g.nodeValue && k("webkit") && (g = m.createTextNode("\u00a0")),
                                    p.place(e, q, "after"),
                                    p.place(l, e, "after"),
                                    p.place(g, l, "after"),
                                    p.destroy(q),
                                    a = c.create(this.editor.window),
                                    a.setStart(g, 0),
                                    b.removeAllRanges(),
                                    b.addRange(a),
                                    !1) : !0
                            } else
                                b = c.getSelection(this.editor.window),
                                b.rangeCount ? (a = b.getRangeAt(0)) && a.startContainer && (a.collapsed || (a.deleteContents(),
                                b = c.getSelection(this.editor.window),
                                a = b.getRangeAt(0)),
                                (q = a.startContainer) && 3 == q.nodeType ? (l = a.startOffset,
                                q.length < l && (g = this._adjustNodeAndOffset(q, l),
                                q = g.node,
                                l = g.offset),
                                z = q.nodeValue,
                                e = m.createTextNode(z.substring(0, l)),
                                g = m.createTextNode(z.substring(l)),
                                l = m.createElement("br"),
                                g.length || (g = m.createTextNode("\u00a0")),
                                e.length ? p.place(e, q, "after") : e = q,
                                p.place(l, e, "after"),
                                p.place(g, l, "after"),
                                p.destroy(q)) : (0 <= a.startOffset && (n = q.childNodes[a.startOffset]),
                                l = m.createElement("br"),
                                g = m.createTextNode("\u00a0"),
                                n ? (p.place(l, n, "before"),
                                p.place(g, l, "after")) : (q.appendChild(l),
                                q.appendChild(g))),
                                a = c.create(this.editor.window),
                                a.setStart(g, 0),
                                a.setEnd(g, g.length),
                                b.removeAllRanges(),
                                b.addRange(a),
                                this.editor.selection.collapse(!0)) : d.prototype.execCommand.call(this.editor, "inserthtml", "\x3cbr\x3e");
                            return !1
                        }
                        var w = !0;
                        b = c.getSelection(this.editor.window);
                        a = b.getRangeAt(0);
                        a.collapsed || (a.deleteContents(),
                        b = c.getSelection(this.editor.window),
                        a = b.getRangeAt(0));
                        n = c.getBlockAncestor(a.endContainer, null, this.editor.editNode);
                        var v = n.blockNode;
                        if (this._checkListLater = v && ("LI" == v.nodeName || "LI" == v.parentNode.nodeName))
                            return k("mozilla") && (this._pressedEnterInBlock = v),
                            /^(\s|&nbsp;|&#160;|\xA0|<span\b[^>]*\bclass=['"]Apple-style-span['"][^>]*>(\s|&nbsp;|&#160;|\xA0)<\/span>)?(<br>)?$/.test(v.innerHTML) && (v.innerHTML = "",
                            k("webkit") && (a = c.create(this.editor.window),
                            a.setStart(v, 0),
                            b.removeAllRanges(),
                            b.addRange(a)),
                            this._checkListLater = !1),
                            !0;
                        if (!n.blockNode || n.blockNode === this.editor.editNode) {
                            try {
                                d.prototype.execCommand.call(this.editor, "formatblock", this.blockNodeForEnter)
                            } catch (A) {}
                            n = {
                                blockNode: this.editor.selection.getAncestorElement(this.blockNodeForEnter),
                                blockContainer: this.editor.editNode
                            };
                            if (n.blockNode) {
                                if (n.blockNode != this.editor.editNode && !(n.blockNode.textContent || n.blockNode.innerHTML).replace(/^\s+|\s+$/g, "").length)
                                    return this.removeTrailingBr(n.blockNode),
                                    !1
                            } else
                                n.blockNode = this.editor.editNode;
                            b = c.getSelection(this.editor.window);
                            a = b.getRangeAt(0)
                        }
                        v = m.createElement(this.blockNodeForEnter);
                        v.innerHTML = this.bogusHtmlContent;
                        this.removeTrailingBr(n.blockNode);
                        g = a.endOffset;
                        w = a.endContainer;
                        w.length < g && (g = this._adjustNodeAndOffset(w, g),
                        w = g.node,
                        g = g.offset);
                        if (c.atEndOfContainer(n.blockNode, w, g))
                            n.blockNode === n.blockContainer ? n.blockNode.appendChild(v) : p.place(v, n.blockNode, "after"),
                            w = !1,
                            a = c.create(this.editor.window),
                            a.setStart(v, 0),
                            b.removeAllRanges(),
                            b.addRange(a),
                            this.editor.height && f.scrollIntoView(v);
                        else if (c.atBeginningOfContainer(n.blockNode, a.startContainer, a.startOffset))
                            p.place(v, n.blockNode, n.blockNode === n.blockContainer ? "first" : "before"),
                            v.nextSibling && this.editor.height && (a = c.create(this.editor.window),
                            a.setStart(v.nextSibling, 0),
                            b.removeAllRanges(),
                            b.addRange(a),
                            f.scrollIntoView(v.nextSibling)),
                            w = !1;
                        else {
                            n.blockNode === n.blockContainer ? n.blockNode.appendChild(v) : p.place(v, n.blockNode, "after");
                            w = !1;
                            n.blockNode.style && v.style && n.blockNode.style.cssText && (v.style.cssText = n.blockNode.style.cssText);
                            if ((q = a.startContainer) && 3 == q.nodeType) {
                                g = a.endOffset;
                                q.length < g && (g = this._adjustNodeAndOffset(q, g),
                                q = g.node,
                                g = g.offset);
                                z = q.nodeValue;
                                e = m.createTextNode(z.substring(0, g));
                                g = m.createTextNode(z.substring(g, z.length));
                                p.place(e, q, "before");
                                p.place(g, q, "after");
                                p.destroy(q);
                                for (a = e.parentNode; a !== n.blockNode; ) {
                                    z = m.createElement(a.tagName);
                                    a.style && z.style && a.style.cssText && (z.style.cssText = a.style.cssText);
                                    "FONT" === a.tagName && (a.color && (z.color = a.color),
                                    a.face && (z.face = a.face),
                                    a.size && (z.size = a.size));
                                    for (; g; )
                                        q = g.nextSibling,
                                        z.appendChild(g),
                                        g = q;
                                    p.place(z, a, "after");
                                    e = a;
                                    g = z;
                                    a = a.parentNode
                                }
                                if (1 == g.nodeType || 3 == g.nodeType && g.nodeValue)
                                    v.innerHTML = "";
                                for (e = g; g; )
                                    q = g.nextSibling,
                                    v.appendChild(g),
                                    g = q
                            }
                            a = c.create(this.editor.window);
                            m = e;
                            if ("BR" !== this.blockNodeForEnter) {
                                for (; m; )
                                    l = m,
                                    m = q = m.firstChild;
                                l && l.parentNode ? (v = l.parentNode,
                                a.setStart(v, 0),
                                b.removeAllRanges(),
                                b.addRange(a),
                                this.editor.height && f.scrollIntoView(v),
                                k("mozilla") && (this._pressedEnterInBlock = n.blockNode)) : w = !0
                            } else
                                a.setStart(v, 0),
                                b.removeAllRanges(),
                                b.addRange(a),
                                this.editor.height && f.scrollIntoView(v),
                                k("mozilla") && (this._pressedEnterInBlock = n.blockNode)
                        }
                        return w
                    },
                    _adjustNodeAndOffset: function(b, a) {
                        for (; b.length < a && b.nextSibling && 3 == b.nextSibling.nodeType; )
                            a -= b.length,
                            b = b.nextSibling;
                        return {
                            node: b,
                            offset: a
                        }
                    },
                    removeTrailingBr: function(b) {
                        if (b = /P|DIV|LI/i.test(b.tagName) ? b : this.editor.selection.getParentOfType(b, ["P", "DIV", "LI"]))
                            b.lastChild && (1 < b.childNodes.length && 3 == b.lastChild.nodeType && /^[\s\xAD]*$/.test(b.lastChild.nodeValue) || "BR" == b.lastChild.tagName) && p.destroy(b.lastChild),
                            b.childNodes.length || (b.innerHTML = this.bogusHtmlContent)
                    }
                })
            })
        },
        "dijit/_editor/RichText": function() {
            define("dojo/_base/array dojo/_base/config dojo/_base/declare dojo/_base/Deferred dojo/dom dojo/dom-attr dojo/dom-class dojo/dom-construct dojo/dom-geometry dojo/dom-style dojo/_base/kernel dojo/keys dojo/_base/lang dojo/on dojo/query dojo/domReady dojo/sniff dojo/string dojo/topic dojo/_base/unload dojo/_base/url dojo/window ../_Widget ../_CssStateMixin ../selection ./range ./html ../focus ../main".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A, B, C, E, I, H, F) {
                var G = n("dijit._editor.RichText", [A, B], {
                    constructor: function(b) {
                        this.contentPreFilters = [];
                        this.contentPostFilters = [];
                        this.contentDomPreFilters = [];
                        this.contentDomPostFilters = [];
                        this.editingAreaStyleSheets = [];
                        this.events = [].concat(this.events);
                        this._keyHandlers = {};
                        b && a.isString(b.value) && (this.value = b.value);
                        this.onLoadDeferred = new m
                    },
                    baseClass: "dijitEditor",
                    inheritWidth: !1,
                    focusOnLoad: !1,
                    name: "",
                    styleSheets: "",
                    height: "300px",
                    minHeight: "1em",
                    isClosed: !0,
                    isLoaded: !1,
                    _SEPARATOR: "@@**%%__RICHTEXTBOUNDRY__%%**@@",
                    _NAME_CONTENT_SEP: "@@**%%:%%**@@",
                    onLoadDeferred: null,
                    isTabIndent: !1,
                    disableSpellCheck: !1,
                    postCreate: function() {
                        "textarea" === this.domNode.tagName.toLowerCase() && console.warn("RichText should not be used with the TEXTAREA tag.  See dijit._editor.RichText docs.");
                        this.contentPreFilters = [a.trim, a.hitch(this, "_preFixUrlAttributes")].concat(this.contentPreFilters);
                        u("mozilla") && (this.contentPreFilters = [this._normalizeFontStyle].concat(this.contentPreFilters),
                        this.contentPostFilters = [this._removeMozBogus].concat(this.contentPostFilters));
                        u("webkit") && (this.contentPreFilters = [this._removeWebkitBogus].concat(this.contentPreFilters),
                        this.contentPostFilters = [this._removeWebkitBogus].concat(this.contentPostFilters));
                        if (u("ie") || u("trident"))
                            this.contentPostFilters = [this._normalizeFontStyle].concat(this.contentPostFilters),
                            this.contentDomPostFilters = [a.hitch(this, "_stripBreakerNodes")].concat(this.contentDomPostFilters);
                        this.contentDomPostFilters = [a.hitch(this, "_stripTrailingEmptyNodes")].concat(this.contentDomPostFilters);
                        this.inherited(arguments);
                        y.publish(F._scopeName + "._editor.RichText::init", this)
                    },
                    startup: function() {
                        this.inherited(arguments);
                        this.open();
                        this.setupDefaultShortcuts()
                    },
                    setupDefaultShortcuts: function() {
                        var b = a.hitch(this, function(a, b) {
                            return function() {
                                return !this.execCommand(a, b)
                            }
                        })
                          , c = {
                            b: b("bold"),
                            i: b("italic"),
                            u: b("underline"),
                            a: b("selectall"),
                            s: function() {
                                this.save(!0)
                            },
                            m: function() {
                                this.isTabIndent = !this.isTabIndent
                            },
                            1: b("formatblock", "h1"),
                            2: b("formatblock", "h2"),
                            3: b("formatblock", "h3"),
                            4: b("formatblock", "h4"),
                            "\\": b("insertunorderedlist")
                        };
                        u("ie") || (c.Z = b("redo"));
                        for (var d in c)
                            this.addKeyHandler(d, !0, !1, c[d])
                    },
                    events: ["onKeyDown", "onKeyUp"],
                    captureEvents: [],
                    _editorCommandsLocalized: !1,
                    _localizeEditorCommands: function() {
                        if (G._editorCommandsLocalized)
                            this._local2NativeFormatNames = G._local2NativeFormatNames,
                            this._native2LocalFormatNames = G._native2LocalFormatNames;
                        else {
                            G._editorCommandsLocalized = !0;
                            G._local2NativeFormatNames = {};
                            G._native2LocalFormatNames = {};
                            this._local2NativeFormatNames = G._local2NativeFormatNames;
                            this._native2LocalFormatNames = G._native2LocalFormatNames;
                            for (var b = "div p pre h1 h2 h3 h4 h5 h6 ol ul address".split(" "), c = "", d, e = 0; d = b[e++]; )
                                c = "l" !== d.charAt(1) ? c + ("\x3c" + d + "\x3e\x3cspan\x3econtent\x3c/span\x3e\x3c/" + d + "\x3e\x3cbr/\x3e") : c + ("\x3c" + d + "\x3e\x3cli\x3econtent\x3c/li\x3e\x3c/" + d + "\x3e\x3cbr/\x3e");
                            var h = f.create("div", {
                                style: {
                                    position: "absolute",
                                    top: "0px",
                                    zIndex: 10,
                                    opacity: .01
                                },
                                innerHTML: c
                            });
                            this.ownerDocumentBody.appendChild(h);
                            b = a.hitch(this, function() {
                                for (var a = h.firstChild; a; )
                                    try {
                                        this.selection.selectElement(a.firstChild);
                                        var b = a.tagName.toLowerCase();
                                        this._local2NativeFormatNames[b] = document.queryCommandValue("formatblock");
                                        this._native2LocalFormatNames[this._local2NativeFormatNames[b]] = b;
                                        a = a.nextSibling.nextSibling
                                    } catch (P) {}
                                f.destroy(h)
                            });
                            this.defer(b)
                        }
                    },
                    open: function(b) {
                        if (!this.onLoadDeferred || 0 <= this.onLoadDeferred.fired)
                            this.onLoadDeferred = new m;
                        this.isClosed || this.close();
                        y.publish(F._scopeName + "._editor.RichText::open", this);
                        1 === arguments.length && b.nodeName && (this.domNode = b);
                        var c = this.domNode, e;
                        if (a.isString(this.value))
                            e = this.value,
                            c.innerHTML = "";
                        else if (c.nodeName && "textarea" == c.nodeName.toLowerCase()) {
                            var n = this.textarea = c;
                            this.name = n.name;
                            e = n.value;
                            c = this.domNode = this.ownerDocument.createElement("div");
                            c.setAttribute("widgetId", this.id);
                            n.removeAttribute("widgetId");
                            c.cssText = n.cssText;
                            c.className += " " + n.className;
                            f.place(c, n, "before");
                            var q = a.hitch(this, function() {
                                d.set(n, {
                                    display: "block",
                                    position: "absolute",
                                    top: "-1000px"
                                });
                                if (u("ie")) {
                                    var a = n.style;
                                    this.__overflow = a.overflow;
                                    a.overflow = "hidden"
                                }
                            });
                            u("ie") ? this.defer(q, 10) : q();
                            if (n.form) {
                                var r = n.value;
                                this.reset = function() {
                                    this.getValue() !== r && this.replaceValue(r)
                                }
                                ;
                                h(n.form, "submit", a.hitch(this, function() {
                                    k.set(n, "disabled", this.disabled);
                                    n.value = this.getValue()
                                }))
                            }
                        } else
                            e = I.getChildrenHtml(c),
                            c.innerHTML = "";
                        this.value = e;
                        c.nodeName && "LI" === c.nodeName && (c.innerHTML = " \x3cbr\x3e");
                        this.header = c.ownerDocument.createElement("div");
                        c.appendChild(this.header);
                        this.editingArea = c.ownerDocument.createElement("div");
                        c.appendChild(this.editingArea);
                        this.footer = c.ownerDocument.createElement("div");
                        c.appendChild(this.footer);
                        this.name || (this.name = this.id + "_AUTOGEN");
                        if ("" !== this.name && (!p.useXDomain || p.allowXdRichTextSave)) {
                            if ((e = l.byId(F._scopeName + "._editor.RichText.value")) && "" !== e.value)
                                for (var q = e.value.split(this._SEPARATOR), t = 0, J; J = q[t++]; )
                                    if (J = J.split(this._NAME_CONTENT_SEP),
                                    J[0] === this.name) {
                                        this.value = J[1];
                                        q = q.splice(t, 1);
                                        e.value = q.join(this._SEPARATOR);
                                        break
                                    }
                            G._globalSaveHandler || (G._globalSaveHandler = {},
                            z.addOnUnload(function() {
                                for (var b in G._globalSaveHandler) {
                                    var c = G._globalSaveHandler[b];
                                    a.isFunction(c) && c()
                                }
                            }));
                            G._globalSaveHandler[this.id] = a.hitch(this, "_saveContent")
                        }
                        this.isClosed = !1;
                        e = this.editorObject = this.iframe = this.ownerDocument.createElement("iframe");
                        e.id = this.id + "_iframe";
                        e.style.border = "none";
                        e.style.width = "100%";
                        this._layoutMode ? e.style.height = "100%" : 7 <= u("ie") ? (this.height && (e.style.height = this.height),
                        this.minHeight && (e.style.minHeight = this.minHeight)) : e.style.height = this.height ? this.height : this.minHeight;
                        e.frameBorder = 0;
                        e._loadFunc = a.hitch(this, function(a) {
                            this.window = a;
                            this.document = a.document;
                            this.selection = new C.SelectionManager(a);
                            u("ie") && this._localizeEditorCommands();
                            this.onLoad(this.get("value"))
                        });
                        q = this._getIframeDocTxt().replace(/\\/g, "\\\\").replace(/'/g, "\\'");
                        q = 11 > u("ie") ? 'javascript:document.open();try{parent.window;}catch(e){document.domain\x3d"' + document.domain + "\";}document.write('" + q + "');document.close()" : "javascript: '" + q + "'";
                        this.editingArea.appendChild(e);
                        e.src = q;
                        "LI" === c.nodeName && (c.lastChild.style.marginTop = "-1.2em");
                        g.add(this.domNode, this.baseClass)
                    },
                    _local2NativeFormatNames: {},
                    _native2LocalFormatNames: {},
                    _getIframeDocTxt: function() {
                        var b = d.getComputedStyle(this.domNode), e;
                        if (this["aria-label"])
                            e = this["aria-label"];
                        else {
                            var f = r('label[for\x3d"' + this.id + '"]', this.ownerDocument)[0] || l.byId(this["aria-labelledby"], this.ownerDocument);
                            f && (e = f.textContent || f.innerHTML || "")
                        }
                        var f = "\x3cdiv id\x3d'dijitEditorBody' role\x3d'textbox' aria-multiline\x3d'true' " + (e ? " aria-label\x3d'" + x.escape(e) + "'" : "") + "\x3e\x3c/div\x3e"
                          , h = [b.fontWeight, b.fontSize, b.fontFamily].join(" ")
                          , g = b.lineHeight
                          , g = 0 <= g.indexOf("px") ? parseFloat(g) / parseFloat(b.fontSize) : 0 <= g.indexOf("em") ? parseFloat(g) : "normal"
                          , k = ""
                          , m = this;
                        this.style.replace(/(^|;)\s*(line-|font-?)[^;]+/ig, function(b) {
                            b = b.replace(/^;/ig, "") + ";";
                            var c = b.split(":")[0];
                            if (c) {
                                var c = a.trim(c), c = c.toLowerCase(), e, f = "";
                                for (e = 0; e < c.length; e++) {
                                    var h = c.charAt(e);
                                    switch (h) {
                                    case "-":
                                        e++,
                                        h = c.charAt(e).toUpperCase();
                                    default:
                                        f += h
                                    }
                                }
                                d.set(m.domNode, f, "")
                            }
                            k += b + ";"
                        });
                        this.iframe.setAttribute("title", e);
                        return ["\x3c!DOCTYPE html\x3e", "\x3chtml lang\x3d'" + (this.lang || c.locale.replace(/-.*/, "")) + "'" + (this.isLeftToRight() ? "" : " dir\x3d'rtl'") + "\x3e\n", "\x3chead\x3e\n\x3cmeta http-equiv\x3d'Content-Type' content\x3d'text/html'\x3e\n", e ? "\x3ctitle\x3e" + x.escape(e) + "\x3c/title\x3e" : "", "\x3cstyle\x3e\n\tbody,html {\n\t\tbackground:transparent;\n\t\tpadding: 1px 0 0 0;\n\t\tmargin: -1px 0 0 0;\n\t}\n\tbody,html,#dijitEditorBody { outline: none; }html { height: 100%; width: 100%; overflow: hidden; }\n", this.height ? "\tbody,#dijitEditorBody { height: 100%; width: 100%; overflow: auto; }\n" : "\tbody,#dijitEditorBody { min-height: " + this.minHeight + "; width: 100%; overflow-x: auto; overflow-y: hidden; }\n", "\tbody{\n\t\ttop:0px;\n\t\tleft:0px;\n\t\tright:0px;\n\t\tfont:", h, ";\n", this.height || u("opera") ? "" : "\t\tposition: fixed;\n", "\t\tline-height:", g, ";\n\t}\n\tp{ margin: 1em 0; }\n\tli \x3e ul:-moz-first-node, li \x3e ol:-moz-first-node{ padding-top: 1.2em; }\n", u("ie") || u("trident") || u("edge") ? "" : "\tli{ min-height:1.2em; }\n", "\x3c/style\x3e\n", this._applyEditingAreaStyleSheets(), "\n\x3c/head\x3e\n\x3cbody role\x3d'application'", e ? " aria-label\x3d'" + x.escape(e) + "'" : "", "onload\x3d'try{frameElement \x26\x26 frameElement._loadFunc(window,document)}catch(e){document.domain\x3d\"" + document.domain + "\";frameElement._loadFunc(window,document)}' ", "style\x3d'" + k + "'\x3e", f, "\x3c/body\x3e\n\x3c/html\x3e"].join("")
                    },
                    _applyEditingAreaStyleSheets: function() {
                        var a = [];
                        this.styleSheets && (a = this.styleSheets.split(";"),
                        this.styleSheets = "");
                        a = a.concat(this.editingAreaStyleSheets);
                        this.editingAreaStyleSheets = [];
                        for (var b = "", c = 0, d, e = v.get(this.ownerDocument); d = a[c++]; )
                            d = (new w(e.location,d)).toString(),
                            this.editingAreaStyleSheets.push(d),
                            b += '\x3clink rel\x3d"stylesheet" type\x3d"text/css" href\x3d"' + d + '"/\x3e';
                        return b
                    },
                    addStyleSheet: function(b) {
                        var c = b.toString()
                          , d = v.get(this.ownerDocument);
                        if ("." === c.charAt(0) || "/" !== c.charAt(0) && !b.host)
                            c = (new w(d.location,c)).toString();
                        -1 < q.indexOf(this.editingAreaStyleSheets, c) || (this.editingAreaStyleSheets.push(c),
                        this.onLoadDeferred.then(a.hitch(this, function() {
                            if (this.document.createStyleSheet)
                                this.document.createStyleSheet(c);
                            else {
                                var a = this.document.getElementsByTagName("head")[0]
                                  , b = this.document.createElement("link");
                                b.rel = "stylesheet";
                                b.type = "text/css";
                                b.href = c;
                                a.appendChild(b)
                            }
                        })))
                    },
                    removeStyleSheet: function(a) {
                        var b = a.toString()
                          , c = v.get(this.ownerDocument);
                        if ("." === b.charAt(0) || "/" !== b.charAt(0) && !a.host)
                            b = (new w(c.location,b)).toString();
                        a = q.indexOf(this.editingAreaStyleSheets, b);
                        -1 !== a && (delete this.editingAreaStyleSheets[a],
                        r('link[href\x3d"' + b + '"]', this.window.document).orphan())
                    },
                    disabled: !1,
                    _mozSettingProps: {
                        styleWithCSS: !1
                    },
                    _setDisabledAttr: function(a) {
                        a = !!a;
                        this._set("disabled", a);
                        if (this.isLoaded) {
                            var b = u("ie") && (this.isLoaded || !this.focusOnLoad);
                            b && (this.editNode.unselectable = "on");
                            this.editNode.contentEditable = !a;
                            this.editNode.tabIndex = a ? "-1" : this.tabIndex;
                            b && this.defer(function() {
                                this.editNode && (this.editNode.unselectable = "off")
                            });
                            if (u("mozilla") && !a && this._mozSettingProps) {
                                a = this._mozSettingProps;
                                for (var c in a)
                                    if (a.hasOwnProperty(c))
                                        try {
                                            this.document.execCommand(c, !1, a[c])
                                        } catch (M) {}
                            }
                            this._disabledOK = !0
                        }
                    },
                    onLoad: function(b) {
                        this.window.__registeredWindow || (this.window.__registeredWindow = !0,
                        this._iframeRegHandle = H.registerIframe(this.iframe));
                        this.editNode = this.document.body.firstChild;
                        var c = this;
                        this.beforeIframeNode = f.place("\x3cdiv tabIndex\x3d-1\x3e\x3c/div\x3e", this.iframe, "before");
                        this.afterIframeNode = f.place("\x3cdiv tabIndex\x3d-1\x3e\x3c/div\x3e", this.iframe, "after");
                        this.iframe.onfocus = this.document.onfocus = function() {
                            c.editNode.focus()
                        }
                        ;
                        this.focusNode = this.editNode;
                        var d = this.events.concat(this.captureEvents)
                          , e = this.iframe ? this.document : this.editNode;
                        this.own.apply(this, q.map(d, function(b) {
                            var c = b.toLowerCase().replace(/^on/, "");
                            return h(e, c, a.hitch(this, b))
                        }, this));
                        this.own(h(e, "mouseup", a.hitch(this, "onClick")));
                        u("ie") && (this.own(h(this.document, "mousedown", a.hitch(this, "_onIEMouseDown"))),
                        this.editNode.style.zoom = 1);
                        u("webkit") && (this._webkitListener = this.own(h(this.document, "mouseup", a.hitch(this, "onDisplayChanged")))[0],
                        this.own(h(this.document, "mousedown", a.hitch(this, function(a) {
                            a = a.target;
                            !a || a !== this.document.body && a !== this.document || this.defer("placeCursorAtEnd")
                        }))));
                        if (u("ie"))
                            try {
                                this.document.execCommand("RespectVisibilityInDesign", !0, null)
                            } catch (L) {}
                        this.isLoaded = !0;
                        this.set("disabled", this.disabled);
                        d = a.hitch(this, function() {
                            this.setValue(b);
                            this.onLoadDeferred && !this.onLoadDeferred.isFulfilled() && this.onLoadDeferred.resolve(!0);
                            this.onDisplayChanged();
                            this.focusOnLoad && t(a.hitch(this, "defer", "focus", this.updateInterval));
                            this.value = this.getValue(!0)
                        });
                        this.setValueDeferred ? this.setValueDeferred.then(d) : d()
                    },
                    onKeyDown: function(a) {
                        if (a.keyCode === b.SHIFT || a.keyCode === b.ALT || a.keyCode === b.META || a.keyCode === b.CTRL)
                            return !0;
                        a.keyCode === b.TAB && this.isTabIndent && (a.stopPropagation(),
                        a.preventDefault(),
                        this.queryCommandEnabled(a.shiftKey ? "outdent" : "indent") && this.execCommand(a.shiftKey ? "outdent" : "indent"));
                        if (a.keyCode == b.TAB && !this.isTabIndent && !a.ctrlKey && !a.altKey)
                            return a.shiftKey ? this.beforeIframeNode.focus() : this.afterIframeNode.focus(),
                            !0;
                        9 > u("ie") && a.keyCode === b.BACKSPACE && "Control" === this.document.selection.type && (a.stopPropagation(),
                        a.preventDefault(),
                        this.execCommand("delete"));
                        u("ff") && (a.keyCode === b.PAGE_UP || a.keyCode === b.PAGE_DOWN) && this.editNode.clientHeight >= this.editNode.scrollHeight && a.preventDefault();
                        var c = this._keyHandlers[a.keyCode]
                          , d = arguments;
                        c && !a.altKey && q.some(c, function(b) {
                            if (!(b.shift ^ a.shiftKey || b.ctrl ^ (a.ctrlKey || a.metaKey)))
                                return b.handler.apply(this, d) || a.preventDefault(),
                                !0
                        }, this);
                        this.defer("onKeyPressed", 1);
                        return !0
                    },
                    onKeyUp: function() {},
                    setDisabled: function(a) {
                        c.deprecated("dijit.Editor::setDisabled is deprecated", 'use dijit.Editor::attr("disabled",boolean) instead', 2);
                        this.set("disabled", a)
                    },
                    _setValueAttr: function(a) {
                        this.setValue(a)
                    },
                    _setDisableSpellCheckAttr: function(b) {
                        this.document ? k.set(this.document.body, "spellcheck", !b) : this.onLoadDeferred.then(a.hitch(this, function() {
                            k.set(this.document.body, "spellcheck", !b)
                        }));
                        this._set("disableSpellCheck", b)
                    },
                    addKeyHandler: function(b, c, d, e) {
                        "string" == typeof b && (b = b.toUpperCase().charCodeAt(0));
                        a.isArray(this._keyHandlers[b]) || (this._keyHandlers[b] = []);
                        this._keyHandlers[b].push({
                            shift: d || !1,
                            ctrl: c || !1,
                            handler: e
                        })
                    },
                    onKeyPressed: function() {
                        this.onDisplayChanged()
                    },
                    onClick: function(a) {
                        this.onDisplayChanged(a)
                    },
                    _onIEMouseDown: function() {
                        this.focused || this.disabled || this.focus()
                    },
                    _onBlur: function(a) {
                        (u("ie") || u("trident")) && this.defer(function() {
                            H.curNode || this.ownerDocumentBody.focus()
                        });
                        this.inherited(arguments);
                        var b = this.getValue(!0);
                        if (b !== this.value)
                            this.onChange(b);
                        this._set("value", b)
                    },
                    _onFocus: function(a) {
                        this.disabled || (this._disabledOK || this.set("disabled", !1),
                        this.inherited(arguments))
                    },
                    blur: function() {
                        !u("ie") && this.window.document.documentElement && this.window.document.documentElement.focus ? this.window.document.documentElement.focus() : this.ownerDocumentBody.focus && this.ownerDocumentBody.focus()
                    },
                    focus: function() {
                        this.isLoaded ? 9 > u("ie") ? this.iframe.fireEvent("onfocus", document.createEventObject()) : this.editNode.focus() : this.focusOnLoad = !0
                    },
                    updateInterval: 200,
                    _updateTimer: null,
                    onDisplayChanged: function() {
                        this._updateTimer && this._updateTimer.remove();
                        this._updateTimer = this.defer("onNormalizedDisplayChanged", this.updateInterval)
                    },
                    onNormalizedDisplayChanged: function() {
                        delete this._updateTimer
                    },
                    onChange: function() {},
                    _normalizeCommand: function(a, b) {
                        var c = a.toLowerCase();
                        "formatblock" === c ? u("safari") && void 0 === b && (c = "heading") : "hilitecolor" !== c || u("mozilla") || (c = "backcolor");
                        return c
                    },
                    _qcaCache: {},
                    queryCommandAvailable: function(a) {
                        var b = this._qcaCache[a];
                        return void 0 !== b ? b : this._qcaCache[a] = this._queryCommandAvailable(a)
                    },
                    _queryCommandAvailable: function(a) {
                        switch (a.toLowerCase()) {
                        case "bold":
                        case "italic":
                        case "underline":
                        case "subscript":
                        case "superscript":
                        case "fontname":
                        case "fontsize":
                        case "forecolor":
                        case "hilitecolor":
                        case "justifycenter":
                        case "justifyfull":
                        case "justifyleft":
                        case "justifyright":
                        case "delete":
                        case "selectall":
                        case "toggledir":
                        case "createlink":
                        case "unlink":
                        case "removeformat":
                        case "inserthorizontalrule":
                        case "insertimage":
                        case "insertorderedlist":
                        case "insertunorderedlist":
                        case "indent":
                        case "outdent":
                        case "formatblock":
                        case "inserthtml":
                        case "undo":
                        case "redo":
                        case "strikethrough":
                        case "tabindent":
                        case "cut":
                        case "copy":
                        case "paste":
                            return !0;
                        case "blockdirltr":
                        case "blockdirrtl":
                        case "dirltr":
                        case "dirrtl":
                        case "inlinedirltr":
                        case "inlinedirrtl":
                            return u("ie") || u("trident") || u("edge");
                        case "inserttable":
                        case "insertcell":
                        case "insertcol":
                        case "insertrow":
                        case "deletecells":
                        case "deletecols":
                        case "deleterows":
                        case "mergecells":
                        case "splitcell":
                            return !u("webkit");
                        default:
                            return !1
                        }
                    },
                    execCommand: function(a, b) {
                        var c;
                        this.focused && this.focus();
                        a = this._normalizeCommand(a, b);
                        if (void 0 !== b) {
                            if ("heading" === a)
                                throw Error("unimplemented");
                            "formatblock" === a && (u("ie") || u("trident")) && (b = "\x3c" + b + "\x3e")
                        }
                        var d = "_" + a + "Impl";
                        if (this[d])
                            c = this[d](b);
                        else if ((b = 1 < arguments.length ? b : null) || "createlink" !== a)
                            c = this.document.execCommand(a, !1, b);
                        this.onDisplayChanged();
                        return c
                    },
                    queryCommandEnabled: function(a) {
                        if (this.disabled || !this._disabledOK)
                            return !1;
                        a = this._normalizeCommand(a);
                        var b = "_" + a + "EnabledImpl";
                        return this[b] ? this[b](a) : this._browserQueryCommandEnabled(a)
                    },
                    queryCommandState: function(a) {
                        if (this.disabled || !this._disabledOK)
                            return !1;
                        a = this._normalizeCommand(a);
                        try {
                            return this.document.queryCommandState(a)
                        } catch (O) {
                            return !1
                        }
                    },
                    queryCommandValue: function(a) {
                        if (this.disabled || !this._disabledOK)
                            return !1;
                        a = this._normalizeCommand(a);
                        if (u("ie") && "formatblock" === a)
                            a = this._native2LocalFormatNames[this.document.queryCommandValue(a)];
                        else if (u("mozilla") && "hilitecolor" === a) {
                            var b;
                            try {
                                b = this.document.queryCommandValue("styleWithCSS")
                            } catch (D) {
                                b = !1
                            }
                            this.document.execCommand("styleWithCSS", !1, !0);
                            a = this.document.queryCommandValue(a);
                            this.document.execCommand("styleWithCSS", !1, b)
                        } else
                            a = this.document.queryCommandValue(a);
                        return a
                    },
                    _sCall: function(a, b) {
                        return this.selection[a].apply(this.selection, b)
                    },
                    placeCursorAtStart: function() {
                        this.focus();
                        var a = !1;
                        if (u("mozilla"))
                            for (var b = this.editNode.firstChild; b; ) {
                                if (3 === b.nodeType) {
                                    if (0 < b.nodeValue.replace(/^\s+|\s+$/g, "").length) {
                                        a = !0;
                                        this.selection.selectElement(b);
                                        break
                                    }
                                } else if (1 === b.nodeType) {
                                    var a = !0
                                      , c = b.tagName ? b.tagName.toLowerCase() : "";
                                    /br|input|img|base|meta|area|basefont|hr|link/.test(c) ? this.selection.selectElement(b) : this.selection.selectElementChildren(b);
                                    break
                                }
                                b = b.nextSibling
                            }
                        else
                            a = !0,
                            this.selection.selectElementChildren(this.editNode);
                        a && this.selection.collapse(!0)
                    },
                    placeCursorAtEnd: function() {
                        this.focus();
                        var a = !1;
                        if (u("mozilla"))
                            for (var b = this.editNode.lastChild; b; ) {
                                if (3 === b.nodeType) {
                                    if (0 < b.nodeValue.replace(/^\s+|\s+$/g, "").length) {
                                        a = !0;
                                        this.selection.selectElement(b);
                                        break
                                    }
                                } else if (1 === b.nodeType) {
                                    a = !0;
                                    this.selection.selectElement(b.lastChild || b);
                                    break
                                }
                                b = b.previousSibling
                            }
                        else
                            a = !0,
                            this.selection.selectElementChildren(this.editNode);
                        a && this.selection.collapse(!1)
                    },
                    getValue: function(a) {
                        return !this.textarea || !this.isClosed && this.isLoaded ? this.isLoaded ? this._postFilterContent(null, a) : this.value : this.textarea.value
                    },
                    _getValueAttr: function() {
                        return this.getValue(!0)
                    },
                    setValue: function(b) {
                        if (this.isLoaded) {
                            if (!this.textarea || !this.isClosed && this.isLoaded) {
                                b = this._preFilterContent(b);
                                var c = this.isClosed ? this.domNode : this.editNode;
                                c.innerHTML = b;
                                this._preDomFilterContent(c)
                            } else
                                this.textarea.value = b;
                            this.onDisplayChanged();
                            this._set("value", this.getValue(!0))
                        } else
                            this.onLoadDeferred.then(a.hitch(this, function() {
                                this.setValue(b)
                            }))
                    },
                    replaceValue: function(a) {
                        this.isClosed ? this.setValue(a) : this.window && this.window.getSelection && !u("mozilla") ? this.setValue(a) : this.window && this.window.getSelection ? (a = this._preFilterContent(a),
                        this.execCommand("selectall"),
                        this.execCommand("inserthtml", a),
                        this._preDomFilterContent(this.editNode)) : this.document && this.document.selection && this.setValue(a);
                        this._set("value", this.getValue(!0))
                    },
                    _preFilterContent: function(a) {
                        var b = a;
                        q.forEach(this.contentPreFilters, function(a) {
                            a && (b = a(b))
                        });
                        return b
                    },
                    _preDomFilterContent: function(b) {
                        b = b || this.editNode;
                        q.forEach(this.contentDomPreFilters, function(c) {
                            c && a.isFunction(c) && c(b)
                        }, this)
                    },
                    _postFilterContent: function(b, c) {
                        var d;
                        a.isString(b) ? d = b : (b = b || this.editNode,
                        this.contentDomPostFilters.length && (c && (b = a.clone(b)),
                        q.forEach(this.contentDomPostFilters, function(a) {
                            b = a(b)
                        })),
                        d = I.getChildrenHtml(b));
                        a.trim(d.replace(/^\xA0\xA0*/, "").replace(/\xA0\xA0*$/, "")).length || (d = "");
                        q.forEach(this.contentPostFilters, function(a) {
                            d = a(d)
                        });
                        return d
                    },
                    _saveContent: function() {
                        var a = l.byId(F._scopeName + "._editor.RichText.value");
                        a && (a.value && (a.value += this._SEPARATOR),
                        a.value += this.name + this._NAME_CONTENT_SEP + this.getValue(!0))
                    },
                    escapeXml: function(a, b) {
                        a = a.replace(/&/gm, "\x26amp;").replace(/</gm, "\x26lt;").replace(/>/gm, "\x26gt;").replace(/"/gm, "\x26quot;");
                        b || (a = a.replace(/'/gm, "\x26#39;"));
                        return a
                    },
                    getNodeHtml: function(a) {
                        c.deprecated("dijit.Editor::getNodeHtml is deprecated", "use dijit/_editor/html::getNodeHtml instead", 2);
                        return I.getNodeHtml(a)
                    },
                    getNodeChildrenHtml: function(a) {
                        c.deprecated("dijit.Editor::getNodeChildrenHtml is deprecated", "use dijit/_editor/html::getChildrenHtml instead", 2);
                        return I.getChildrenHtml(a)
                    },
                    close: function(a) {
                        if (!this.isClosed) {
                            arguments.length || (a = !0);
                            a && this._set("value", this.getValue(!0));
                            this.interval && clearInterval(this.interval);
                            this._webkitListener && (this._webkitListener.remove(),
                            delete this._webkitListener);
                            u("ie") && (this.iframe.onfocus = null);
                            this.iframe._loadFunc = null;
                            this._iframeRegHandle && (this._iframeRegHandle.remove(),
                            delete this._iframeRegHandle);
                            if (this.textarea) {
                                var b = this.textarea.style;
                                b.position = "";
                                b.left = b.top = "";
                                u("ie") && (b.overflow = this.__overflow,
                                this.__overflow = null);
                                this.textarea.value = this.value;
                                f.destroy(this.domNode);
                                this.domNode = this.textarea
                            } else
                                this.domNode.innerHTML = this.value;
                            delete this.iframe;
                            g.remove(this.domNode, this.baseClass);
                            this.isClosed = !0;
                            this.isLoaded = !1;
                            delete this.editNode;
                            delete this.focusNode;
                            this.window && this.window._frameElement && (this.window._frameElement = null);
                            this.editorObject = this.editingArea = this.document = this.window = null
                        }
                    },
                    destroy: function() {
                        this.isClosed || this.close(!1);
                        this._updateTimer && this._updateTimer.remove();
                        this.inherited(arguments);
                        G._globalSaveHandler && delete G._globalSaveHandler[this.id]
                    },
                    _removeMozBogus: function(a) {
                        return a.replace(/\stype="_moz"/gi, "").replace(/\s_moz_dirty=""/gi, "").replace(/_moz_resizing="(true|false)"/gi, "")
                    },
                    _removeWebkitBogus: function(a) {
                        a = a.replace(/\sclass="webkit-block-placeholder"/gi, "");
                        a = a.replace(/\sclass="apple-style-span"/gi, "");
                        return a = a.replace(/<meta charset=\"utf-8\" \/>/gi, "")
                    },
                    _normalizeFontStyle: function(a) {
                        return a.replace(/<(\/)?strong([ \>])/gi, "\x3c$1b$2").replace(/<(\/)?em([ \>])/gi, "\x3c$1i$2")
                    },
                    _preFixUrlAttributes: function(a) {
                        return a.replace(/(?:(<a(?=\s).*?\shref=)("|')(.*?)\2)|(?:(<a\s.*?href=)([^"'][^ >]+))/gi, "$1$4$2$3$5$2 _djrealurl\x3d$2$3$5$2").replace(/(?:(<img(?=\s).*?\ssrc=)("|')(.*?)\2)|(?:(<img\s.*?src=)([^"'][^ >]+))/gi, "$1$4$2$3$5$2 _djrealurl\x3d$2$3$5$2")
                    },
                    _browserQueryCommandEnabled: function(a) {
                        if (!a)
                            return !1;
                        var b = 9 > u("ie") ? this.document.selection.createRange() : this.document;
                        try {
                            return b.queryCommandEnabled(a)
                        } catch (D) {
                            return !1
                        }
                    },
                    _createlinkEnabledImpl: function() {
                        var a = !0;
                        return a = u("opera") ? this.window.getSelection().isCollapsed ? !0 : this.document.queryCommandEnabled("createlink") : this._browserQueryCommandEnabled("createlink")
                    },
                    _unlinkEnabledImpl: function() {
                        var a = !0;
                        return a = u("mozilla") || u("webkit") ? this.selection.hasAncestorElement("a") : this._browserQueryCommandEnabled("unlink")
                    },
                    _inserttableEnabledImpl: function() {
                        var a = !0;
                        return a = u("mozilla") || u("webkit") ? !0 : this._browserQueryCommandEnabled("inserttable")
                    },
                    _cutEnabledImpl: function() {
                        var a = !0;
                        u("webkit") ? ((a = this.window.getSelection()) && (a = a.toString()),
                        a = !!a) : a = this._browserQueryCommandEnabled("cut");
                        return a
                    },
                    _copyEnabledImpl: function() {
                        var a = !0;
                        u("webkit") ? ((a = this.window.getSelection()) && (a = a.toString()),
                        a = !!a) : a = this._browserQueryCommandEnabled("copy");
                        return a
                    },
                    _pasteEnabledImpl: function() {
                        var a = !0;
                        return u("webkit") ? !0 : a = this._browserQueryCommandEnabled("paste")
                    },
                    _inserthorizontalruleImpl: function(a) {
                        return u("ie") ? this._inserthtmlImpl("\x3chr\x3e") : this.document.execCommand("inserthorizontalrule", !1, a)
                    },
                    _unlinkImpl: function(a) {
                        return this.queryCommandEnabled("unlink") && (u("mozilla") || u("webkit")) ? (a = this.selection.getAncestorElement("a"),
                        this.selection.selectElement(a),
                        this.document.execCommand("unlink", !1, null)) : this.document.execCommand("unlink", !1, a)
                    },
                    _hilitecolorImpl: function(a) {
                        var b;
                        this._handleTextColorOrProperties("hilitecolor", a) || (u("mozilla") ? (this.document.execCommand("styleWithCSS", !1, !0),
                        b = this.document.execCommand("hilitecolor", !1, a),
                        this.document.execCommand("styleWithCSS", !1, !1)) : b = this.document.execCommand("hilitecolor", !1, a));
                        return b
                    },
                    _backcolorImpl: function(a) {
                        u("ie") && (a = a ? a : null);
                        var b = this._handleTextColorOrProperties("backcolor", a);
                        b || (b = this.document.execCommand("backcolor", !1, a));
                        return b
                    },
                    _forecolorImpl: function(a) {
                        u("ie") && (a = a ? a : null);
                        var b = !1;
                        (b = this._handleTextColorOrProperties("forecolor", a)) || (b = this.document.execCommand("forecolor", !1, a));
                        return b
                    },
                    _inserthtmlImpl: function(a) {
                        a = this._preFilterContent(a);
                        var b = !0;
                        if (9 > u("ie")) {
                            var c = this.document.selection.createRange();
                            if ("CONTROL" === this.document.selection.type.toUpperCase()) {
                                for (var d = c.item(0); c.length; )
                                    c.remove(c.item(0));
                                d.outerHTML = a
                            } else
                                c.pasteHTML(a);
                            c.select()
                        } else if (8 > u("trident")) {
                            var e = E.getSelection(this.window);
                            if (e && e.rangeCount && e.getRangeAt) {
                                c = e.getRangeAt(0);
                                c.deleteContents();
                                var h = f.create("div");
                                h.innerHTML = a;
                                for (var g, d = this.document.createDocumentFragment(); a = h.firstChild; )
                                    g = d.appendChild(a);
                                c.insertNode(d);
                                g && (c = c.cloneRange(),
                                c.setStartAfter(g),
                                c.collapse(!1),
                                e.removeAllRanges(),
                                e.addRange(c))
                            }
                        } else
                            u("mozilla") && !a.length ? this.selection.remove() : b = this.document.execCommand("inserthtml", !1, a);
                        return b
                    },
                    _boldImpl: function(a) {
                        var b = !1;
                        if (u("ie") || u("trident"))
                            this._adaptIESelection(),
                            b = this._adaptIEFormatAreaAndExec("bold");
                        b || (b = this.document.execCommand("bold", !1, a));
                        return b
                    },
                    _italicImpl: function(a) {
                        var b = !1;
                        if (u("ie") || u("trident"))
                            this._adaptIESelection(),
                            b = this._adaptIEFormatAreaAndExec("italic");
                        b || (b = this.document.execCommand("italic", !1, a));
                        return b
                    },
                    _underlineImpl: function(a) {
                        var b = !1;
                        if (u("ie") || u("trident"))
                            this._adaptIESelection(),
                            b = this._adaptIEFormatAreaAndExec("underline");
                        b || (b = this.document.execCommand("underline", !1, a));
                        return b
                    },
                    _strikethroughImpl: function(a) {
                        var b = !1;
                        if (u("ie") || u("trident"))
                            this._adaptIESelection(),
                            b = this._adaptIEFormatAreaAndExec("strikethrough");
                        b || (b = this.document.execCommand("strikethrough", !1, a));
                        return b
                    },
                    _superscriptImpl: function(a) {
                        var b = !1;
                        if (u("ie") || u("trident"))
                            this._adaptIESelection(),
                            b = this._adaptIEFormatAreaAndExec("superscript");
                        b || (b = this.document.execCommand("superscript", !1, a));
                        return b
                    },
                    _subscriptImpl: function(a) {
                        var b = !1;
                        if (u("ie") || u("trident"))
                            this._adaptIESelection(),
                            b = this._adaptIEFormatAreaAndExec("subscript");
                        b || (b = this.document.execCommand("subscript", !1, a));
                        return b
                    },
                    _fontnameImpl: function(a) {
                        var b;
                        if (u("ie") || u("trident"))
                            b = this._handleTextColorOrProperties("fontname", a);
                        b || (b = this.document.execCommand("fontname", !1, a));
                        return b
                    },
                    _fontsizeImpl: function(a) {
                        var b;
                        if (u("ie") || u("trident"))
                            b = this._handleTextColorOrProperties("fontsize", a);
                        b || (b = this.document.execCommand("fontsize", !1, a));
                        return b
                    },
                    _insertorderedlistImpl: function(a) {
                        var b = !1;
                        if (u("ie") || u("trident") || u("edge"))
                            b = this._adaptIEList("insertorderedlist", a);
                        b || (b = this.document.execCommand("insertorderedlist", !1, a));
                        return b
                    },
                    _insertunorderedlistImpl: function(a) {
                        var b = !1;
                        if (u("ie") || u("trident") || u("edge"))
                            b = this._adaptIEList("insertunorderedlist", a);
                        b || (b = this.document.execCommand("insertunorderedlist", !1, a));
                        return b
                    },
                    getHeaderHeight: function() {
                        return this._getNodeChildrenHeight(this.header)
                    },
                    getFooterHeight: function() {
                        return this._getNodeChildrenHeight(this.footer)
                    },
                    _getNodeChildrenHeight: function(a) {
                        var b = 0;
                        if (a && a.childNodes) {
                            var c;
                            for (c = 0; c < a.childNodes.length; c++)
                                var d = e.position(a.childNodes[c])
                                  , b = b + d.h
                        }
                        return b
                    },
                    _isNodeEmpty: function(a, b) {
                        return 1 === a.nodeType ? 0 < a.childNodes.length ? this._isNodeEmpty(a.childNodes[0], b) : !0 : 3 === a.nodeType ? "" === a.nodeValue.substring(b) : !1
                    },
                    _removeStartingRangeFromRange: function(a, b) {
                        if (a.nextSibling)
                            b.setStart(a.nextSibling, 0);
                        else {
                            for (var c = a.parentNode; c && null == c.nextSibling; )
                                c = c.parentNode;
                            c && b.setStart(c.nextSibling, 0)
                        }
                        return b
                    },
                    _adaptIESelection: function() {
                        var a = E.getSelection(this.window);
                        if (a && a.rangeCount && !a.isCollapsed) {
                            for (var b = a.getRangeAt(0), c = b.startContainer, d = b.startOffset; 3 === c.nodeType && d >= c.length && c.nextSibling; )
                                d -= c.length,
                                c = c.nextSibling;
                            for (var e = null; this._isNodeEmpty(c, d) && c !== e; )
                                e = c,
                                b = this._removeStartingRangeFromRange(c, b),
                                c = b.startContainer,
                                d = 0;
                            a.removeAllRanges();
                            a.addRange(b)
                        }
                    },
                    _adaptIEFormatAreaAndExec: function(a) {
                        var b = E.getSelection(this.window), c = this.document, d, e, h, g, k, l, m;
                        if (a && b && b.isCollapsed) {
                            if (this.queryCommandValue(a)) {
                                a = this._tagNamesForCommand(a);
                                h = b.getRangeAt(0);
                                g = h.startContainer;
                                3 === g.nodeType && (e = h.endOffset,
                                g.length < e && (e = this._adjustNodeAndOffset(d, e),
                                g = e.node,
                                e = e.offset));
                                for (; g && g !== this.editNode; ) {
                                    d = g.tagName ? g.tagName.toLowerCase() : "";
                                    if (-1 < q.indexOf(a, d)) {
                                        m = g;
                                        break
                                    }
                                    g = g.parentNode
                                }
                                if (m && (d = h.startContainer,
                                a = c.createElement(m.tagName),
                                f.place(a, m, "after"),
                                d && 3 === d.nodeType)) {
                                    e = h.endOffset;
                                    d.length < e && (e = this._adjustNodeAndOffset(d, e),
                                    d = e.node,
                                    e = e.offset);
                                    g = d.nodeValue;
                                    h = c.createTextNode(g.substring(0, e));
                                    var n = g.substring(e, g.length);
                                    n && (k = c.createTextNode(n));
                                    f.place(h, d, "before");
                                    k && (l = c.createElement("span"),
                                    l.className = "ieFormatBreakerSpan",
                                    f.place(l, d, "after"),
                                    f.place(k, l, "after"),
                                    k = l);
                                    f.destroy(d);
                                    e = h.parentNode;
                                    for (d = []; e !== m; ) {
                                        g = e.tagName;
                                        h = {
                                            tagName: g
                                        };
                                        d.push(h);
                                        g = c.createElement(g);
                                        e.style && g.style && e.style.cssText && (g.style.cssText = e.style.cssText,
                                        h.cssText = e.style.cssText);
                                        "FONT" === e.tagName && (e.color && (g.color = e.color,
                                        h.color = e.color),
                                        e.face && (g.face = e.face,
                                        h.face = e.face),
                                        e.size && (g.size = e.size,
                                        h.size = e.size));
                                        e.className && (g.className = e.className,
                                        h.className = e.className);
                                        if (k)
                                            for (; k; )
                                                h = k.nextSibling,
                                                g.appendChild(k),
                                                k = h;
                                        g.tagName == e.tagName ? (l = c.createElement("span"),
                                        l.className = "ieFormatBreakerSpan",
                                        f.place(l, e, "after"),
                                        f.place(g, l, "after")) : f.place(g, e, "after");
                                        h = e;
                                        k = g;
                                        e = e.parentNode
                                    }
                                    if (k) {
                                        if (1 === k.nodeType || 3 === k.nodeType && k.nodeValue)
                                            a.innerHTML = "";
                                        for (; k; )
                                            h = k.nextSibling,
                                            a.appendChild(k),
                                            k = h
                                    }
                                    if (d.length) {
                                        h = d.pop();
                                        k = c.createElement(h.tagName);
                                        h.cssText && k.style && (k.style.cssText = h.cssText);
                                        h.className && (k.className = h.className);
                                        "FONT" === h.tagName && (h.color && (k.color = h.color),
                                        h.face && (k.face = h.face),
                                        h.size && (k.size = h.size));
                                        for (f.place(k, a, "before"); d.length; )
                                            h = d.pop(),
                                            m = c.createElement(h.tagName),
                                            h.cssText && m.style && (m.style.cssText = h.cssText),
                                            h.className && (m.className = h.className),
                                            "FONT" === h.tagName && (h.color && (m.color = h.color),
                                            h.face && (m.face = h.face),
                                            h.size && (m.size = h.size)),
                                            k.appendChild(m),
                                            k = m;
                                        m = c.createTextNode(".");
                                        l.appendChild(m);
                                        k.appendChild(m)
                                    } else
                                        l = c.createElement("span"),
                                        l.className = "ieFormatBreakerSpan",
                                        m = c.createTextNode("."),
                                        l.appendChild(m),
                                        f.place(l, a, "before");
                                    k = E.create(this.window);
                                    k.setStart(m, 0);
                                    k.setEnd(m, m.length);
                                    b.removeAllRanges();
                                    b.addRange(k);
                                    this.selection.collapse(!1);
                                    m.parentNode.innerHTML = "";
                                    a.firstChild || f.destroy(a);
                                    return !0
                                }
                                return !1
                            }
                            h = b.getRangeAt(0);
                            if ((d = h.startContainer) && 3 === d.nodeType)
                                return e = h.startOffset,
                                d.length < e && (e = this._adjustNodeAndOffset(d, e),
                                d = e.node,
                                e = e.offset),
                                g = d.nodeValue,
                                h = c.createTextNode(g.substring(0, e)),
                                n = g.substring(e),
                                "" !== n && (k = c.createTextNode(g.substring(e))),
                                l = c.createElement("span"),
                                m = c.createTextNode("."),
                                l.appendChild(m),
                                h.length ? f.place(h, d, "after") : h = d,
                                f.place(l, h, "after"),
                                k && f.place(k, l, "after"),
                                f.destroy(d),
                                k = E.create(this.window),
                                k.setStart(m, 0),
                                k.setEnd(m, m.length),
                                b.removeAllRanges(),
                                b.addRange(k),
                                c.execCommand(a),
                                f.place(l.firstChild, l, "before"),
                                f.destroy(l),
                                k.setStart(m, 0),
                                k.setEnd(m, m.length),
                                b.removeAllRanges(),
                                b.addRange(k),
                                this.selection.collapse(!1),
                                m.parentNode.innerHTML = "",
                                !0
                        } else
                            return !1
                    },
                    _adaptIEList: function(a) {
                        var b = E.getSelection(this.window);
                        if (b.isCollapsed && b.rangeCount && !this.queryCommandValue(a)) {
                            var c = b.getRangeAt(0)
                              , d = c.startContainer;
                            if (d && 3 == d.nodeType && !c.startOffset)
                                return c = "ul",
                                "insertorderedlist" === a && (c = "ol"),
                                a = this.document.createElement(c),
                                c = f.create("li", null, a),
                                f.place(a, d, "before"),
                                c.appendChild(d),
                                f.create("br", null, a, "after"),
                                a = E.create(this.window),
                                a.setStart(d, 0),
                                a.setEnd(d, d.length),
                                b.removeAllRanges(),
                                b.addRange(a),
                                this.selection.collapse(!0),
                                !0
                        }
                        return !1
                    },
                    _handleTextColorOrProperties: function(a, b) {
                        var c = E.getSelection(this.window), e = this.document, h, g, k, l, m;
                        b = b || null;
                        if (a && c && c.isCollapsed && c.rangeCount && (g = c.getRangeAt(0),
                        (h = g.startContainer) && 3 === h.nodeType)) {
                            m = g.startOffset;
                            h.length < m && (g = this._adjustNodeAndOffset(h, m),
                            h = g.node,
                            m = g.offset);
                            k = h.nodeValue;
                            g = e.createTextNode(k.substring(0, m));
                            "" !== k.substring(m) && (l = e.createTextNode(k.substring(m)));
                            k = e.createElement("span");
                            m = e.createTextNode(".");
                            k.appendChild(m);
                            e = e.createElement("span");
                            k.appendChild(e);
                            g.length ? f.place(g, h, "after") : g = h;
                            f.place(k, g, "after");
                            l && f.place(l, k, "after");
                            f.destroy(h);
                            h = E.create(this.window);
                            h.setStart(m, 0);
                            h.setEnd(m, m.length);
                            c.removeAllRanges();
                            c.addRange(h);
                            if (u("webkit")) {
                                c = "color";
                                if ("hilitecolor" === a || "backcolor" === a)
                                    c = "backgroundColor";
                                d.set(k, c, b);
                                this.selection.remove();
                                f.destroy(e);
                                k.innerHTML = "\x26#160;";
                                this.selection.selectElement(k);
                                this.focus()
                            } else
                                this.execCommand(a, b),
                                f.place(k.firstChild, k, "before"),
                                f.destroy(k),
                                h.setStart(m, 0),
                                h.setEnd(m, m.length),
                                c.removeAllRanges(),
                                c.addRange(h),
                                this.selection.collapse(!1),
                                m.parentNode.removeChild(m);
                            return !0
                        }
                        return !1
                    },
                    _adjustNodeAndOffset: function(a, b) {
                        for (; a.length < b && a.nextSibling && 3 === a.nextSibling.nodeType; )
                            b -= a.length,
                            a = a.nextSibling;
                        return {
                            node: a,
                            offset: b
                        }
                    },
                    _tagNamesForCommand: function(a) {
                        return "bold" === a ? ["b", "strong"] : "italic" === a ? ["i", "em"] : "strikethrough" === a ? ["s", "strike"] : "superscript" === a ? ["sup"] : "subscript" === a ? ["sub"] : "underline" === a ? ["u"] : []
                    },
                    _stripBreakerNodes: function(a) {
                        if (this.isLoaded)
                            return r(".ieFormatBreakerSpan", a).forEach(function(a) {
                                for (; a.firstChild; )
                                    f.place(a.firstChild, a, "before");
                                f.destroy(a)
                            }),
                            a
                    },
                    _stripTrailingEmptyNodes: function(a) {
                        function b(a) {
                            return /^(p|div|br)$/i.test(a.nodeName) && 0 == a.children.length && /^[\s\xA0]*$/.test(a.textContent || a.innerText || "") || 3 === a.nodeType && /^[\s\xA0]*$/.test(a.nodeValue)
                        }
                        for (; a.lastChild && b(a.lastChild); )
                            f.destroy(a.lastChild);
                        return a
                    },
                    _setTextDirAttr: function(b) {
                        this._set("textDir", b);
                        this.onLoadDeferred.then(a.hitch(this, function() {
                            this.editNode.dir = b
                        }))
                    }
                });
                return G
            })
        },
        "dijit/selection": function() {
            define("dojo/_base/array dojo/dom dojo/_base/lang dojo/sniff dojo/_base/window dijit/focus".split(" "), function(q, p, n, m, l, k) {
                var g = function(e) {
                    var d = e.document;
                    this.getType = function() {
                        if (d.getSelection) {
                            var c = "text", b;
                            try {
                                b = e.getSelection()
                            } catch (a) {}
                            b && 1 == b.rangeCount && (b = b.getRangeAt(0),
                            b.startContainer == b.endContainer && 1 == b.endOffset - b.startOffset && 3 != b.startContainer.nodeType && (c = "control"));
                            return c
                        }
                        return d.selection.type.toLowerCase()
                    }
                    ;
                    this.getSelectedText = function() {
                        if (d.getSelection) {
                            var c = e.getSelection();
                            return c ? c.toString() : ""
                        }
                        return "control" == this.getType() ? null : d.selection.createRange().text
                    }
                    ;
                    this.getSelectedHtml = function() {
                        if (d.getSelection) {
                            var c = e.getSelection();
                            if (c && c.rangeCount) {
                                var b, a = "";
                                for (b = 0; b < c.rangeCount; b++) {
                                    var f = c.getRangeAt(b).cloneContents()
                                      , g = d.createElement("div");
                                    g.appendChild(f);
                                    a += g.innerHTML
                                }
                                return a
                            }
                            return null
                        }
                        return "control" == this.getType() ? null : d.selection.createRange().htmlText
                    }
                    ;
                    this.getSelectedElement = function() {
                        if ("control" == this.getType()) {
                            if (d.getSelection) {
                                var c = e.getSelection();
                                return c.anchorNode.childNodes[c.anchorOffset]
                            }
                            if ((c = d.selection.createRange()) && c.item)
                                return d.selection.createRange().item(0)
                        }
                        return null
                    }
                    ;
                    this.getParentElement = function() {
                        if ("control" == this.getType()) {
                            var c = this.getSelectedElement();
                            if (c)
                                return c.parentNode
                        } else if (d.getSelection) {
                            if (c = d.getSelection()) {
                                for (c = c.anchorNode; c && 1 != c.nodeType; )
                                    c = c.parentNode;
                                return c
                            }
                        } else
                            return c = d.selection.createRange(),
                            c.collapse(!0),
                            c.parentElement();
                        return null
                    }
                    ;
                    this.hasAncestorElement = function(c) {
                        return null != this.getAncestorElement.apply(this, arguments)
                    }
                    ;
                    this.getAncestorElement = function(c) {
                        var b = this.getSelectedElement() || this.getParentElement();
                        return this.getParentOfType(b, arguments)
                    }
                    ;
                    this.isTag = function(c, b) {
                        if (c && c.tagName)
                            for (var a = c.tagName.toLowerCase(), d = 0; d < b.length; d++) {
                                var e = String(b[d]).toLowerCase();
                                if (a == e)
                                    return e
                            }
                        return ""
                    }
                    ;
                    this.getParentOfType = function(c, b) {
                        for (; c; ) {
                            if (this.isTag(c, b).length)
                                return c;
                            c = c.parentNode
                        }
                        return null
                    }
                    ;
                    this.collapse = function(c) {
                        if (d.getSelection) {
                            var b = e.getSelection();
                            b.removeAllRanges ? c ? b.collapseToStart() : b.collapseToEnd() : b.collapse(c)
                        } else
                            b = d.selection.createRange(),
                            b.collapse(c),
                            b.select()
                    }
                    ;
                    this.remove = function() {
                        var c = d.selection;
                        d.getSelection ? (c = e.getSelection(),
                        c.deleteFromDocument()) : "none" != c.type.toLowerCase() && c.clear();
                        return c
                    }
                    ;
                    this.selectElementChildren = function(c, b) {
                        var a;
                        c = p.byId(c);
                        if (d.getSelection) {
                            var f = e.getSelection();
                            m("opera") ? (a = f.rangeCount ? f.getRangeAt(0) : d.createRange(),
                            a.setStart(c, 0),
                            a.setEnd(c, 3 == c.nodeType ? c.length : c.childNodes.length),
                            f.addRange(a)) : f.selectAllChildren(c)
                        } else if (a = c.ownerDocument.body.createTextRange(),
                        a.moveToElementText(c),
                        !b)
                            try {
                                a.select()
                            } catch (r) {}
                    }
                    ;
                    this.selectElement = function(c, b) {
                        var a;
                        c = p.byId(c);
                        if (d.getSelection) {
                            var e = d.getSelection();
                            a = d.createRange();
                            e.removeAllRanges && (m("opera") && e.getRangeAt(0) && (a = e.getRangeAt(0)),
                            a.selectNode(c),
                            e.removeAllRanges(),
                            e.addRange(a))
                        } else
                            try {
                                e = c.tagName ? c.tagName.toLowerCase() : "",
                                a = "img" === e || "table" === e ? l.body(d).createControlRange() : l.body(d).createRange(),
                                a.addElement(c),
                                b || a.select()
                            } catch (r) {
                                this.selectElementChildren(c, b)
                            }
                    }
                    ;
                    this.inSelection = function(c) {
                        if (c) {
                            var b, a;
                            if (d.getSelection) {
                                var f = e.getSelection();
                                f && 0 < f.rangeCount && (a = f.getRangeAt(0));
                                if (a && a.compareBoundaryPoints && d.createRange)
                                    try {
                                        if (b = d.createRange(),
                                        b.setStart(c, 0),
                                        1 === a.compareBoundaryPoints(a.START_TO_END, b))
                                            return !0
                                    } catch (r) {}
                            } else {
                                a = d.selection.createRange();
                                try {
                                    b = c.ownerDocument.body.createTextRange(),
                                    b.moveToElementText(c)
                                } catch (r) {}
                                if (a && b && 1 === a.compareEndPoints("EndToStart", b))
                                    return !0
                            }
                        }
                        return !1
                    }
                    ;
                    this.getBookmark = function() {
                        var c, b, a = d.selection, f = k.curNode;
                        if (d.getSelection) {
                            if (a = e.getSelection())
                                if (a.isCollapsed) {
                                    if (c = f ? f.tagName : "")
                                        if (c = c.toLowerCase(),
                                        "textarea" == c || "input" == c && (!f.type || "text" == f.type.toLowerCase()))
                                            return a = {
                                                start: f.selectionStart,
                                                end: f.selectionEnd,
                                                node: f,
                                                pRange: !0
                                            },
                                            {
                                                isCollapsed: a.end <= a.start,
                                                mark: a
                                            };
                                    c = {
                                        isCollapsed: !0
                                    };
                                    a.rangeCount && (c.mark = a.getRangeAt(0).cloneRange())
                                } else
                                    b = a.getRangeAt(0),
                                    c = {
                                        isCollapsed: !1,
                                        mark: b.cloneRange()
                                    }
                        } else if (a) {
                            c = f ? f.tagName : "";
                            c = c.toLowerCase();
                            if (f && c && ("button" == c || "textarea" == c || "input" == c)) {
                                if (a.type && "none" == a.type.toLowerCase())
                                    return {
                                        isCollapsed: !0,
                                        mark: null
                                    };
                                b = a.createRange();
                                return {
                                    isCollapsed: b.text && b.text.length ? !1 : !0,
                                    mark: {
                                        range: b,
                                        pRange: !0
                                    }
                                }
                            }
                            c = {};
                            try {
                                b = a.createRange(),
                                c.isCollapsed = !("Text" == a.type ? b.htmlText.length : b.length)
                            } catch (r) {
                                return c.isCollapsed = !0,
                                c
                            }
                            if ("CONTROL" == a.type.toUpperCase())
                                if (b.length)
                                    for (c.mark = [],
                                    a = 0,
                                    f = b.length; a < f; )
                                        c.mark.push(b.item(a++));
                                else
                                    c.isCollapsed = !0,
                                    c.mark = null;
                            else
                                c.mark = b.getBookmark()
                        } else
                            console.warn("No idea how to store the current selection for this browser!");
                        return c
                    }
                    ;
                    this.moveToBookmark = function(c) {
                        if (c = c.mark)
                            if (d.getSelection) {
                                var b = e.getSelection();
                                b && b.removeAllRanges ? c.pRange ? (b = c.node,
                                b.selectionStart = c.start,
                                b.selectionEnd = c.end) : (b.removeAllRanges(),
                                b.addRange(c)) : console.warn("No idea how to restore selection for this browser!")
                            } else if (d.selection && c) {
                                var a;
                                c.pRange ? a = c.range : n.isArray(c) ? (a = d.body.createControlRange(),
                                q.forEach(c, function(b) {
                                    a.addElement(b)
                                })) : (a = d.body.createTextRange(),
                                a.moveToBookmark(c));
                                a.select()
                            }
                    }
                    ;
                    this.isCollapsed = function() {
                        return this.getBookmark().isCollapsed
                    }
                }
                  , f = new g(window);
                f.SelectionManager = g;
                return f
            })
        },
        "dijit/_editor/range": function() {
            define(["dojo/_base/array", "dojo/_base/declare", "dojo/_base/lang"], function(q, p, n) {
                var m = {
                    getIndex: function(g, f) {
                        for (var e = [], d = [], c = g, b, a; g != f; ) {
                            var h = 0;
                            for (b = g.parentNode; a = b.childNodes[h++]; )
                                if (a === g) {
                                    --h;
                                    break
                                }
                            e.unshift(h);
                            d.unshift(h - b.childNodes.length);
                            g = b
                        }
                        if (0 < e.length && 3 == c.nodeType) {
                            for (a = c.previousSibling; a && 3 == a.nodeType; )
                                e[e.length - 1]--,
                                a = a.previousSibling;
                            for (a = c.nextSibling; a && 3 == a.nodeType; )
                                d[d.length - 1]++,
                                a = a.nextSibling
                        }
                        return {
                            o: e,
                            r: d
                        }
                    },
                    getNode: function(g, f) {
                        if (!n.isArray(g) || 0 == g.length)
                            return f;
                        var e = f;
                        q.every(g, function(d) {
                            if (0 <= d && d < e.childNodes.length)
                                e = e.childNodes[d];
                            else
                                return e = null,
                                !1;
                            return !0
                        });
                        return e
                    },
                    getCommonAncestor: function(g, f, e) {
                        e = e || g.ownerDocument.body;
                        var d = function(a) {
                            for (var b = []; a; )
                                if (b.unshift(a),
                                a !== e)
                                    a = a.parentNode;
                                else
                                    break;
                            return b
                        };
                        g = d(g);
                        f = d(f);
                        for (var d = Math.min(g.length, f.length), c = g[0], b = 1; b < d; b++)
                            if (g[b] === f[b])
                                c = g[b];
                            else
                                break;
                        return c
                    },
                    getAncestor: function(g, f, e) {
                        for (e = e || g.ownerDocument.body; g && g !== e; ) {
                            var d = g.nodeName.toUpperCase();
                            if (f.test(d))
                                return g;
                            g = g.parentNode
                        }
                        return null
                    },
                    BlockTagNames: /^(?:P|DIV|H1|H2|H3|H4|H5|H6|ADDRESS|PRE|OL|UL|LI|DT|DE)$/,
                    getBlockAncestor: function(g, f, e) {
                        e = e || g.ownerDocument.body;
                        f = f || m.BlockTagNames;
                        for (var d = null, c; g && g !== e; ) {
                            var b = g.nodeName.toUpperCase();
                            !d && f.test(b) && (d = g);
                            !c && /^(?:BODY|TD|TH|CAPTION)$/.test(b) && (c = g);
                            g = g.parentNode
                        }
                        return {
                            blockNode: d,
                            blockContainer: c || g.ownerDocument.body
                        }
                    },
                    atBeginningOfContainer: function(g, f, e) {
                        var d = !1
                          , c = 0 == e;
                        c || 3 != f.nodeType || /^[\s\xA0]+$/.test(f.nodeValue.substr(0, e)) && (c = !0);
                        if (c)
                            for (d = !0; f && f !== g; ) {
                                if (f.previousSibling) {
                                    d = !1;
                                    break
                                }
                                f = f.parentNode
                            }
                        return d
                    },
                    atEndOfContainer: function(g, f, e) {
                        var d = !1
                          , c = e == (f.length || f.childNodes.length);
                        c || 3 != f.nodeType || /^[\s\xA0]+$/.test(f.nodeValue.substr(e)) && (c = !0);
                        if (c)
                            for (d = !0; f && f !== g; ) {
                                if (f.nextSibling) {
                                    d = !1;
                                    break
                                }
                                f = f.parentNode
                            }
                        return d
                    },
                    adjacentNoneTextNode: function(g, f) {
                        for (var e = g, d = 0 - g.length || 0, c = f ? "nextSibling" : "previousSibling"; e && 3 == e.nodeType; )
                            d += e.length,
                            e = e[c];
                        return [e, d]
                    },
                    create: function(g) {
                        g = g || window;
                        return g.getSelection ? g.document.createRange() : new k
                    },
                    getSelection: function(g, f) {
                        if (g.getSelection)
                            return g.getSelection();
                        var e = new l.selection(g);
                        f || e._getCurrentSelection();
                        return e
                    }
                };
                if (!window.getSelection)
                    var l = m.ie = {
                        cachedSelection: {},
                        selection: function(g) {
                            this._ranges = [];
                            this.addRange = function(f, e) {
                                this._ranges.push(f);
                                e || f._select();
                                this.rangeCount = this._ranges.length
                            }
                            ;
                            this.removeAllRanges = function() {
                                this._ranges = [];
                                this.rangeCount = 0
                            }
                            ;
                            this.getRangeAt = function(f) {
                                return this._ranges[f]
                            }
                            ;
                            this._getCurrentSelection = function() {
                                this.removeAllRanges();
                                var f;
                                f = g.document.selection.createRange();
                                f = "CONTROL" == g.document.selection.type.toUpperCase() ? new k(l.decomposeControlRange(f)) : new k(l.decomposeTextRange(f));
                                this.addRange(f, !0),
                                this.isCollapsed = f.collapsed
                            }
                        },
                        decomposeControlRange: function(g) {
                            var f = g.item(0)
                              , e = g.item(g.length - 1);
                            g = f.parentNode;
                            var d = e.parentNode
                              , f = m.getIndex(f, g).o[0]
                              , e = m.getIndex(e, d).o[0] + 1;
                            return [g, f, d, e]
                        },
                        getEndPoint: function(g, f) {
                            var e = g.duplicate();
                            e.collapse(!f);
                            var d = "EndTo" + (f ? "End" : "Start"), c = e.parentElement(), b, a, h;
                            0 < c.childNodes.length ? q.every(c.childNodes, function(f, k) {
                                var l;
                                if (3 != f.nodeType)
                                    if (e.moveToElementText(f),
                                    0 < e.compareEndPoints(d, g))
                                        if (h && 3 == h.nodeType)
                                            b = h,
                                            l = !0;
                                        else
                                            return b = c,
                                            a = k,
                                            !1;
                                    else {
                                        if (k == c.childNodes.length - 1)
                                            return b = c,
                                            a = c.childNodes.length,
                                            !1
                                    }
                                else
                                    k == c.childNodes.length - 1 && (b = f,
                                    l = !0);
                                if (l && b) {
                                    b = (l = m.adjacentNoneTextNode(b)[0]) ? l.nextSibling : c.firstChild;
                                    var n = m.adjacentNoneTextNode(b);
                                    l = n[0];
                                    n = n[1];
                                    l ? (e.moveToElementText(l),
                                    e.collapse(!1)) : e.moveToElementText(c);
                                    e.setEndPoint(d, g);
                                    a = e.text.length - n;
                                    return !1
                                }
                                h = f;
                                return !0
                            }) : (b = c,
                            a = 0);
                            if (!f && 1 == b.nodeType && a == b.childNodes.length) {
                                var k = b.nextSibling;
                                k && 3 == k.nodeType && (b = k,
                                a = 0)
                            }
                            return [b, a]
                        },
                        setEndPoint: function(g, f, e) {
                            g = g.duplicate();
                            var d;
                            if (3 != f.nodeType)
                                if (0 < e) {
                                    if (d = f.childNodes[e - 1])
                                        if (3 == d.nodeType)
                                            f = d,
                                            e = d.length;
                                        else if (d.nextSibling && 3 == d.nextSibling.nodeType)
                                            f = d.nextSibling,
                                            e = 0;
                                        else {
                                            g.moveToElementText(d.nextSibling ? d : f);
                                            var c = d.parentNode;
                                            d = c.insertBefore(d.ownerDocument.createTextNode(" "), d.nextSibling);
                                            g.collapse(!1);
                                            c.removeChild(d)
                                        }
                                } else
                                    g.moveToElementText(f),
                                    g.collapse(!0);
                            3 == f.nodeType && (d = m.adjacentNoneTextNode(f),
                            c = d[0],
                            d = d[1],
                            c ? (g.moveToElementText(c),
                            g.collapse(!1),
                            "inherit" != c.contentEditable && d++) : (g.moveToElementText(f.parentNode),
                            g.collapse(!0),
                            g.move("character", 1),
                            g.move("character", -1)),
                            e += d,
                            0 < e && g.move("character", e) != e && console.error("Error when moving!"));
                            return g
                        },
                        decomposeTextRange: function(g) {
                            var f = l.getEndPoint(g)
                              , e = f[0]
                              , d = f[1]
                              , c = f[0]
                              , f = f[1];
                            g.htmlText.length && (g.htmlText == g.text ? f = d + g.text.length : (f = l.getEndPoint(g, !0),
                            c = f[0],
                            f = f[1]));
                            return [e, d, c, f]
                        },
                        setRange: function(g, f, e, d, c, b) {
                            f = l.setEndPoint(g, f, e);
                            g.setEndPoint("StartToStart", f);
                            if (!b)
                                var a = l.setEndPoint(g, d, c);
                            g.setEndPoint("EndToEnd", a || f);
                            return g
                        }
                    }
                      , k = m.W3CRange = p(null, {
                        constructor: function() {
                            0 < arguments.length ? (this.setStart(arguments[0][0], arguments[0][1]),
                            this.setEnd(arguments[0][2], arguments[0][3])) : (this.startContainer = this.commonAncestorContainer = null,
                            this.startOffset = 0,
                            this.endContainer = null,
                            this.endOffset = 0,
                            this.collapsed = !0)
                        },
                        _updateInternal: function() {
                            this.commonAncestorContainer = this.startContainer !== this.endContainer ? m.getCommonAncestor(this.startContainer, this.endContainer) : this.startContainer;
                            this.collapsed = this.startContainer === this.endContainer && this.startOffset == this.endOffset
                        },
                        setStart: function(g, f) {
                            f = parseInt(f);
                            if (this.startContainer !== g || this.startOffset != f)
                                delete this._cachedBookmark,
                                this.startContainer = g,
                                this.startOffset = f,
                                this.endContainer ? this._updateInternal() : this.setEnd(g, f)
                        },
                        setEnd: function(g, f) {
                            f = parseInt(f);
                            if (this.endContainer !== g || this.endOffset != f)
                                delete this._cachedBookmark,
                                this.endContainer = g,
                                this.endOffset = f,
                                this.startContainer ? this._updateInternal() : this.setStart(g, f)
                        },
                        setStartAfter: function(g, f) {
                            this._setPoint("setStart", g, f, 1)
                        },
                        setStartBefore: function(g, f) {
                            this._setPoint("setStart", g, f, 0)
                        },
                        setEndAfter: function(g, f) {
                            this._setPoint("setEnd", g, f, 1)
                        },
                        setEndBefore: function(g, f) {
                            this._setPoint("setEnd", g, f, 0)
                        },
                        _setPoint: function(g, f, e, d) {
                            e = m.getIndex(f, f.parentNode).o;
                            this[g](f.parentNode, e.pop() + d)
                        },
                        _getIERange: function() {
                            var g = (this._body || this.endContainer.ownerDocument.body).createTextRange();
                            l.setRange(g, this.startContainer, this.startOffset, this.endContainer, this.endOffset, this.collapsed);
                            return g
                        },
                        getBookmark: function() {
                            this._getIERange();
                            return this._cachedBookmark
                        },
                        _select: function() {
                            this._getIERange().select()
                        },
                        deleteContents: function() {
                            var g = this.startContainer
                              , f = this._getIERange();
                            3 !== g.nodeType || this.startOffset || this.setStartBefore(g);
                            f.pasteHTML("");
                            this.endContainer = this.startContainer;
                            this.endOffset = this.startOffset;
                            this.collapsed = !0
                        },
                        cloneRange: function() {
                            var g = new k([this.startContainer, this.startOffset, this.endContainer, this.endOffset]);
                            g._body = this._body;
                            return g
                        },
                        detach: function() {
                            this.startContainer = this.commonAncestorContainer = this._body = null;
                            this.startOffset = 0;
                            this.endContainer = null;
                            this.endOffset = 0;
                            this.collapsed = !0
                        }
                    });
                n.setObject("dijit.range", m);
                return m
            })
        },
        "dijit/_editor/html": function() {
            define(["dojo/_base/array", "dojo/_base/lang", "dojo/sniff"], function(q, p, n) {
                var m = {};
                p.setObject("dijit._editor.html", m);
                var l = m.escapeXml = function(k, g) {
                    k = k.replace(/&/gm, "\x26amp;").replace(/</gm, "\x26lt;").replace(/>/gm, "\x26gt;").replace(/"/gm, "\x26quot;");
                    g || (k = k.replace(/'/gm, "\x26#39;"));
                    return k
                }
                ;
                m.getNodeHtml = function(k) {
                    var g = [];
                    m.getNodeHtmlHelper(k, g);
                    return g.join("")
                }
                ;
                m.getNodeHtmlHelper = function(k, g) {
                    switch (k.nodeType) {
                    case 1:
                        var f = k.nodeName.toLowerCase();
                        if (!f || "/" == f.charAt(0))
                            return "";
                        g.push("\x3c", f);
                        var e = [], d = {}, c;
                        if (n("dom-attributes-explicit") || n("dom-attributes-specified-flag"))
                            for (var b = 0; c = k.attributes[b++]; ) {
                                var a = c.name;
                                "_dj" === a.substr(0, 3) || n("dom-attributes-specified-flag") && !c.specified || a in d || (c = c.value,
                                ("src" == a || "href" == a) && k.getAttribute("_djrealurl") && (c = k.getAttribute("_djrealurl")),
                                8 === n("ie") && "style" === a && (c = c.replace("HEIGHT:", "height:").replace("WIDTH:", "width:")),
                                e.push([a, c]),
                                d[a] = c)
                            }
                        else {
                            var h = (/^input$|^img$/i.test(k.nodeName) ? k : k.cloneNode(!1)).outerHTML
                              , d = h.match(/[\w-]+=("[^"]*"|'[^']*'|\S*)/gi)
                              , h = h.substr(0, h.indexOf("\x3e"));
                            q.forEach(d, function(a) {
                                if (a) {
                                    var b = a.indexOf("\x3d");
                                    if (0 < b && (a = a.substring(0, b),
                                    "_dj" != a.substr(0, 3)))
                                        if ("src" != a && "href" != a || !k.getAttribute("_djrealurl")) {
                                            var c;
                                            switch (a) {
                                            case "style":
                                                c = k.style.cssText.toLowerCase();
                                                break;
                                            case "class":
                                                c = k.className;
                                                break;
                                            case "width":
                                                if ("img" === f) {
                                                    (b = /width=(\S+)/i.exec(h)) && (c = b[1]);
                                                    break
                                                }
                                            case "height":
                                                if ("img" === f) {
                                                    (b = /height=(\S+)/i.exec(h)) && (c = b[1]);
                                                    break
                                                }
                                            default:
                                                c = k.getAttribute(a)
                                            }
                                            null != c && e.push([a, c.toString()])
                                        } else
                                            e.push([a, k.getAttribute("_djrealurl")])
                                }
                            }, this)
                        }
                        e.sort(function(a, b) {
                            return a[0] < b[0] ? -1 : a[0] == b[0] ? 0 : 1
                        });
                        for (d = 0; c = e[d++]; )
                            g.push(" ", c[0], '\x3d"', "string" === typeof c[1] ? l(c[1], !0) : c[1], '"');
                        switch (f) {
                        case "br":
                        case "hr":
                        case "img":
                        case "input":
                        case "base":
                        case "meta":
                        case "area":
                        case "basefont":
                            g.push(" /\x3e");
                            break;
                        case "script":
                            g.push("\x3e", k.innerHTML, "\x3c/", f, "\x3e");
                            break;
                        default:
                            g.push("\x3e"),
                            k.hasChildNodes() && m.getChildrenHtmlHelper(k, g),
                            g.push("\x3c/", f, "\x3e")
                        }
                        break;
                    case 4:
                    case 3:
                        g.push(l(k.nodeValue, !0));
                        break;
                    case 8:
                        g.push("\x3c!--", l(k.nodeValue, !0), "--\x3e");
                        break;
                    default:
                        g.push("\x3c!-- Element not recognized - Type: ", k.nodeType, " Name: ", k.nodeName, "--\x3e")
                    }
                }
                ;
                m.getChildrenHtml = function(k) {
                    var g = [];
                    m.getChildrenHtmlHelper(k, g);
                    return g.join("")
                }
                ;
                m.getChildrenHtmlHelper = function(k, g) {
                    if (k)
                        for (var f = k.childNodes || k, e = !n("ie") || f !== k, d, c = 0; d = f[c++]; )
                            e && d.parentNode != k || m.getNodeHtmlHelper(d, g)
                }
                ;
                return m
            })
        },
        "dijit/_editor/nls/commands": function() {
            define({
                root: {
                    bold: "Bold",
                    copy: "Copy",
                    cut: "Cut",
                    "delete": "Delete",
                    indent: "Indent",
                    insertHorizontalRule: "Horizontal Rule",
                    insertOrderedList: "Numbered List",
                    insertUnorderedList: "Bullet List",
                    italic: "Italic",
                    justifyCenter: "Align Center",
                    justifyFull: "Justify",
                    justifyLeft: "Align Left",
                    justifyRight: "Align Right",
                    outdent: "Outdent",
                    paste: "Paste",
                    redo: "Redo",
                    removeFormat: "Remove Format",
                    selectAll: "Select All",
                    strikethrough: "Strikethrough",
                    subscript: "Subscript",
                    superscript: "Superscript",
                    underline: "Underline",
                    undo: "Undo",
                    unlink: "Remove Link",
                    createLink: "Create Link",
                    toggleDir: "Toggle Direction",
                    insertImage: "Insert Image",
                    insertTable: "Insert/Edit Table",
                    toggleTableBorder: "Toggle Table Border",
                    deleteTable: "Delete Table",
                    tableProp: "Table Property",
                    htmlToggle: "HTML Source",
                    foreColor: "Foreground Color",
                    hiliteColor: "Background Color",
                    plainFormatBlock: "Paragraph Style",
                    formatBlock: "Paragraph Style",
                    fontSize: "Font Size",
                    fontName: "Font Name",
                    tabIndent: "Tab Indent",
                    fullScreen: "Toggle Full Screen",
                    viewSource: "View HTML Source",
                    print: "Print",
                    newPage: "New Page",
                    systemShortcut: 'The "${0}" action is only available in your browser using a keyboard shortcut. Use ${1}.',
                    ctrlKey: "ctrl+${0}",
                    appleKey: "\u2318${0}"
                },
                bs: !0,
                mk: !0,
                sr: !0,
                zh: !0,
                "zh-tw": !0,
                uk: !0,
                tr: !0,
                th: !0,
                sv: !0,
                sl: !0,
                sk: !0,
                ru: !0,
                ro: !0,
                pt: !0,
                "pt-pt": !0,
                pl: !0,
                nl: !0,
                nb: !0,
                ko: !0,
                kk: !0,
                ja: !0,
                it: !0,
                id: !0,
                hu: !0,
                hr: !0,
                he: !0,
                fr: !0,
                fi: !0,
                eu: !0,
                es: !0,
                el: !0,
                de: !0,
                da: !0,
                cs: !0,
                ca: !0,
                bg: !0,
                az: !0,
                ar: !0
            })
        },
        "dijit/_editor/nls/zh/commands": function() {
            define({
                bold: "\u7c97\u4f53",
                copy: "\u590d\u5236",
                cut: "\u526a\u5207",
                "delete": "\u5220\u9664",
                indent: "\u589e\u52a0\u7f29\u8fdb",
                insertHorizontalRule: "\u6c34\u5e73\u7ebf",
                insertOrderedList: "\u7f16\u53f7\u5217\u8868",
                insertUnorderedList: "\u7b26\u53f7\u5217\u8868",
                italic: "\u659c\u4f53",
                justifyCenter: "\u5c45\u4e2d",
                justifyFull: "\u5bf9\u9f50",
                justifyLeft: "\u5de6\u5bf9\u9f50",
                justifyRight: "\u53f3\u5bf9\u9f50",
                outdent: "\u51cf\u5c11\u7f29\u8fdb",
                paste: "\u7c98\u8d34",
                redo: "\u91cd\u505a",
                removeFormat: "\u9664\u53bb\u683c\u5f0f",
                selectAll: "\u5168\u9009",
                strikethrough: "\u5220\u9664\u7ebf",
                subscript: "\u4e0b\u6807",
                superscript: "\u4e0a\u6807",
                underline: "\u4e0b\u5212\u7ebf",
                undo: "\u64a4\u9500",
                unlink: "\u9664\u53bb\u94fe\u63a5",
                createLink: "\u521b\u5efa\u94fe\u63a5",
                toggleDir: "\u5207\u6362\u65b9\u5411",
                insertImage: "\u63d2\u5165\u56fe\u50cf",
                insertTable: "\u63d2\u5165/\u7f16\u8f91\u8868",
                toggleTableBorder: "\u5207\u6362\u8868\u8fb9\u6846",
                deleteTable: "\u5220\u9664\u8868",
                tableProp: "\u8868\u5c5e\u6027",
                htmlToggle: "HTML \u6e90\u4ee3\u7801",
                foreColor: "\u524d\u666f\u8272",
                hiliteColor: "\u80cc\u666f\u8272",
                plainFormatBlock: "\u6bb5\u843d\u6837\u5f0f",
                formatBlock: "\u6bb5\u843d\u6837\u5f0f",
                fontSize: "\u5b57\u4f53\u5927\u5c0f",
                fontName: "\u5b57\u4f53\u540d\u79f0",
                tabIndent: "\u5236\u8868\u7b26\u7f29\u8fdb",
                fullScreen: "\u5207\u6362\u5168\u5c4f",
                viewSource: "\u67e5\u770b HTML \u6e90\u4ee3\u7801",
                print: "\u6253\u5370",
                newPage: "\u65b0\u5efa\u9875\u9762",
                systemShortcut: '\u53ea\u80fd\u901a\u8fc7\u4f7f\u7528\u952e\u76d8\u5feb\u6377\u952e\u5728\u6d4f\u89c8\u5668\u4e2d\u6267\u884c "${0}" \u64cd\u4f5c\u3002\u8bf7\u4f7f\u7528 ${1}\u3002',
                ctrlKey: "ctrl+${0}",
                appleKey: "\u2318${0}"
            })
        },
        "ttx/editor/EditorAllPlugins": function() {
            define("dijit/_editor/_Plugin dijit/_editor/plugins/AlwaysShowToolbar dijit/_editor/plugins/FontChoice dijit/_editor/plugins/TextColor dijit/_editor/plugins/LinkDialog dijit/_editor/plugins/FullScreen dijit/_editor/plugins/ViewSource dijit/_editor/plugins/NewPage dijit/_editor/plugins/Print dijit/_editor/plugins/TabIndent dijit/_editor/plugins/ToggleDir".split(" "), function() {
                return {
                    all: "undo redo | cut copy paste selectAll delete | bold italic underline strikethrough subscript superscript removeFormat | insertOrderedList insertUnorderedList indent outdent justifyLeft justifyRight justifyCenter justifyFull | insertHorizontalRule insertImage createLink unlink foreColor hiliteColor | fontSize formatBlock viewSource | newpage fullscreen print tabIndent toggleDir".split(" ")
                }
            })
        },
        "dijit/_editor/plugins/AlwaysShowToolbar": function() {
            define("dojo/_base/declare dojo/dom-class dojo/dom-construct dojo/dom-geometry dojo/_base/lang dojo/on dojo/sniff dojo/_base/window ../_Plugin".split(" "), function(q, p, n, m, l, k, g, f, e) {
                return q("dijit._editor.plugins.AlwaysShowToolbar", e, {
                    _handleScroll: !0,
                    setEditor: function(d) {
                        d.iframe && (this.editor = d,
                        d.onLoadDeferred.then(l.hitch(this, this.enable)))
                    },
                    enable: function(d) {
                        this._updateHeight();
                        this.own(k(window, "scroll", l.hitch(this, "globalOnScrollHandler")), this.editor.on("NormalizedDisplayChanged", l.hitch(this, "_updateHeight")));
                        return d
                    },
                    _updateHeight: function() {
                        var d = this.editor;
                        if (d.isLoaded && !d.height) {
                            var c = m.getMarginSize(d.editNode).h;
                            g("opera") && (c = d.editNode.scrollHeight);
                            c || (c = m.getMarginSize(d.document.body).h);
                            this._fixEnabled && (c += m.getMarginSize(this.editor.header).h);
                            if (0 != c) {
                                if (7 >= g("ie") && this.editor.minHeight) {
                                    var b = parseInt(this.editor.minHeight);
                                    c < b && (c = b)
                                }
                                c != this._lastHeight && (this._lastHeight = c,
                                m.setMarginBox(d.iframe, {
                                    h: this._lastHeight
                                }))
                            }
                        }
                    },
                    _lastHeight: 0,
                    globalOnScrollHandler: function() {
                        var d = 7 > g("ie");
                        if (this._handleScroll) {
                            var c = this.editor.header;
                            this._scrollSetUp || (this._scrollSetUp = !0,
                            this._scrollThreshold = m.position(c, !0).y);
                            var b = m.docScroll(this.editor.ownerDocument).y
                              , a = c.style;
                            if (b > this._scrollThreshold && b < this._scrollThreshold + this._lastHeight) {
                                if (!this._fixEnabled) {
                                    var e = m.getMarginSize(c);
                                    this.editor.iframe.style.marginTop = e.h + "px";
                                    d ? (a.left = m.position(c).x,
                                    this._IEOriginalPos = c.previousSibling ? ["after", c.previousSibling] : c.nextSibling ? ["before", c.nextSibling] : ["last", c.parentNode],
                                    this.editor.ownerDocumentBody.appendChild(c),
                                    p.add(c, "dijitIEFixedToolbar")) : (a.position = "fixed",
                                    a.top = "0px");
                                    m.setMarginBox(c, {
                                        w: e.w
                                    });
                                    a.zIndex = 2E3;
                                    this._fixEnabled = !0
                                }
                                d = this.height ? parseInt(this.editor.height) : this.editor._lastHeight;
                                a.display = b > this._scrollThreshold + d ? "none" : ""
                            } else
                                this._fixEnabled && (this.editor.iframe.style.marginTop = "",
                                a.position = "",
                                a.top = "",
                                a.zIndex = "",
                                a.display = "",
                                d && (a.left = "",
                                p.remove(c, "dijitIEFixedToolbar"),
                                this._IEOriginalPos ? (n.place(c, this._IEOriginalPos[1], this._IEOriginalPos[0]),
                                this._IEOriginalPos = null) : n.place(c, this.editor.iframe, "before")),
                                a.width = "",
                                this._fixEnabled = !1)
                        }
                    },
                    destroy: function() {
                        this._IEOriginalPos = null;
                        this._handleScroll = !1;
                        this.inherited(arguments);
                        7 > g("ie") && p.remove(this.editor.header, "dijitIEFixedToolbar")
                    }
                })
            })
        },
        "dijit/_editor/plugins/FontChoice": function() {
            define("require dojo/_base/array dojo/_base/declare dojo/dom-construct dojo/i18n dojo/_base/lang dojo/store/Memory ../../registry ../../_Widget ../../_TemplatedMixin ../../_WidgetsInTemplateMixin ../../form/FilteringSelect ../_Plugin ../range dojo/i18n!../nls/FontChoice".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h) {
                q = n("dijit._editor.plugins._FontDropDown", [e, d, c], {
                    label: "",
                    plainText: !1,
                    templateString: "\x3cspan style\x3d'white-space: nowrap' class\x3d'dijit dijitReset dijitInline'\x3e\x3clabel class\x3d'dijitLeft dijitInline' for\x3d'${selectId}'\x3e${label}\x3c/label\x3e\x3cinput data-dojo-type\x3d'../../form/FilteringSelect' required\x3d'false' data-dojo-props\x3d'labelType:\"html\", labelAttr:\"label\", searchAttr:\"name\"' class\x3d'${comboClass}' tabIndex\x3d'-1' id\x3d'${selectId}' data-dojo-attach-point\x3d'select' value\x3d''/\x3e\x3c/span\x3e",
                    contextRequire: q,
                    postMixInProperties: function() {
                        this.inherited(arguments);
                        this.strings = l.getLocalization("dijit._editor", "FontChoice");
                        this.label = this.strings[this.command];
                        this.id = f.getUniqueId(this.declaredClass.replace(/\./g, "_"));
                        this.selectId = this.id + "_select";
                        this.inherited(arguments)
                    },
                    postCreate: function() {
                        this.select.set("store", new g({
                            idProperty: "value",
                            data: p.map(this.values, function(a) {
                                var b = this.strings[a] || a;
                                return {
                                    label: this.getLabel(a, b),
                                    name: b,
                                    value: a
                                }
                            }, this)
                        }));
                        this.select.set("value", "", !1);
                        this.disabled = this.select.get("disabled")
                    },
                    _setValueAttr: function(a, b) {
                        b = !1 !== b;
                        this.select.set("value", 0 > p.indexOf(this.values, a) ? "" : a, b);
                        b || (this.select._lastValueReported = null)
                    },
                    _getValueAttr: function() {
                        return this.select.get("value")
                    },
                    focus: function() {
                        this.select.focus()
                    },
                    _setDisabledAttr: function(a) {
                        this._set("disabled", a);
                        this.select.set("disabled", a)
                    }
                });
                var r = n("dijit._editor.plugins._FontNameDropDown", q, {
                    generic: !1,
                    command: "fontName",
                    comboClass: "dijitFontNameCombo",
                    postMixInProperties: function() {
                        this.values || (this.values = this.generic ? ["serif", "sans-serif", "monospace", "cursive", "fantasy"] : ["Arial", "Times New Roman", "Comic Sans MS", "Courier New"]);
                        this.inherited(arguments)
                    },
                    getLabel: function(a, b) {
                        return this.plainText ? b : "\x3cdiv style\x3d'font-family: " + a + "'\x3e" + b + "\x3c/div\x3e"
                    },
                    _setValueAttr: function(a, b) {
                        this.generic && (a = {
                            Arial: "sans-serif",
                            Helvetica: "sans-serif",
                            Myriad: "sans-serif",
                            Times: "serif",
                            "Times New Roman": "serif",
                            "Comic Sans MS": "cursive",
                            "Apple Chancery": "cursive",
                            Courier: "monospace",
                            "Courier New": "monospace",
                            Papyrus: "fantasy",
                            "Estrangelo Edessa": "cursive",
                            Gabriola: "fantasy"
                        }[a] || a);
                        this.inherited(arguments, [a, !1 !== b])
                    }
                })
                  , t = n("dijit._editor.plugins._FontSizeDropDown", q, {
                    command: "fontSize",
                    comboClass: "dijitFontSizeCombo",
                    values: [1, 2, 3, 4, 5, 6, 7],
                    getLabel: function(a, b) {
                        return this.plainText ? b : "\x3cfont size\x3d" + a + "'\x3e" + b + "\x3c/font\x3e"
                    },
                    _setValueAttr: function(a, b) {
                        b = !1 !== b;
                        a.indexOf && -1 != a.indexOf("px") && (a = {
                            10: 1,
                            13: 2,
                            16: 3,
                            18: 4,
                            24: 5,
                            32: 6,
                            48: 7
                        }[parseInt(a, 10)] || a);
                        this.inherited(arguments, [a, b])
                    }
                })
                  , u = n("dijit._editor.plugins._FormatBlockDropDown", q, {
                    command: "formatBlock",
                    comboClass: "dijitFormatBlockCombo",
                    values: "noFormat p h1 h2 h3 pre".split(" "),
                    postCreate: function() {
                        this.inherited(arguments);
                        this.set("value", "noFormat", !1)
                    },
                    getLabel: function(a, b) {
                        return this.plainText || "noFormat" == a ? b : "\x3c" + a + "\x3e" + b + "\x3c/" + a + "\x3e"
                    },
                    _execCommand: function(a, b, c) {
                        if ("noFormat" === c) {
                            var d;
                            if ((b = h.getSelection(a.window)) && 0 < b.rangeCount) {
                                c = b.getRangeAt(0);
                                var e;
                                if (c) {
                                    b = c.startContainer;
                                    for (d = c.endContainer; b && b !== a.editNode && b !== a.document.body && 1 !== b.nodeType; )
                                        b = b.parentNode;
                                    for (; d && d !== a.editNode && d !== a.document.body && 1 !== d.nodeType; )
                                        d = d.parentNode;
                                    var f = k.hitch(this, function(b, c) {
                                        if (b.childNodes && b.childNodes.length) {
                                            var d;
                                            for (d = 0; d < b.childNodes.length; d++) {
                                                var e = b.childNodes[d];
                                                if (1 == e.nodeType && a.selection.inSelection(e)) {
                                                    var h = e.tagName ? e.tagName.toLowerCase() : "";
                                                    -1 !== p.indexOf(this.values, h) && c.push(e);
                                                    f(e, c)
                                                }
                                            }
                                        }
                                    });
                                    c = k.hitch(this, function(b) {
                                        if (b && b.length) {
                                            for (a.beginEditing(); b.length; )
                                                this._removeFormat(a, b.pop());
                                            a.endEditing()
                                        }
                                    });
                                    var g = [];
                                    if (b == d) {
                                        var l;
                                        for (d = b; d && d !== a.editNode && d !== a.document.body; ) {
                                            if (1 == d.nodeType && (e = d.tagName ? d.tagName.toLowerCase() : "",
                                            -1 !== p.indexOf(this.values, e))) {
                                                l = d;
                                                break
                                            }
                                            d = d.parentNode
                                        }
                                        f(b, g);
                                        l && (g = [l].concat(g))
                                    } else
                                        for (d = b; a.selection.inSelection(d); )
                                            1 == d.nodeType && (e = d.tagName ? d.tagName.toLowerCase() : "",
                                            -1 !== p.indexOf(this.values, e) && g.push(d),
                                            f(d, g)),
                                            d = d.nextSibling;
                                    c(g);
                                    a.onDisplayChanged()
                                }
                            }
                        } else
                            a.execCommand(b, c)
                    },
                    _removeFormat: function(a, b) {
                        if (a.customUndo) {
                            for (; b.firstChild; )
                                m.place(b.firstChild, b, "before");
                            b.parentNode.removeChild(b)
                        } else {
                            a.selection.selectElementChildren(b);
                            var c = a.selection.getSelectedHtml();
                            a.selection.selectElement(b);
                            a.execCommand("inserthtml", c || "")
                        }
                    }
                })
                  , x = n("dijit._editor.plugins.FontChoice", a, {
                    useDefaultCommand: !1,
                    _initButton: function() {
                        var a = {
                            fontName: r,
                            fontSize: t,
                            formatBlock: u
                        }[this.command]
                          , b = this.params;
                        this.params.custom && (b.values = this.params.custom);
                        var c = this.editor;
                        this.button = new a(k.delegate({
                            dir: c.dir,
                            lang: c.lang
                        }, b));
                        this.own(this.button.select.on("change", k.hitch(this, function(a) {
                            this.editor.focused && this.editor.focus();
                            "fontName" == this.command && -1 != a.indexOf(" ") && (a = "'" + a + "'");
                            this.button._execCommand ? this.button._execCommand(this.editor, this.command, a) : this.editor.execCommand(this.command, a)
                        })))
                    },
                    updateState: function() {
                        var a = this.editor
                          , b = this.command;
                        if (a && a.isLoaded && b.length && this.button) {
                            var c = this.get("disabled");
                            this.button.set("disabled", c);
                            if (!c) {
                                var d;
                                try {
                                    d = a.queryCommandValue(b) || ""
                                } catch (B) {
                                    d = ""
                                }
                                (c = k.isString(d) && (d.match(/'([^']*)'/) || d.match(/"([^"]*)"/))) && (d = c[1]);
                                if ("formatBlock" === b)
                                    if (d && "p" != d)
                                        0 > p.indexOf(this.button.values, d) && (d = "noFormat");
                                    else {
                                        d = null;
                                        var e;
                                        (b = h.getSelection(this.editor.window)) && 0 < b.rangeCount && (b = b.getRangeAt(0)) && (e = b.endContainer);
                                        for (; e && e !== a.editNode && e !== a.document; ) {
                                            if ((b = e.tagName ? e.tagName.toLowerCase() : "") && -1 < p.indexOf(this.button.values, b)) {
                                                d = b;
                                                break
                                            }
                                            e = e.parentNode
                                        }
                                        d || (d = "noFormat")
                                    }
                                d !== this.button.get("value") && this.button.set("value", d, !1)
                            }
                        }
                    }
                });
                p.forEach(["fontName", "fontSize", "formatBlock"], function(b) {
                    a.registry[b] = function(a) {
                        return new x({
                            command: b,
                            plainText: a.plainText
                        })
                    }
                });
                x._FontDropDown = q;
                x._FontNameDropDown = r;
                x._FontSizeDropDown = t;
                x._FormatBlockDropDown = u;
                return x
            })
        },
        "dijit/_editor/nls/FontChoice": function() {
            define({
                root: {
                    fontSize: "Size",
                    fontName: "Font",
                    formatBlock: "Format",
                    serif: "serif",
                    "sans-serif": "sans-serif",
                    monospace: "monospace",
                    cursive: "cursive",
                    fantasy: "fantasy",
                    noFormat: "None",
                    p: "Paragraph",
                    h1: "Heading",
                    h2: "Subheading",
                    h3: "Sub-subheading",
                    pre: "Pre-formatted",
                    1: "xx-small",
                    2: "x-small",
                    3: "small",
                    4: "medium",
                    5: "large",
                    6: "x-large",
                    7: "xx-large"
                },
                bs: !0,
                mk: !0,
                sr: !0,
                zh: !0,
                "zh-tw": !0,
                uk: !0,
                tr: !0,
                th: !0,
                sv: !0,
                sl: !0,
                sk: !0,
                ru: !0,
                ro: !0,
                pt: !0,
                "pt-pt": !0,
                pl: !0,
                nl: !0,
                nb: !0,
                ko: !0,
                kk: !0,
                ja: !0,
                it: !0,
                id: !0,
                hu: !0,
                hr: !0,
                he: !0,
                fr: !0,
                fi: !0,
                eu: !0,
                es: !0,
                el: !0,
                de: !0,
                da: !0,
                cs: !0,
                ca: !0,
                bg: !0,
                az: !0,
                ar: !0
            })
        },
        "dijit/_editor/nls/zh/FontChoice": function() {
            define({
                fontSize: "\u5927\u5c0f",
                fontName: "\u5b57\u4f53",
                formatBlock: "\u683c\u5f0f",
                serif: "\u6709\u886c\u7ebf",
                "sans-serif": "\u65e0\u886c\u7ebf",
                monospace: "\u7b49\u5bbd\u5b57\u4f53",
                cursive: "\u8349\u4e66",
                fantasy: "\u865a\u7ebf",
                noFormat: "\u65e0",
                p: "\u6bb5\u843d",
                h1: "\u6807\u9898",
                h2: "\u526f\u6807\u9898",
                h3: "\u4e8c\u7ea7\u5b50\u6807\u9898",
                pre: "\u9884\u8bbe\u6709\u683c\u5f0f\u7684",
                1: "XX \u5c0f\u53f7",
                2: "X \u5c0f\u53f7",
                3: "\u5c0f\u53f7",
                4: "\u4e2d\u53f7",
                5: "\u5927\u53f7",
                6: "X \u5927\u53f7",
                7: "XX \u5927\u53f7"
            })
        },
        "dijit/_editor/plugins/TextColor": function() {
            define("require dojo/colors dojo/_base/declare dojo/_base/lang ../_Plugin ../../form/DropDownButton".split(" "), function(q, p, n, m, l, k) {
                var g = n("dijit._editor.plugins.TextColor", l, {
                    buttonClass: k,
                    colorPicker: "dijit/ColorPalette",
                    useDefaultCommand: !1,
                    _initButton: function() {
                        this.command = this.name;
                        this.inherited(arguments);
                        var f = this;
                        this.button.loadDropDown = function(e) {
                            function d(c) {
                                f.button.dropDown = new c({
                                    dir: f.editor.dir,
                                    ownerDocument: f.editor.ownerDocument,
                                    value: f.value,
                                    onChange: function(b) {
                                        f.editor.execCommand(f.command, b)
                                    },
                                    onExecute: function() {
                                        f.editor.execCommand(f.command, this.get("value"))
                                    }
                                });
                                e()
                            }
                            "string" == typeof f.colorPicker ? q([f.colorPicker], d) : d(f.colorPicker)
                        }
                    },
                    updateState: function() {
                        var f = this.editor
                          , e = this.command;
                        if (f && f.isLoaded && e.length) {
                            if (this.button) {
                                var d = this.get("disabled");
                                this.button.set("disabled", d);
                                if (d)
                                    return;
                                var c;
                                try {
                                    c = f.queryCommandValue(e) || ""
                                } catch (b) {
                                    c = ""
                                }
                            }
                            "" == c && (c = "#000000");
                            "transparent" == c && (c = "#ffffff");
                            "string" == typeof c ? -1 < c.indexOf("rgb") && (c = p.fromRgb(c).toHex()) : (c = ((c & 255) << 16 | c & 65280 | (c & 16711680) >>> 16).toString(16),
                            c = "#000000".slice(0, 7 - c.length) + c);
                            this.value = c;
                            (f = this.button.dropDown) && f.get && c !== f.get("value") && f.set("value", c, !1)
                        }
                    }
                });
                l.registry.foreColor = function(f) {
                    return new g(f)
                }
                ;
                l.registry.hiliteColor = function(f) {
                    return new g(f)
                }
                ;
                return g
            })
        },
        "dijit/_editor/plugins/LinkDialog": function() {
            define("require dojo/_base/declare dojo/dom-attr dojo/keys dojo/_base/lang dojo/on dojo/sniff dojo/query dojo/string ../_Plugin ../../form/DropDownButton ../range".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b) {
                var a = p("dijit._editor.plugins.LinkDialog", d, {
                    buttonClass: c,
                    useDefaultCommand: !1,
                    urlRegExp: "((https?|ftps?|file)\\://|./|../|/|)(/[a-zA-Z]{1,1}:/|)(((?:(?:[\\da-zA-Z](?:[-\\da-zA-Z]{0,61}[\\da-zA-Z])?)\\.)*(?:[a-zA-Z](?:[-\\da-zA-Z]{0,80}[\\da-zA-Z])?)\\.?)|(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])|(0[xX]0*[\\da-fA-F]?[\\da-fA-F]\\.){3}0[xX]0*[\\da-fA-F]?[\\da-fA-F]|(0+[0-3][0-7][0-7]\\.){3}0+[0-3][0-7][0-7]|(0|[1-9]\\d{0,8}|[1-3]\\d{9}|4[01]\\d{8}|42[0-8]\\d{7}|429[0-3]\\d{6}|4294[0-8]\\d{5}|42949[0-5]\\d{4}|429496[0-6]\\d{3}|4294967[01]\\d{2}|42949672[0-8]\\d|429496729[0-5])|0[xX]0*[\\da-fA-F]{1,8}|([\\da-fA-F]{1,4}\\:){7}[\\da-fA-F]{1,4}|([\\da-fA-F]{1,4}\\:){6}((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])))(\\:\\d+)?(/(?:[^?#\\s/]+/)*(?:[^?#\\s/]{0,}(?:\\?[^?#\\s/]*)?(?:#.*)?)?)?",
                    emailRegExp: "\x3c?(mailto\\:)([!#-'*+\\-\\/-9\x3d?A-Z^-~]+[.])*[!#-'*+\\-\\/-9\x3d?A-Z^-~]+@((?:(?:[\\da-zA-Z](?:[-\\da-zA-Z]{0,61}[\\da-zA-Z])?)\\.)+(?:[a-zA-Z](?:[-\\da-zA-Z]{0,6}[\\da-zA-Z])?)\\.?)|localhost|^[^-][a-zA-Z0-9_-]*\x3e?",
                    htmlTemplate: '\x3ca href\x3d"${urlInput}" _djrealurl\x3d"${urlInput}" target\x3d"${targetSelect}"\x3e${textInput}\x3c/a\x3e',
                    tag: "a",
                    _hostRxp: /^((([^\[:]+):)?([^@]+)@)?(\[([^\]]+)\]|([^\[:]*))(:([0-9]+))?$/,
                    _userAtRxp: /^([!#-'*+\-\/-9=?A-Z^-~]+[.])*[!#-'*+\-\/-9=?A-Z^-~]+@/i,
                    linkDialogTemplate: "\x3ctable role\x3d'presentation'\x3e\x3ctr\x3e\x3ctd\x3e\x3clabel for\x3d'${id}_urlInput'\x3e${url}\x3c/label\x3e\x3c/td\x3e\x3ctd\x3e\x3cinput data-dojo-type\x3d'dijit.form.ValidationTextBox' required\x3d'true' id\x3d'${id}_urlInput' name\x3d'urlInput' data-dojo-props\x3d'intermediateChanges:true'/\x3e\x3c/td\x3e\x3c/tr\x3e\x3ctr\x3e\x3ctd\x3e\x3clabel for\x3d'${id}_textInput'\x3e${text}\x3c/label\x3e\x3c/td\x3e\x3ctd\x3e\x3cinput data-dojo-type\x3d'dijit.form.ValidationTextBox' required\x3d'true' id\x3d'${id}_textInput' name\x3d'textInput' data-dojo-props\x3d'intermediateChanges:true'/\x3e\x3c/td\x3e\x3c/tr\x3e\x3ctr\x3e\x3ctd\x3e\x3clabel for\x3d'${id}_targetSelect'\x3e${target}\x3c/label\x3e\x3c/td\x3e\x3ctd\x3e\x3cselect id\x3d'${id}_targetSelect' name\x3d'targetSelect' data-dojo-type\x3d'dijit.form.Select'\x3e\x3coption selected\x3d'selected' value\x3d'_self'\x3e${currentWindow}\x3c/option\x3e\x3coption value\x3d'_blank'\x3e${newWindow}\x3c/option\x3e\x3coption value\x3d'_top'\x3e${topWindow}\x3c/option\x3e\x3coption value\x3d'_parent'\x3e${parentWindow}\x3c/option\x3e\x3c/select\x3e\x3c/td\x3e\x3c/tr\x3e\x3ctr\x3e\x3ctd colspan\x3d'2'\x3e\x3cbutton data-dojo-type\x3d'dijit.form.Button' type\x3d'submit' id\x3d'${id}_setButton'\x3e${set}\x3c/button\x3e\x3cbutton data-dojo-type\x3d'dijit.form.Button' type\x3d'button' id\x3d'${id}_cancelButton'\x3e${buttonCancel}\x3c/button\x3e\x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e",
                    _initButton: function() {
                        this.inherited(arguments);
                        this.button.loadDropDown = l.hitch(this, "_loadDropDown");
                        this._connectTagEvents()
                    },
                    _loadDropDown: function(a) {
                        q("dojo/i18n ../../TooltipDialog ../../registry ../../form/Button ../../form/Select ../../form/ValidationTextBox dojo/i18n!../../nls/common dojo/i18n!../nls/LinkDialog".split(" "), l.hitch(this, function(b, c, d) {
                            var f = this;
                            this.tag = "insertImage" == this.command ? "img" : "a";
                            b = l.delegate(b.getLocalization("dijit", "common", this.lang), b.getLocalization("dijit._editor", "LinkDialog", this.lang));
                            var h = this.dropDown = this.button.dropDown = new c({
                                title: b[this.command + "Title"],
                                ownerDocument: this.editor.ownerDocument,
                                dir: this.editor.dir,
                                execute: l.hitch(this, "setValue"),
                                onOpen: function() {
                                    f._onOpenDialog();
                                    c.prototype.onOpen.apply(this, arguments)
                                },
                                onCancel: function() {
                                    setTimeout(l.hitch(f, "_onCloseDialog"), 0)
                                }
                            });
                            b.urlRegExp = this.urlRegExp;
                            b.id = d.getUniqueId(this.editor.id);
                            this._uniqueId = b.id;
                            this._setContent(h.title + "\x3cdiv style\x3d'border-bottom: 1px black solid;padding-bottom:2pt;margin-bottom:4pt'\x3e\x3c/div\x3e" + e.substitute(this.linkDialogTemplate, b));
                            h.startup();
                            this._urlInput = d.byId(this._uniqueId + "_urlInput");
                            this._textInput = d.byId(this._uniqueId + "_textInput");
                            this._setButton = d.byId(this._uniqueId + "_setButton");
                            this.own(d.byId(this._uniqueId + "_cancelButton").on("click", l.hitch(this.dropDown, "onCancel")));
                            this._urlInput && this.own(this._urlInput.on("change", l.hitch(this, "_checkAndFixInput")));
                            this._textInput && this.own(this._textInput.on("change", l.hitch(this, "_checkAndFixInput")));
                            this._urlRegExp = new RegExp("^" + this.urlRegExp + "$","i");
                            this._emailRegExp = new RegExp("^" + this.emailRegExp + "$","i");
                            this._urlInput.isValid = l.hitch(this, function() {
                                var a = this._urlInput.get("value");
                                return this._urlRegExp.test(a) || this._emailRegExp.test(a)
                            });
                            this.own(k(h.domNode, "keydown", l.hitch(this, l.hitch(this, function(a) {
                                !a || a.keyCode != m.ENTER || a.shiftKey || a.metaKey || a.ctrlKey || a.altKey || this._setButton.get("disabled") || (h.onExecute(),
                                h.execute(h.get("value")))
                            }))));
                            a()
                        }))
                    },
                    _checkAndFixInput: function() {
                        var a = this
                          , b = this._urlInput.get("value");
                        this._delayedCheck && (clearTimeout(this._delayedCheck),
                        this._delayedCheck = null);
                        this._delayedCheck = setTimeout(function() {
                            var c = b
                              , d = !1
                              , e = !1;
                            c && 1 < c.length && (c = l.trim(c),
                            0 !== c.indexOf("mailto:") && (0 < c.indexOf("/") ? -1 === c.indexOf("://") && "/" !== c.charAt(0) && c.indexOf("./") && 0 !== c.indexOf("../") && a._hostRxp.test(c) && (d = !0) : a._userAtRxp.test(c) && (e = !0)));
                            d && a._urlInput.set("value", "http://" + c);
                            e && a._urlInput.set("value", "mailto:" + c);
                            a._setButton.set("disabled", !a._isValid())
                        }, 250)
                    },
                    _connectTagEvents: function() {
                        this.editor.onLoadDeferred.then(l.hitch(this, function() {
                            this.own(k(this.editor.editNode, "dblclick", l.hitch(this, "_onDblClick")))
                        }))
                    },
                    _isValid: function() {
                        return this._urlInput.isValid() && this._textInput.isValid()
                    },
                    _setContent: function(a) {
                        this.dropDown.set({
                            parserScope: "dojo",
                            content: a
                        })
                    },
                    _checkValues: function(a) {
                        a && a.urlInput && (a.urlInput = a.urlInput.replace(/"/g, "\x26quot;"));
                        return a
                    },
                    setValue: function(a) {
                        this._onCloseDialog();
                        if (9 > g("ie")) {
                            var c = b.getSelection(this.editor.window).getRangeAt(0).endContainer;
                            3 === c.nodeType && (c = c.parentNode);
                            c && c.nodeName && c.nodeName.toLowerCase() !== this.tag && (c = this.editor.selection.getSelectedElement(this.tag));
                            c && c.nodeName && c.nodeName.toLowerCase() === this.tag && this.editor.queryCommandEnabled("unlink") && (this.editor.selection.selectElementChildren(c),
                            this.editor.execCommand("unlink"))
                        }
                        a = this._checkValues(a);
                        this.editor.execCommand("inserthtml", e.substitute(this.htmlTemplate, a));
                        f("a", this.editor.document).forEach(function(a) {
                            a.innerHTML || n.has(a, "name") || a.parentNode.removeChild(a)
                        }, this)
                    },
                    _onCloseDialog: function() {
                        this.editor.focused && this.editor.focus()
                    },
                    _getCurrentValues: function(a) {
                        var b, c, d;
                        a && a.tagName.toLowerCase() === this.tag ? (b = a.getAttribute("_djrealurl") || a.getAttribute("href"),
                        d = a.getAttribute("target") || "_self",
                        c = a.textContent || a.innerText,
                        this.editor.selection.selectElement(a, !0)) : c = this.editor.selection.getSelectedText();
                        return {
                            urlInput: b || "",
                            textInput: c || "",
                            targetSelect: d || ""
                        }
                    },
                    _onOpenDialog: function() {
                        var a, c;
                        if (g("ie")) {
                            if (c = b.getSelection(this.editor.window),
                            c.rangeCount) {
                                var d = c.getRangeAt(0);
                                a = d.endContainer;
                                3 === a.nodeType && (a = a.parentNode);
                                a && a.nodeName && a.nodeName.toLowerCase() !== this.tag && (a = this.editor.selection.getSelectedElement(this.tag));
                                if (!a || a.nodeName && a.nodeName.toLowerCase() !== this.tag)
                                    (c = this.editor.selection.getAncestorElement(this.tag)) && c.nodeName && c.nodeName.toLowerCase() == this.tag ? (a = c,
                                    this.editor.selection.selectElement(a)) : d.startContainer === d.endContainer && (c = d.startContainer.firstChild) && c.nodeName && c.nodeName.toLowerCase() == this.tag && (a = c,
                                    this.editor.selection.selectElement(a))
                            }
                        } else
                            a = this.editor.selection.getAncestorElement(this.tag);
                        this.dropDown.reset();
                        this._setButton.set("disabled", !0);
                        this.dropDown.set("value", this._getCurrentValues(a))
                    },
                    _onDblClick: function(a) {
                        if (a && a.target && (a = a.target,
                        (a.tagName ? a.tagName.toLowerCase() : "") === this.tag && n.get(a, "href"))) {
                            var b = this.editor;
                            this.editor.selection.selectElement(a);
                            b.onDisplayChanged();
                            b._updateTimer && (b._updateTimer.remove(),
                            delete b._updateTimer);
                            b.onNormalizedDisplayChanged();
                            var c = this.button;
                            setTimeout(function() {
                                c.set("disabled", !1);
                                c.loadAndOpenDropDown().then(function() {
                                    c.dropDown.focus && c.dropDown.focus()
                                })
                            }, 10)
                        }
                    }
                })
                  , h = p("dijit._editor.plugins.ImgLinkDialog", [a], {
                    linkDialogTemplate: "\x3ctable role\x3d'presentation'\x3e\x3ctr\x3e\x3ctd\x3e\x3clabel for\x3d'${id}_urlInput'\x3e${url}\x3c/label\x3e\x3c/td\x3e\x3ctd\x3e\x3cinput dojoType\x3d'dijit.form.ValidationTextBox' regExp\x3d'${urlRegExp}' required\x3d'true' id\x3d'${id}_urlInput' name\x3d'urlInput' data-dojo-props\x3d'intermediateChanges:true'/\x3e\x3c/td\x3e\x3c/tr\x3e\x3ctr\x3e\x3ctd\x3e\x3clabel for\x3d'${id}_textInput'\x3e${text}\x3c/label\x3e\x3c/td\x3e\x3ctd\x3e\x3cinput data-dojo-type\x3d'dijit.form.ValidationTextBox' required\x3d'false' id\x3d'${id}_textInput' name\x3d'textInput' data-dojo-props\x3d'intermediateChanges:true'/\x3e\x3c/td\x3e\x3c/tr\x3e\x3ctr\x3e\x3ctd\x3e\x3c/td\x3e\x3ctd\x3e\x3c/td\x3e\x3c/tr\x3e\x3ctr\x3e\x3ctd colspan\x3d'2'\x3e\x3cbutton data-dojo-type\x3d'dijit.form.Button' type\x3d'submit' id\x3d'${id}_setButton'\x3e${set}\x3c/button\x3e\x3cbutton data-dojo-type\x3d'dijit.form.Button' type\x3d'button' id\x3d'${id}_cancelButton'\x3e${buttonCancel}\x3c/button\x3e\x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e",
                    htmlTemplate: '\x3cimg src\x3d"${urlInput}" _djrealurl\x3d"${urlInput}" alt\x3d"${textInput}" /\x3e',
                    tag: "img",
                    _getCurrentValues: function(a) {
                        var b, c;
                        a && a.tagName.toLowerCase() === this.tag ? (b = a.getAttribute("_djrealurl") || a.getAttribute("src"),
                        c = a.getAttribute("alt"),
                        this.editor.selection.selectElement(a, !0)) : c = this.editor.selection.getSelectedText();
                        return {
                            urlInput: b || "",
                            textInput: c || ""
                        }
                    },
                    _isValid: function() {
                        return this._urlInput.isValid()
                    },
                    _connectTagEvents: function() {
                        this.inherited(arguments);
                        this.editor.onLoadDeferred.then(l.hitch(this, function() {
                            this.own(k(this.editor.editNode, "mousedown", l.hitch(this, "_selectTag")))
                        }))
                    },
                    _selectTag: function(a) {
                        a && a.target && (a = a.target,
                        (a.tagName ? a.tagName.toLowerCase() : "") === this.tag && this.editor.selection.selectElement(a))
                    },
                    _checkValues: function(a) {
                        a && a.urlInput && (a.urlInput = a.urlInput.replace(/"/g, "\x26quot;"));
                        a && a.textInput && (a.textInput = a.textInput.replace(/"/g, "\x26quot;"));
                        return a
                    },
                    _onDblClick: function(a) {
                        if (a && a.target && (a = a.target,
                        (a.tagName ? a.tagName.toLowerCase() : "") === this.tag && n.get(a, "src"))) {
                            var b = this.editor;
                            this.editor.selection.selectElement(a);
                            b.onDisplayChanged();
                            b._updateTimer && (b._updateTimer.remove(),
                            delete b._updateTimer);
                            b.onNormalizedDisplayChanged();
                            var c = this.button;
                            setTimeout(function() {
                                c.set("disabled", !1);
                                c.loadAndOpenDropDown().then(function() {
                                    c.dropDown.focus && c.dropDown.focus()
                                })
                            }, 10)
                        }
                    }
                });
                d.registry.createLink = function() {
                    return new a({
                        command: "createLink"
                    })
                }
                ;
                d.registry.insertImage = function() {
                    return new h({
                        command: "insertImage"
                    })
                }
                ;
                a.ImgLinkDialog = h;
                return a
            })
        },
        "dijit/_editor/plugins/FullScreen": function() {
            define("dojo/aspect dojo/_base/declare dojo/dom-class dojo/dom-geometry dojo/dom-style dojo/i18n dojo/keys dojo/_base/lang dojo/on dojo/sniff dojo/_base/window dojo/window ../../focus ../_Plugin ../../form/ToggleButton ../../registry dojo/i18n!../nls/commands".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t) {
                var u = p("dijit._editor.plugins.FullScreen", h, {
                    zIndex: 500,
                    _origState: null,
                    _origiFrameState: null,
                    _resizeHandle: null,
                    isFullscreen: !1,
                    toggle: function() {
                        this.button.set("checked", !this.button.get("checked"))
                    },
                    _initButton: function() {
                        var a = k.getLocalization("dijit._editor", "commands")
                          , b = this.editor;
                        this.button = new r({
                            label: a.fullScreen,
                            ownerDocument: b.ownerDocument,
                            dir: b.dir,
                            lang: b.lang,
                            showLabel: !1,
                            iconClass: this.iconClassPrefix + " " + this.iconClassPrefix + "FullScreen",
                            tabIndex: "-1",
                            onChange: f.hitch(this, "_setFullScreen")
                        })
                    },
                    setEditor: function(a) {
                        this.editor = a;
                        this._initButton();
                        this.editor.addKeyHandler(g.F11, !0, !0, f.hitch(this, function(a) {
                            this.toggle();
                            a.stopPropagation();
                            a.preventDefault();
                            this.editor.defer("focus", 250);
                            return !0
                        }));
                        this.own(e(this.editor.domNode, "keydown", f.hitch(this, "_containFocus")))
                    },
                    _containFocus: function(b) {
                        if (this.isFullscreen) {
                            var c = this.editor;
                            if (!c.isTabIndent && c._fullscreen_oldOnKeyDown && b.keyCode === g.TAB) {
                                b = a.curNode;
                                var d = this._getAltViewNode();
                                b == c.iframe || d && b === d ? setTimeout(f.hitch(this, function() {
                                    c.toolbar.focus()
                                }), 10) : d && "none" === l.get(c.iframe, "display") ? setTimeout(f.hitch(this, function() {
                                    a.focus(d)
                                }), 10) : setTimeout(f.hitch(this, function() {
                                    c.focus()
                                }), 10);
                                event.stopPropagation();
                                event.preventDefault()
                            } else
                                c._fullscreen_oldOnKeyDown && c._fullscreen_oldOnKeyDown(b)
                        }
                    },
                    _resizeEditor: function() {
                        var a = b.getBox(this.editor.ownerDocument);
                        m.setMarginBox(this.editor.domNode, {
                            w: a.w,
                            h: a.h
                        });
                        var c = this.editor.getHeaderHeight()
                          , d = this.editor.getFooterHeight()
                          , e = m.getPadBorderExtents(this.editor.domNode)
                          , f = m.getPadBorderExtents(this.editor.iframe.parentNode)
                          , h = m.getMarginExtents(this.editor.iframe.parentNode)
                          , c = a.h - (c + e.h + d);
                        m.setMarginBox(this.editor.iframe.parentNode, {
                            h: c,
                            w: a.w
                        });
                        m.setMarginBox(this.editor.iframe, {
                            h: c - (f.h + h.h)
                        })
                    },
                    _getAltViewNode: function() {},
                    _setFullScreen: function(a) {
                        var c = this.editor
                          , h = c.ownerDocumentBody
                          , g = c.domNode.parentNode
                          , k = b.getBox(c.ownerDocument);
                        if (this.isFullscreen = a) {
                            for (; g && g !== h; )
                                n.add(g, "dijitForceStatic"),
                                g = g.parentNode;
                            this._editorResizeHolder = this.editor.resize;
                            c.resize = function() {}
                            ;
                            c._fullscreen_oldOnKeyDown = c.onKeyDown;
                            c.onKeyDown = f.hitch(this, this._containFocus);
                            this._origState = {};
                            this._origiFrameState = {};
                            g = (a = c.domNode) && a.style || {};
                            this._origState = {
                                width: g.width || "",
                                height: g.height || "",
                                top: l.get(a, "top") || "",
                                left: l.get(a, "left") || "",
                                position: l.get(a, "position") || "static",
                                marginBox: m.getMarginBox(c.domNode)
                            };
                            a = (a = c.iframe) && a.style || {};
                            g = l.get(c.iframe, "backgroundColor");
                            this._origiFrameState = {
                                backgroundColor: g || "transparent",
                                width: a.width || "auto",
                                height: a.height || "auto",
                                zIndex: a.zIndex || ""
                            };
                            l.set(c.domNode, {
                                position: "absolute",
                                top: "0px",
                                left: "0px",
                                zIndex: this.zIndex,
                                width: k.w + "px",
                                height: k.h + "px"
                            });
                            l.set(c.iframe, {
                                height: "100%",
                                width: "100%",
                                zIndex: this.zIndex,
                                backgroundColor: "transparent" !== g && "rgba(0, 0, 0, 0)" !== g ? g : "white"
                            });
                            l.set(c.iframe.parentNode, {
                                height: "95%",
                                width: "100%"
                            });
                            this._oldOverflow = h.style && h.style.overflow ? l.get(h, "overflow") : "";
                            if (d("ie") && !d("quirks")) {
                                if (h.parentNode && h.parentNode.style && h.parentNode.style.overflow)
                                    this._oldBodyParentOverflow = h.parentNode.style.overflow;
                                else
                                    try {
                                        this._oldBodyParentOverflow = l.get(h.parentNode, "overflow")
                                    } catch (C) {
                                        this._oldBodyParentOverflow = "scroll"
                                    }
                                l.set(h.parentNode, "overflow", "hidden")
                            }
                            l.set(h, "overflow", "hidden");
                            this._resizeHandle = e(window, "resize", f.hitch(this, function() {
                                var a = b.getBox(c.ownerDocument);
                                if ("_prevW"in this && "_prevH"in this) {
                                    if (a.w === this._prevW && a.h === this._prevH)
                                        return
                                } else
                                    this._prevW = a.w,
                                    this._prevH = a.h;
                                this._resizer && (clearTimeout(this._resizer),
                                delete this._resizer);
                                this._resizer = setTimeout(f.hitch(this, function() {
                                    delete this._resizer;
                                    this._resizeEditor()
                                }), 10)
                            }));
                            this._resizeHandle2 = q.after(c, "onResize", f.hitch(this, function() {
                                this._resizer && (clearTimeout(this._resizer),
                                delete this._resizer);
                                this._resizer = setTimeout(f.hitch(this, function() {
                                    delete this._resizer;
                                    this._resizeEditor()
                                }), 10)
                            }));
                            this._resizeEditor();
                            var p = this.editor.toolbar.domNode;
                            setTimeout(function() {
                                b.scrollIntoView(p)
                            }, 250)
                        } else {
                            this._resizeHandle && (this._resizeHandle.remove(),
                            this._resizeHandle = null);
                            this._resizeHandle2 && (this._resizeHandle2.remove(),
                            this._resizeHandle2 = null);
                            this._rst && (clearTimeout(this._rst),
                            this._rst = null);
                            for (; g && g !== h; )
                                n.remove(g, "dijitForceStatic"),
                                g = g.parentNode;
                            this._editorResizeHolder && (this.editor.resize = this._editorResizeHolder);
                            if (this._origState || this._origiFrameState) {
                                c._fullscreen_oldOnKeyDown && (c.onKeyDown = c._fullscreen_oldOnKeyDown,
                                delete c._fullscreen_oldOnKeyDown);
                                var r = this;
                                setTimeout(function() {
                                    var a = r._origState.marginBox
                                      , e = r._origState.height;
                                    d("ie") && !d("quirks") && (h.parentNode.style.overflow = r._oldBodyParentOverflow,
                                    delete r._oldBodyParentOverflow);
                                    l.set(h, "overflow", r._oldOverflow);
                                    delete r._oldOverflow;
                                    l.set(c.domNode, r._origState);
                                    l.set(c.iframe.parentNode, {
                                        height: "",
                                        width: ""
                                    });
                                    l.set(c.iframe, r._origiFrameState);
                                    delete r._origState;
                                    delete r._origiFrameState;
                                    var g = t.getEnclosingWidget(c.domNode.parentNode);
                                    g && g.resize ? g.resize() : (!e || 0 > e.indexOf("%")) && setTimeout(f.hitch(this, function() {
                                        c.resize({
                                            h: a.h
                                        })
                                    }), 0);
                                    b.scrollIntoView(r.editor.toolbar.domNode)
                                }, 100)
                            }
                        }
                    },
                    updateState: function() {
                        this.button.set("disabled", this.get("disabled"))
                    },
                    destroy: function() {
                        this._resizeHandle && (this._resizeHandle.remove(),
                        this._resizeHandle = null);
                        this._resizeHandle2 && (this._resizeHandle2.remove(),
                        this._resizeHandle2 = null);
                        this._resizer && (clearTimeout(this._resizer),
                        this._resizer = null);
                        this.inherited(arguments)
                    }
                });
                h.registry.fullScreen = h.registry.fullscreen = function(a) {
                    return new u({
                        zIndex: "zIndex"in a ? a.zIndex : 500
                    })
                }
                ;
                return u
            })
        },
        "dijit/_editor/plugins/ViewSource": function() {
            define("dojo/_base/array dojo/aspect dojo/_base/declare dojo/dom-attr dojo/dom-construct dojo/dom-geometry dojo/dom-style dojo/i18n dojo/keys dojo/_base/lang dojo/on dojo/sniff dojo/window ../../focus ../_Plugin ../../form/ToggleButton ../.. ../../registry dojo/i18n!../nls/commands".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x) {
                var y = n("dijit._editor.plugins.ViewSource", r, {
                    stripScripts: !0,
                    stripComments: !0,
                    stripIFrames: !0,
                    readOnly: !1,
                    _fsPlugin: null,
                    toggle: function() {
                        b("webkit") && (this._vsFocused = !0);
                        this.button.set("checked", !this.button.get("checked"))
                    },
                    _initButton: function() {
                        var a = f.getLocalization("dijit._editor", "commands")
                          , b = this.editor;
                        this.button = new t({
                            label: a.viewSource,
                            ownerDocument: b.ownerDocument,
                            dir: b.dir,
                            lang: b.lang,
                            showLabel: !1,
                            iconClass: this.iconClassPrefix + " " + this.iconClassPrefix + "ViewSource",
                            tabIndex: "-1",
                            onChange: d.hitch(this, "_showSource")
                        });
                        this.button.set("readOnly", !1)
                    },
                    setEditor: function(a) {
                        this.editor = a;
                        this._initButton();
                        this.editor.addKeyHandler(e.F12, !0, !0, d.hitch(this, function(a) {
                            this.button.focus();
                            this.toggle();
                            a.stopPropagation();
                            a.preventDefault();
                            setTimeout(d.hitch(this, function() {
                                this.editor.focused && this.editor.focus()
                            }), 100)
                        }))
                    },
                    _showSource: function(b) {
                        var e = this.editor, f = e._plugins, h;
                        this._sourceShown = b;
                        var k = this;
                        try {
                            this.sourceArea || this._createSourceView();
                            if (b)
                                e._sourceQueryCommandEnabled = e.queryCommandEnabled,
                                e.queryCommandEnabled = function(a) {
                                    return "viewsource" === a.toLowerCase()
                                }
                                ,
                                this.editor.onDisplayChanged(),
                                h = e.get("value"),
                                h = this._filter(h),
                                e.set("value", h),
                                q.forEach(f, function(a) {
                                    !a || a instanceof y || !a.isInstanceOf(r) || a.set("disabled", !0)
                                }),
                                this._fsPlugin && (this._fsPlugin._getAltViewNode = function() {
                                    return k.sourceArea
                                }
                                ),
                                this.sourceArea.value = h,
                                this.sourceArea.style.height = e.iframe.style.height,
                                this.sourceArea.style.width = e.iframe.style.width,
                                e.iframe.parentNode.style.position = "relative",
                                g.set(e.iframe, {
                                    position: "absolute",
                                    top: 0,
                                    visibility: "hidden"
                                }),
                                g.set(this.sourceArea, {
                                    display: "block"
                                }),
                                this._resizeHandle = c(window, "resize", d.hitch(this, function() {
                                    var b = a.getBox(e.ownerDocument);
                                    "_prevW"in this && "_prevH"in this && b.w === this._prevW && b.h === this._prevH || (this._prevW = b.w,
                                    this._prevH = b.h,
                                    this._resizer && (clearTimeout(this._resizer),
                                    delete this._resizer),
                                    this._resizer = setTimeout(d.hitch(this, function() {
                                        delete this._resizer;
                                        this._resize()
                                    }), 10))
                                })),
                                setTimeout(d.hitch(this, this._resize), 100),
                                this.editor.onNormalizedDisplayChanged(),
                                this.editor.__oldGetValue = this.editor.getValue,
                                this.editor.getValue = d.hitch(this, function() {
                                    var a = this.sourceArea.value;
                                    return a = this._filter(a)
                                }),
                                this._setListener = p.after(this.editor, "setValue", d.hitch(this, function(a) {
                                    a = this._filter(a || "");
                                    this.sourceArea.value = a
                                }), !0);
                            else {
                                if (!e._sourceQueryCommandEnabled)
                                    return;
                                this._setListener.remove();
                                delete this._setListener;
                                this._resizeHandle.remove();
                                delete this._resizeHandle;
                                this.editor.__oldGetValue && (this.editor.getValue = this.editor.__oldGetValue,
                                delete this.editor.__oldGetValue);
                                e.queryCommandEnabled = e._sourceQueryCommandEnabled;
                                this._readOnly || (h = this.sourceArea.value,
                                h = this._filter(h),
                                e.beginEditing(),
                                e.set("value", h),
                                e.endEditing());
                                q.forEach(f, function(a) {
                                    a && a.isInstanceOf(r) && a.set("disabled", !1)
                                });
                                g.set(this.sourceArea, "display", "none");
                                g.set(e.iframe, {
                                    position: "relative",
                                    visibility: "visible"
                                });
                                delete e._sourceQueryCommandEnabled;
                                this.editor.onDisplayChanged()
                            }
                            setTimeout(d.hitch(this, function() {
                                var a = e.domNode.parentNode;
                                a && (a = x.getEnclosingWidget(a)) && a.resize && a.resize();
                                e.resize()
                            }), 300)
                        } catch (C) {}
                    },
                    updateState: function() {
                        this.button.set("disabled", this.get("disabled"))
                    },
                    _resize: function() {
                        var b = this.editor
                          , c = b.getHeaderHeight()
                          , d = b.getFooterHeight()
                          , e = k.position(b.domNode)
                          , f = k.getPadBorderExtents(b.iframe.parentNode)
                          , h = k.getMarginExtents(b.iframe.parentNode)
                          , g = k.getPadBorderExtents(b.domNode)
                          , l = e.w - g.w
                          , e = e.h - (c + g.h + d);
                        this._fsPlugin && this._fsPlugin.isFullscreen && (b = a.getBox(b.ownerDocument),
                        l = b.w - g.w,
                        e = b.h - (c + g.h + d));
                        k.setMarginBox(this.sourceArea, {
                            w: Math.round(l - (f.w + h.w)),
                            h: Math.round(e - (f.h + h.h))
                        })
                    },
                    _createSourceView: function() {
                        var a = this.editor
                          , f = a._plugins;
                        this.sourceArea = l.create("textarea");
                        this.readOnly && (m.set(this.sourceArea, "readOnly", !0),
                        this._readOnly = !0);
                        g.set(this.sourceArea, {
                            padding: "0px",
                            margin: "0px",
                            borderWidth: "0px",
                            borderStyle: "none"
                        });
                        m.set(this.sourceArea, "aria-label", this.editor.id);
                        l.place(this.sourceArea, a.iframe, "before");
                        b("ie") && a.iframe.parentNode.lastChild !== a.iframe && g.set(a.iframe.parentNode.lastChild, {
                            width: "0px",
                            height: "0px",
                            padding: "0px",
                            margin: "0px",
                            borderWidth: "0px",
                            borderStyle: "none"
                        });
                        a._viewsource_oldFocus = a.focus;
                        var k = this;
                        a.focus = function() {
                            if (k._sourceShown)
                                k.setSourceAreaCaret();
                            else
                                try {
                                    this._vsFocused ? (delete this._vsFocused,
                                    h.focus(a.editNode)) : a._viewsource_oldFocus()
                                } catch (C) {}
                        }
                        ;
                        var n, p;
                        for (n = 0; n < f.length; n++)
                            if ((p = f[n]) && ("dijit._editor.plugins.FullScreen" === p.declaredClass || p.declaredClass === u._scopeName + "._editor.plugins.FullScreen")) {
                                this._fsPlugin = p;
                                break
                            }
                        this._fsPlugin && (this._fsPlugin._viewsource_getAltViewNode = this._fsPlugin._getAltViewNode,
                        this._fsPlugin._getAltViewNode = function() {
                            return k._sourceShown ? k.sourceArea : this._viewsource_getAltViewNode()
                        }
                        );
                        this.own(c(this.sourceArea, "keydown", d.hitch(this, function(b) {
                            this._sourceShown && b.keyCode == e.F12 && b.ctrlKey && b.shiftKey && (this.button.focus(),
                            this.button.set("checked", !1),
                            setTimeout(d.hitch(this, function() {
                                a.focus()
                            }), 100),
                            b.stopPropagation(),
                            b.preventDefault())
                        })))
                    },
                    _stripScripts: function(a) {
                        a && (a = a.replace(/<\s*script[^>]*>((.|\s)*?)<\\?\/\s*script\s*>/ig, ""),
                        a = a.replace(/<\s*script\b([^<>]|\s)*>?/ig, ""),
                        a = a.replace(/<[^>]*=(\s|)*[("|')]javascript:[^$1][(\s|.)]*[$1][^>]*>/ig, ""));
                        return a
                    },
                    _stripComments: function(a) {
                        a && (a = a.replace(/\x3c!--(.|\s){1,}?--\x3e/g, ""));
                        return a
                    },
                    _stripIFrames: function(a) {
                        a && (a = a.replace(/<\s*iframe[^>]*>((.|\s)*?)<\\?\/\s*iframe\s*>/ig, ""));
                        return a
                    },
                    _filter: function(a) {
                        a && (this.stripScripts && (a = this._stripScripts(a)),
                        this.stripComments && (a = this._stripComments(a)),
                        this.stripIFrames && (a = this._stripIFrames(a)));
                        return a
                    },
                    setSourceAreaCaret: function() {
                        var a = this.sourceArea;
                        h.focus(a);
                        this._sourceShown && !this.readOnly && (a.setSelectionRange ? a.setSelectionRange(0, 0) : this.sourceArea.createTextRange && (a = a.createTextRange(),
                        a.collapse(!0),
                        a.moveStart("character", -99999),
                        a.moveStart("character", 0),
                        a.moveEnd("character", 0),
                        a.select()))
                    },
                    destroy: function() {
                        this._resizer && (clearTimeout(this._resizer),
                        delete this._resizer);
                        this._resizeHandle && (this._resizeHandle.remove(),
                        delete this._resizeHandle);
                        this._setListener && (this._setListener.remove(),
                        delete this._setListener);
                        this.inherited(arguments)
                    }
                });
                r.registry.viewSource = r.registry.viewsource = function(a) {
                    return new y({
                        readOnly: "readOnly"in a ? a.readOnly : !1,
                        stripComments: "stripComments"in a ? a.stripComments : !0,
                        stripScripts: "stripScripts"in a ? a.stripScripts : !0,
                        stripIFrames: "stripIFrames"in a ? a.stripIFrames : !0
                    })
                }
                ;
                return y
            })
        },
        "dijit/_editor/plugins/NewPage": function() {
            define("dojo/_base/declare dojo/i18n dojo/_base/lang ../_Plugin ../../form/Button dojo/i18n!../nls/commands".split(" "), function(q, p, n, m, l) {
                var k = q("dijit._editor.plugins.NewPage", m, {
                    content: "\x3cbr\x3e",
                    _initButton: function() {
                        var g = p.getLocalization("dijit._editor", "commands")
                          , f = this.editor;
                        this.button = new l({
                            label: g.newPage,
                            ownerDocument: f.ownerDocument,
                            dir: f.dir,
                            lang: f.lang,
                            showLabel: !1,
                            iconClass: this.iconClassPrefix + " " + this.iconClassPrefix + "NewPage",
                            tabIndex: "-1",
                            onClick: n.hitch(this, "_newPage")
                        })
                    },
                    setEditor: function(g) {
                        this.editor = g;
                        this._initButton()
                    },
                    updateState: function() {
                        this.button.set("disabled", this.get("disabled"))
                    },
                    _newPage: function() {
                        this.editor.beginEditing();
                        this.editor.set("value", this.content);
                        this.editor.endEditing();
                        this.editor.focus()
                    }
                });
                m.registry.newPage = m.registry.newpage = function(g) {
                    return new k({
                        content: "content"in g ? g.content : "\x3cbr\x3e"
                    })
                }
                ;
                return k
            })
        },
        "dijit/_editor/plugins/Print": function() {
            define("dojo/_base/declare dojo/i18n dojo/_base/lang dojo/sniff ../../focus ../_Plugin ../../form/Button dojo/i18n!../nls/commands".split(" "), function(q, p, n, m, l, k, g) {
                var f = q("dijit._editor.plugins.Print", k, {
                    _initButton: function() {
                        var e = p.getLocalization("dijit._editor", "commands")
                          , d = this.editor;
                        this.button = new g({
                            label: e.print,
                            ownerDocument: d.ownerDocument,
                            dir: d.dir,
                            lang: d.lang,
                            showLabel: !1,
                            iconClass: this.iconClassPrefix + " " + this.iconClassPrefix + "Print",
                            tabIndex: "-1",
                            onClick: n.hitch(this, "_print")
                        })
                    },
                    setEditor: function(e) {
                        this.editor = e;
                        this._initButton();
                        this.editor.onLoadDeferred.then(n.hitch(this, function() {
                            this.editor.iframe.contentWindow.print || this.button.set("disabled", !0)
                        }))
                    },
                    updateState: function() {
                        var e = this.get("disabled");
                        this.editor.iframe.contentWindow.print || (e = !0);
                        this.button.set("disabled", e)
                    },
                    _print: function() {
                        var e = this.editor.iframe;
                        if (e.contentWindow.print)
                            if (m("opera") || m("chrome")) {
                                var d = this.editor.document
                                  , c = this.editor.get("value")
                                  , c = "\x3chtml\x3e\x3chead\x3e\x3cmeta http-equiv\x3d'Content-Type' content\x3d'text/html; charset\x3d'UTF-8'\x3e\x3c/head\x3e\x3cbody\x3e" + c + "\x3c/body\x3e\x3c/html\x3e"
                                  , e = window.open("javascript: ''", "", "status\x3d0,menubar\x3d0,location\x3d0,toolbar\x3d0,width\x3d1,height\x3d1,resizable\x3d0,scrollbars\x3d0");
                                e.document.open();
                                e.document.write(c);
                                e.document.close();
                                if (d = d.getElementsByTagName("style"))
                                    for (c = 0; c < d.length; c++) {
                                        var b = d[c].innerHTML
                                          , a = e.document.createElement("style");
                                        a.appendChild(e.document.createTextNode(b));
                                        e.document.getElementsByTagName("head")[0].appendChild(a)
                                    }
                                e.print();
                                e.close()
                            } else
                                l.focus(e),
                                e.contentWindow.print()
                    }
                });
                k.registry.print = function() {
                    return new f({
                        command: "print"
                    })
                }
                ;
                return f
            })
        },
        "dijit/_editor/plugins/TabIndent": function() {
            define(["dojo/_base/declare", "dojo/_base/kernel", "../_Plugin", "../../form/ToggleButton"], function(q, p, n, m) {
                p.experimental("dijit._editor.plugins.TabIndent");
                var l = q("dijit._editor.plugins.TabIndent", n, {
                    useDefaultCommand: !1,
                    buttonClass: m,
                    command: "tabIndent",
                    _initButton: function() {
                        this.inherited(arguments);
                        var k = this.editor;
                        this.own(this.button.on("change", function(g) {
                            k.set("isTabIndent", g)
                        }));
                        this.updateState()
                    },
                    updateState: function() {
                        var k = this.get("disabled");
                        this.button.set("disabled", k);
                        k || this.button.set("checked", this.editor.isTabIndent, !1)
                    }
                });
                n.registry.tabIndent = function() {
                    return new l({
                        command: "tabIndent"
                    })
                }
                ;
                return l
            })
        },
        "dijit/_editor/plugins/ToggleDir": function() {
            define("dojo/_base/declare dojo/dom-style dojo/_base/kernel dojo/_base/lang dojo/on ../_Plugin ../../form/ToggleButton".split(" "), function(q, p, n, m, l, k, g) {
                var f = q("dijit._editor.plugins.ToggleDir", k, {
                    useDefaultCommand: !1,
                    command: "toggleDir",
                    buttonClass: g,
                    _initButton: function() {
                        function e(a) {
                            d.set("checked", a && a !== b, !1)
                        }
                        this.inherited(arguments);
                        var d = this.button
                          , c = this.editor.isLeftToRight();
                        this.own(this.button.on("change", m.hitch(this, function(a) {
                            this.editor.set("textDir", c ^ a ? "ltr" : "rtl")
                        })));
                        var b = c ? "ltr" : "rtl";
                        e(this.editor.get("textDir"));
                        this.editor.watch("textDir", function(a, b, c) {
                            e(c)
                        })
                    },
                    updateState: function() {
                        this.button.set("disabled", this.get("disabled"))
                    }
                });
                k.registry.toggleDir = function() {
                    return new f({
                        command: "toggleDir"
                    })
                }
                ;
                return f
            })
        },
        "ttx/util/_NotifyMixin": function() {
            define(["dojo/_base/declare", "ttx/dijit/NotifyBox"], function(q, p) {
                return q(null, {
                    notify: function(n, m, l, k, g) {
                        null == m && (m = []);
                        null == l && (l = "success");
                        null == k && (k = "center");
                        null == g && (g = 3E3);
                        n = n.trim();
                        return new p({
                            msg: tt(n, m),
                            type: l,
                            timeout: g,
                            position: k
                        })
                    },
                    notifyError: function(n, m) {
                        null == m && (m = []);
                        n = n.trim();
                        return new p({
                            msg: tt(n, m),
                            type: "error",
                            timeout: 8E3,
                            position: "center"
                        })
                    }
                })
            })
        },
        "ttx/dijit/NotifyBox": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/array dojo/_base/fx dojo/dom-class dojo/dom-style dojo/dom-geometry dojo/dom-construct dojo/fx dojo/on dijit/_WidgetBase".split(" "), function(q, p, n, m, l, k, g, f, e, d, c) {
                return q([c], {
                    to: null,
                    width: 300,
                    height: 40,
                    max_height: 400,
                    line_height: 22,
                    position: "center",
                    autohide: !0,
                    timeout: 2E3,
                    msg: "",
                    opacity: 1,
                    type: "default",
                    types: {
                        0: "success",
                        success: "success",
                        1: "error",
                        error: "error",
                        info: "info",
                        warning: "warning",
                        "default": "default"
                    },
                    _validateConfig: function() {
                        0 > n.indexOf(["right", "left", "center"], this.position) && (this.position = void 0);
                        this.width && "all" === this.width && (this.width = screen.width - 60);
                        this.height && 100 <= this.height && 0 >= this.height && (this.height = void 0);
                        this.type = this.types[this.type];
                        if (0 > n.indexOf(["error", "success", "info", "warning", "default"], this.type))
                            return this.type = "default"
                    },
                    postCreate: function(b) {
                        var a, c;
                        this._validateConfig();
                        clearInterval(a);
                        b = this.domNode;
                        f.place("\x3cp\x3e" + this.msg + "\x3c/p\x3e", this.domNode);
                        f.place(b, document.body);
                        k.set(b, "top", "10px");
                        k.set(b, "max-height", this.max_height + "px");
                        k.set(b, "width", this.width + "px");
                        k.set(b, "opacity", this.opacity);
                        l.add(b, "notifyBox " + this.type);
                        k.set(b.children[0], "line-height", this.line_height + "px");
                        a = {};
                        switch (this.position) {
                        case "right":
                            k.set(b, "right", parseInt(0 - 2 * this.width) + "px");
                            a = {
                                l: window.innerWidth - 10 - this.width
                            };
                            break;
                        case "center":
                            k.set(b, "top", parseInt(0 - (this.height + 10)) + "px");
                            k.set(b, "left", window.innerWidth / 2 - parseInt(this.width / 2) + "px");
                            a = {
                                t: 10
                            };
                            break;
                        case "left":
                            k.set(b, "left", parseInt(0 - 2 * this.width) + "px");
                            a = {
                                l: 10
                            };
                            break;
                        default:
                            k.set(b, "left", window.innerWidth + this.width + "px"),
                            a = {
                                l: window.innerWidth - 10 - this.width
                            }
                        }
                        a = p.mixin({
                            t: 10
                        }, g.getMarginBox(b), a, {
                            node: b
                        });
                        a.left = a.l;
                        a.top = a.t;
                        e.slideTo(a).play();
                        c = this;
                        d(b, "click", p.hitch(c, "dismiss"));
                        if (!0 === this.autohide && 0 < c.timeout)
                            return a = setTimeout(function() {
                                return c.dismiss()
                            }, c.timeout)
                    },
                    dismiss: function() {
                        clearInterval(this.to);
                        return this.destroyRecursive()
                    }
                })
            })
        },
        "ttx/util/_SessionMixin": function() {
            define(["dojo/_base/declare", "dojo/_base/lang", "ttx/AppConfig"], function(q, p, n) {
                var m;
                m = {
                    user: "default_user",
                    token: "default_token",
                    db: n.db,
                    client: "",
                    locale: dojoConfig.locale
                };
                return q(null, {
                    initByArgs: function(l) {
                        if (l && (l.db && (m.db = l.db),
                        l.customer))
                            return m.db = l.customer
                    },
                    clearIfNotCookieEquals: function(l, k) {
                        if (k !== sessionStorage.getItem(l))
                            return this.cleanSessionCookie()
                    },
                    sessionSet: function(l, k) {
                        return m[l] = k
                    },
                    sessionGet: function(l) {
                        return m[l]
                    },
                    getSession: function() {
                        return m
                    },
                    writeSession: function(l) {
                        p.mixin(m, l);
                        sessionStorage.setItem("user", m.user);
                        sessionStorage.setItem("token", m.token);
                        sessionStorage.setItem("db", m.db);
                        sessionStorage.setItem("client", m.client);
                        sessionStorage.setItem("locale", m.locale);
                        sessionStorage.setItem("sso", m.sso || "");
                        sessionStorage.setItem("ssoToken", m.ssoToken || "");
                        sessionStorage.setItem("ssoApp", m.ssoApp || "");
                        return sessionStorage.setItem("ssoClient", m.ssoClient || "")
                    },
                    getCookieSession: function() {
                        return {
                            user: sessionStorage.getItem("user"),
                            token: sessionStorage.getItem("token"),
                            db: sessionStorage.getItem("db"),
                            client: sessionStorage.getItem("client"),
                            sso: sessionStorage.getItem("sso"),
                            ssoToken: sessionStorage.getItem("ssoToken"),
                            ssoApp: sessionStorage.getItem("ssoApp"),
                            ssoClient: sessionStorage.getItem("ssoClient")
                        }
                    },
                    mixinSession: function(l) {
                        return p.mixin(m, l)
                    },
                    getHeaderCookie: function() {
                        return {
                            "X-User": sessionStorage.getItem("user"),
                            "X-Token": sessionStorage.getItem("token"),
                            "X-DB": sessionStorage.getItem("db"),
                            "X-CLIENT": sessionStorage.getItem("client"),
                            "X-SSO": sessionStorage.getItem("sso"),
                            "X-SSO-TOKEN": sessionStorage.getItem("ssoToken"),
                            "X-SSO-APP": sessionStorage.getItem("ssoApp"),
                            "X-SSO-Client": sessionStorage.getItem("ssoClient")
                        }
                    },
                    sessionSyncFromCookie: function() {
                        var l;
                        l = this.mixinSession(this.getCookieSession());
                        queryObject && queryObject.sso && (l.sso = queryObject.sso);
                        queryObject && queryObject.ssoToken && (l.ssoToken = queryObject.ssoToken);
                        queryObject && queryObject.ssoClient && (l.ssoClient = queryObject.ssoClient);
                        queryObject && queryObject.ssoApp && (l.ssoApp = queryObject.ssoApp);
                        queryObject && queryObject.customer && (l.db = queryObject.customer);
                        return l
                    },
                    cleanSessionCookie: function() {
                        sessionStorage.setItem("token", "");
                        return sessionStorage.setItem("db", "")
                    }
                })
            })
        },
        "ttx/util/_AudioMixin": function() {
            define(["dojo/_base/declare"], function(q) {
                return q(null, {
                    playAudio: function(p) {
                        try {
                            return p.paused || (p.pause(),
                            p.currentTime = 0),
                            p.play()
                        } catch (n) {
                            return 1
                        }
                    }
                })
            })
        },
        "ttx/extend/allExtend": function() {
            define(["./Date", "./requestFrame", "ttx/subject/wsoTabSelect"], function() {})
        },
        "ttx/extend/Date": function() {
            define([], function() {
                Date.prototype.format = function(q) {
                    var p, n, m;
                    n = {
                        "M+": this.getMonth() + 1,
                        "d+": this.getDate(),
                        "h+": 0 === this.getHours() % 12 ? 12 : this.getHours() % 12,
                        "H+": this.getHours(),
                        "m+": this.getMinutes(),
                        "s+": this.getSeconds(),
                        "q+": Math.floor((this.getMonth() + 3) / 3),
                        S: this.getMilliseconds()
                    };
                    m = {
                        0: "/u65e5",
                        1: "/u4e00",
                        2: "/u4e8c",
                        3: "/u4e09",
                        4: "/u56db",
                        5: "/u4e94",
                        6: "/u516d"
                    };
                    /(y+)/.test(q) && (q = q.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length)));
                    /(E+)/.test(q) && (q = q.replace(RegExp.$1, (1 < RegExp.$1.length ? 2 < RegExp.$1.length ? "/u661f/u671f" : "/u5468" : "") + m[this.getDay() + ""]));
                    for (p in n)
                        (new RegExp("(" + p + ")")).test(q) && (q = q.replace(RegExp.$1, 1 === RegExp.$1.length ? n[p] : ("00" + n[p]).substr(("" + n[p]).length)));
                    return q
                }
                ;
                return Date.prototype.toJSON = function() {
                    return this.format("yyyy-MM-dd HH:mm:ss")
                }
            })
        },
        "ttx/extend/requestFrame": function() {
            define([], function() {
                (function() {
                    var q, p, n;
                    q = 0;
                    p = ["webkit", "moz"];
                    for (n = 0; n < p.length && !window.requestAnimationFrame; )
                        window.requestAnimationFrame = window[p[n] + "RequestAnimationFrame"],
                        window.cancelAnimationFrame = window[p[n] + "CancelAnimationFrame"] || window[p[n] + "CancelRequestAnimationFrame"],
                        ++n;
                    window.requestAnimationFrame || (window.requestAnimationFrame = function(m, l) {
                        var k, g, f;
                        k = (new Date).getTime();
                        f = Math.max(0, 16 - (k - q));
                        g = window.setTimeout(function() {
                            m(k + f)
                        }, f);
                        q = k + f;
                        return g
                    }
                    );
                    if (!window.cancelAnimationFrame)
                        return window.cancelAnimationFrame = function(m) {
                            clearTimeout(m)
                        }
                }
                )()
            })
        },
        "ttx/subject/wsoTabSelect": function() {
            define(["dojo/on", "dojo/topic", "dojo/query", "dojo/dom-class"], function(q, p, n, m) {
                var l;
                p.subscribe("wsoTabSelect", function(k) {
                    switch (window.cbtConfig.tabContainerSelectAction) {
                    case "disSelectNav":
                        return n(".dijitTreeRow.dijitTreeRowSelected", app.navigator.tree.domNode).forEach(function(g) {
                            return m.remove(g, "dijitTreeRowSelected")
                        })
                    }
                });
                l = function() {}
                ;
                p.subscribe("wsoClose", function(k) {
                    if (1 === app.workspaceManager.wsoContainer.getChildren().length)
                        return l()
                });
                p.subscribe("postCreateBillAction", function(k) {
                    switch (window.cbtConfig.postCreateBillAction) {
                    case "backToParent":
                        return k.tc.selectChild(k.cpList)
                    }
                });
                p.subscribe("postCreateDetailAction", function(k) {
                    switch (window.cbtConfig.postCreateDetailAction) {
                    case "backToParent":
                        return k.tc.selectChild(k.cpBill)
                    }
                });
                p.subscribe("postUpdateBillAction", function(k) {
                    switch (window.cbtConfig.postUpdateBillAction) {
                    case "backToParent":
                        return k.tc.selectChild(k.cpList)
                    }
                });
                return p.subscribe("postUpdateDetailAction", function(k) {
                    switch (window.cbtConfig.postUpdateDetailAction) {
                    case "backToParent":
                        return k.tc.selectChild(k.cpBill)
                    }
                })
            })
        },
        "ttx/subject/tx": function() {
            define(["dojo/topic", "dojox/encoding/crypto/SimpleAES"], function(q, p) {
                var n;
                n = function(m) {
                    return p.decrypt(m, "tx")
                }
                ;
                return q.subscribe(n("2409b6995e010000 a0d8bef4b07b7134ff43b9b2fcf7c1"), function(m) {
                    return function() {
                        return app[n("d3ed4f9d5e010000 58d3c60cd948")][n("76d4c0995e010000 cb3d395d846649")][n("de7e519d5e010000 e02122")] = n("22b5b0995e010000 35c7ae5ca260cc0907353c12c284d022 a9347c4f8790f884f69c78ecf0e96cca 1f62f2b14f6b7fb875cd9f1c1a5a7a85 f276d6ca2a295721d6751a75ef5b459a d0a32bb623cc27098cf7dc7c6561bc3e 5d66094d1602132040fe4913f649c96a b3592e7728167d1fc8db79d74d76f21e c2facce4563125813e69a4ef2c50ba5e 5c423462fa628511c4b063ccb0a661fe62 1d5c80044971c7dc032535343a27a212 45c584868a863dfb03e881107fd58002 16c781d7ecef9bbac110436ddc344a08 19c492114561286ea3495fea8d217671 d988b91dcbb4b87ebea64d4c19688964 8978e46aa6d27e39421aa874e0b9bb4c ae7c351c3427ba4db5df7e084d77c830 d8c4c3dd291bb2420b7c950ac8b33870 31cc2bd27a8d69ec6a8215fdc2c76a96 e39d6bd8278113e37324130a828eb25a d0d610b04af51eb2ca1c145cb2987298 bb5420f7f40234d4d0dc383838d4db2c 909d978139a00032269c8bba3a47f0c0 6052a9989460e94f1ad6e6ae2eabe0d3 434d7a900d5603f2e07e4778fa834eb2 2097a27fcb3004591d54ef3b761d8679 1bac213461bf8071a78befb1683384a8 68b2e4693d470ca225f0388f439481a6 52d9b625dc40e3fd01254dcf97bf46a2 fadec6dd2deaded6153c8ea500fb178d 6c20f4c37dc9ae43a7ca3d7b4b1b3fc3 4659a28e0c1d3065eb4f5f5cc5c439ff 076c27ae4e0cb4cac91f2d91977ea684 2705d86e6a9e53b8149d1e8b218d8a06 1a12fa531de16e024b21a1e2e93e8511 40b6fb320804f027f48884b712a17257 25cf58742066d9a73bd65bc78c865fd0 2f1ff5a7ccee137ad9feea9218ad767f de36671a22c4be88fe7474f551eebc16 596259b75f6e053a003d0902128d44d8 b6b70721a94663af9e8cde9b56d93f54 ce2a3be458f4aeafdf8951e9478d5e87 47d69be348d464de7f406804eb93106b 8197207d1742cdcf8da908cf90064812 97703a2a69b2ffa2c8614b2afb9a8fd6 72979b3d98bda014d23ea5971286c7f3 def8ad29820f0957fdbf27f5ab9c687e 414b51b2f05ab83a6d9e9fbe5313e9e4 0a3a7ea8e89ba8a953c2e15f9f230915 1ecf9ef760391734c6239e9f6bdcccbc 2cbb31aa00b6085003d62cba6febee0c bacfa159ebd8d3881129ecba7ff51e57 44fdfb1bce00983befabc7138a5067b4 e5991aa54b02386eeef566409d462884 140bcf5b028ecd84360e308bea68fce9 c15b59a5b2ddbf06957b151238d1cddf 172d34fcbf583c0097499567fce837d9 1024cd728b59e08afce3e12c13446029 d9c4bfecbba6c431b0333200a65368cd 92593078fc0307944aa050d055c7a829 0c32d724f1eec80d986a42fc832d2218 9ca05926fb89cfbeade0584914e66700 e1f1fbac19e955c153492493a5ce9e82 1a584b5730d7bfe8d80e135e8ec87233 8555e1b072cdd9d1de8d0f54c016b156 7866d3981229cbdbd7f51ac8f7c42b85 e21c1a0de63987b9d703b3caf45f25b1 91dfd1a11f8db232def94517c21754c2 764d4de2f04559aeb2053d41e5db5146 4c4dbe1c12b4be875f53505ca57a5860 c92a918d53e786293efcd8519eb15d90 cab375c7876a866d2ca233a8070b254d 4f56c73ed90e687f08bc0d0f80b02892 54b9c73dc29084dca7f242e4d5c67234 943a59102237b80bfe9395d37843958b 7f0f9daa3dc3e41801b2449ccb559864 e7f5264ac22ff4e6e5c5eb4753d388a4 25d694b08648cf2fa86ac154438d0238 f2f6297c2ed01729ce6e0b637665451f 0c07a5ada967ba3865acf78f6cf2b7ac bf5ebb4f48dd7cd248cbf8e3a035b2f6 4ad4b87acc6ec3f7f180b351e50722ed 6684bf0b63a34ed182621a207a0b07f9 6abff728f878d3876fe4180220055a4c 640e2ead70abd143db8b70574a9648b2 04e37588c3de6b9c11423638a75bd4b6 d26e5053a62cdce40a6f412dbaf06f12 31bb4416281449b1d520bf8076720057 3e34cf5e466982324e0a749dfd6707ba ab19fa36036d2bccf8e220950d4d469f c84f3ab881bd891e9b3a869346cae08e 30f5192f705c00a81051c19eca03c648 d415191afeeb3d78be35b9ed9819b47a cb6ef5aeb8d877dc246fb02a77b422b0 e155f06050b48c1404d44bc05c6a503c 75362c4ca6d0c694eff1169a56651bcc 60bd3b0716788ac63706473e752b1033 32bc690786e3a731c9fd99a242076893 66e2358df5ce72bbbe95b3e1e287b368 8455579dc7d9c40a05c9bbd05c8d9232 7cbd055fe283bc4144daeab9a2c9f10b a5d20768f184cb1ef4e707bd1570a940 bb9dd3eba23eee034041654a60c9fa6c 0a8c71541eebe84ac61ca82047d55110 e085042b4466a94aa3675db660b3ef6c 91a2bcecb2475e5f9240d6746b51c59e f1ce880a8d21cfa6dcadb2532ef1ca36 0dc8a837fc95cb394aac2c9f3ddc4fdd 9c9ebda0546564ebe472794b76b04ffa 0eca98a2d51c060b45a14a5964489026 349c9c31f990f48326ae0aeb0aae70b7 e0a020e4bc7962f91ec1605b9a310927 24b38f790fb73c67acc52d6d7c101fb6 4e934420265dd7cc551fb3d3abd34ab8 d23db5bb9e58294633256d809bb73b1c 2d64169493826d40fa00f3079d432bda 24904a3511f4891e463ef6374c819a61 acb07a021dc028f144f4459d919fad5e d4b16b4a0566edd3768f4da0c1eae1fe 92be9f68eb4e73ce5fd92c750f9129b6 c37f85dbe741c54db3d3adb067f7309c f6b94cea25db03559e30bec8bf8b5296 77a5016007b863f347ce535911b20d7a 0af45c619746cd6abbb4db1a939f1bb2 04a94cdf1e88f49bd0838afdcc4fc93b 1892f4e4fa2b1c1926945dfb064b48b3 693ac41933f9a752b229c9af8c954b0e aa55a906e617dc3f7e2b25312d20150f a1ebe22491ba2a840926a03ad8a0c62b 140108c95733c7f426af2777931a8f11 45d117d829adf5bb520f920ec064b93d 07c92e713208ecf053cd2eb2ba033044 f2cceafa38c85a98bef8ccace386770a 95c8eb1ad85b1980ab9ac75036d47e31 c50b72577f2cf8c4e8605dfc753ff932 09f8534cf9d6ce74421770ce1d951261 4ffe4df2497c7eacb897d31156f444f4 4f89d8e6142a2437d22b00e8df5570fd bac6867d3e3c3547460b4bc49014b07c 6e378dd37d01c251dc2c33dd690af045 b55e5c50b7c48b1456c581c5d83faebd 04ce3da8aad8437ffbb7d85190ac5b35 19c86efd2df6046c9ca03837504c8897 b729d9ff9d03947e10b294389a118dbc ab7b44eda7b4d4c9980045f8401a57e8 1cf0cfb580e5cd9b81f1b2fe2277180e ce261eaf2d83deacc8c302d251e0b23d 73d07ddb3ca49a11aeb131cd51c07e2e 3b2cf651a02a5b21495c508352068806 6c746b5ea0723d8fcd9e2d42d9ee7307 2974db1e9642e9bd927874261fa00cad a5b64560dd4e96bfc73df933983d4ecd 67049591bf161bec6f24880c76f969f4 3d5695bc500e1a3850c32a7604e1ca57 bdc62b96c15df467fc9b782c88ecaaa4 45b2a6c053e7407198ebd2183b45dfcd 6650d339175d74e49cad65404eb22c1e c3ae28bd601f5e93b3db4deef4576963 0119339e317aa1114fc020047f081309 a4691f2b049311ecdf89c768f9196892 c43b7eb591dcbc093f0fc954bd7ab737 08d0cb9da20535604f7139af8f2e84bd 04dd2c07010f4fd225873b40dff70425 0b0fe063df2d417bdd9fc7822fa8c6e7 505ffd5bdce7d2f6aad3cc5bb5d11b83 f6aa17972822464ca46b798a047f87ff aa0dbaf2c5e6072961f95f51a0fa9ce4 b346e049a65ee6acf8c636f91ef5fd6d 863cad5929696ed1cb419fce7219cf43 bca6f60b400fe5e402f5810031db49dc 2fd7e7a8ccfb9b04baa85c1a2f7221b7 b3b88b1da788848e485af72093b30c75 70b2c04645fc3216bb7b07f63dfac199 e052e1c543647faaa2a2bfdad24d5d1a c480a24f2874b15da5c3e6c6df02acdd f0da9825e1c24d62e460d44abee731a6 8818c6cbb43faacc7494221c9b034167 786d2f068ad39f9dab3892aef0dafdc4 b5e682a8afa8532474bd487aba6731f0 2d71018cd308c7e3a86a9c1ef93bcf73 5be1d077f20c52309d84244823997084 521ea89a415572d50e540dc1b080d5e4 4c0b961187c6ebb6122e3eb7ac275dca 7c56afb7d78400fdd0959306a5480c86 eeb02ac88f787e9728d86d5aebd88881 625f93b455020073ef9fa2dec463a60a 1c5dd0238769eea63a3b7bd15e7358d6 d1832eece5e02132d6ed8310334847ef 092b14a619839a2e22efad3cdc9ad8e2 5e02f2b6e9e381946c67261340041d69 f83c60487c68bbc82ddf057730df3406 5821f5fadb810b59b0e715ee5eed3cab 42cf45548c4e9d9dad3fa59c25c22b97 b826b3a0f49fd80abcaa6cedfa0c201b 63ce4d63a3ce419c5e11ac2638c4e2b9 03df169818a9119d61824ebb990c8dfb 0654f7de3b986af803e1b798b36b244d f85cd900f4af6cc3771226033ca51b1e f8b8735a4024893e1d755e3d7dc0ea7f dabfa73537f0e9146f5208cc7d40757b 5e624a5da7a13f0cf41048f84107116f 66827970d2caf51c9ede074864e73f67 65462633f89cdd46b544529e5851a67f 740be4d4a3f692e337f9f65c231d5a6b 3e62fe439c9ca9bdc17c1aeb0c6a0900 fa2d4a0b23454ea142869f86bf0b3e4d a13db26220e6e2af56ee8962c56445df 14fc63ab3a1d1e4b770efcb170c8cbea 99b8dae907ab52411952543d34247d05 f94dae124be87f51e5d8d0fdd9a0e0a6 457f0aa102a1600d5f8623f62f12c517 e3d33b202741fa7718ecf1f6f0d65ee7 f44dadb29d726ac4ae1e1a843594eca8 4f75c7997892db9017348b6ef7862a3a 4c1337886cdff390a9b95d5b1bb887f9 391e6e15abb3d1c114d90e5ad96bf192 662fb87cd8fcac387e08d1456c9f41c1 31ac11a596ad7434c16749f500cb3873 10e5cac0b85914cc5a77b490769136d8 7b48d8286f78352899a8a5ffeb3d43ef 2e9801baed258b99f26c50d5decd071f da9befa42f3cfe46ec6e4b72a46d64ce 61ee8a8c8cf5bc06417ebf634d66ba69 02dda038db0c5ba0411b7dd487aa75a2 d78977bb11494c4b6ff45028a9565e5a a71f8503e477ceb9ed642d6fb62bf015 8f1dc5b00197bde18043fc804da17343 629a098425a967406a2760d4b49fcaa2 710a7dfe98e435927525ccb861e638b6 4fe9ff32d26f98f00088575f9a7edf11 d9ecffc53f3014dd01cd7535614cda56 13a2b667bafcb2b10428b68f513d36ed 057ac67bfb567cf1bf1644cde69e0a0c 107ffb7ab4e7cc384441000ad34963c4 a4d4c61ac2a71afba9ddcf13441a72cd 5368afd3afffd8f20483331b6d1ed7fd 057af612302dca51bb07a8fdb26c0569 dd6d744a1c131366df766586b963afc8 63841cd66f4338575e0c592642a4f763 fd40f1bfe2d8e735606fb2edd73c7792 aba3cf6fa4ea55dd9179ecc1254cb373 9b4554bb3f96522543f24af865719411 1b22ddb18f377389959834eda56e8fe8 735dc39bcdc66947370574ecdbf77aed 0f1b68cc888476d7cfc8334cd4f775f3 0c31158b1ae34c495d39695184d58ece 3ae15be315ad33cbc3bca938fa22efa0 e031e64f01b56c6545ea1c6255bda505 7ad1c807314c72a719bb05817ef9db06 3bdf38df8a66b94bd03890cb34eb970a d6b6cae149a78cc10099cd3dccd6de90 6a6ec1ce3096ad46a0d06f177a467885 8c42c156bbd81f60e75dfaadac2b3dc4 f853a80fd6b0a985af8cb90deea1f7c4 cb6745377fabf47cbb044fc2224b43f6 ffd3cec3c6747c20974bdc1861ac29f8 8c7d47d1f9bc792e4e9dc3e8405e4021 c1dfe7c4d30bdcdf3677d9d2a69ae01a 490213f40238ee6d5b3a719a1c282238 6f462665b920280b08825bd77f9282d8 f525e7600316ac382deb52b470ddb4a6 21b21b72e2bf192879074f0af530b693 5e1f3d33f2ea63e466a7a33c00ad77eb 8fa7fbea55b6305fed3d72c2260ec1cd d46d8619264890b3e33642e6dab08056 3ec3874d7b5cc86024255c8f91501aa0 060f2092392574d50c4d7f7ca59b395e 5c8b48cb052bd8a834445d71100ef270 92843f44160669fba5f86560ec420e48 3dd94775b284703cf51ededc81bac232 1bff4820c99f9bccd4aa8a46afe0922e 085e1977963e930f59d35beaeb9586d1 8ce760e3aef9b0abf4c9eee3c8bac668 ad25adff7cee609792e9a3d03e90de84 cc48b69b4af35df9cc4af9a08737ea2a f9a94532b51fb3a34cb8cd0d1097b1ab 02e2726cdbf863e7c4d526edde87b2f6 a26a827d0771b34596700527eb94c35f 27ae48aa17f3efed6bac3542e96b4f84 f3f9381d07f13c0de83aaf1e3d081533 e2bdaadd93da217eb5705da0fa7effb2 cf5650c804936bb72e1fc8ab5451de99 3a4a5a15787c547f74d73746ac9a8f9a 7fc1d699c0c43015bc582f4159f1a912 014f04640da77cfbc409b13342f059d4 517f1bd79124d44cd2ad78c6ca237228 30b66ec3f32b26ec7491705f4d599e94 849a4ce2dbbaafaf6ff273f77296724c c99bb378beef7c134eb3b0f586bafa7f 8dff1058f60ce5e5d5b6ebd21b89eb07 41b8c5c5bc3fbdb380c15b04fe5c08b0 c9ffba1e64e8976eb231e75c565b181e ae94d59e30899b683c32883b65b7e2b7 17b9e6582ee66ae0a108aafff8b946dc af02e9d8049f3c6343020dc39272bf66 629e9c4c37cc72e6dcecae16a223145d 54fca8fe12899ba5bd38b68ed2c59ce3 e11b417e057f2fdcb7e861e67af3a8c7 698a441c8cb43e8d26e89261784a84b4 72ec2cb5a9086ef5becd5f5798ee7324 860f3a2ec8cc8fac95fbbe677647bbfd f0e49388e1112d33eb4cd1089497a8f8 4e3e0f40fc89983fa625774abfe692f7 6b84f3a98e3f96d2e162452e359c650a b762721631c78a38ae4b2988c07e9230 afb9624b0e234ed66a42fd3e9db1bf39 86f1224f04ee099461286993ce4d26c1 c025e4f1e7e211c04a3ead6aa3d19375 561499b538cc7946462118c33af4f710 2d1a525cc243d236d4e1cf255ee4bc6f c59c5bb0751558cbc2ea3ffd3bf68eda 47708a4593f0fcb91d731a2bdd33c864 8743689f4305d1be024e3c8e473965e5 0dd87f5749c0ef2b18bcb4fc6a4808cf 802d8b6fa6202fe1a31fb208742f20d3 047a39ff3ab226520ac31a27aedccc80 8ff63805f4e6bfb1a159e1b8b005def2 14202e13140ab74a6e9037b7a2a638be 5f0c5191864fb7fe57b2e659e65519a5 8fd2843cf87cf9abe109b10d5bdc58f4 7ee07119eb8bfbf73633a9193b476b44 fd7531228fda925d87c138ccc9363a93 9027b4d9e136081fc27f6ab440ffbe9f c632c0ee3213533e088d3ab087ace24b 033c7540722d625f6fd5fff92e8c2a0b 1ba721348072f89ab0bad66013a27a12 15581c8eb92cdc86027a30e40b1adee8 e5cf5c72677e28764d472987a6eacb81 024211eea0cc5df20993c2b18cdc9cae a60fdeaa7aeaff7c75aa276ec6694440 86efd0f806c82596bc0099a434c32402 8a85eb930905ca01949930d27970c843 1e4d4699d4c89b9afbf20f35181ce192 1c214ba80ca2169a09322984cb993d0b 13d9b1ca6e749f088b7179d7c1cb32f8 260806492b46b59da06cffc061c8b361 54c697ae13daf4587b8cd96fc533d707 a5e9deb6755a2f2356c5f24214e6169e b1808c68fad3068e5d87e59d535a0106 e1f42400355718b75ffdef4ef2b4760c 4daecaeef7967511415e87f2fbf863c1 421756be4c7be654467d16b020225f5d 1663aca0b0b617f10c370145a24b2588 a76905cfde8aa63601c7cfb166c1cd8b f8bf4aaa51aed67575e461f6a69884f3 c12a6b10a090f5cf22be691cdee107f1 2debcecef84cfdf4d056db05e38624bb 27c0dd9d9841484e62a15e079c9d6599 da481c5238a73dcbf0e79f047c7f3f45 08482fb6ecb574dc3befa306a7b7dd4e 328f0fadf055af764cb6cfd24348abc4 064867fe908031b4b9bd68b4e051292a e2e37d60a7474cc5c9f573996261261f e968976b091b992d14f633570e29d072 c9e5a3fb0ae6a089bb40cb81f7dd0fd9 9b8234ef5f40f994d7c5155af5cc8d58 eba2b26d8d8f02c4470a5b18b44aa0bb 0727c88e72592b0e0a7cd36530d24525 d79a320159e6cb15734ee3747b6d53ad b67d0b47d9b7afee126a996b898cf612 c43b7becb54f97c3296165eac3962d54 db6f0600e116d3cf400934cd7d2ca768 8f56efa734e1ad6e8e056abda0a4e72f d6f66d7534681a9d12770bf797ecdab9 f0123430a2fd8f9b3c1495b4e8838bb1 28758260ee90e65070555c2507da19c2 cc84b8f524c524a9e989e037a9cd2ce7 bb590065e2758141bb95dd0cdce66f5c 11de618c00f047fe313689a32fc8a99f 5a42ed814eebebe27aa22e210c63cec5 ffbac449e95f293c1e3db093a29bd54f 1eda7420b5792709da1855681c3fbee1 3f2af87605d448d8e1a78e86765ad10f de404ceebe9073401a9f386b99c64f64 f91e396f9364547e47c51e4b4b0bf534 077da030a7e4aedb66c0db0ab14021f9 87d0e8084042d3dd857223617a27bb01 3c1d87b9f2e6aa92ab15fccec0935774 891812823a0f8bb6460993c50c660c6e a86f3cdfbbe56e07a0fe434839a861ea 72d01ff0412d84df79743b8ab296e2ab 99d40cb613e5b8ba04c2b451f629b1ac f9e9fdf67d0a952e1efe2e4a262148c2 2aee32d6ff24bb9f8f9044db71ccbdef 38d49cc9a6bc1be88eec7926b315385b 69b27aa8b7e978ebcb1a34d913a6c722 34c0434bbd540ce0ab037407ca97caaf 0bfe180d80b39a107cd4e0a17f013035 3ebd7a9bff4b3ad2a378c1b6085f0f5c 9b0cba4552e0ac051a5165052682a6d5 fdd36243531ef3779d5a53fa00595064 96e484cfe7856b9f2e64917adcaa59d4 e1bb39062ff99cd16e2f5df58cb2c0bd ca29b0af63963706614223d27c570f66 29c96e54b4c2f9afa98f9ac031d6a8e8 b675602b9e159cf213233f2c524ed60b f319bfbeadf0dad23414ce56fff90147 620eb402d3ada549d38611d868e75e74 711c14604a11b4ae4291b89e6c2ce775 71db3fef32b4895beb6cacc292b11aea b9e3c049524959f4e10075dd8656b848 e245a9efb270d9906f316dd93d2e47a4 1b8f809f5e4b2c6f067183cfd1e2405c 58fb270f679f6618670b8665f133b77f 593ddd7d6f26df994dd55f7bbf0f145e 79c451684dc8288c574a0dfe3ed54500 d79ff13ea650bc81b1a3cbbb97568c6e c2f9c96ca311a193056c8adeba9b9b94 a25a50f01c61a2bc43d4e28c9f98f1dc 0368ead219cbde412919e9e34f194a6f 4f92ceea74f57c1ce9fa0b7261432aaa 9fdfede7e1f03ceaefda0ca7f8b818c7 57016fc7c8414e9be5c9ea09b78cc6e1 d60557ed1fdbbeff398c0ae165f976f3 ffe337fc9b88f81546ee79b41890809c d19a1355c7b8335e333ce80169100e8a bd43244e403850551fce9e4840d81a55 57419d1bae68e6f2cb39121e0184ba9c 5bce9fa34f726b41f7d59e80d38477e6 fed5519ed073d802cbddc9eba911ca82 e1a6011368e11de22aa7bc6ff77bdd86 f67be743b410140593e53a1bbff403f0 5e3b915bbbf8db52b791c353d6150a97 db21c6c1ec12a1b04d290010cf11433e 61246b742c292cddd506b8225c4f19dd 927f11be0a7911191e3e78f0fa1cdad4 f2a80cbc92fd38d06cce0d4d6464c4e1 e81f8497d27102781bc5ba47196f6ae0 39f3ee3bb085c3ec8f8a07128e24f7f5 9e7df024e3845f1a8b1c971bed6c604a aa931c16adf5470c5cd8e9072a1f8f59 4736ed8816ee51f803ac3affcfb10d87 453c5e6d3da9fce37606d0890a987eed 024196a37171b093ce0c9def643fa2e1 e989a15d5e0f3e7323d2ac33dd9828fc 21b1fe543141de2032209ceeed10696f 3b6c30082bc726fcb877f99a6d732b28 77db5079ab6eb03f1ca1f36082119165 52955ac0ebb88f233be2d2662949d092 79cfe80ab9f66db506713c95b002c824 908b2aaa2a3395e464309b41e7cb9903 2fda26f91db6454a9946c635129a25e8 05b78688f450ef733d94a0d74406838c 233af4515460288f6758ca15a03526ce 09081be4a43cd5d49be57b4aad13a280 563bed5caf14b2a719abba851e6c8839 d031efe95e8007b5d160ecc99ee15d8f 812e30e6a0efdd0d36a706b673852ae1 12cad6c8d260858fb9567bdecf7a26ff a21265bef3b9ff36ef7db1b7fe73a342 e4cbe7e50f97ad6bec8a3e52240a63ea 76ac73aa3214fccf9d4a8bd0f9c9e652 263845fd789aae25c6a6f38d70308bb6 7fc9605efc862d3d0cefa6f105247785 4dde7d439f03e23b45296e6807e21fea a676cf30b6935a46e1dc2f2fc956a9a0 e2743ca4893568b6f4f9ce9dbbd23708 e7a4e9edb96ee943656c62ecc5cb4824 38f013d28fb0fe87eaecac0f7a6fe5d9 9300fa474670cd7ffd3690ef3efc9483 05e763897b0e4b8c0628585df025d9a0 b3f4f9a7cdba83563d8df3eefad23620 a98fa9e1c9f8b533dcc79b4bab36f6ec cd5a797e10233897cbecb1ae0066710a 849dda5de736298815cec05ce86f23d0 93e8ca6cb5463e02bfac73e8c7a7d313 e8d42ef6c05c24ed0b7dae7224692783 56f3ee1e532c411ceeb945c22daa3f53 543542a2645ffe37a1af202978de87b5 1edce770909276ad3869694f537b328a ebd3377ca1b1816aac12e8b91cb3688c 490a5a54ae51cef539e19030815a6937 9a970313668504b905d3d02982c3a3fd fe996cf5673ef099ec96f8c237f58839 5034bd54b712af4e91c1b5783bf27a6f 860023aa1acebf1f21105ca9ee286b23 b0441e9aef415ae8eed9ec7e0e842086 539e727ddfa276cef233184c79819a32 87a5e49a575df9c93a9acc8c9196af51 1e76b2d68d7465060bc463daeda89035 9f25668fba822e493341681641fb2c66 fdc84e4bf14a8a9954ab78f300221b9c 024305675e4fb4aa5de5c94650a3ffb2 166450019b9fbab98d55fa8061d57f6f 34d73276e0e8bc26b94c393483da7b57 1346181f562883ed2b46baae676bd5c0 e875f89e6acc10733ce57ba75ab2c662 d8ff23c8f9589901ee1008da1ccc6c14 40dd506a4843613229c67a4c7c769e01 397dd41d740ed43cacf5a4f34df168b5 298a2b6bbcfb2db54752e01eb8283a90 90a7dccd7e2abac81854e73f27aa19ba 920e3d93462a4d0480204bedd57f5e51 528b74316575a4faa7cd5515d01f88cc e344e15028c6e8bc817809602dbc4a4b c70803c933015862f562f811ecb86fcb 69e8879b7faaec8e33be7971b78111de 6aa8e33cc2c5d69acc5b812bf944d90d c53bffcc2565a837214e1be41fb0eea6 f1d07aa7e670130cb66703e582089fec c0beabf50ed7073a529a78ca4153c852 933c2d6e5bdd0383b57284155d15f425 911620cdfee176ddcdf2ef80646230c3 685c6c4c52d7941569703380292e45dc e109ed064f82987818e1accd800158e5 8af91637f3ee4f579e2b3c0a640b7c55 4b2d04cb70acf7cca676648dd3a6e039 06a2b0c4f24dbd35ccc9339633c010d1 1ede94479177eabbe98dd205d628bee7 dedbd60ec30c83932ce4e8374f13ed58 8d82e3186e600d6c682c5cf15e5c839e cf97be1c1a7b991f1b71080d9edd7bfd 4c10e8269c18a1f3610be6e2f76d7dba 745ee4e04e2a3a5905f3c0aea546e13f 2057b9b7062588e3dcdeb1e5de47e137 bd25317763f640ad69ccad890a1388ca d4b9fcb0309af986949f0de7df6a885d 522e0314cdbf3f6d070d5adec7d2cf54 410aeb95aafffb8cb7b87426e2818b17 94cd29fdb20783c8b3e894d9da9acf81 97fc72579569b645adfa01ebab0d9bb0 ffb1227d5b95713c55b5a57138636c25 541ac15fcb7bb7302d1140afd1cdc9a5 a62c1b04892533cd4cf7977bc92ec913 35034238e37b271c74bb6e9fa6e49b5f c72a45d6b8514e7b2cd43d7d65958700 878050084fb7b5d4c14552a594cb5ab3 6f3cebfbce4ffc50699deb7b8e994288 f337ad107c469ee18b62ae165c0555a3 0f0f3cbf1045dea1dfb0ac16946559c9 db8620965830653a7391aba6383051b7 9df2c39b3d0aa3060d6f08cfa400a31c ea42970f18d098b6fe99b34ca764f811 77675d47ea71e00c20b73aabf09c6dce f18ce31f2f8e6e8474b99796065f3227 878cb691f44a575861ec7f3035dec51b 48e7d3e70c0d84bc2bfbe2aaded2b4d9 07e77f1ac6b98fa78e62b81a89cac6c1 860fb9b1784f335f286752a88e949dd9 14727a363de69cf53e7fc8c98b3bfdbd ba427474e7bbf1e4edaa322909e210ad bf46a1a77f68cddecae2314afb56305a 0ea93a81b52e0e6d2eb0e4a672483028 12aa4fa4004119268445df73a6709315 2fce802468db9bd5ca8d2e9c6be0e339 2d81f36cae93c51f701e4092c741e92b e3c5898de3c04d17633ed71dbeb8dde0 48f80345cace6720192ed0766048acfe 2e3cecc4a679518031b77124ff96c968 b9b83341eb1565eea11cca81431305c9 530f00d9e801637501bf6c0361e8646c a3c030832107a2b62d24ed222b43deb2 9f4b3648ec9f03c94f48d4620db0b073 e18a24ac0485d3ba8be728a810de62fd a64f08f39b2768f0decbe7b60742d544 db4a6fbc0d369ec3df77ab70645c6862 efbb14f742c305320a41b1e4b0f704cd ce276e198b5ff804abc92ffcbbe80657 e8ec8f9f54cac8b4cb8d6ef903badac6 0d169a0f0657f38138cd88358a65b940 c2c22fe76e6e380bdaf88620f9c429cb fbf73851a444a596bed514bf5ac8669b 36654a8555ea460bed2f98761a7afb45 2b3058fd2eb760a2d8f3e0631e351587 79e028891e40a5f9d51b39cee18bb478 1403b31ed449488972f7de03e5e03cc3 5d00abf939f0f2edf597d477d5754677 85133185a8d79f0c34142aa0c68036d8 4d01fdae6b55652fc182d094de71a116 6d920215f99d00c035f93b8f1ccde2f6 aebd5174accb874e1c7dc9cad6148d7b 71a4edfc6919bd08cde7265cd0440369 8ab28423641248d4c903b9d4815b66fe 2489359426b9332f4c73e27c665bb33c c264a6d9e9644e89a61d81b9f76ed8ee 61516e7c8e05c947d4beefe1e05308bd 505711f1f07b213bb59d9d680968b41b 049e359c6ab96a5eac6d4998cdb0ad25 76febf44d02d2e2402e897e2bc544bc8 93eae9011c63a7acf21182eea1cdbfd3 24decc9b117cf4cc160a4ba105ab47d4 97b75443a56bb69936ff38482afefc2d a4cf7afaaf966961ee2b87d56158a441 235e25efad38a07b8b903f846507f67f d95798d5f59ca96b4161265cced55e42 18f57134cad31e5f082ff3ee4d281ae7 23bdb6bd1ba9bead82264239d9fc9b68 c340bb3cbadcc3f9dd39cc76aa0c2d9e 3a53f48288ef4189633ccf4ea60386c5 04b759443976483f3bfe51449dce2e59 abd527399d80b4263f150dac17cd39de 3ef884610ead7371a7e63f6d24d57359 d5cdb6335fb8079b833d41daa724488a b324d7feb762d74152a1c54880198ec8 b006eadedc455c60c650b9da7fbdfd41 2c77d9132e73c95e0c07fa36a4fc745c 8eb8850d8c8aee255bd06ac5cb80e99b dadc30fe521b44e96106783358b8406c bf62d8c7c7710d2409790f33b2007f1b ab39fc16e2579aa0a316ef3ea5a1b79d 2604ae8ff28fd223dae5e00c4a23c31e 14510bf553860e1af90fcc2c4970f31b d66a8eda6e02d7890e8dc2baa8f151b8 f2a77f23b7f749e44a7171d10088809d a1d4f4f6e8c61389caa5df29425d4ab7 b9bb8b0be5f5204e56d8adb73e56f30e 47638dc82e0a0c5664e658d7cc8ac961 18017c4365c99db1dee3bf613bf6bab6 6dda36e6ea708f260371b65824e9db4c 8d126d703a4a04ef9905199647944644 6929fb0f01451b9ebfdf0601b5a0f95b 596331dedf83736500268eb4266af5ee 6cc4ee8d45278e15d77c9815ccc60b91 df6f964212a763e6fabd80bdd79c3b34 d1923efecdb0f44ab468c9e7df0f287e e9beb0c88b9c64736cbb1e245ef97a47 8c7f9e6126418cd9f856b2d1bb552417 566592ba5825548e027c7731853b3908 518c3623cd9a82d5dbb66a0647630c71 8e38d5570ff1bf8e0e3358d6a1ad0060 1f98bac6ba652bb60f324d0e5a2705b9 5539a4ae88c8aca43b4b09f575442a10 e5ff8d47774aa9d634cd145e13ad2fdf 580246603e69fe5c30bdd4043a8c86b0 f523fdcf676da7a347d7e98f5edb9ad9 afdc47c076f855dc9c42d2a78b61b1ca 312eb72af460efa332ef88b9a1fd0bd0 ab44b9d518c8ef5972ae0b6c9069d9ba f8a72a50a1c885f7099641d0d28e77f1 0d8a07b1a82279effd9da0b726a2e366 0a8540dcbc069c20248b937d8d0c744d d0ecdd87d35ca5f598e826221a7517b2 094d9b49e552491ade908066341729bd e422259af08eb9fed67ed04ab1a14ef7 49878358524ba67ffb095094eacc6000 e4e8ad88c6fd660f947449d8f25be543 cd97b7e6e6813fc7ee5c0c491cc42aba e6d88a65a3ea90d1d74aa377355d181d 5cc864157ca716bd7331d9d19e91f33f 6769e5e077581dfa9ccfa18df7e43117 77f9337cd82dd6edc35252022f5b52d0 bf7fbaeeab81d6b505ba92e4fcaa1c10 4f47a4c0c5182344e10d240b3ab36ca8 a84979b11257718ac7c7d656436502c0 813dee1a9eeda04282447a6bc14a8372 77c7be676a57e3f585f20f11a2e269ad 5f0f8032c1ef5d238204091f9abea460 e5b759ea2c4cb5c4bc1e4e30a6a567d5 6dad6bcceb36c85c9622683b6b157feb 6caafd743e7abbf41ba78463e000fe1b d0ae747cdcf1ad621fd5e0c3de76e967 bb02c82dcf22d5e07719eed06358769c 8cfefd5d8edf49b8a36d4718a985421f cb763464532136d02020f0587d211756 f79bd26813fc90b478548514508ce84b 16805484493baee8ec85958f8b5cb101 e9e0b09f2b2d6b8ebbd10d521c803903 66c71d5455dd8f6db7229698f7238a42 639ff3bbaf7ad8be303270fff2d08681 29666804def5cffa5aa4c829054980b2 33c95433519cd4bc0a2fb6620233df1f 9fbb3622d6c01df0d6a201956d5823f4 c73d57b3b83dd9854d28bdc68258338b fc642f48337b1112558033aa494a4674 55947fadafae72c27cc83a6dd2b36cd3 b5169e0dd8452c1a609c0ef5bca19c10 0f01d75ed2793fb380f8bc5938e762bb 15fcc3186bd662f6a29ee0c6c7c266f1 626154b26b5016465d9071654c67419d 1ee7ea66f9b189874537fea4f9e2ce4f b741778d25f14fc6d2a5a40465314563 ef0f00276f78820315e89c569b98e1a8 9a0bdb58ba724e0ef1fb8f34825c5da5 cbe4ac2218a0d1a8e9a9b771b6208939 6c364e05ae63ed14990ef9f09a11153f 6d75f56285b51a1f023432a88bbcba41 a7f955a866967b91b652e1fb72b26a43 a389f8f526c86d1248a9dcee7da903cd 023c27b57ed677acf7bbb256e9fedf0b c2897990c853ad8ba6eadd8a57be1573 add42acea6c9b83e4c448c0ee8cfc10d 326a9101e2f92061be7acd08f4b3bf7a 77e58c1d3cf7d760f3ba9e9b7855d1c4 35edd741285d1ef6dfa8fd54ff5c90ae 443f5dec447838e3e33ceed34f5f5749 581de37c79d9e2dfb5a9f2f6ceb15856 2b2807aedd40db4b9327170f2481b913 7ce684b338994401b851e60fcb69e550 e415badec65fc4e67cebedaad9ca0401 d82284010a0261db2ce54e630038be42 550256652387640d473da97cec0e3658 326051aeb08af1ff5de8c04d64d71373 0cb95b3939291e0269e8d6fba1cd0c6d ae06c811352628fc7f092cb828a35479 25594b5728b1fc91679e96c95a6a3f15 c37e8a6c22ec93e2fcd0cf5740b0c324 635127cb4431a7f99f120092312ab56a ab525d0000b7c466e4c2a032e856f232 19e291124654b7d76125cb912bf7a4cd 011fa9d9349eaa20539f6549ac33ecaf 81f40fcb78b365e8cd983c6fba2ddf54 12c351347b8c1b3a36fad8ef6c45afe6 deb3d46c10560da5bb73fbea84da8f3b 58ed7d600a10a0ba0a7d3452bdeb6722 01b2b6c84f9e884b51c15106a7a18cae 5dc1e331e2c3a3539ae6756dae017efd bbd58b2cdd05c820c23e0254dd89ad03 7e114241f67e72132022d2ef6e16a144 af4f8cd78127052f84300d9c660efae0 aa5308a7ccb497bc7cd2a4d5184d0360 8f5cd7af85899ce8c698fc99a9d6d808 61d9642d4ad0f554ac2bb94be291c4e9 6348804f64ae3080bd6f9b5422eaf983 3dd5c7c1d99fcc93462703b891b00e8f d66facc5f17edbbc8e648ab2fc95b96e c6e11cf3643e6057d7dd9a3c2deb7b9a 96e4a3aaf83a3b2218008ecbce201519 2b2410a81d4ae4b7421548a3ce58d4d9 74738345bbab6707244f7f750f31a403 4bc3338e1452c78407e5a3bb0eebdae9 53c917dc07cd8102dd94237850012ba6 30a818e830a29704cf7b8bc78ca8db55 74c33dd279f50c370a2c65fea805f5dc c347adb402b490e0b97d829840b97281 358bc8266a0294ea268c73c1f8972658 25d2db2ea82cd72dbf826ba15378817c b77cc113ad0bc11651e652720890d9af 2d466be26cdb5d516f48384fcd6a8742 35f9aad73dedd6de0c5ebd8a55f8265b 7f62618bab4e0607086f11636814507b 97d08188a20ebfecaca6e035b847bf45 6d712cc4d088be1423b4ede6fb2c3f8a 9025773048d5258a370f0152afc2ace3 71a102044c61e325dd5a2c73aaf580d5 0847230ddbd86811160dcc5960332623 4315e9cf22e5b55003a36c6b70e35c1e 52a685f6a23101e2d6e8fd78fffe42ab 7ab3db498e51172fc1404bd86612aa7c 2d3f9d43e0d22d6eff7a3940bc9daf7e f7042472e369aecdcac883cc2c25a584 27b630854fbd8d655f32f566e3cf5b75 4bc5504d0f0adeda75e7b679b3f0781a fa8e6bca25c2fad530652cd976806aff 846ea2938ae3d5665d178f56da11ea6d 4cb3b9e380fd312a3a08f9ff9d00ba81 1157a5ce62acb4f4e0eba48cdb49a155 982178fbf1f5b50ff21cdedcf68d571b 88e4ffa1352cdaf908da0df0739b7233 92c7ccc3ac205631700fc89dd6145659 9447e45b9d735249bb726aecfc8bf8d8 bb27211674043b8efa98ef58b11e8d4b cac9a4101c0920785b28c1b7dc06dfc9 d2ac71515876a8ad7183a54e7b1d86a9 082fa06ae6cf7fe6b7a57260260f5b3c 5d3f3578ae9b3c5c757ffc6bb5398722 c847037e9bf0f97761a27f28fc5498c6 312f5034d369a234174e65ab30e8e381 5cb04b582cc2a7d80203a7b13f2f6998 b3aacca1478438abaee53ee6db210b6e 41c37d075cd958061dd4ca14dcf56dbc 2c6b6d33a1dc9705c5b29729ebc36d35 2e1b412cf6bc03084ae6f080e7aafcc7 3d6afc52836515c35772dedb6fa5ed13 38ac2a36dbb39a52a2a3d9b4f879a11c 6a17ca12bbc31608e416531cc977c430 e3762e05b31f7211e43ac1586596402a c48aac7f406a3b09c2a93328da9c450a de583776f26052fad1ac5d296efc7a5c 982361a6081bc482ea915fe64afc3354 0692ec61f89f69c20e638de50504de11 7adf58f4848ecd8fe10e9449d0ffd858 47d67bfd687d99648704579dcca89a17 8e37061b69c5cd49e83f519f89e6d80a 099da32ba5d6ffe5494c0cc21c4906f9 2d03a43c640f8d61a46aeecfbd03bce0 e370bf57c3a8199137439fd83638c85a 604b178cf6223e76d535c5026def282c c4447499b996e96d1e2b106c335f0c2f e7d48e8f60da68b46b630834a8337eba 85025630993cde789bd96099a328097e 26fb33911de7f578390fda2dcec7a411 6dd39fd78dcf97bd4567deab8ef4760f 975ced94f66772b2c990ef48e3b9ac33 2b3df7441a022dc0d1171a9589d7eb82 8d252e89b53b5916f5deb5d464b69032 ec3766a2dc1b5f98ef2e237ab3d85c1f 91eb0305090fc955fc98fea3243624df e730b2c58225288b3ebfadb772426724 deb9d98e0008fc28e495d9543f73c6dc 338d087e23cf2298a2213c9d6ee273bc 44852dae1473d5b8368a45b888c47825 bd9c7338672d1f5864e3145418d89026 c1215db76528c595bae2a29895665366 a61bb2fc6342bace0b9a1affcf471587 6d4e31072661c141a52e547b2bcf362d 9f86ab04cc9dd5db215c51e522153954 a5cbbd8189e02d287174d0608b18ec11 c690b28d2640e8a446baf4b7289851b0 b67716dbc1149122406fb5ecc772661d eb3f98dbb283f1f1914bb39cb165e45f 6be5c0ddc675cd866ae2ab1f7c6f949a 3225ea13190e8bd226ba630e845eeaaa 745d5fe6ecdc3e4634bb7899544748ac f41550fda09aae34306599d6773301a9 34382690732027f71a9b685e29625a82 523826e8e14b1719fe62114eaafd6f1d 5e95856de4f589a8d587984d9932b686 120f9c2b57391ab0a726844a3401ca20 b6e2c4f54f107bf8ad3a3843a78a00db dfbdc365537032f52eaba8154ad3c3c9 7ab49585cbd426097d7bfcfc99fa5642 f027588de9439c7fa80ba6e2b0d01927 ab74047e629526a9d3ec8217de576308 0fba3947688e2e8ee27377e5b73747d8 1f3439fcae2895c16b01ca1a2371f1d8 7054faea9b58bc8405250e749dda3f5d 6580c845cd140b1ca9f1c988784e53c0 2a1a4ac8e2793cdbfe9b078ea0402d5e a0e72deac7178912d910f40f8e3f0995 e2d6ef87b128ea2e35bb48e14e208e29 51c810278df94159c40205f0d1d92cc8 ac415bd678efb55cf451276e5aacb4e2 d1da8eca3f9125092433f5cdad59fd63 3bcd99e2e2db7ba8f2c989488a56c048 fcaecb4c68d8d59b091458c3caff94a1 65ca63744147ab302e0b9049962a3274 a80f253ca47675ddcd0d4a0e25799d61 3716bde447d07b31f819def12233d483 e801059cb9051457ad95cf7a8436cd6f ed813e01d5ec2efca50f1d88aadbc570 b9d3cccb2785fe708816d11af4b147df 93da36f54abe8b420f89483923f10585 6003d0b19f31a75aef9085947030f0fc d9b2b90ff5c49ab07d21d1bca0347ee4 b12a799ca36054110bc7952209152e7f 0e23d1950a70c7bcedb7edf02ff829bf f2f4c791da43fd9abd3512095efad079 4e70222a18171b1e4acb339986971a58 20493caf12ae1a8b8a9b2cc342644f72 ea4bcbcb5c62ae6ce8509a5fbe43f384 3ccf8a6fb545ee69f43c06cf3c5d4586 fa35eb01ef6b4ac4e065bd08d14fee6c b59282a1b421d00d4da2a6a738e73c5b 6a53fedfbec88c3705474a341683657e b49e37001de6a2ba7a059474ff142229 b9e9facec13a5222db7e20dd01e3e0f1 cfbcc7c0877de78fa72b40eb4617f267 17097fe0b8667e590ca36c13cf5bb63e ada935ee00f6a36bd308ee41e618d350 6dacc199155dc320a4b994b0baf67030 9a952edb20e17480eece3c17298ff16e 3d334603cae0f85202ca5dc02b63f9bf ca19d828331d2cef444c1312fc68d5ff e819b70efe095e79a09b87e2c8b0babc 50d2faa28c4fa76a0fe2b5f15162af81 3ad5d2c8bc863bf5d52475d00c2b2433 62acc0dbb727005c4ca4c2a572d11e6e 3d8d8fc759d84338703d652fcf10fd85 addc58fefa62c381fa088562e5a9516a 49d4820e03cf3b021bec4e539d209d7c b2bbca5b53e32ed9f75b18ff50b3bf6c 2452ac599010339f9829d75f55193405 bc4fdfb5cb081f02924e8afcd6addb0a 5f5f1e6796f51c6eb4b32e8e64d56a1e 5230774f5a6bfd47c2aabd85c27cd0ac 6b3b1f6295dfedb2fa4571510e035e48 37f2824dc826fe92f729c6ce344bca98 d7255c59bd5e9502980923fa03c21f4b e22a0351f5356de0a717d85ad95fe41e 5898087bc415caf3fadd7b707d079b17 8946f247af599ca526a6f6336ccf7eb9 0073268a1414e424d2a0c35983b784d3 97f61ba6b5ef0d9b91a7dd3bcde59e28 8afbfdf776ec99a2f92febc7f3576430 6075c1597f27798c97490712c3240671 917b69e62d82ca550635867e50c08c3f 877502341fba124c629f6da48af631e7 b026eca4b0f82222201343fc566fb4b3 737bf6c44f5ef17862f8859c64fa0862 3fb2518f8270e8738c7c4dbc33af3a13 2a3fdf8e9c4a2d6fe881762e2e934997 a12b15fc44798d9c9bc32da6c2088b67 83cd19ae5b37a2f157283a1a729abb7b 895b6636ef0044c8cc9972d4b7d6aac1 bcf3316c331467f402951901c11542fe 28640583d2491cbcb47e29c97a9a3689 068cf381935f15b0cca63f5920c679d9 338a143c9da4cb938bc0077b0a7d5167 a53cb7e759b272bdbbdf03b6018dc747 f3bff00b21e267549a681ba821aa9c61 9dcb6078bb89c6e0c7c02863686fd454 b1aefc796847eb645f50f0f583dca027 9962be2691740bdea68e03d35e27af09 829f41a265fb43858573dbd7805396c1 35e41552f62e72d7f23dcbd99afba160 9adf98ed4d1d690789efecdfa9a5c6ff b571c561b15c1f5fa4108af426d1dd86 21c2cf885eedc6445084d7ee78c66655 fb68907323f9c56be358279dd234738d 00819e471a016f3e71d2380ba34d365e 7dade2a1d16497b723c97e2cbb20cc75 acadadb4b35da23e9b21579962edc616 0432103284a5fc350c1b7631a887bf91 5d51cedae294cd5a28f7f7a40515fb73 2e198146c1ad48eff0432958b327a5b9 5566e9e255883f799886a48258270b5d 51d95252052b1cb540987679cc22b993 8207828b5e4d25f676c94622a336960a e9352683b11babca2f28b3b4cd3756ff a29248bd7085961b4f46be97714d8216 aa9c48fbf45ce8b47f4f175d92edce2b 942b737974eb2859ce9d413a4092cc8b 2943a88b5e15f517b57c442328f1311f b21d0a1bfd3c6d1b1591abffb9646fb8 149d08b9d4f447dff0a8ac57329431d6 cfb7a4fd48986887f048570eaa3eae1f 0bad74111cc82672ad82b359a1781e61 ccaddcd933ca0232541bf0c29d33ca62 d4dee29c4fe025be6a99600cc0989313 ce9fd3a2401b0f79d64dff687ba2a54a 28d3ea983bd34bef25c99e3b1a6f01fa d66caee877b4f73e3c0d4e8f761fa7c0 2d673990b3c43fa80bab74c2d5faa7ca a1c1b432624be8a1cdb32f4f541590d6 a30d5fc7af88bf8caa1ada7c1c2efdff 807daa70cf4329481f79bf0feec05894 1c1d292dd93370cdeb785cf9eb9e6a3a edb7b846d66c35f24d91e66534010658 861d04b4f62a3db920730a49073316a6 8501db166bd1a41ccb04cc96e5626665 567e5a7c9bf907ee9b4dd5c10b6868ce 74da99579734ba1f6dfed74eb589a67a 2e8377efcdc468c75a6c213ba37b312d d9924679e64221de8be75b4835e6571a e556fe3efc9cce7945877c9ad604b5a1 f0a971978e57d056299d79db170dec63 8d8544be98b98ca983b996b1639e2c8c 7f9e5a6871ab9c8c21fdb92171ef6422 fb2bf4c54617e7126b9772fe36a59156 8c330bb22d02067bb701863cb6d47e4f 06705b61928714c069d81ec1e3516cd7 3aa94818d64c63114de92e2748fa793c a9079a23141b270c78f6ab78fce6cf3e 39fa8b4c7826dacf1f86c0538adf4333 94d1182918be1c01e9ff0ec5040f2e01 67e3330590911f359fd8c01b526cb0b6 b47fc43ae544304b553b6fdc772fc2b1 5315a8340604b9b8aa8c7eee6f1a77db 51fa77fc7ba8d07fe3cba59ce9db57ac 85b75250e26171618e10d7064249a37b 803cdedd0da6e0cdbed02d4965f13426 17a38261492ff2af03bffcec7f527d14 550c5ba76d8add6eb794b34148020181 c38b87dd84e51d77a5e47da99b55d1a1 78d80e4fff3eefa202a5473de2fdf9d3 f0085499fe8ed18abe091be34aa10f88 67a1dda30237de16901cbaa381bb30a0 f7d4dd2f40ae4b43cb81ea5d1cb9bc6d 6ab8ef548e8a05ad52e8133f8a671d7d cea9423b6a96742e240856f3b253520a 5072125d0dbff4ffbe38972f46c29a4e cd1a0f7d55b2d3e6455091c2aa7b74a0 bc3e3fedf3fa40a59efa3fcbaef2ea8d 118edb082d85dcf2e2d895ca879903a3 0343c4cdaca8c96e32b7cbd9936539aa 311074bed7247eca09effacb78eacfa3 b56e4aa3afbd7f3499b9986992666d56 7d95c39bee72f1fa321d12bb98ab0003 6d0218f2abcdc7891e130e9dfdb76a10 b59f8f99d4f6a82ac780606414ecc778 04c0bc66c84336fd8b3e2e831ea564a2 f8bcb9be3f080bae9630416fb086b494 f0ce0ada00901e075654d8e4bdaf3e53 9a506969e387a72ec2a0df375c31ffff 037cab057096f762de4b04dee026e017 00a98283a97ce3ffbe1519566f2d8fff b22fa72b28f305d3b70dbc2d7a0a5c91 231346a822c03b02f8c58bedb474eaec a3c43150c12feb09e024595b77c1adbb 0e260d5aa9983f5522c7fc1a35ebb7c2 03d0d312277899bb6dc0b1c12c07e4da a5953806edcb1909be83fefa38599898 1081b9c1e927f210c1608b3259ad5f2f 199eee213bcd6535840e10c2b01df714 316e8cb98e3f9562ff1fb068375db429 3c39e8a56b90f07e0845f84e658d4093 a1e8c933583abb8082c11e94550b6eb3 a22b78f410f443ba350fe4491f719ff6 6e6b2cd0540ed98f3c84f4fa55182e03 997ec5d8b449e87395614b5392886a13 a579ae3a0423786bd1847df301abf94a 90675965af2794b45b3f2719a0dc354d f096f5bf3148ab605bf402971a3914e3 47089116fb5e9686409231c28e430c1d 12014f8b544905bbf8b8756950e6a584 8eafb79b3ca82364045c541f8c8cc653 4da6d2ab2a889efd44d7a3ec5cb79260 000d96209e09998445db80ba17cc40da 48636b1d48e05d83b4edd1c0049b5f7f 757d27f31a411bf8f6dc6eff3321b71a c276a3fcc342cffb8053a6233c690fd7 a85a3514e78f0478795304970558bedd 2a4f2ee8d3bfa0f517abde2742c24454 eaf27291ba0a0859c04e31bc136909bf 103d52e4490e90a9800cb2e89a3c15bb 69c4232b7385c75bf13fade9740df01e 5a5f27ca97a014c0a5803b088ae1f23b 45a4caa0fbbb28047a508b9116e69cde 041f6d2cd38b65c485e6855a6994bbd7 f050f0738e68ec6cea0b2c714a28ed16 7954a0386629a423da30200fd0d1b188 9c7ea8ac66a092562f2949ac4c997ea1 34bfd43c92d437ee7b96dc5699ded6de e2f463f9048376a30ab244a3a7b9abc3 5caa47d371e5a8b98cfb677fa65c8a33 de4e915f18a7413b7e0a45d7d8d96edd c2c2b0241d5731f156deb5eadefbd683 3fbd7a6bd26283cb1d62cb96d14119bf 2c7d81f0bdcae3e633647b52a724dc96 085cc11b1d60d594111347d59ad181f7 16540400f58a35359791d20934ede691 0a3056f5815bf4198660eedda656ad20 d8bbeff861d9c4da78d590ea11aaaca9 a6c1736435edc260cbe6aacd5c427c72 95ec2e47551e5d459bedd6c9f8911e44 33743cd3e0fce1353935544f1b78378a 5ebe122682e48a4f7126d5e6f691fcaa bbfdde7ea23095bfe0efac90e9e57c8b 4117b883df89fe7d0feb5439f20e06e1 4f44ab5354995ca5b79a21cbcc965cc6 c5f3fafa2be6ac638e9638a677bd4ac2 9e324e9fb72310f98d342a438ab50a8b 8d83afc812b1499f4500af729e3c8554 bb32976bd1b8f1efa942f7551655c155 87bde1efb38f7ec1cee160f4014df159 b148a4b84dfd85f3afa33111b08ab38b 589533b2a860bd22bac0dd30544ad1e4 fd5e17aaa4fb6718f71a70b8963892fd 53290adee747ce6191196127b4d209ef 9b5475f20c4eaec21566d535ecde5c12 9be25fa9cab56fe412882016c155612a e672d77c331967698bdfba5309ebdcab 948af1d95f02c585831d495fdd449cd2 525c84842518f0decb14d40cb007f22b d66b50e406f69fe2ec37960fc52b66dd 40ec07e7ffa214c8448be6c5867574d7 cf6739b408e12854e8b947e23efb7719 5422f56a193c276a01033a375d35aca8 9de9920c1e5759924c7c671a36712c02 a92e520102ce676f02ef0671433af34b be427dfbd34a76ee3f4140551d069af5 837e85ae4161285dd73edeb948ae1a4f 6e737d8bb9fc6620ea336fab68b6b268 3c8d99cbf9b17a57a89eafb4d8f7c069 766830fa4bcaf13db06fbbea1c6c9d74 4cab13c888911030dd14fa8085b2ae7f d8ec0e4211ab2dc3b7993edfcb0722f9 4b6150c853be50923063a344e3c969cd 80e7c38df7baba5b81054badf26400a1 cff824634fd902f2b8e656c9f193e984 9a97839ca6f8036162fdb427375b3af9 551945bcbb7d68a1f27476963d442e56 5f65f806626a1bbe065fe6b6c7913a37 e5bc0343c19d4227062ab60edb8bcc64 96523d2a53447702da078c7130170724 a3096e40df60061b8407212bc9a834fc 5bfa27ccc693bf80bd3357dccfc4babc 5fd051d2d788d5d4782e3ad2da9cf88a f309936ca7a812ca8c13c26bc00ffd60 c2441a6a96065be69644f4737a635238 baa0cc52d63b76d060baf3304524a7a7 7fc0aeeedf21ab9bc092a45e334f38ae 4219e3ea735ee513e40629bd785d8bd3 6f5a89828c1f816c87dc1fa19f21167e 2291d12eb0197de208cf384ab2ce56c8 c619f65cc4533cc9f7906b6995d4e253 ee80b8761550c1230ab49a671187004b d60ce7871ad0fa1ecbcc3f0fdd63c88c 92f36b53d95f607c16b531f880323ad2 a42d4d9884247ae175d064f646ef1b3d c31f796fdd78fd57a07c778511cd65f7 0cf1fe4eae8770c61e895634d84ab079 2ac09e1e4ed56f54a60cea8e7ef6240d 7c141f4701e129745074428fa768b8f7 f0c70a3e1b447162079f9874bc1c120d 59b14668fb3652d7d2bacb1edf0a00b0 38d5d6837e579e60ba28423cfd7855fe d012c945ee7e245d84ecdb0e63d8a05a 0efe4c14b3d0581e82171dbedbf355b5 280e51dbae25402a860e14191dc6e549 ef4d361c515ceaf2e127054848cc463c 7327d8aeb1df470590e106ff7b7aa029 0b90aa714e4e4cc9f075a3d1890f11b0 ff6a48d8a1788c7db72867d3bcf5a9c8 4e9c597effbd6e32d0ce55fafc08fbfc 5f95bd620133e37b3515c1e2c97048c6 a0e5b9436e6f9a58028923db5e04f86f b45ea42e4410d006eebb559d1497387b 3a067e35b82c1c144e289700e3968e11 a8589c46f5db0e314ea10f6f5c5072ad 1b83b1f16d1e5112b27fcf3bef61aaad ebe298f6bafa109ed3bdf993d2de32b5 4ad156d3f1b4ee92ecc277299cec8cf6 061decd6e593d596eeb1152b1db6d4f0 a05a6a004e67838baa7f94373cc1b6e7 0e278ad2cf5136d075f4499372337b93 92d074284b9370de7c7aa1cf859ebcff f2e61e7502857844551859605b5015e3 59410b0b435043ea93243d8c62f34fcf 87f4f845a905298077624670d39a3330 3c8852758389e51abaa6789b095d3c4c 096195ea2c28523c547a0128b1675f53 3cf29f7f5209fa6c55b50318646aa373 4690063c889832ffcbf02538aa82ba78 cb77dcb87a4f9e985a87022aba507047 4cdad098388870dabdf52c4d3a5f3a57 b32b70d386680cfff89920ff177585f7 7c80ac1db76b057598f3a96635cb7491 5524edf08ed9a49b14a4eb976f452e43 d8488f0c32ebf9b4555c84f45d4b3b64 aab7339f319d09e505eacd4d00f16854 527208ceb1a55aa90dea3a24e20dbbbf e4c3aa2a92720e36c348162ea62316f5 4fcc9396c2e63ab012d8221336d2eb4f dd3f53d7dd47717190dd99df8e91ce51 f695479f55e17cb2d67ed43bf3a16333 7fbda01bff9b071c1b73a91fa53dc37f 5be5ce32bd6c45a930c6a4c728e8f0cd 3d0105aa51c3a03fd4c9c1cd649a7fc1 c2d0443f3e9a83c574ad2b6833c16895 a7b2f6f849051c359a65ffe04a2fe3b5 e4e68cac73d924af094e8eb2ccc636ef f4c98e1f73b30b084879dea3438a47d5 6ecc2cbfa06b31b8f6f0a4b387948afc 596ccd9eb5dca165ecdeed2aace8945c 46af6f82fe0394be2f870a4f05decb6f 52bee8192569035a608241527a4cca72 9f790970d8e024642ecf8aa6c4ee2a39 c16cdb002ef7fbd0763a181717341851 aca1d7e32e29781a3ce8c881e41b5581 a55205bc4e33dbfbf2b7213341509605 1d252543941fb3606f4d59ec7e628639 9fdf0847c8e739b669e3aa54d876be37 7887ce02d0a06e4895ad8190855f856a 1af26a057d6414fb7074d3f983d0eecd 88938b4022cce23b4bcc8d615e0d4706 f7163b5eb5730686566bc69a912a74c4 6ef19167391e9be176ae43b12b669ef8 e23c0c26d59bef7661f8dfb14ca1f29b 435d31fc2457ab4ebfcd19195a761165 f5f5461c180dc1d3101b588e704c3d78 b50896c5676e996b468c6a17aa79761b 9cf73260e5900aa1cc7330da4cd9d39a ddca77b974d6e2ef05783e235026fc90 b38915758e2d3836fb79ca2cb7c84201 60c23a34577b9f3c08d63304da38b6d1 e4fc7d960d5188ee46fa679644e94f8c d75d250cc38c7573a42423a439a17ada da6ea387a8e0db2c5dc21e2245091e24 e43f604f040d09724dc11e24035ef4fb 960bd2470b76898506cb42996f10749c fa3b6934fec99df9b90d42343b3c5d75 d2cb684e2b2db07e8e37f7349e42dbfd a8cb215833df13783a15eb46d57532dc 1abd5ade614592d5d151fb760a59cd74 83a76dbd6953ed02abe22e247ac211b6 dcb266da26e8df26bc6d6b08d2f0dba4 5f1eef6b2c0016f3f046bb295d7f4a8a af8b78574ca02ccb1ba6431e71cf0e8a de2da0d8adacad2705e84644a5bb230d cfcdbdd01f2358d1e27effe42b7cc1e1 3f110d374abcb1b12d91d4c35761bc62 0549bf2a6cc6bb55181b0a21a8e1ca7f 25c11b23c0de5e5c67d20d9c90783e36 e21f43cc5e9ebd25fa37d71f6f9e6cf5 343647f1e143e60a69e886df1b187d3e 8bda10663f611c5d5a341d9bc423b318 7b4095ff8cb1a855e615ab07265f3d5c 9c42dcf7cc4917c46dcaa16bccc59893 81405763a3c3ab033ddd2e81f66c1665 bb93f092ffc186bfcdb8b79e52e7fddb 49568849b5df7fe7faf5cdce08fd5d6d 83c56f6e63be24f262c01f52914e85ec 323c62f42b841f409f55765aa47e8d17 99a8b902f68c4586be38b9c6e61e5cda 7a3e126cf7b121575a9e816313fc69ad 190f16e7065f9cb41bd97eed81db2ec1 f1700bb74d166d8fa7d3f1cd906670b7 569fac26dfd3bd9bc5bdb93a92ffe930 e1983a3bfb935a0ac96b2b2bb51e68db 77d4025a30d63519e20392c283490112 c9c2daf4f8e1f2c984636b5bc3810f1a 3d081799f8eabae1b272770e250f5701 087754a7c5b581a6862dec22325ee7c3 bd4ed4fa8fc8b4d5a89946b59f8e92e8 225024b45a9492cdb817e139c0daee1e c56b39612cd6b51006fee46444bea177 dd1f7b9c0cd5e5998cfdd3d00d81676b 31ead0d34b0bc29c81f92d62c1cda6f3 d01f501dfc268880be04fc73a1d2b73b 84ac2847f1ff41d3212e1360994cc42e 3280623baf7634f640c04eec78468a13 f501831f2c71f0dbb4ad1185fb28c127 c3c7ba6512f8e1cd81ce3c841ee0e03e 79e77c00ea4f86ec678877d18b8453f2 63e023f45a195f00aab86a587fb6dd6c 21115353c51fb8704dd2ae2ff349e474 0273994f9b1584163f64b3b1fcd31bae d460901b1696456800789338eb17d45b 4167c83e5575823a7c86e79b585961ad c4cdad9c55cbced5f43ddc56de54179c 9a01755c3c85d8e11ea1c36a7e1d1c8d e58ee11024b2a863f45ec1f65cb0498f 6729e5ee901e8e0a9a49c6c67d3ce31d 4de5c99c9ad8c60bdc0d5017e1926ae0 2e263ca484c6218cd49b803d4c35005d b1bd90b8066c485b42ab9c227d866556 2aadb75013b7f98ad39ad9880ac90f98 1cc88353520bdfd86d1ce83eb4020533 d4a19806b8169dc63e40e046ea84a315 287c425f74abbd66777ffdb77c93a379 30368a613c592717bd29c3fb33398400 26f36896321ca31bea14a568848e14c3 12487093c92c7e879ccbc8a3046433ea 30873d86aa982453fcfac7c8e5b75bc4 c6be7b38c0bf955ffb1ae278ba074019 347d6d25aa757b25ae435d6d1006d33a 0ee13385903ebb1f8f3641d9991a6f58 1cc9a399d0ee27ab718a7307c5fcee7c f86e018a422c44754724cd58b3ae8f11 6c29064182ba5b09df6153518dd39098 ac4820c8f9377e86d70efdfa2e77a92f 06746643dc0d1a1f13989b0601f5ddf4 36ba01bbf6a58c96fcdea41e72144700 08b438f94c9b37a5f81f2accf65717e4 eaea9ed37d44f1aecffd3af3bfd1e90b ba54746da80665b75a4df1eacca65414 4b3667727c59730f92ea78ac7e6f2c58 d94129ddd62addc2b855776088b88cf5 63681aeb91af9e9a18f1fe1003688e4a 69b44e690fc15518e96f2ac036273473 f4fa43ad5ff971c9240e5a2cc845438a 355507da0bb50d0a77e4f74f626021a8 d41c10836316097dd520c46584d75ace d1376fd1a2c72cb1507268efc5f3ba1a 64f91498a0f869ae89d422e7083a2256 4b3baf26f358ef0a6c5cc778ec07d230 8cb8f88e2964a029b5601a2a25df8fab 0095e82b0de1856bc1669e7894961945 dcfb56bbba32062b3f1a9175e98c3e9d c418db398211b73eb3ed669ed3efe5e1 9e05602df7a7bb86702951faf8f5f9af 7cbe2cd96d157e22485713497930f045 f81aa5b54347f2a19350ca63538c710b 44a3f0c8da6fab95a59566f4651fac69 3ee7f4f3ad5bcd77b769fdc6b95354df 3d94982d92ba7a94666e28113bfc0b6c 85d102befaa3925caf4078c0ff0ef028 4bbf1b66b686a3bd599a383477476f8b 75103f83e903983872d44172ffe49fe0 2cbe28ce1284d6bc10ea24d45b005933 a8f8b04d267d36972aa77c05f6b6aaa6 c59d87c5bff1408b92037497c6f2a7a6 e084af5910f1ce711de88b2f80f31153 87318ce827ad0a24ea48724ef2d0fc11 54a9b827bc9e808fc91338c5a5cbaa3f 6691236f063118d69a49ba8282612b84 ee20ef6073e56656143d52a934c3e44d 2d968aa104dfc7e81b26f5735bf0e64f a936f30ed3bbea369d961c533a1b7713 a8c78a611536c4e59c36c083b7d93ec5 bc8d539f885fb48c16dd2ae04dfd8e32 3639754fd32115d1f713e1c3bcd59e11 84b8bb15fe5aed0b041ff29915b7f7bf d981c861d4f96d2137232045db6f6bf3 43832d40d25a6a4484571955d0c2f124 718a28b5f7276c628ea1fdebd2a5990c 9af41900a4989ba1de7a0fea59136fe6 3746c4dbf84ade322d99f00223728654 956f585d818dfbd5b2f542e1be5c2f5e 16ad6fe279064b276f7a4df6cf094112 ea26a22142b0dd8140af637e552f5745 c56431b9a5fb3fb398949956246df72f 71c8e31a5420869142309f825f5cce2f 50881b7769f6d0f8b400b19c6e8ad2e6 726a5aa1f04305f58a8876136155d277 561670d249f1f65528d12b8cd1309de7 1fb9ac0a3e4843e202370899f20a9edf 11284ed441b2647f8584e6d4ce3e20bd 7c17595450279f44929af357a4370d6d 81aabcb07adc8ead45e376dfcf682266 acbfa6a8388748c60980d4448226ecf9 9b85892fada7202ddc4273c17b0ae4b9 e6406b67b8ea1d3b39bb6fc24173c26f 09d1410f9314b62bc20226b99dfdeb99 fde705ccfb9a6de0c235fe5a97398c83 988bd25c589dc62411baf434bc150037 401d7c50e4b0b6d15c87a0bbded0b45e b78bf9e78af068b5aa91c533c02f8903 5dd3d7db1482ab4a7210abbeca947172 54c4644a1d56db131a76b0b15438cf26 7ccdf4662e668d214aa4246365e4df8d 8e133af095f06f141f4831bc23862608 8cc2f691f4c466adc874d0f817c83260 f253032042b18c1deb303a5ffaba03ec 3ac14c5df07d40a2c7d3b942d5765454 811d94606fba500df167d623d7570158 d42f5c2e211490ea557d7b92e54bbd10 c5d852e8172c88d5ca99807fbf387c68 fac78ef29e1d71bba04c30384aea")
                    }
                }(this))
            })
        },
        "dojox/encoding/crypto/SimpleAES": function() {
            define(["../base64", "./_base"], function(q, p) {
                function n(b, a) {
                    for (var c = a.length / 4 - 1, d = [[], [], [], []], e = 0; 16 > e; e++)
                        d[e % 4][Math.floor(e / 4)] = b[e];
                    d = k(d, a, 0, 4);
                    for (e = 1; e < c; e++) {
                        for (var d = m(d, 4), d = l(d, 4), f = 0; 4 > f; f++) {
                            for (var g = Array(4), n = Array(4), p = 0; 4 > p; p++)
                                g[p] = d[p][f],
                                n[p] = d[p][f] & 128 ? d[p][f] << 1 ^ 283 : d[p][f] << 1;
                            d[0][f] = n[0] ^ g[1] ^ n[1] ^ g[2] ^ g[3];
                            d[1][f] = g[0] ^ n[1] ^ g[2] ^ n[2] ^ g[3];
                            d[2][f] = g[0] ^ g[1] ^ n[2] ^ g[3] ^ n[3];
                            d[3][f] = g[0] ^ n[0] ^ g[1] ^ g[2] ^ n[3]
                        }
                        d = k(d, a, e, 4)
                    }
                    d = m(d, 4);
                    d = l(d, 4);
                    d = k(d, a, c, 4);
                    c = Array(16);
                    for (e = 0; 16 > e; e++)
                        c[e] = d[e % 4][Math.floor(e / 4)];
                    return c
                }
                function m(b, a) {
                    for (var c = 0; 4 > c; c++)
                        for (var e = 0; e < a; e++)
                            b[c][e] = d[b[c][e]];
                    return b
                }
                function l(b, a) {
                    for (var c = Array(4), d = 1; 4 > d; d++) {
                        for (var e = 0; 4 > e; e++)
                            c[e] = b[d][(e + d) % a];
                        for (e = 0; 4 > e; e++)
                            b[d][e] = c[e]
                    }
                    return b
                }
                function k(b, a, c, d) {
                    for (var e = 0; 4 > e; e++)
                        for (var f = 0; f < d; f++)
                            b[e][f] ^= a[4 * c + f][e];
                    return b
                }
                function g(b) {
                    for (var a = b.length / 4, d = a + 6, e = Array(4 * (d + 1)), g = Array(4), k = 0; k < a; k++)
                        e[k] = [b[4 * k], b[4 * k + 1], b[4 * k + 2], b[4 * k + 3]];
                    for (k = a; k < 4 * (d + 1); k++) {
                        e[k] = Array(4);
                        for (b = 0; 4 > b; b++)
                            g[b] = e[k - 1][b];
                        if (0 == k % a) {
                            g[4] = g[0];
                            for (b = 0; 4 > b; b++)
                                g[b] = g[b + 1];
                            g = f(g);
                            for (b = 0; 4 > b; b++)
                                g[b] ^= c[k / a][b]
                        } else
                            6 < a && 4 == k % a && (g = f(g));
                        for (b = 0; 4 > b; b++)
                            e[k][b] = e[k - a][b] ^ g[b]
                    }
                    return e
                }
                function f(b) {
                    for (var a = 0; 4 > a; a++)
                        b[a] = d[b[a]];
                    return b
                }
                function e(b) {
                    var a = [];
                    b.replace(/(..)/g, function(b) {
                        a.push(parseInt(b, 16))
                    });
                    return a
                }
                var d = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22]
                  , c = [[0, 0, 0, 0], [1, 0, 0, 0], [2, 0, 0, 0], [4, 0, 0, 0], [8, 0, 0, 0], [16, 0, 0, 0], [32, 0, 0, 0], [64, 0, 0, 0], [128, 0, 0, 0], [27, 0, 0, 0], [54, 0, 0, 0]];
                p.SimpleAES = new function() {
                    this.encrypt = function(b, a) {
                        var c;
                        var d = Array(32);
                        for (c = 0; 32 > c; c++)
                            d[c] = a.charCodeAt(c) & 255;
                        var e = n(d, g(d))
                          , e = e.concat(e.slice(0, 16))
                          , d = Array(16)
                          , f = (new Date).getTime();
                        for (c = 0; 4 > c; c++)
                            d[c] = f >>> 8 * c & 255;
                        for (c = 0; 4 > c; c++)
                            d[c + 4] = f / 4294967296 >>> 8 * c & 255;
                        for (var f = g(e), k = Math.ceil(b.length / 16), e = Array(k), l = 0; l < k; l++) {
                            for (c = 0; 4 > c; c++)
                                d[15 - c] = l >>> 8 * c & 255;
                            for (c = 0; 4 > c; c++)
                                d[15 - c - 4] = l / 4294967296 >>> 8 * c;
                            var m = n(d, f)
                              , p = l < k - 1 ? 16 : (b.length - 1) % 16 + 1
                              , q = "";
                            for (c = 0; c < p; c++)
                                var A = b.charCodeAt(16 * l + c) ^ m[c]
                                  , q = q + ((16 > A ? "0" : "") + A.toString(16));
                            e[l] = q
                        }
                        f = "";
                        for (c = 0; 8 > c; c++)
                            f += (16 > d[c] ? "0" : "") + d[c].toString(16);
                        c = f + " " + e.join(" ");
                        return c
                    }
                    ;
                    this.decrypt = function(b, a) {
                        var c;
                        c = b;
                        for (var d = Array(32), f = 0; 32 > f; f++)
                            d[f] = a.charCodeAt(f) & 255;
                        f = g(d);
                        f = n(d, f);
                        f = f.concat(f.slice(0, 16));
                        d = g(f);
                        c = c.split(" ");
                        for (var k = Array(16), k = e(c[0]), l = Array(c.length - 1), m = 1; m < c.length; m++) {
                            for (f = 0; 4 > f; f++)
                                k[15 - f] = m - 1 >>> 8 * f & 255;
                            for (f = 0; 4 > f; f++)
                                k[15 - f - 4] = m / 4294967296 - 1 >>> 8 * f & 255;
                            for (var p = n(k, d), q = "", v = e(c[m]), f = 0; f < v.length; f++)
                                c[m].charCodeAt(f),
                                q += String.fromCharCode(v[f] ^ p[f]);
                            l[m - 1] = q
                        }
                        c = l.join("");
                        return c
                    }
                }
                ;
                return p.SimpleAES
            })
        },
        "dojox/encoding/base64": function() {
            define(["dojo/_base/lang"], function(q) {
                q = q.getObject("dojox.encoding.base64", !0);
                q.encode = function(p) {
                    for (var n = [], m = p.length, l = m % 3, m = m - l, k = 0; k < m; ) {
                        var g = p[k++] << 16 | p[k++] << 8 | p[k++];
                        n.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(g >>> 18 & 63));
                        n.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(g >>> 12 & 63));
                        n.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(g >>> 6 & 63));
                        n.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(g & 63))
                    }
                    switch (l) {
                    case 2:
                        g = p[k++] << 16 | p[k++] << 8;
                        n.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(g >>> 18 & 63));
                        n.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(g >>> 12 & 63));
                        n.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(g >>> 6 & 63));
                        n.push("\x3d");
                        break;
                    case 1:
                        g = p[k++] << 16,
                        n.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(g >>> 18 & 63)),
                        n.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(g >>> 12 & 63)),
                        n.push("\x3d"),
                        n.push("\x3d")
                    }
                    return n.join("")
                }
                ;
                q.decode = function(p) {
                    p = p.split("");
                    for (var n = [], m = p.length; "\x3d" == p[--m]; )
                        ;
                    for (var l = 0; l < m; ) {
                        var k = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(p[l++]) << 18;
                        l <= m && (k |= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(p[l++]) << 12);
                        l <= m && (k |= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(p[l++]) << 6);
                        l <= m && (k |= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(p[l++]));
                        n.push(k >>> 16 & 255);
                        n.push(k >>> 8 & 255);
                        n.push(k & 255)
                    }
                    for (; 0 == n[n.length - 1]; )
                        n.pop();
                    return n
                }
                ;
                return q
            })
        },
        "dojox/encoding/crypto/_base": function() {
            define(["dojo/_base/lang"], function(q) {
                q = q.getObject("dojox.encoding.crypto", !0);
                q.cipherModes = {
                    ECB: 0,
                    CBC: 1,
                    PCBC: 2,
                    CFB: 3,
                    OFB: 4,
                    CTR: 5
                };
                q.outputTypes = {
                    Base64: 0,
                    Hex: 1,
                    String: 2,
                    Raw: 3
                };
                return q
            })
        },
        "ttx/subject/userInfo": function() {
            define(["dojo/topic", "dijit/Dialog", "ttx/wso/general/ChangePassword"], function(q, p, n) {
                return q.subscribe("appLoginSuccess", function() {
                    return app.dataManager.post("/user/getUser", app.session.user).then(function(m) {
                        var l;
                        m.inited || void 0 === m.inited || (l = new p({
                            title: tt("\u521d\u6b21\u767b\u5f55\u5fc5\u987b\u4fee\u6539\u5bc6\u7801"),
                            closable: !1,
                            draggable: !1,
                            "class": "forceChangePwd zIndexBiggerThanLayer"
                        }),
                        l.addChild(new n({
                            app: app,
                            parentDialog: l,
                            afterExecute: function(k) {
                                if (k && "0" === k.code)
                                    return l.destroy()
                            }
                        })),
                        l.show(),
                        app.notifyError("\u521d\u6b21\u767b\u5f55\u5fc5\u987b\u4fee\u6539\u5bc6\u7801"));
                        app.session.userName = m.name;
                        return app.topNav.userNode.innerHTML = m.name + "  " + m.code
                    })
                })
            })
        },
        "ttx/wso/SkuAddBill": function() {
            define("dojo/_base/declare dojo/_base/lang dojo/_base/fx dojo/dom dojo/dom-class dojo/dom-style dojo/dom-construct dojo/dom-geometry dojo/query dojo/on dojo/aspect dojo/DeferredList dojo/store/Memory ttx/store/JsonRest dijit/registry dijit/layout/ContentPane dijit/layout/TabContainer dijit/form/Form dijit/form/TextBox dijit/form/Button dijit/_Container dijit/Toolbar dojox/mvc/at dojox/mvc/getStateful dojox/mvc/ModelRefController gridx/Grid gridx/core/model/cache/Sync gridx/allModules ttx/actions/BillActions ttx/wso/_ViewModelWso ttx/wso/_TabLayoutMixin ttx/util/_I18nMixin ttx/dijit/SkuAddDialog ./Bill dojo/text!./templates/Bill.html".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a, h, r, t, u, x, y, z, w, v, A, B, C, E, I, H, F, G, J, O, D, M, L) {
                return q([M], {
                    __buildCpBill: function(a) {
                        var b;
                        b = this.cpBill;
                        if (this.needRemoveTab(a))
                            this.tc.removeChild(b),
                            b.destroyRecursive();
                        else
                            return this.buildCpBill(a)
                    },
                    buildCpBill: function(a) {
                        return this.inherited(arguments)
                    },
                    bindDetailGridEditAction: function() {
                        var a, b;
                        b = this;
                        a = this.cpBill;
                        if (a.grid)
                            return this.own(d(a.grid, "cellDblClick", function(c) {
                                c = a.grid.row(c.rowIndex).item();
                                return b.actionSets["default"].editDetailInDialog ? b.actionSets["default"].editDetailInDialog.call(b.actionSets["default"], c) : b.actionSets.global.editDetailInDialog.call(b.actionSets.global, c)
                            }))
                    },
                    __buildCpDetail: function(a) {
                        a = this.cpDetail;
                        this.tc.removeChild(a);
                        a.destroyRecursive()
                    },
                    __buildCpAddition: function(a) {
                        var b;
                        b = this.cpAddition;
                        if (a)
                            return a.title && b.set("title", a.title),
                            this.buildCpAddition(a);
                        this.tc.removeChild(b);
                        b.destroyRecursive()
                    },
                    buildCpAddition: function(a) {}
                })
            })
        },
        "ttx/dijit/SkuAddDialog": function() {
            define("dojo/_base/declare dojo/dom-construct dojo/on dojo/aspect dojo/store/Memory dijit/form/Form dijit/layout/ContentPane dijit/layout/BorderContainer cbtree/store/ObjectStore cbtree/model/TreeStoreModel ttx/dijit/tree/Tree ttx/dijit/ConfirmDialog ttx/dijit/_FormMixin".split(" "), function(q, p, n, m, l, k, g, f, e, d, c, b, a) {
                return q([b, a], {
                    title: "\u6dfb\u52a0SKU",
                    "class": "skuAddDialog",
                    viewModel: {},
                    skuQueryParamMap: {},
                    defaultValues: {},
                    saveColumns: [],
                    saveUrl: null,
                    app: null,
                    queryFieldsMap: null,
                    skuGrid: null,
                    invGrid: null,
                    postCreate: function() {
                        var a, b;
                        this.inherited(arguments);
                        a = this;
                        b = a.vm = a.viewModel;
                        this.saveColumns = b.saveColumns;
                        this.saveUrl = b.saveUrl;
                        this.addFieldSetWidgetAuto(b.fields, this.containerNode);
                        this.queryFieldsMap = this.containerNode.fieldMap;
                        this.skuGrid = a.addTtxServerGrid(b.skuGrid, this.containerNode);
                        a.gridDblClickEffect(this.skuGrid);
                        this.invGrid = a.addTtxServerGrid(b.invGrid, this.containerNode);
                        this.containerNode.style.overflow = "auto";
                        a.layoutPane(this.containerNode);
                        this.skuGrid.onRowDblClick = function(b) {
                            return a.skuGridDblClick(b)
                        }
                        ;
                        a.skuGrid.actionMap.query.onClick = function() {
                            return a.queryClick()
                        }
                        ;
                        return m.after(a, "hide", function() {
                            var b, c, d, e;
                            a.skuGrid && a.skuGrid.setStore(new l({
                                data: [],
                                idProperty: "code"
                            }));
                            a.invGrid && a.invGrid.setStore(new l({
                                data: [],
                                idProperty: "code"
                            }));
                            if (a.queryFieldsMap) {
                                c = a.queryFieldsMap;
                                d = [];
                                for (b in c)
                                    e = c[b],
                                    d.push(e.set("value", null));
                                return d
                            }
                        })
                    },
                    skuGridDblClick: function(a) {},
                    show: function() {
                        this.inherited(arguments);
                        return this.resize()
                    },
                    resize: function() {
                        this.inherited(arguments);
                        return this.layoutPane(this.containerNode)
                    },
                    queryClick: function() {
                        return this
                    },
                    setDetails: function() {}
                })
            })
        },
        "url:dijit/templates/Calendar.html": '\x3cdiv class\x3d"dijitCalendarContainer dijitInline" role\x3d"presentation" aria-labelledby\x3d"${id}_mddb ${id}_year"\x3e\n\t\x3cdiv class\x3d"dijitReset dijitCalendarMonthContainer" role\x3d"presentation"\x3e\n\t\t\x3cdiv class\x3d\'dijitReset dijitCalendarArrow dijitCalendarDecrementArrow\' data-dojo-attach-point\x3d"decrementMonth"\x3e\n\t\t\t\x3cimg src\x3d"${_blankGif}" alt\x3d"" class\x3d"dijitCalendarIncrementControl dijitCalendarDecrease" role\x3d"presentation"/\x3e\n\t\t\t\x3cspan data-dojo-attach-point\x3d"decreaseArrowNode" class\x3d"dijitA11ySideArrow"\x3e-\x3c/span\x3e\n\t\t\x3c/div\x3e\n\t\t\x3cdiv class\x3d\'dijitReset dijitCalendarArrow dijitCalendarIncrementArrow\' data-dojo-attach-point\x3d"incrementMonth"\x3e\n\t\t\t\x3cimg src\x3d"${_blankGif}" alt\x3d"" class\x3d"dijitCalendarIncrementControl dijitCalendarIncrease" role\x3d"presentation"/\x3e\n\t\t\t\x3cspan data-dojo-attach-point\x3d"increaseArrowNode" class\x3d"dijitA11ySideArrow"\x3e+\x3c/span\x3e\n\t\t\x3c/div\x3e\n\t\t\x3cdiv data-dojo-attach-point\x3d"monthNode" class\x3d"dijitInline"\x3e\x3c/div\x3e\n\t\x3c/div\x3e\n\t\x3ctable cellspacing\x3d"0" cellpadding\x3d"0" role\x3d"grid" data-dojo-attach-point\x3d"gridNode"\x3e\n\t\t\x3cthead\x3e\n\t\t\t\x3ctr role\x3d"row"\x3e\n\t\t\t\t${!dayCellsHtml}\n\t\t\t\x3c/tr\x3e\n\t\t\x3c/thead\x3e\n\t\t\x3ctbody data-dojo-attach-point\x3d"dateRowsNode" data-dojo-attach-event\x3d"ondijitclick: _onDayClick" class\x3d"dijitReset dijitCalendarBodyContainer"\x3e\n\t\t\t\t${!dateRowsHtml}\n\t\t\x3c/tbody\x3e\n\t\x3c/table\x3e\n\t\x3cdiv class\x3d"dijitReset dijitCalendarYearContainer" role\x3d"presentation"\x3e\n\t\t\x3cdiv class\x3d"dijitCalendarYearLabel"\x3e\n\t\t\t\x3cspan data-dojo-attach-point\x3d"previousYearLabelNode" class\x3d"dijitInline dijitCalendarPreviousYear" role\x3d"button"\x3e\x3c/span\x3e\n\t\t\t\x3cspan data-dojo-attach-point\x3d"currentYearLabelNode" class\x3d"dijitInline dijitCalendarSelectedYear" role\x3d"button" id\x3d"${id}_year"\x3e\x3c/span\x3e\n\t\t\t\x3cspan data-dojo-attach-point\x3d"nextYearLabelNode" class\x3d"dijitInline dijitCalendarNextYear" role\x3d"button"\x3e\x3c/span\x3e\n\t\t\x3c/div\x3e\n\t\x3c/div\x3e\n\x3c/div\x3e\n',
        "url:dijit/form/templates/Button.html": '\x3cspan class\x3d"dijit dijitReset dijitInline" role\x3d"presentation"\n\t\x3e\x3cspan class\x3d"dijitReset dijitInline dijitButtonNode"\n\t\tdata-dojo-attach-event\x3d"ondijitclick:__onClick" role\x3d"presentation"\n\t\t\x3e\x3cspan class\x3d"dijitReset dijitStretch dijitButtonContents"\n\t\t\tdata-dojo-attach-point\x3d"titleNode,focusNode"\n\t\t\trole\x3d"button" aria-labelledby\x3d"${id}_label"\n\t\t\t\x3e\x3cspan class\x3d"dijitReset dijitInline dijitIcon" data-dojo-attach-point\x3d"iconNode"\x3e\x3c/span\n\t\t\t\x3e\x3cspan class\x3d"dijitReset dijitToggleButtonIconChar"\x3e\x26#x25CF;\x3c/span\n\t\t\t\x3e\x3cspan class\x3d"dijitReset dijitInline dijitButtonText"\n\t\t\t\tid\x3d"${id}_label"\n\t\t\t\tdata-dojo-attach-point\x3d"containerNode"\n\t\t\t\x3e\x3c/span\n\t\t\x3e\x3c/span\n\t\x3e\x3c/span\n\t\x3e\x3cinput ${!nameAttrSetting} type\x3d"${type}" value\x3d"${value}" class\x3d"dijitOffScreen"\n\t\tdata-dojo-attach-event\x3d"onclick:_onClick"\n\t\ttabIndex\x3d"-1" aria-hidden\x3d"true" data-dojo-attach-point\x3d"valueNode"\n/\x3e\x3c/span\x3e\n',
        "url:dijit/form/templates/DropDownButton.html": '\x3cspan class\x3d"dijit dijitReset dijitInline"\n\t\x3e\x3cspan class\x3d\'dijitReset dijitInline dijitButtonNode\'\n\t\tdata-dojo-attach-event\x3d"ondijitclick:__onClick" data-dojo-attach-point\x3d"_buttonNode"\n\t\t\x3e\x3cspan class\x3d"dijitReset dijitStretch dijitButtonContents"\n\t\t\tdata-dojo-attach-point\x3d"focusNode,titleNode,_arrowWrapperNode,_popupStateNode"\n\t\t\trole\x3d"button" aria-haspopup\x3d"true" aria-labelledby\x3d"${id}_label"\n\t\t\t\x3e\x3cspan class\x3d"dijitReset dijitInline dijitIcon"\n\t\t\t\tdata-dojo-attach-point\x3d"iconNode"\n\t\t\t\x3e\x3c/span\n\t\t\t\x3e\x3cspan class\x3d"dijitReset dijitInline dijitButtonText"\n\t\t\t\tdata-dojo-attach-point\x3d"containerNode"\n\t\t\t\tid\x3d"${id}_label"\n\t\t\t\x3e\x3c/span\n\t\t\t\x3e\x3cspan class\x3d"dijitReset dijitInline dijitArrowButtonInner"\x3e\x3c/span\n\t\t\t\x3e\x3cspan class\x3d"dijitReset dijitInline dijitArrowButtonChar"\x3e\x26#9660;\x3c/span\n\t\t\x3e\x3c/span\n\t\x3e\x3c/span\n\t\x3e\x3cinput ${!nameAttrSetting} type\x3d"${type}" value\x3d"${value}" class\x3d"dijitOffScreen" tabIndex\x3d"-1"\n\t\tdata-dojo-attach-event\x3d"onclick:_onClick" data-dojo-attach-point\x3d"valueNode" aria-hidden\x3d"true"\n/\x3e\x3c/span\x3e\n',
        "url:dijit/templates/Dialog.html": '\x3cdiv class\x3d"dijitDialog" role\x3d"dialog" aria-labelledby\x3d"${id}_title"\x3e\n\t\x3cdiv data-dojo-attach-point\x3d"titleBar" class\x3d"dijitDialogTitleBar"\x3e\n\t\t\x3cspan data-dojo-attach-point\x3d"titleNode" class\x3d"dijitDialogTitle" id\x3d"${id}_title"\n\t\t\t\trole\x3d"heading" level\x3d"1"\x3e\x3c/span\x3e\n\t\t\x3cspan data-dojo-attach-point\x3d"closeButtonNode" class\x3d"dijitDialogCloseIcon" data-dojo-attach-event\x3d"ondijitclick: onCancel" title\x3d"${buttonCancel}" role\x3d"button" tabindex\x3d"-1"\x3e\n\t\t\t\x3cspan data-dojo-attach-point\x3d"closeText" class\x3d"closeText" title\x3d"${buttonCancel}"\x3ex\x3c/span\x3e\n\t\t\x3c/span\x3e\n\t\x3c/div\x3e\n\t\x3cdiv data-dojo-attach-point\x3d"containerNode" class\x3d"dijitDialogPaneContent"\x3e\x3c/div\x3e\n\t${!actionBarTemplate}\n\x3c/div\x3e\n\n',
        "url:dijit/templates/actionBar.html": "\x3cdiv class\x3d'dijitDialogPaneActionBar' data-dojo-attach-point\x3d\"actionBarNode\"\x3e\n\t\x3cbutton data-dojo-type\x3d'dijit/form/Button' type\x3d'submit' data-dojo-attach-point\x3d\"okButton\"\x3e\x3c/button\x3e\n\t\x3cbutton data-dojo-type\x3d'dijit/form/Button' type\x3d'button'\n\t\t\tdata-dojo-attach-point\x3d\"cancelButton\" data-dojo-attach-event\x3d'click:onCancel'\x3e\x3c/button\x3e\n\x3c/div\x3e\n",
        "url:dijit/templates/TooltipDialog.html": '\x3cdiv role\x3d"alertdialog" tabIndex\x3d"-1"\x3e\n\t\x3cdiv class\x3d"dijitTooltipContainer" role\x3d"presentation"\x3e\n\t\t\x3cdiv data-dojo-attach-point\x3d"contentsNode" class\x3d"dijitTooltipContents dijitTooltipFocusNode"\x3e\n\t\t\t\x3cdiv data-dojo-attach-point\x3d"containerNode"\x3e\x3c/div\x3e\n\t\t\t${!actionBarTemplate}\n\t\t\x3c/div\x3e\n\t\x3c/div\x3e\n\t\x3cdiv class\x3d"dijitTooltipConnector" role\x3d"presentation" data-dojo-attach-point\x3d"connectorNode"\x3e\x3c/div\x3e\n\x3c/div\x3e\n',
        "url:dijit/templates/Menu.html": '\x3ctable class\x3d"dijit dijitMenu dijitMenuPassive dijitReset dijitMenuTable" role\x3d"menu" tabIndex\x3d"${tabIndex}"\n\t   cellspacing\x3d"0"\x3e\n\t\x3ctbody class\x3d"dijitReset" data-dojo-attach-point\x3d"containerNode"\x3e\x3c/tbody\x3e\n\x3c/table\x3e\n',
        "url:dijit/templates/MenuItem.html": '\x3ctr class\x3d"dijitReset" data-dojo-attach-point\x3d"focusNode" role\x3d"menuitem" tabIndex\x3d"-1"\x3e\n\t\x3ctd class\x3d"dijitReset dijitMenuItemIconCell" role\x3d"presentation"\x3e\n\t\t\x3cspan role\x3d"presentation" class\x3d"dijitInline dijitIcon dijitMenuItemIcon" data-dojo-attach-point\x3d"iconNode"\x3e\x3c/span\x3e\n\t\x3c/td\x3e\n\t\x3ctd class\x3d"dijitReset dijitMenuItemLabel" colspan\x3d"2" data-dojo-attach-point\x3d"containerNode,textDirNode"\n\t\trole\x3d"presentation"\x3e\x3c/td\x3e\n\t\x3ctd class\x3d"dijitReset dijitMenuItemAccelKey" style\x3d"display: none" data-dojo-attach-point\x3d"accelKeyNode"\x3e\x3c/td\x3e\n\t\x3ctd class\x3d"dijitReset dijitMenuArrowCell" role\x3d"presentation"\x3e\n\t\t\x3cspan data-dojo-attach-point\x3d"arrowWrapper" style\x3d"visibility: hidden"\x3e\n\t\t\t\x3cspan class\x3d"dijitInline dijitIcon dijitMenuExpand"\x3e\x3c/span\x3e\n\t\t\t\x3cspan class\x3d"dijitMenuExpandA11y"\x3e+\x3c/span\x3e\n\t\t\x3c/span\x3e\n\t\x3c/td\x3e\n\x3c/tr\x3e\n',
        "url:dijit/templates/MenuSeparator.html": '\x3ctr class\x3d"dijitMenuSeparator" role\x3d"separator"\x3e\n\t\x3ctd class\x3d"dijitMenuSeparatorIconCell"\x3e\n\t\t\x3cdiv class\x3d"dijitMenuSeparatorTop"\x3e\x3c/div\x3e\n\t\t\x3cdiv class\x3d"dijitMenuSeparatorBottom"\x3e\x3c/div\x3e\n\t\x3c/td\x3e\n\t\x3ctd colspan\x3d"3" class\x3d"dijitMenuSeparatorLabelCell"\x3e\n\t\t\x3cdiv class\x3d"dijitMenuSeparatorTop dijitMenuSeparatorLabel"\x3e\x3c/div\x3e\n\t\t\x3cdiv class\x3d"dijitMenuSeparatorBottom"\x3e\x3c/div\x3e\n\t\x3c/td\x3e\n\x3c/tr\x3e\n',
        "url:dijit/templates/TitlePane.html": '\x3cdiv\x3e\n\t\x3cdiv data-dojo-attach-event\x3d"ondijitclick:_onTitleClick, onkeydown:_onTitleKey"\n\t\t\tclass\x3d"dijitTitlePaneTitle" data-dojo-attach-point\x3d"titleBarNode" id\x3d"${id}_titleBarNode"\x3e\n\t\t\x3cdiv class\x3d"dijitTitlePaneTitleFocus" data-dojo-attach-point\x3d"focusNode"\x3e\n\t\t\t\x3cspan data-dojo-attach-point\x3d"arrowNode" class\x3d"dijitInline dijitArrowNode" role\x3d"presentation"\x3e\x3c/span\n\t\t\t\x3e\x3cspan data-dojo-attach-point\x3d"arrowNodeInner" class\x3d"dijitArrowNodeInner"\x3e\x3c/span\n\t\t\t\x3e\x3cspan data-dojo-attach-point\x3d"titleNode" class\x3d"dijitTitlePaneTextNode"\x3e\x3c/span\x3e\n\t\t\x3c/div\x3e\n\t\x3c/div\x3e\n\t\x3cdiv class\x3d"dijitTitlePaneContentOuter" data-dojo-attach-point\x3d"hideNode" role\x3d"presentation"\x3e\n\t\t\x3cdiv class\x3d"dijitReset" data-dojo-attach-point\x3d"wipeNode" role\x3d"presentation"\x3e\n\t\t\t\x3cdiv class\x3d"dijitTitlePaneContentInner" data-dojo-attach-point\x3d"containerNode" role\x3d"region" id\x3d"${id}_pane" aria-labelledby\x3d"${id}_titleBarNode"\x3e\n\t\t\t\t\x3c!-- nested divs because wipeIn()/wipeOut() doesn\'t work right on node w/padding etc.  Put padding on inner div. --\x3e\n\t\t\t\x3c/div\x3e\n\t\t\x3c/div\x3e\n\t\x3c/div\x3e\n\x3c/div\x3e\n',
        "url:dijit/templates/Tooltip.html": '\x3cdiv class\x3d"dijitTooltip dijitTooltipLeft" id\x3d"dojoTooltip" data-dojo-attach-event\x3d"mouseenter:onMouseEnter,mouseleave:onMouseLeave"\n\t\x3e\x3cdiv class\x3d"dijitTooltipConnector" data-dojo-attach-point\x3d"connectorNode"\x3e\x3c/div\n\t\x3e\x3cdiv class\x3d"dijitTooltipContainer dijitTooltipContents" data-dojo-attach-point\x3d"containerNode" role\x3d\'alert\'\x3e\x3c/div\n\x3e\x3c/div\x3e\n',
        "url:dijit/templates/TreeNode.html": '\x3cdiv class\x3d"dijitTreeNode" role\x3d"presentation"\n\t\x3e\x3cdiv data-dojo-attach-point\x3d"rowNode" class\x3d"dijitTreeRow" role\x3d"presentation"\n\t\t\x3e\x3cspan data-dojo-attach-point\x3d"expandoNode" class\x3d"dijitInline dijitTreeExpando" role\x3d"presentation"\x3e\x3c/span\n\t\t\x3e\x3cspan data-dojo-attach-point\x3d"expandoNodeText" class\x3d"dijitExpandoText" role\x3d"presentation"\x3e\x3c/span\n\t\t\x3e\x3cspan data-dojo-attach-point\x3d"contentNode"\n\t\t\tclass\x3d"dijitTreeContent" role\x3d"presentation"\x3e\n\t\t\t\x3cspan role\x3d"presentation" class\x3d"dijitInline dijitIcon dijitTreeIcon" data-dojo-attach-point\x3d"iconNode"\x3e\x3c/span\n\t\t\t\x3e\x3cspan data-dojo-attach-point\x3d"labelNode,focusNode" class\x3d"dijitTreeLabel" role\x3d"treeitem"\n\t\t\t\t   tabindex\x3d"-1" aria-selected\x3d"false" id\x3d"${id}_label"\x3e\x3c/span\x3e\n\t\t\x3c/span\n\t\x3e\x3c/div\x3e\n\t\x3cdiv data-dojo-attach-point\x3d"containerNode" class\x3d"dijitTreeNodeContainer" role\x3d"presentation"\n\t\t style\x3d"display: none;" aria-labelledby\x3d"${id}_label"\x3e\x3c/div\x3e\n\x3c/div\x3e\n',
        "url:dijit/templates/Tree.html": '\x3cdiv role\x3d"tree"\x3e\n\t\x3cdiv class\x3d"dijitInline dijitTreeIndent" style\x3d"position: absolute; top: -9999px" data-dojo-attach-point\x3d"indentDetector"\x3e\x3c/div\x3e\n\t\x3cdiv class\x3d"dijitTreeExpando dijitTreeExpandoLoading" data-dojo-attach-point\x3d"rootLoadingIndicator"\x3e\x3c/div\x3e\n\t\x3cdiv data-dojo-attach-point\x3d"containerNode" class\x3d"dijitTreeContainer" role\x3d"presentation"\x3e\n\t\x3c/div\x3e\n\x3c/div\x3e\n',
        "url:dijit/form/templates/CheckBox.html": '\x3cdiv class\x3d"dijit dijitReset dijitInline" role\x3d"presentation"\n\t\x3e\x3cinput\n\t \t${!nameAttrSetting} type\x3d"${type}" role\x3d"${type}" aria-checked\x3d"false" ${checkedAttrSetting}\n\t\tclass\x3d"dijitReset dijitCheckBoxInput"\n\t\tdata-dojo-attach-point\x3d"focusNode"\n\t \tdata-dojo-attach-event\x3d"ondijitclick:_onClick"\n/\x3e\x3c/div\x3e\n',
        "url:dijit/form/templates/TextBox.html": '\x3cdiv class\x3d"dijit dijitReset dijitInline dijitLeft" id\x3d"widget_${id}" role\x3d"presentation"\n\t\x3e\x3cdiv class\x3d"dijitReset dijitInputField dijitInputContainer"\n\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputInner" data-dojo-attach-point\x3d\'textbox,focusNode\' autocomplete\x3d"off"\n\t\t\t${!nameAttrSetting} type\x3d\'${type}\'\n\t/\x3e\x3c/div\n\x3e\x3c/div\x3e\n',
        "url:dijit/form/templates/ValidationTextBox.html": '\x3cdiv class\x3d"dijit dijitReset dijitInline dijitLeft"\n\tid\x3d"widget_${id}" role\x3d"presentation"\n\t\x3e\x3cdiv class\x3d\'dijitReset dijitValidationContainer\'\n\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitValidationIcon dijitValidationInner" value\x3d"\x26#935; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\n\t/\x3e\x3c/div\n\t\x3e\x3cdiv class\x3d"dijitReset dijitInputField dijitInputContainer"\n\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputInner" data-dojo-attach-point\x3d\'textbox,focusNode\' autocomplete\x3d"off"\n\t\t\t${!nameAttrSetting} type\x3d\'${type}\'\n\t/\x3e\x3c/div\n\x3e\x3c/div\x3e\n',
        "url:dijit/form/templates/DropDownBox.html": '\x3cdiv class\x3d"dijit dijitReset dijitInline dijitLeft"\n\tid\x3d"widget_${id}"\n\trole\x3d"combobox"\n\taria-haspopup\x3d"true"\n\tdata-dojo-attach-point\x3d"_popupStateNode"\n\t\x3e\x3cdiv class\x3d\'dijitReset dijitRight dijitButtonNode dijitArrowButton dijitDownArrowButton dijitArrowButtonContainer\'\n\t\tdata-dojo-attach-point\x3d"_buttonNode" role\x3d"presentation"\n\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitArrowButtonInner" value\x3d"\x26#9660; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"button presentation" aria-hidden\x3d"true"\n\t\t\t${_buttonInputDisabled}\n\t/\x3e\x3c/div\n\t\x3e\x3cdiv class\x3d\'dijitReset dijitValidationContainer\'\n\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitValidationIcon dijitValidationInner" value\x3d"\x26#935; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\n\t/\x3e\x3c/div\n\t\x3e\x3cdiv class\x3d"dijitReset dijitInputField dijitInputContainer"\n\t\t\x3e\x3cinput class\x3d\'dijitReset dijitInputInner\' ${!nameAttrSetting} type\x3d"${type}" autocomplete\x3d"off"\n\t\t\tdata-dojo-attach-point\x3d"textbox,focusNode" role\x3d"textbox"\n\t/\x3e\x3c/div\n\x3e\x3c/div\x3e\n',
        "url:dijit/form/templates/ComboButton.html": '\x3ctable class\x3d"dijit dijitReset dijitInline dijitLeft"\n\tcellspacing\x3d\'0\' cellpadding\x3d\'0\' role\x3d"presentation"\n\t\x3e\x3ctbody role\x3d"presentation"\x3e\x3ctr role\x3d"presentation"\n\t\t\x3e\x3ctd class\x3d"dijitReset dijitStretch dijitButtonNode" data-dojo-attach-point\x3d"buttonNode" data-dojo-attach-event\x3d"ondijitclick:__onClick,onkeydown:_onButtonKeyDown"\n\t\t\x3e\x3cdiv id\x3d"${id}_button" class\x3d"dijitReset dijitButtonContents"\n\t\t\tdata-dojo-attach-point\x3d"titleNode"\n\t\t\trole\x3d"button" aria-labelledby\x3d"${id}_label"\n\t\t\t\x3e\x3cdiv class\x3d"dijitReset dijitInline dijitIcon" data-dojo-attach-point\x3d"iconNode" role\x3d"presentation"\x3e\x3c/div\n\t\t\t\x3e\x3cdiv class\x3d"dijitReset dijitInline dijitButtonText" id\x3d"${id}_label" data-dojo-attach-point\x3d"containerNode" role\x3d"presentation"\x3e\x3c/div\n\t\t\x3e\x3c/div\n\t\t\x3e\x3c/td\n\t\t\x3e\x3ctd id\x3d"${id}_arrow" class\x3d\'dijitReset dijitRight dijitButtonNode dijitArrowButton\'\n\t\t\tdata-dojo-attach-point\x3d"_popupStateNode,focusNode,_buttonNode"\n\t\t\tdata-dojo-attach-event\x3d"onkeydown:_onArrowKeyDown"\n\t\t\ttitle\x3d"${optionsTitle}"\n\t\t\trole\x3d"button" aria-haspopup\x3d"true"\n\t\t\t\x3e\x3cdiv class\x3d"dijitReset dijitArrowButtonInner" role\x3d"presentation"\x3e\x3c/div\n\t\t\t\x3e\x3cdiv class\x3d"dijitReset dijitArrowButtonChar" role\x3d"presentation"\x3e\x26#9660;\x3c/div\n\t\t\x3e\x3c/td\n\t\t\x3e\x3ctd style\x3d"display:none !important;"\n\t\t\t\x3e\x3cinput ${!nameAttrSetting} type\x3d"${type}" value\x3d"${value}" data-dojo-attach-point\x3d"valueNode"\n\t\t\t\tclass\x3d"dijitOffScreen" aria-hidden\x3d"true" data-dojo-attach-event\x3d"onclick:_onClick"\n\t\t/\x3e\x3c/td\x3e\x3c/tr\x3e\x3c/tbody\n\x3e\x3c/table\x3e\n',
        "url:dijit/form/templates/Spinner.html": '\x3cdiv class\x3d"dijit dijitReset dijitInline dijitLeft"\n\tid\x3d"widget_${id}" role\x3d"presentation"\n\t\x3e\x3cdiv class\x3d"dijitReset dijitButtonNode dijitSpinnerButtonContainer"\n\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitSpinnerButtonInner" type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\n\t\t/\x3e\x3cdiv class\x3d"dijitReset dijitLeft dijitButtonNode dijitArrowButton dijitUpArrowButton"\n\t\t\tdata-dojo-attach-point\x3d"upArrowNode"\n\t\t\t\x3e\x3cdiv class\x3d"dijitArrowButtonInner"\n\t\t\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField" value\x3d"\x26#9650; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\n\t\t\t\t\t${_buttonInputDisabled}\n\t\t\t/\x3e\x3c/div\n\t\t\x3e\x3c/div\n\t\t\x3e\x3cdiv class\x3d"dijitReset dijitLeft dijitButtonNode dijitArrowButton dijitDownArrowButton"\n\t\t\tdata-dojo-attach-point\x3d"downArrowNode"\n\t\t\t\x3e\x3cdiv class\x3d"dijitArrowButtonInner"\n\t\t\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField" value\x3d"\x26#9660; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\n\t\t\t\t\t${_buttonInputDisabled}\n\t\t\t/\x3e\x3c/div\n\t\t\x3e\x3c/div\n\t\x3e\x3c/div\n\t\x3e\x3cdiv class\x3d\'dijitReset dijitValidationContainer\'\n\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitValidationIcon dijitValidationInner" value\x3d"\x26#935; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\n\t/\x3e\x3c/div\n\t\x3e\x3cdiv class\x3d"dijitReset dijitInputField dijitInputContainer"\n\t\t\x3e\x3cinput class\x3d\'dijitReset dijitInputInner\' data-dojo-attach-point\x3d"textbox,focusNode" type\x3d"${type}" data-dojo-attach-event\x3d"onkeydown:_onKeyDown"\n\t\t\trole\x3d"spinbutton" autocomplete\x3d"off" ${!nameAttrSetting}\n\t/\x3e\x3c/div\n\x3e\x3c/div\x3e\n',
        "url:dijit/form/templates/Select.html": '\x3ctable class\x3d"dijit dijitReset dijitInline dijitLeft"\n\tdata-dojo-attach-point\x3d"_buttonNode,tableNode,focusNode,_popupStateNode" cellspacing\x3d\'0\' cellpadding\x3d\'0\'\n\trole\x3d"listbox" aria-haspopup\x3d"true"\n\t\x3e\x3ctbody role\x3d"presentation"\x3e\x3ctr role\x3d"presentation"\n\t\t\x3e\x3ctd class\x3d"dijitReset dijitStretch dijitButtonContents" role\x3d"presentation"\n\t\t\t\x3e\x3cdiv class\x3d"dijitReset dijitInputField dijitButtonText"  data-dojo-attach-point\x3d"containerNode,textDirNode" role\x3d"presentation"\x3e\x3c/div\n\t\t\t\x3e\x3cdiv class\x3d"dijitReset dijitValidationContainer"\n\t\t\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitValidationIcon dijitValidationInner" value\x3d"\x26#935; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\n\t\t\t/\x3e\x3c/div\n\t\t\t\x3e\x3cinput type\x3d"hidden" ${!nameAttrSetting} data-dojo-attach-point\x3d"valueNode" value\x3d"${value}" aria-hidden\x3d"true"\n\t\t/\x3e\x3c/td\n\t\t\x3e\x3ctd class\x3d"dijitReset dijitRight dijitButtonNode dijitArrowButton dijitDownArrowButton dijitArrowButtonContainer"\n\t\t\tdata-dojo-attach-point\x3d"titleNode" role\x3d"presentation"\n\t\t\t\x3e\x3cinput class\x3d"dijitReset dijitInputField dijitArrowButtonInner" value\x3d"\x26#9660; " type\x3d"text" tabIndex\x3d"-1" readonly\x3d"readonly" role\x3d"presentation"\n\t\t\t\t${_buttonInputDisabled}\n\t\t/\x3e\x3c/td\n\t\x3e\x3c/tr\x3e\x3c/tbody\n\x3e\x3c/table\x3e\n',
        "url:dijit/layout/templates/AccordionButton.html": "\x3cdiv data-dojo-attach-event\x3d'ondijitclick:_onTitleClick' class\x3d'dijitAccordionTitle' role\x3d\"presentation\"\x3e\n\t\x3cdiv data-dojo-attach-point\x3d'titleNode,focusNode' data-dojo-attach-event\x3d'onkeydown:_onTitleKeyDown'\n\t\t\tclass\x3d'dijitAccordionTitleFocus' role\x3d\"tab\" aria-expanded\x3d\"false\"\n\t\t\x3e\x3cspan class\x3d'dijitInline dijitAccordionArrow' role\x3d\"presentation\"\x3e\x3c/span\n\t\t\x3e\x3cspan class\x3d'arrowTextUp' role\x3d\"presentation\"\x3e+\x3c/span\n\t\t\x3e\x3cspan class\x3d'arrowTextDown' role\x3d\"presentation\"\x3e-\x3c/span\n\t\t\x3e\x3cspan role\x3d\"presentation\" class\x3d\"dijitInline dijitIcon\" data-dojo-attach-point\x3d\"iconNode\"\x3e\x3c/span\x3e\n\t\t\x3cspan role\x3d\"presentation\" data-dojo-attach-point\x3d'titleTextNode, textDirNode' class\x3d'dijitAccordionText'\x3e\x3c/span\x3e\n\t\x3c/div\x3e\n\x3c/div\x3e\n",
        "url:dijit/layout/templates/ScrollingTabController.html": '\x3cdiv class\x3d"dijitTabListContainer-${tabPosition}" style\x3d"visibility:hidden"\x3e\n\t\x3cdiv data-dojo-type\x3d"dijit.layout._ScrollingTabControllerMenuButton"\n\t\t class\x3d"tabStripButton-${tabPosition}"\n\t\t id\x3d"${id}_menuBtn"\n\t\t data-dojo-props\x3d"containerId: \'${containerId}\', iconClass: \'dijitTabStripMenuIcon\',\n\t\t\t\t\tdropDownPosition: [\'below-alt\', \'above-alt\']"\n\t\t data-dojo-attach-point\x3d"_menuBtn" showLabel\x3d"false" title\x3d""\x3e\x26#9660;\x3c/div\x3e\n\t\x3cdiv data-dojo-type\x3d"dijit.layout._ScrollingTabControllerButton"\n\t\t class\x3d"tabStripButton-${tabPosition}"\n\t\t id\x3d"${id}_leftBtn"\n\t\t data-dojo-props\x3d"iconClass:\'dijitTabStripSlideLeftIcon\', showLabel:false, title:\'\'"\n\t\t data-dojo-attach-point\x3d"_leftBtn" data-dojo-attach-event\x3d"onClick: doSlideLeft"\x3e\x26#9664;\x3c/div\x3e\n\t\x3cdiv data-dojo-type\x3d"dijit.layout._ScrollingTabControllerButton"\n\t\t class\x3d"tabStripButton-${tabPosition}"\n\t\t id\x3d"${id}_rightBtn"\n\t\t data-dojo-props\x3d"iconClass:\'dijitTabStripSlideRightIcon\', showLabel:false, title:\'\'"\n\t\t data-dojo-attach-point\x3d"_rightBtn" data-dojo-attach-event\x3d"onClick: doSlideRight"\x3e\x26#9654;\x3c/div\x3e\n\t\x3cdiv class\x3d\'dijitTabListWrapper\' data-dojo-attach-point\x3d\'tablistWrapper\'\x3e\n\t\t\x3cdiv role\x3d\'tablist\' data-dojo-attach-event\x3d\'onkeydown:onkeydown\'\n\t\t\t data-dojo-attach-point\x3d\'containerNode\' class\x3d\'nowrapTabStrip\'\x3e\x3c/div\x3e\n\t\x3c/div\x3e\n\x3c/div\x3e',
        "url:dijit/layout/templates/_ScrollingTabControllerButton.html": '\x3cdiv data-dojo-attach-event\x3d"ondijitclick:_onClick" class\x3d"dijitTabInnerDiv dijitTabContent dijitButtonContents"  data-dojo-attach-point\x3d"focusNode" role\x3d"button"\x3e\n\t\x3cspan role\x3d"presentation" class\x3d"dijitInline dijitTabStripIcon" data-dojo-attach-point\x3d"iconNode"\x3e\x3c/span\x3e\n\t\x3cspan data-dojo-attach-point\x3d"containerNode,titleNode" class\x3d"dijitButtonText"\x3e\x3c/span\x3e\n\x3c/div\x3e',
        "url:dijit/layout/templates/_TabButton.html": '\x3cdiv role\x3d"presentation" data-dojo-attach-point\x3d"titleNode,innerDiv,tabContent" class\x3d"dijitTabInner dijitTabContent"\x3e\n\t\x3cspan role\x3d"presentation" class\x3d"dijitInline dijitIcon dijitTabButtonIcon" data-dojo-attach-point\x3d"iconNode"\x3e\x3c/span\x3e\n\t\x3cspan data-dojo-attach-point\x3d\'containerNode,focusNode\' class\x3d\'tabLabel\'\x3e\x3c/span\x3e\n\t\x3cspan class\x3d"dijitInline dijitTabCloseButton dijitTabCloseIcon" data-dojo-attach-point\x3d\'closeNode\'\n\t\t  role\x3d"presentation"\x3e\n\t\t\x3cspan data-dojo-attach-point\x3d\'closeText\' class\x3d\'dijitTabCloseText\'\x3e[x]\x3c/span\n\t\t\t\t\x3e\x3c/span\x3e\n\x3c/div\x3e\n',
        "url:dijit/layout/templates/TabContainer.html": '\x3cdiv class\x3d"dijitTabContainer"\x3e\n\t\x3cdiv class\x3d"dijitTabListWrapper" data-dojo-attach-point\x3d"tablistNode"\x3e\x3c/div\x3e\n\t\x3cdiv data-dojo-attach-point\x3d"tablistSpacer" class\x3d"dijitTabSpacer ${baseClass}-spacer"\x3e\x3c/div\x3e\n\t\x3cdiv class\x3d"dijitTabPaneWrapper ${baseClass}-container" data-dojo-attach-point\x3d"containerNode"\x3e\x3c/div\x3e\n\x3c/div\x3e\n',
        "url:ttx/dijit/templates/LoginDialog.html": '\x3cdiv class\x3d"loginDialog dijitDialog" role\x3d"dialog" aria-labelledby\x3d"${id}_title"\x3e\n    \x3cdiv class\x3d\'logo\'\x3e\x3cimg class\x3d"logo" src\x3d"images/logo.png"\x3e\x3c/div\x3e\n    \x3cdiv data-dojo-attach-point\x3d"titleBar" class\x3d"dijitDialogTitleBar"\x3e\n        \x3cspan class\x3d"colorBar colorRed"\x3e\x3c/span\x3e\n\t\t\x3cspan data-dojo-attach-point\x3d"titleNode" class\x3d"dijitDialogTitle" id\x3d"${id}_title"\n              role\x3d"heading" level\x3d"1"\x3e\x3c/span\x3e\n\t\t\x3cspan data-dojo-attach-point\x3d"closeButtonNode" class\x3d"dijitDialogCloseIcon"\n              data-dojo-attach-event\x3d"ondijitclick: onCancel" title\x3d"${buttonCancel}" role\x3d"button" tabindex\x3d"-1"\x3e\n\t\t\t\x3cspan data-dojo-attach-point\x3d"closeText" class\x3d"closeText" title\x3d"${buttonCancel}"\x3ex\x3c/span\x3e\n\t\t\x3c/span\x3e\n    \x3c/div\x3e\n    \x3cdiv data-dojo-attach-point\x3d"containerNode" class\x3d"center dijitDialogPaneContent"\x3e\n        \x3cdiv class\x3d\'plogo\'\x3e\x3cimg class\x3d"plogo" src\x3d"images/prod-name.png"\x3e\x3c/div\x3e\n        \x3cdiv data-dojo-attach-point\x3d"form" class\x3d"form" data-dojo-type\x3d"dijit/form/Form"\x3e\n            \x3cdiv class\x3d"field saasField"\x3e\n                \x3cdiv data-dojo-attach-point\x3d"customer" class\x3d"customer" data-dojo-type\x3d"dijit/form/ValidationTextBox"\n                     data-dojo-props\x3d"required: true, missingMessage: \'\u8bf7\u586b\u5199\u4f01\u4e1aID\', placeHolder: \'\u4f01\u4e1aID\'"\x3e\n                \x3c/div\x3e\n            \x3c/div\x3e\n            \x3cdiv class\x3d"field"\x3e\n                \x3c!--\x3cspan aria-hidden\x3d"true" class\x3d"icon icon_profile"\x3e\x3c/span\x3e--\x3e\n                \x3cdiv data-dojo-attach-point\x3d"username" class\x3d"username" data-dojo-type\x3d"dijit/form/ValidationTextBox"\n                     data-dojo-props\x3d"required: true, missingMessage: \'\u8bf7\u586b\u5199\u7528\u6237\u540d\', placeHolder: \'\u7528\u6237\u540d\'"\x3e\n                \x3c/div\x3e\n            \x3c/div\x3e\n            \x3cdiv class\x3d"field"\x3e\n                \x3c!--\x3cspan aria-hidden\x3d"true" class\x3d"icon icon_key"\x3e\x3c/span\x3e--\x3e\n                \x3cdiv data-dojo-attach-point\x3d"password" class\x3d"password" data-dojo-type\x3d"dijit/form/ValidationTextBox"\n                     type\x3d"password" data-dojo-props\x3d"required: true, missingMessage: \'\u8bf7\u586b\u5199\u5bc6\u7801\', placeHolder: \'\u5bc6\u7801\'"\x3e\x3c/div\x3e\n            \x3c/div\x3e\n        \x3c/div\x3e\n        \x3cdiv style\x3d"display: none" class\x3d"center threePartLogin" data-dojo-attach-point\x3d"tpLogin"\x3e\n            \x3cdiv style\x3d"width: 70%"\x3e\n                \x3cspan\x3e\u5408\u4f5c\u8d26\u53f7\u767b\u5f55:\x3c/span\x3e\x3ca href\x3d"#" data-dojo-attach-point\x3d"tpLogin"\x3e\x3cimg src\x3d"images/taobao.png"\x3e\x3c/a\x3e\n            \x3c/div\x3e\n        \x3c/div\x3e\n        \x3cbutton data-dojo-type\x3d\'dijit/form/Button\' class\x3d"loginButton" type\x3d\'button\'\n                data-dojo-attach-point\x3d"okButton" data-dojo-attach-event\x3d\'click:onOk\'\x3e\u767b\u5f55\n        \x3c/button\x3e\n    \x3c/div\x3e\n    \x3cdiv class\x3d\'dijitDialogPaneActionBar center\' data-dojo-attach-point\x3d"actionBarNode"\x3e\n        \x3cbutton style\x3d"display: none" data-dojo-type\x3d\'dijit/form/Button\' type\x3d\'button\'\n                data-dojo-attach-point\x3d"cancelButton" data-dojo-attach-event\x3d\'click:onCancel\'\x3e\x3c/button\x3e\n    \x3c/div\x3e\n\n\x3c/div\x3e\n\n',
        "url:dojox/form/resources/_CheckedMultiSelectMenuItem.html": '\x3ctr class\x3d"dijitReset dijitMenuItem" dojoAttachPoint\x3d"focusNode" role\x3d"menuitemcheckbox" tabIndex\x3d"-1"\n\tdojoAttachEvent\x3d"ondijitclick:_onClick"\n\t\x3e\x3ctd class\x3d"dijitReset dijitMenuItemIconCell" role\x3d"presentation"\n\t\t\x3e\x3cdiv src\x3d"${_blankGif}" alt\x3d"" class\x3d"dijitMenuItemIcon ${_iconClass}" dojoAttachPoint\x3d"iconNode"\n\t\t\t\x3e\x3cinput class\x3d"dojoxCheckedMultiSelectCheckBoxInput" dojoAttachPoint\x3d"inputNode" type\x3d"${_type.type}"\n\t\t/\x3e\x3c/div\x3e\x3c/td\n\t\x3e\x3ctd class\x3d"dijitReset dijitMenuItemLabel" colspan\x3d"2" dojoAttachPoint\x3d"containerNode,labelNode"\x3e\x3c/td\n\t\x3e\x3ctd class\x3d"dijitReset dijitMenuItemAccelKey" style\x3d"display: none" dojoAttachPoint\x3d"accelKeyNode"\x3e\x3c/td\n\t\x3e\x3ctd class\x3d"dijitReset dijitMenuArrowCell" role\x3d"presentation"\x3e\x26nbsp;\x3c/td\n\x3e\x3c/tr\x3e',
        "url:dojox/form/resources/_CheckedMultiSelectItem.html": '\x3cdiv class\x3d"dijitReset ${baseClass}"\n\t\x3e\x3cinput class\x3d"${baseClass}Box" data-dojo-type\x3d"dijit.form.CheckBox" data-dojo-attach-point\x3d"checkBox" \n\t\tdata-dojo-attach-event\x3d"_onClick:_changeBox" type\x3d"${_type.type}" data-dojo-props\x3d\'disabled:${disabled}, readOnly:${readOnly}\' baseClass\x3d"${_type.baseClass}"\n\t/\x3e\x3cdiv class\x3d"dijitInline ${baseClass}Label" data-dojo-attach-point\x3d"labelNode" data-dojo-attach-event\x3d"onclick:_onClick"\x3e\x3c/div\n\x3e\x3c/div\x3e\n',
        "url:dojox/form/resources/CheckedMultiSelect.html": '\x3cdiv class\x3d"dijit dijitReset dijitInline dijitLeft" id\x3d"widget_${id}"\n\t\x3e\x3cdiv data-dojo-attach-point\x3d"comboButtonNode"\n\t\x3e\x3c/div\n\t\x3e\x3cdiv data-dojo-attach-point\x3d"selectNode" class\x3d"dijit dijitReset dijitInline ${baseClass}Wrapper" data-dojo-attach-event\x3d"onmousedown:_onMouseDown,onclick:focus"\n\t\t\x3e\x3cselect class\x3d"${baseClass}Select dojoxCheckedMultiSelectHidden" multiple\x3d"true" data-dojo-attach-point\x3d"containerNode,focusNode"\x3e\x3c/select\n\t\t\x3e\x3cdiv data-dojo-attach-point\x3d"wrapperDiv"\x3e\x3c/div\n\t\x3e\x3c/div\n\x3e\x3c/div\x3e',
        "url:dojox/form/resources/Uploader.html": '\x3cspan class\x3d"dijit dijitReset dijitInline"\n\t\x3e\x3cspan class\x3d"dijitReset dijitInline dijitButtonNode"\n\t\tdata-dojo-attach-event\x3d"ondijitclick:_onClick"\n\t\t\x3e\x3cspan class\x3d"dijitReset dijitStretch dijitButtonContents"\n\t\t\tdata-dojo-attach-point\x3d"titleNode,focusNode"\n\t\t\trole\x3d"button" aria-labelledby\x3d"${id}_label"\n\t\t\t\x3e\x3cspan class\x3d"dijitReset dijitInline dijitIcon" data-dojo-attach-point\x3d"iconNode"\x3e\x3c/span\n\t\t\t\x3e\x3cspan class\x3d"dijitReset dijitToggleButtonIconChar"\x3e\x26#x25CF;\x3c/span\n\t\t\t\x3e\x3cspan class\x3d"dijitReset dijitInline dijitButtonText"\n\t\t\t\tid\x3d"${id}_label"\n\t\t\t\tdata-dojo-attach-point\x3d"containerNode"\n\t\t\t\x3e\x3c/span\n\t\t\x3e\x3c/span\n\t\x3e\x3c/span\n\t\x3e \n\t\x3cinput ${!nameAttrSetting} type\x3d"${type}" value\x3d"${value}" class\x3d"dijitOffScreen" tabIndex\x3d"-1" data-dojo-attach-point\x3d"valueNode" /\x3e\n\x3c/span\x3e\n',
        "url:gridx/templates/Grid.html": '\x3cdiv class\x3d"gridx" role\x3d"grid" tabindex\x3d"0" aria-readonly\x3d"true" aria-label\x3d"grid"\n\t\x3e\x3cdiv class\x3d"gridxLoad" data-dojo-attach-point\x3d"loadingNode"\x3e\x3c/div\n\t\x3e\x3cdiv class\x3d"gridxHeader" role\x3d"presentation" data-dojo-attach-point\x3d"headerNode"\x3e\x3c/div\n\t\x3e\x3cdiv class\x3d"gridxMain" role\x3d"presentation" data-dojo-attach-point\x3d"mainNode"\n\t\t\x3e\x3cdiv class\x3d"gridxBodyEmpty" role\x3d"alert" tabindex\x3d"-1" data-dojo-attach-point\x3d"emptyNode"\x3e\x3c/div\n\t\t\x3e\x3cdiv class\x3d"gridxBody" role\x3d"presentation" tabindex\x3d"0" data-dojo-attach-point\x3d"bodyNode"\x3e\x3c/div\n\t\t\x3e\x3cdiv class\x3d"gridxVScroller" data-dojo-attach-point\x3d"vScrollerNode" tabindex\x3d"-1"\n\t\t\t\x3e\x3cdiv style\x3d\'width: 1px;\'\x3e\x3c/div\n\t\t\x3e\x3c/div\n\t\x3e\x3c/div\n\t\x3e\x3cdiv class\x3d"gridxFooter" data-dojo-attach-point\x3d"footerNode"\n\t\t\x3e\x3cdiv class\x3d"gridxHScroller"\n\t\t\t\x3e\x3cdiv class\x3d"gridxHScrollerInner" data-dojo-attach-point\x3d"hScrollerNode" tabindex\x3d"-1"\n\t\t\t\t\x3e\x3cdiv style\x3d"width:1px; height: 1px;"\x3e\x3c/div\n\t\t\t\x3e\x3c/div\n\t\t\x3e\x3c/div\n\t\x3e\x3c/div\n\t\x3e\x3cspan data-dojo-attach-point\x3d"lastFocusNode" tabindex\x3d"0"\x3e\x3c/span\n\x3e\x3c/div\x3e\n',
        "url:gridx/templates/LinkPager.html": "\x3cdiv class\x3d\"gridxLinkPager\" role\x3d\"toolbar\" aria-label\x3d\"${pagerWai}\"\n\t\x3e\x3cspan class\x3d'gridxPagerStepperBtn gridxPagerPrevPage'\n\t\ttabindex\x3d'${_tabIndex}'\n\t\ttitle\x3d'${prevPageTitle}'\n\t\taria-label\x3d'${prevPageTitle}'\n\t\tpageindex\x3d'prev',\n\t\tdata-dojo-attach-point\x3d'_prevPageBtn'\n\t\tdata-dojo-attach-event\x3d'onclick: _prevPage'\n\t\t\x3e\x3cspan class\x3d'gridxPagerA11yInner'\x3e\x26nbsp;\x26lt;\x3c/span\n\t\x3e\x3c/span\n\t\x3e\x3cspan class\x3d'gridxPagerPages'\n\t\tdata-dojo-attach-point\x3d'_pageBtnContainer'\n\t\tdata-dojo-attach-event\x3d'onclick: _gotoPage, onmouseover: _onHover, onmouseout: _onHover'\n\t\x3e\x3c/span\n\t\x3e\x3cspan class\x3d'gridxPagerStepperBtn gridxPagerNextPage'\n\t\ttabindex\x3d'${_tabIndex}'\n\t\ttitle\x3d'${nextPageTitle}'\n\t\taria-label\x3d'${nextPageTitle}'\n\t\tpageindex\x3d'next',\n\t\tdata-dojo-attach-point\x3d'_nextPageBtn'\n\t\tdata-dojo-attach-event\x3d'onclick: _nextPage'\n\t\t\x3e\x3cspan class\x3d'gridxPagerA11yInner'\x3e\x26nbsp;\x26gt;\x3c/span\n\t\x3e\x3c/span\n\x3e\x3c/div\x3e\n",
        "url:gridx/templates/GotoPagePane.html": "\x3cdiv class\x3d'gridxGotoPage'\n\t\x3e\x3ctable\x3e\x3ctbody\n\t\t\x3e\x3ctr\x3e\x3ctd id\x3d'${id}-pageInputLabel' class\x3d'gridxGotoPageMainMsg'\x3e\n\t\t${gotoDialogMainMsg}\n\t\t\x3c/td\x3e\x3c/tr\n\t\t\x3e\x3ctr\x3e\x3ctd class\x3d'gridxGotoPageInput'\n\t\t\t\x3e\x3cinput data-dojo-type\x3d'${numberTextBoxClass}'\n\t\t\t\tdata-dojo-props\x3d'\"aria-labelledby\": \"${id}-pageInputLabel\"'\n\t\t\t\tclass\x3d'gridxGotoPageInputBox'\n\t\t\t\tdata-dojo-attach-point\x3d'pageInputBox'\n\t\t\t\tdata-dojo-attach-event\x3d'onKeyUp: _updateStatus, onKeyDown: _onKeyDown, onInput: _updateStatus'\x3e\x3c/input\n\t\t\t\x3e\x3cspan\n\t\t\t\tclass\x3d'gridxPageCountMsg'\n\t\t\t\tdata-dojo-attach-point\x3d'pageCountMsgNode'\x3e\x3c/span\n\t\t\x3e\x3c/td\x3e\x3c/tr\n\t\t\x3e\x3ctr\x3e\x3ctd class\x3d'gridxGotoPageBtns'\n\t\t\t\x3e\x3cbutton data-dojo-type\x3d'${buttonClass}' \n\t\t\t\tdata-dojo-attach-point\x3d'okBtn'\n\t\t\t\tdata-dojo-attach-event\x3d'onClick: _onOK'\x3e\n\t\t\t\t${gotoDialogOKBtn}\n\t\t\t\x3c/button\n\t\t\t\x3e\x3cbutton data-dojo-type\x3d'${buttonClass}'\n\t\t\t\tdata-dojo-attach-event\x3d'onClick: _onCancel'\x3e\n\t\t\t\t${gotoDialogCancelBtn}\n\t\t\t\x3c/button\n\t\t\x3e\x3c/td\x3e\x3c/tr\n\t\x3e\x3c/tbody\x3e\x3c/table\n\x3e\x3c/div\x3e\n",
        "url:gridx/templates/FilterBar.html": '\x3cinput type\x3d"button" data-dojo-type\x3d"dijit.form.Button" data-dojo-props\x3d"\n\ticonClass: \'gridxFilterBarBtnIcon\',\n\tlabel: \'...\',\n\ttitle: \x26quot;${defineFilter}\x26quot;" aria-label\x3d"${defineFilterAriaLabel}"\n/\x3e\x3cdiv class\x3d"gridxFilterBarStatus"\n\t\x3e\x3cspan\x3e${noFilterApplied}\x3c/span\n\t\x3e\x3cspan class\x3d"gridxFilterBarCloseBtn" tabindex\x3d"-1" title\x3d"${closeFilterBarBtn}" role\x3d"button"\x3e\x3cspan class\x3d"gridxFilterBarCloseBtnText"\x3ex\x3c/span\x3e\x3c/span\n\x3e\x3c/div\x3e\n',
        "url:gridx/templates/FilterPane.html": '\x3cul class\x3d"gridxFilterPaneForm"\x3e\n\t\x3cli\x3e\x3clabel id\x3d"${id}_ColumnLabel" for\x3d"${id}_ColumnSelect"\x3e${i18n.columnSelectLabel}\x3c/label\x3e\x3c/li\x3e\n\t\x3cli name\x3d"sltColumn"\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.Select" id\x3d"${id}_ColumnSelect" aria-label\x3d"${_columnAriaLabel}" style\x3d"width:100%;"\x3e\x3c/div\x3e\n\t\x3c/li\x3e\n\t\x3cli\x3e\x3clabel id\x3d"${id}_ConditionLabel" for\x3d"${id}_ConditionSelect"\x3e${i18n.conditionSelectLabel}\x3c/label\x3e\x3c/li\x3e\n\t\x3cli name\x3d"sltCondition"\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.Select" id\x3d"${id}_ConditionSelect" style\x3d"width:100%;" aria-label\x3d"${_conditionAriaLabel}"\x3e\x3c/div\x3e\n\t\x3c/li\x3e\n\t\x3cli\x3e\x3clabel id\x3d"${id}_ValueLabel"\x3e${i18n.valueBoxLabel}\x3c/label\x3e\x3c/li\x3e\n\t\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneTextWrapper"\x3e\n\t\t\x3cinput type\x3d"text" data-dojo-type\x3d"dijit.form.TextBox" intermediateChanges\x3d"true"\n\t\t style\x3d"width:100%;" aria-label\x3d"${_valueAriaLabel}"/\x3e\n\t\x3c/li\x3e\n\t\n\t\x3c!-- text --\x3e\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneComboWrapper"\x3e\n\t\t\x3cinput type\x3d"text" data-dojo-type\x3d"dijit.form.ComboBox" \n\t\t\tintermediateChanges\x3d"true" autoComplete\x3d"false" queryExpr\x3d"*${i18n.startsWithExpr}" \n\t\t\tstyle\x3d"width:100%;" aria-label\x3d"${_valueAriaLabel}"/\x3e\n\t\x3c/li\x3e\n\t\n\t\x3c!-- number --\x3e\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneNumberWrapper"\x3e\n\t\t\x3cinput type\x3d"text" data-dojo-type\x3d"dijit.form.NumberTextBox"  aria-label\x3d"${_conditionAriaLabel}" intermediateChanges\x3d"true" style\x3d"width:100%;"/\x3e\n\t\x3c/li\x3e\n\t\x3c!-- number range --\x3e\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneNumberRangeWrapper"\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.NumberTextBox" style\x3d"width:44%; float: left;"\n\t\t\t\tintermediateChanges\x3d"true" aria-label\x3d"${i18n.beginNumberRangeLabel}"\x3e\x3c/div\x3e\n\t\t\x3cdiv style\x3d"width:10%; text-align: center; float: left;"\x3e${i18n.rangeTo}\x3c/div\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.NumberTextBox" style\x3d"width:44%; float: right;"\n\t\t\t\tintermediateChanges\x3d"true" aria-label\x3d"${i18n.endNumberRangeLabel}"\x3e\x3c/div\x3e\n\t\x3c/li\x3e\n\t\x3c!-- date --\x3e\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneDateWrapper"\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.DateTextBox" aria-label\x3d"${_valueAriaLabel}" intermediateChanges\x3d"true" style\x3d"width: 100%"\x3e\x3c/div\x3e\n\t\x3c/li\x3e\n\t\x3c!-- date past x hours/days/months/years --\x3e\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneDatePastWrapper"\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.NumberTextBox" aria-label\x3d"${_valueAriaLabel}" intermediateChanges\x3d"true" style\x3d"width: 44%; float: left"\x3e\x3c/div\x3e\n\t\t\x3cdiv class\x3d\'gridxSpace\' style\x3d\'width: 10%; float: left; height: 1px;\'\x3e\x3c/div\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.Select" aria-label\x3d"${_valueAriaLabel}" style\x3d"width: 44%; float: left"\x3e\n\t\t\t\x3cspan value\x3d"hour"\x3e${i18n.hour}\x3c/span\x3e\n\t\t\t\x3cspan value\x3d"day" selected\x3d"selected"\x3e${i18n.day}\x3c/span\x3e\n\t\t\t\x3cspan value\x3d"month"\x3e${i18n.month}\x3c/span\x3e\n\t\t\t\x3cspan value\x3d"year"\x3e${i18n.year}\x3c/span\x3e\n\t\t\t\x3c!-- \x3cspan value\x3d"FL"\x3eFlorida\x3c/span\x3e --\x3e\n\t\t\t\x3c!-- \x3cspan value\x3d"CA"\x3eCalifornia\x3c/span\x3e --\x3e\n\t\t\x3c/div\x3e\n\t\t\n\t\x3c/li\x3e\n\t\x3c!-- date range --\x3e\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneDateRangeWrapper"\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.DateTextBox" style\x3d"width:44%; float: left;"\n\t\t\t\tintermediateChanges\x3d"true" aria-label\x3d"${i18n.beginDateRangeLabel}"\x3e\x3c/div\x3e\n\t\t\x3cdiv style\x3d"width:10%; text-align: center; float: left;"\x3e${i18n.rangeTo}\x3c/div\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.DateTextBox" style\x3d"width:44%; float: right;"\n\t\t\t\tintermediateChanges\x3d"true" aria-label\x3d"${i18n.endDateRangeLabel}"\x3e\x3c/div\x3e\n\t\x3c/li\x3e\n\n\t\x3c!-- datetime --\x3e\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneDatetimeWrapper"\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.DateTextBox" aria-label\x3d"${_valueAriaLabel}" style\x3d"width:44%;float:left" intermediateChanges\x3d"true"\x3e\x3c/div\x3e\n\t\t\x3cdiv style\x3d"width:10%; text-align: center; float: left;height:1px"\x3e\x3c/div\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.TimeTextBox" aria-label\x3d"${_valueAriaLabel}" style\x3d"width:44%;float:left" intermediateChanges\x3d"true"\x3e\x3c/div\x3e\n\t\x3c/li\x3e\n\t\x3c!-- datetime past x hours/days/months/years --\x3e\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneDatetimePastWrapper"\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.NumberTextBox" aria-label\x3d"${_valueAriaLabel}" intermediateChanges\x3d"true" style\x3d"width: 44%; float: left"\x3e\x3c/div\x3e\n\t\t\x3cdiv class\x3d\'gridxSpace\' style\x3d\'width: 10%; float: left; height: 1px;\'\x3e\x3c/div\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.Select" aria-label\x3d"${_valueAriaLabel}" style\x3d"width: 44%; float: left"\x3e\n\t\t\t\x3cspan value\x3d"hour"\x3e${i18n.hour}\x3c/span\x3e\n\t\t\t\x3cspan value\x3d"day" selected\x3d"selected"\x3e${i18n.day}\x3c/span\x3e\n\t\t\t\x3cspan value\x3d"month"\x3e${i18n.month}\x3c/span\x3e\n\t\t\t\x3cspan value\x3d"year"\x3e${i18n.year}\x3c/span\x3e\n\t\t\t\x3c!-- \x3cspan value\x3d"FL"\x3eFlorida\x3c/span\x3e --\x3e\n\t\t\t\x3c!-- \x3cspan value\x3d"CA"\x3eCalifornia\x3c/span\x3e --\x3e\n\t\t\x3c/div\x3e\n\t\x3c/li\x3e\n\t\x3c!-- datetime range --\x3e\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneDatetimeRangeWrapper"\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.DateTextBox" aria-label\x3d"${_valueAriaLabel}" \n\t\t\t\tstyle\x3d"width:44%;float:left" intermediateChanges\x3d"true"\x3e\x3c/div\x3e\n\t\t\x3cdiv style\x3d"width:10%; text-align: center; float: left;"\x3e\x26nbsp;\x3c/div\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.TimeTextBox" aria-label\x3d"${_valueAriaLabel}" style\x3d"width:44%;float:left" intermediateChanges\x3d"true"\x3e\x3c/div\x3e\n\t\t\n\t\t\x3cdiv style\x3d""\x3e${i18n.rangeTo}\x3c/div\x3e\n\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.DateTextBox" aria-label\x3d"${_valueAriaLabel}"\n\t\t\t\tstyle\x3d"width:44%;float:left" intermediateChanges\x3d"true"\x3e\x3c/div\x3e\n\t\t\x3cdiv style\x3d"width:10%; text-align: center; float: left;"\x3e\x26nbsp;\x3c/div\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.TimeTextBox" aria-label\x3d"${_valueAriaLabel}" style\x3d"width:44%;float:left" intermediateChanges\x3d"true"\x3e\x3c/div\x3e\n\t\x3c/li\x3e\n\t\x3c!-- time --\x3e\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneTimeWrapper"\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.TimeTextBox" aria-label\x3d"${_valueAriaLabel}" style\x3d"width: 100%" intermediateChanges\x3d"true"\x3e\x3c/div\x3e\n\t\x3c/li\x3e\n\t\x3c!-- time range --\x3e\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneTimeRangeWrapper"\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.TimeTextBox" style\x3d"width:44%; float: left;" intermediateChanges\x3d"true"\n\t\t\t aria-label\x3d"${i18n.beginTimeRangeLabel}"\x3e\x3c/div\x3e\n\t\t\x3cdiv style\x3d"text-align: center; float: left; width: 10%;"\x3e${i18n.rangeTo}\x3c/div\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.TimeTextBox" style\x3d"width:44%; float: right;" intermediateChanges\x3d"true"\n\t\t\t aria-label\x3d"${i18n.endTimeRangeLabel}"\x3e\x3c/div\x3e\n\t\x3c/li\x3e\n\n\t\x3c!-- time past x hours--\x3e\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneTimePastWrapper"\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.NumberTextBox" aria-label\x3d"${_valueAriaLabel}" intermediateChanges\x3d"true" style\x3d"width: 44%; float: left"\x3e\x3c/div\x3e\n\t\t\x3cdiv class\x3d\'gridxSpace\' style\x3d\'width: 10%; float: left; height: 1px;\'\x3e\x3c/div\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.Select" aria-label\x3d"${_valueAriaLabel}" style\x3d"width: 44%; float: left"\x3e\n\t\t\t\x3cspan value\x3d"hour" selected\x3d"selected"\x3e${i18n.hour}\x3c/span\x3e\n\x3c!-- \t\t\t\x3cspan value\x3d"day" selected\x3d"selected"\x3e${i18n.day}\x3c/span\x3e\n\t\t\t\x3cspan value\x3d"month"\x3e${i18n.month}\x3c/span\x3e\n\t\t\t\x3cspan value\x3d"year"\x3e${i18n.year}\x3c/span\x3e --\x3e\n\t\t\t\x3c!-- \x3cspan value\x3d"FL"\x3eFlorida\x3c/span\x3e --\x3e\n\t\t\t\x3c!-- \x3cspan value\x3d"CA"\x3eCalifornia\x3c/span\x3e --\x3e\n\t\t\x3c/div\x3e\n\t\x3c/li\x3e\n\t\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneRadioWrapper"\x3e\n\t\t\x3cspan style\x3d"width:49%; float:left;"\x3e\n\t\t\t\x3cdiv data-dojo-type\x3d"dijit.form.RadioButton" aria-label\x3d"${i18n.radioTrueLabel}" checked\x3d"true"\x3e\x3c/div\x3e\x3cspan\x3e${i18n.trueLabel}\x3c/span\x3e\n\t\t\x3c/span\x3e\n\t\t\x3cspan style\x3d"width:49%; float: right;"\x3e\n\t\t\t\x3cdiv data-dojo-type\x3d"dijit.form.RadioButton" aria-label\x3d"${i18n.radioFalseLabel}"\x3e\x3c/div\x3e\x3cspan\x3e${i18n.falseLabel}\x3c/span\x3e\n\t\t\x3c/span\x3e\n\t\x3c/li\x3e\n\t\n\t\x3cli class\x3d"gridxFilterPaneFieldWrapper gridxFilterPaneSelectWrapper"\x3e\n\t\t\x3cdiv data-dojo-type\x3d"dijit.form.Select" aria-label\x3d"${_valueAriaLabel}" style\x3d"width: 100%"\x3e\x3c/div\x3e\n\t\x3c/li\x3e\n\x3c/ul\x3e\n',
        "url:gridx/templates/FilterDialog.html": '\x3cform action\x3d"./" onsubmit\x3d"return false;"\x3e\n\x3clabel id\x3d"${id}_MatchOptionLabel" for\x3d"${id}_MatchOptionSelect"\x3e${i18n.relationMsgFront} \x3c/label\x3e\n\x3cselect data-dojo-type\x3d"dijit.form.Select" id\x3d"${id}_MatchOptionSelect" aria-labelledby\x3d"${id}_MatchOptionLabel"\x3e\n\t\x3coption value\x3d"all"\x3e${i18n.relationAll}\x3c/option\x3e\n\t\x3coption value\x3d"any"\x3e${i18n.relationAny}\x3c/option\x3e\n\x3c/select\x3e\n\x3cdiv id\x3d"${id}_MatchCaseCheckbox" data-dojo-type\x3d\'dijit/form/CheckBox\' data-dojo-props\x3d\'label:"Match case"\'class\x3d\'matchCaseCheckbox\'\x3e\x3c/div\x3e\n\x3clabel for\x3d"${id}_MatchCaseCheckbox" style\x3d\'user-select\'\x3e${i18n.matchCase}\x3c/label\x3e\n\n\x3cdiv class\x3d"gridxFilterAccordionWrapper"\x3e\n\t\x3cdiv data-dojo-type\x3d"dijit.layout.AccordionContainer"\x3e\x3c/div\x3e\n\x3c/div\x3e\n\n\x3cdiv class\x3d"gridxFilterDialogButtons"\x3e\n\t\x3cinput type\x3d"button" class\x3d"gridxFilterDialogBtnAdd" data-dojo-type\x3d"dijit.form.Button" showLabel\x3d"false" iconClass\x3d"gridxFilterBtnAddRule" label\x3d"${i18n.addRuleButton}"/\x3e\n\t\x3cinput type\x3d"submit" data-dojo-type\x3d"dijit.form.Button" label\x3d"${i18n.filterButton}"/\x3e\n\t\x3cinput type\x3d"button" data-dojo-type\x3d"dijit.form.Button" label\x3d"${i18n.restoreFilterButton}"/\x3e\n\t\x3cinput type\x3d"button" data-dojo-type\x3d"dijit.form.Button" label\x3d"${i18n.clearButton}"/\x3e\n\t\x3cinput type\x3d"button" data-dojo-type\x3d"dijit.form.Button" label\x3d"${i18n.cancelButton}"/\x3e\n\x3c/div\x3e\n\x3c/form\x3e\n',
        "url:gridx/templates/FilterConfirmDialog.html": '\x3cdiv class\x3d"gridxFilterConfirmDialogMessage"\x3e${clearFilterMsg}\x3c/div\n\x3e\x3cdiv class\x3d"gridxFilterConfirmDialogButtons"\n\t\x3e\x3cinput type\x3d"button" data-dojo-type\x3d"dijit.form.Button" label\x3d"${clearButton}"\n\t/\x3e\x3cinput type\x3d"button" data-dojo-type\x3d"dijit.form.Button" label\x3d"${cancelButton}"\n/\x3e\x3c/div\x3e\n',
        "url:gridx/templates/QuickFilter.html": '\x3cdiv class\x3d"gridxQuickFilter ${_hasFilterBar}"\n\t\x3e\x3cspan class\x3d"gridxQuickFilterInputContainer"\n\t\t\x3e\x3cinput type\x3d"text" data-dojo-type\x3d"${textBoxClass}"\n\t\t\tclass\x3d"gridxQuickFilterInput"\n\t\t\tdata-dojo-attach-point\x3d"textBox"\n\t\t\tdata-dojo-props\x3d"placeHolder: \x26quot;${filterLabel}\x26quot;, \'aria-label\': \x26quot;${filterLabel}\x26quot;"\n\t\t/\x3e\x3cspan class\x3d"gridxQuickFilterClear"\n\t\t\ttabindex\x3d\'0\'\n\t\t\trole\x3d\'button\'\n\t\t\tdata-dojo-attach-event\x3d"ontouchend: _clear, onclick: _clear, onkeydown: _onKey"\n\t\t\ttitle\x3d"${clearButtonTitle}"\n\t\t\t\x3e\x3cspan class\x3d"gridxQuickFilterClearInner"\x3ex\x3c/span\n\t\t\x3e\x3c/span\n\t\x3e\x3c/span\n\t\x3e\x3cbutton data-dojo-type\x3d"${buttonClass}"\n\t\tclass\x3d"gridxQuickFilterButton"\n\t\tdata-dojo-props\x3d"\n\t\t\tshowLabel: false,\n\t\t\ttitle: \x26quot;${filterLabel}\x26quot;,\n\t\t\ticonClass: \'gridxQuickFilterIcon\'"\n\t\tdata-dojo-attach-event\x3d"onClick: _filter"\n\t\x3e\x3c/button\n\t\x3e\x3cbutton data-dojo-type\x3d"${comboButtonClass}"\n\t\tclass\x3d"gridxQuickFilterComboButton"\n\t\tdata-dojo-props\x3d"\n\t\t\tshowLabel: false,\n\t\t\ttitle: \x26quot;${filterLabel}\x26quot;,\n\t\t\ticonClass: \'gridxQuickFilterIcon\'"\n\t\tdata-dojo-attach-event\x3d"onClick: _filter"\n\t\t\x3e\x3cspan data-dojo-type\x3d"${menuClass}"\x3e\n\t\t\t\x3cspan data-dojo-type\x3d"${menuItemClass}"\n\t\t\t\tdata-dojo-attach-event\x3d"onClick: _filter"\n\t\t\t\x3e${filterLabel}\x3c/span\n\t\t\t\x3e\x3cspan data-dojo-type\x3d"${menuItemClass}"\n\t\t\t\tdata-dojo-attach-event\x3d"onClick: _showFilterBar"\n\t\t\t\x3e${buildFilterMenuLabel}\x3c/span\n\t\t\x3e\x3c/span\n\t\x3e\x3c/button\n\x3e\x3c/div\x3e\n',
        "url:ttx/dijit/form/templates/DateTimeTextBox.html": "\x3cdiv class\x3d\"dijit dijitReset dijitInline dijitLeft\"\x3e\n    \x3cdiv data-dojo-type\x3d\"dijit/form/DateTextBox\" data-dojo-attach-point\x3d\"dateBox\"\n         data-dojo-props\x3d\"constraints:{selector:'date', datePattern:'yyyy-MM-dd'}\"\x3e\x3c/div\x3e\n    \x3cdiv data-dojo-type\x3d\"dijit/form/TimeTextBox\" data-dojo-attach-point\x3d\"timeBox\"\n         data-dojo-props\x3d\"constraints:{selector:'time', timePattern:'HH:mm:ss',\n            clickableIncrement: 'T01:00:00',\n            visibleIncrement: 'T01:00:00',\n            visibleRange: 'T01:00:00'}\"\x3e\x3c/div\x3e\n\x3c/div\x3e",
        "url:ttx/dijit/form/templates/IconDropDownButton.html": '\x3cspan class\x3d"IconDropDownButton" data-dojo-attach-point\x3d"focusNode"\x3e\n    \x3cspan class\x3d"${iconClass}" \x3e\x3c/span\x3e\n\x3c/span\x3e',
        "url:ttx/dijit/form/templates/SwitchCheckBox.html": '\x3cdiv\x3e\n    \x3cinput type\x3d"hidden" data-dojo-attach-point\x3d"focusNode"\x3e\n    \x3cspan class\x3d"ui-switch-core" data-dojo-attach-point\x3d"coreNode"\x3e\n        \x3cspan data-dojo-attach-point\x3d"buttonNode" class\x3d"ui-switch-button"\x3e\x3c/span\x3e\n    \x3c/span\x3e\n\x3c/div\x3e',
        "url:ttx/wso/templates/Bill.html": '\x3cdiv class\x3d"ttxBill"\x3e\n    \x3cdiv data-dojo-attach-point\x3d"tc" data-dojo-type\x3d"dijit/layout/TabContainer"\n         data-dojo-props\x3d\'style:"width: 100%; height: 100%;", doLayout: true\' class\x3d"firstLevelTab"\x3e\n        \x3cdiv data-dojo-attach-point\x3d"cpList" data-dojo-type\x3d"dijit/layout/ContentPane"\n             data-dojo-props\x3d\'title:"${i18.tab_list}", style: {overflow: "auto"}, ttxRole: "list"\' class\x3d"ttxWsoTabPanel cpList"\x3e\n            \x3c!--\x3ch2 style\x3d"text-align:center"\x3e\u67e5\u8be2\x3c/h2\x3e--\x3e\n        \x3c/div\x3e\n        \x3cdiv data-dojo-attach-point\x3d"cpBill" data-dojo-type\x3d"dijit/layout/ContentPane"\n             data-dojo-props\x3d\'title:"${i18.tab_bill}", style: {overflow: "auto"}, ttxRole: "bill"\' class\x3d"ttxWsoTabPanel cpBill"\x3e\n            \x3c!--\x3ch2 style\x3d"text-align:center"\x3e\u5355\u636e\x3c/h2\x3e--\x3e\n        \x3c/div\x3e\n        \x3cdiv data-dojo-attach-point\x3d"cpDetail" data-dojo-type\x3d"dijit/layout/ContentPane"\n             data-dojo-props\x3d\'title:"${i18.tab_detail}", style: {overflow: "auto"}, ttxRole: "detail"\' class\x3d"ttxWsoTabPanel cpDetail"\x3e\n            \x3c!--\x3ch2 style\x3d"text-align:center"\x3e\u660e\u7ec6\x3c/h2\x3e--\x3e\n        \x3c/div\x3e\n        \x3cdiv data-dojo-attach-point\x3d"cpAddition" data-dojo-type\x3d"dijit/layout/ContentPane"\n             data-dojo-props\x3d\'title:"Addition", ttxRole: "addition"\' class\x3d"ttxWsoTabPanel cpAddition"\x3e\n            \x3c!--\x3ch2 style\x3d"text-align:center"\x3e\u660e\u7ec6\x3c/h2\x3e--\x3e\n        \x3c/div\x3e\n    \x3c/div\x3e\n\x3c/div\x3e\n',
        "url:cbtree/templates/cbtreeNode.html": '\x3cdiv class\x3d"dijitTreeNode" role\x3d"presentation"\x3e\n\t\x3cdiv data-dojo-attach-point\x3d"rowNode" class\x3d"dijitTreeRow" role\x3d"presentation"\x3e\n\t\t\x3cdiv data-dojo-attach-point\x3d"indentNode" class\x3d"dijitInline"\x3e\x3c/div\x3e\n\t\t\x3cimg src\x3d"${_blankGif}" alt\x3d"" data-dojo-attach-point\x3d"expandoNode" class\x3d"dijitTreeExpando" role\x3d"presentation" /\x3e\n\t\t\x3cspan data-dojo-attach-point\x3d"expandoNodeText" class\x3d"dijitExpandoText" role\x3d"presentation"\x3e\x3c/span\x3e\n\t\t\x3cspan data-dojo-attach-point\x3d"checkBoxNode" class\x3d"cbtreeCheckBox" role\x3d"presentation"\x3e\x3c/span\x3e\n\t\t\x3cspan data-dojo-attach-point\x3d"contentNode" class\x3d"dijitTreeContent" role\x3d"presentation"\x3e\n\t\t\t\x3cimg src\x3d"${_blankGif}" alt\x3d"" data-dojo-attach-point\x3d"iconNode" class\x3d"dijitIcon dijitTreeIcon" role\x3d"presentation"/\x3e\n\t\t\t\x3cspan data-dojo-attach-point\x3d"labelNode,focusNode" class\x3d"dijitTreeLabel" role\x3d"treeitem" tabindex\x3d"-1" aria-selected\x3d"false"\x3e\x3c/span\x3e\n\t\t\x3c/span\x3e\n\t\x3c/div\x3e\n\t\x3cdiv data-dojo-attach-point\x3d"containerNode" class\x3d"dijitTreeNodeContainer" role\x3d"presentation" style\x3d"display: none;"\x3e\x3c/div\x3e\n\x3c/div\x3e\n',
        "url:ttx/dijit/tree/templates/cbtreeNode.html": '\x3cdiv class\x3d"dijitTreeNode" role\x3d"presentation"\x3e\n    \x3cdiv data-dojo-attach-point\x3d"rowNode" class\x3d"dijitTreeRow" role\x3d"presentation"\x3e\n        \x3cdiv data-dojo-attach-point\x3d"indentNode" class\x3d"dijitInline"\x3e\x3c/div\x3e\n        \x3cdiv src\x3d"${_blankGif}" alt\x3d"" data-dojo-attach-point\x3d"expandoNode" class\x3d"dijitTreeExpando"\n             role\x3d"presentation"\x3e\x3c/div\x3e\n        \x3cspan data-dojo-attach-point\x3d"expandoNodeText" class\x3d"dijitExpandoText" role\x3d"presentation"\x3e\x3c/span\x3e\n        \x3cspan data-dojo-attach-point\x3d"checkBoxNode" class\x3d"cbtreeCheckBox" role\x3d"presentation"\x3e\x3c/span\x3e\n        \x3cspan data-dojo-attach-point\x3d"contentNode" class\x3d"dijitTreeContent" role\x3d"presentation"\x3e\n\t\t\t\x3cdiv src\x3d"${_blankGif}" alt\x3d"" data-dojo-attach-point\x3d"iconNode" class\x3d"dijitIcon dijitTreeIcon"\n                 role\x3d"presentation"\x3e\x3c/div\x3e\n\t\t\t\x3cspan data-dojo-attach-point\x3d"labelNode,focusNode" class\x3d"dijitTreeLabel" role\x3d"treeitem" tabindex\x3d"-1"\n                  aria-selected\x3d"false"\x3e\x3c/span\x3e\n\t\t\x3c/span\x3e\n\n        \x3cspan data-dojo-attach-point\x3d"star" class\x3d"displayNone"\x3e\n            \x3cimg data-dojo-attach-point\x3d"starIcon" src\x3d"" alt\x3d"\u6536\u85cf"\x3e\n        \x3c/span\x3e\n\n    \x3c/div\x3e\n    \x3cdiv data-dojo-attach-point\x3d"containerNode" class\x3d"dijitTreeNodeContainer" role\x3d"presentation"\n         style\x3d"display: none;"\x3e\x3c/div\x3e\n\x3c/div\x3e\n',
        "url:ttx/dijit/templates/Navigator.html": '\x3cdiv class\x3d"ttxNavigator hide"\x3e\n    \x3c!--\x3cdiv data-dojo-attach-point\x3d"expandNode" class\x3d"navigatorExpand fa fa-fw fa-chevron-left"--\x3e\n         \x3c!--style\x3d"display: inline-block; font-size: 18px;line-height: 22px;"\x3e\x3c/div\x3e--\x3e\n\n    \x3c!--\x3cdiv class\x3d"prodLogo"\x3e\x3c/div\x3e--\x3e\n    \x3cdiv data-dojo-attach-point\x3d"barNode" class\x3d"navigatorBar"\x3e\n        \x3cdiv data-dojo-attach-point\x3d"quickSearchNode" style\x3d"display: inline-block;"\x3e\x3c/div\x3e\n    \x3c/div\x3e\n    \x3cdiv class\x3d"treeContainer" data-dojo-attach-point\x3d"treeNode"\x3e\x3c/div\x3e\n\n    \x3c!--\x3cimg src\x3d"images/ttx-logo.png" class\x3d"ttxLogo"/\x3e--\x3e\n\x3c/div\x3e',
        "url:ttx/widget/badge/templates/Base.html": '\x3cspan\x3e\n    \x3cspan data-dojo-attach-point\x3d"badge" class\x3d"badge"\x3e\x3c/span\x3e\n    \x3cspan data-dojo-attach-point\x3d"icon" class\x3d"icon"\x3e\x3c/span\x3e\n\x3c/span\x3e',
        "url:ttx/dijit/templates/TopNav.html": '\x3cdiv class\x3d"topNav"\x3e\n    \x3cdiv class\x3d"topNavContent"\x3e\n        \x3cdiv class\x3d"left"\x3e\n            \x3cimg src\x3d"images/ttx-logo.svg" class\x3d"ttxLogo" data-dojo-attach-point\x3d"ttxLogo"/\x3e\n            \x3cimg src\x3d"images/sep-line.svg" alt\x3d""\x3e\n            \x3cspan class\x3d"sep"\x3e\x3c/span\x3e\n            \x3cimg src\x3d"images/prod-logo.svg" class\x3d"prodLogo"/\x3e\n        \x3c/div\x3e\n        \x3cdiv class\x3d"right"\x3e\n            \x3cspan class\x3d"userWrapper"\x3e\n                \x3cspan data-dojo-attach-point\x3d"userNode" class\x3d"user"\x3e\x3c/span\x3e\n            \x3csvg class\x3d"icon icon-cbt-dropdown-default"\x3e\x3cuse xlink:href\x3d"#icon-cbt-dropdown-default"\x3e\x3c/use\x3e\x3c/svg\x3e\x3cspan class\x3d"mls"\x3e\x3c/span\x3e\n                \x3cul class\x3d"droplist"\x3e\n                    \x3cli data-dojo-attach-event\x3d"click:doChangePassword"\x3e\u4fee\u6539\u5bc6\u7801\x3c/li\x3e\n                    \x3cli data-dojo-attach-event\x3d"click:showChangeLog"\x3e\u66f4\u65b0\u65e5\u5fd7\x3c/li\x3e\n                    \x3cli data-dojo-attach-event\x3d"click:doLogout"\x3e\u9000\u51fa\x3c/li\x3e\n                \x3c/ul\x3e\n            \x3c/span\x3e\n            \x3cspan data-dojo-attach-point\x3d"orgWrapper" class\x3d"orgWrapper displayNone"\x3e\n                \x3cspan data-dojo-attach-point\x3d"orgNode" class\x3d"org"\x3e\x3c/span\x3e\n                \x3csvg class\x3d"icon icon-cbt-dropdown-default"\x3e\x3cuse xlink:href\x3d"#icon-cbt-dropdown-default"\x3e\x3c/use\x3e\x3c/svg\x3e\x3cspan class\x3d"mls"\x3e\x3c/span\x3e\n            \x3c/span\x3e\n\n            \x3cspan data-dojo-attach-point\x3d"settingWrapper"\x3e\x3c/span\x3e\n\n        \x3c/div\x3e\n    \x3c/div\x3e\n\x3c/div\x3e\n',
        "url:ttx/dijit/templates/MessageTab.html": '\x3cdiv class\x3d"messageTab"\x3e\n    \x3cdiv class\x3d"tabList" data-dojo-attach-point\x3d"tabList"\x3e\n        \x3cdiv class\x3d"tab  active" data-dojo-attach-point\x3d"outputTabNode"\x3e\x3c/div\x3e\n        \x3cdiv class\x3d"tab" data-dojo-attach-point\x3d"msgTabNode"\x3e\x3c/div\x3e\n        \x3cdiv class\x3d"tab" data-dojo-attach-point\x3d"mailTabNode"\x3e\x3c/div\x3e\n        \x3cdiv class\x3d"tab" data-dojo-attach-point\x3d"helpTabNode"\x3e\x3c/div\x3e\n    \x3c/div\x3e\n    \x3cdiv class\x3d"contentList" data-dojo-attach-point\x3d"contentList"\x3e\n        \x3cdiv class\x3d"content output active" data-dojo-attach-point\x3d"outputNode"\x3e\n            \x3ch1 data-dojo-attach-point\x3d"serverMessageTitle"\x3e\x3c/h1\x3e\n            \x3cdiv class\x3d"listContainerNode" data-dojo-attach-point\x3d"serverMsgContainerNode" \x3e\x3c/div\x3e\n        \x3c/div\x3e\n        \x3cdiv class\x3d"content msg" data-dojo-attach-point\x3d"msgNode"\x3e\x3c/div\x3e\n        \x3cdiv class\x3d"content msg" data-dojo-attach-point\x3d"mailNode"\x3e\n            \x3cdiv class\x3d"mailActionNode" data-dojo-attach-point\x3d"mailActionNode"\x3e\x3c/div\x3e\n            \x3cdiv class\x3d"mailContainerNode" data-dojo-attach-point\x3d"mailContainerNode"\x3e\x3c/div\x3e\n        \x3c/div\x3e\n        \x3cdiv class\x3d"content help" data-dojo-attach-point\x3d"helpNode"\x3e\x3c/div\x3e\n    \x3c/div\x3e\n\n\x3c/div\x3e\n',
        "*now": function(q) {
            q(['dojo/i18n!*preload*ttx/nls/app*["ar","ca","cs","da","de","el","en-gb","en-us","es-es","fi-fi","fr-fr","he-il","hu","it-it","ja-jp","ko-kr","nl-nl","nb","pl","pt-br","pt-pt","ru","sk","sl","sv","th","tr","zh-tw","zh-cn"]'])
        }
    }
});
define("ttx/app", ["ttx/Application", "ttx/subject/userInfo", "dojo/domReady!"], function(q) {
    window.app = new q;
    app;
    app.CybertransVersion = "2.5.2-20180612120541";
    return app
});
//# sourceMappingURL=app.js.map
